{"version":3,"file":"apps_concierge_src_app_day-view_day-view_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/day-view/booking-modal.component.ts","./apps/concierge/src/app/day-view/day-view.component.ts","./apps/concierge/src/app/day-view/day-view.module.ts","./apps/concierge/src/app/day-view/dayview-event.component.ts","./apps/concierge/src/app/day-view/dayview-space.component.ts","./apps/concierge/src/app/day-view/dayview-timeline.component.ts","./apps/concierge/src/app/day-view/dayview-topbar.component.ts","./apps/concierge/src/app/day-view/event-form.component.ts","./apps/concierge/src/app/day-view/new-dayview.component.ts","./apps/concierge/src/app/day-view/room-approvals.component.ts","./apps/concierge/src/app/day-view/room-bookings.component.ts","./apps/concierge/src/app/day-view/room-timeline.component.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport {\n    DialogEvent,\n    SettingsService,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { CalendarEvent, EventFormService, queryEvents } from '@placeos/events';\n\nexport interface BookingModalData {\n    event?: CalendarEvent;\n}\n\n@Component({\n    selector: 'booking-modal',\n    template: `\n        <header>\n            <h2>{{ form?.value.id ? 'Edit' : 'New' }} Booking</h2>\n            <div class=\"flex-1 w-0\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"relative p-4\" [class.overflow-auto]=\"!(loading | async)\">\n            <event-form\n                [class.pointer-events-none]=\"loading | async\"\n                [form]=\"form\"\n            ></event-form>\n            <div\n                loading\n                class=\"absolute inset-0 flex flex-col items-center justify-center\"\n                *ngIf=\"loading | async\"\n            >\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"!(loading | async)\"\n            class=\"flex justify-center items-center p-2 border-t border-base-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                width: 32rem;\n                max-height: 65vh;\n                max-width: calc(100vw - 4rem);\n            }\n        `,\n    ],\n})\nexport class BookingModalComponent implements OnInit {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Observable for the loading state of the form */\n    public readonly loading = this._service.loading;\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: BookingModalData,\n        private _service: EventFormService,\n        private _dialog_ref: MatDialogRef<BookingModalComponent>,\n        private _settings: SettingsService\n    ) {}\n\n    public async ngOnInit() {\n        let event = this._data.event;\n        if (event?.creator !== event?.mailbox) {\n            event =\n                (\n                    await queryEvents({\n                        period_start: event.event_start,\n                        period_end: event.event_end,\n                        ical_uid: event.ical_uid,\n                    }).toPromise()\n                ).find((_) => _.ical_uid === (event as any).ical_uid) || event;\n        }\n        if (event && !event.id) {\n            (event as any).all_day =\n                this._settings.get('app.events.all_day_default') ??\n                event.all_day;\n        }\n        this._service.newForm(event);\n    }\n\n    public async save() {\n        const event = await this._service.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.event.emit({ reason: 'done', metadata: event });\n        notifySuccess('Successfully created booking');\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApplicationLinkInternal, SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-dayview]',\n    template: `\n        <sidebar class=\"h-full\"></sidebar>\n        <main\n            class=\"relative overflow-hidden flex flex-col flex-1 w-1/2 h-full bg-base-200\"\n        >\n            <dayview-topbar></dayview-topbar>\n            <dayview-timeline></dayview-timeline>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DayViewComponent implements OnInit {\n    public get links(): ApplicationLinkInternal[] {\n        return this._settings.get('app.general.menu') || [];\n    }\n\n    constructor(private _settings: SettingsService, private _router: Router) {}\n\n    public ngOnInit() {\n        if (!this.links.find((_) => _.route.includes('day-view'))) {\n            this._router.navigate([`/${this.links[0].route}`]);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { DayViewComponent } from './day-view.component';\nimport { DayviewTopbarComponent } from './dayview-topbar.component';\nimport { DayviewTimelineComponent } from './dayview-timeline.component';\nimport { DayviewSpaceComponent } from './dayview-space.component';\nimport { DayviewEventComponent } from './dayview-event.component';\n\nimport { BookingModalComponent } from './booking-modal.component';\nimport { EventFormComponent } from './event-form.component';\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\nimport { SharedCateringModule } from '@placeos/catering';\nimport { RoomBookingsComponent } from './room-bookings.component';\nimport { RoomBookingsTimelineComponent } from './room-timeline.component';\nimport { RoomBookingsApprovalsComponent } from './room-approvals.component';\nimport { NewDayViewComponent } from './new-dayview.component';\nimport { MeetingFormDetailsComponent } from 'apps/workplace/src/app/book/meeting-flow/meeting-form-details.component';\nimport { EventBookModalComponent } from './event-book-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: DayViewComponent },\n    { path: 'new', component: NewDayViewComponent },\n];\n\n@NgModule({\n    declarations: [\n        DayViewComponent,\n        DayviewTopbarComponent,\n        DayviewTimelineComponent,\n        DayviewSpaceComponent,\n        DayviewEventComponent,\n        NewDayViewComponent,\n\n        BookingModalComponent,\n        EventFormComponent,\n\n        RoomBookingsComponent,\n        RoomBookingsTimelineComponent,\n        RoomBookingsApprovalsComponent,\n        EventBookModalComponent,\n        MeetingFormDetailsComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        SharedCateringModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DayViewModule {}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { startOfDay, differenceInMinutes, format, addMinutes } from 'date-fns';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { EventsStateService } from './events-state.service';\nimport { SettingsService } from '@placeos/common';\n\nconst DAY_IN_MINUTES = 24 * 60;\n\n@Component({\n    selector: 'dayview-event',\n    template: `\n        <div\n            *ngIf=\"(ui_options | async)?.show_overflow\"\n            [class]=\"\n                'overflow-block absolute rounded overflow-hidden w-full ' + type\n            \"\n            [style.top]=\"overflow_top * 100 + '%'\"\n            [style.height]=\"overflow_height * 100 + '%'\"\n        ></div>\n        <div\n            event\n            matRipple\n            [class]=\"\n                'absolute rounded overflow-hidden text-sm border border-base-200 shadow-sm z-10 hover:z-30 ' +\n                type\n            \"\n            *ngIf=\"event\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n            (click)=\"view(event)\"\n        >\n            <div class=\"px-2 py-1 font-medium\">{{ event.organiser?.name }}</div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 30\">\n                <app-icon class=\"mx-2\">title</app-icon>\n                {{ event.title }}\n            </div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 60\">\n                <app-icon class=\"mx-2\">schedule</app-icon>\n                {{ time }}\n            </div>\n            <div class=\"py-1 flex items-center\" *ngIf=\"event.duration > 90\">\n                <app-icon class=\"mx-2\">people</app-icon>\n                {{ event.attendees.length }} Attendee{{\n                    event.attendees.length === 1 ? '' : 's'\n                }}\n            </div>\n        </div>\n        <div\n            *ngIf=\"event && (ui_options | async)?.show_cleaning\"\n            cleaning\n            class=\"absolute rounded overflow-hidden flex w-full shadow p-2 bg-base-100 z-20 hover:!h-48\"\n            [style.top]=\"top * 100 + '%'\"\n            [style.height]=\"height * 100 + '%'\"\n        >\n            <div\n                [class]=\"\n                    'icon flex items-center justify-center mr-2 text-3xl rounded h-12 w-12 text-pending ' +\n                    event.ext('cleaning_status')\n                \"\n            >\n                <app-icon>{{\n                    event.ext('cleaning_status') === 'done' ? 'done' : 'warning'\n                }}</app-icon>\n            </div>\n            <div class=\"flex-1 w-1/2\">\n                {{\n                    event.ext('cleaning_status') === 'done'\n                        ? 'Finished'\n                        : 'Scheduled to'\n                }}\n                clean at\n                {{\n                    event.ext('cleaning_time') || event.event_end * 1000\n                        | date: time_format\n                }}\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            [event] {\n                background-color: #ccc;\n                width: 12rem;\n                z-index: 100;\n                transition: box-shadow 200ms;\n            }\n\n            [event]:hover {\n                box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.2),\n                    0 1px 1px 0 rgba(0, 0, 0, 0.14),\n                    0 2px 1px -1px rgba(0, 0, 0, 0.12) !important;\n                cursor: pointer;\n            }\n\n            .overflow-block {\n                opacity: 0.3;\n                width: 12rem;\n            }\n\n            .internal {\n                background-color: #1565c0;\n                color: #fff;\n            }\n\n            .icon {\n                background-color: #f0f0f0;\n            }\n\n            .icon.done {\n                color: #21a453;\n            }\n\n            .external {\n                background-color: #ad1457;\n                color: #fff;\n            }\n\n            .cancelled {\n                background-color: #ccc;\n            }\n        `,\n    ],\n})\nexport class DayviewEventComponent implements OnChanges {\n    /** Event to display */\n    @Input() public event: CalendarEvent;\n    /** Top position for the event */\n    public top = -999;\n    /** Height of the event on the calendar */\n    public height = 0;\n    /** Top position for the event */\n    public overflow_top = -999;\n    /** Height of the event on the calendar */\n    public overflow_height = 0;\n\n    public readonly ui_options = this._state.options;\n\n    public readonly view = (e) => this._state.setEvent(e);\n\n    public get time() {\n        const date = new Date(this.event.date);\n        return (\n            format(date, this.time_format) +\n            ' - ' +\n            format(addMinutes(date, this.event.duration), this.time_format)\n        );\n    }\n\n    public get type() {\n        return this.event.guests.length\n            ? 'external'\n            : this.event.status === 'declined'\n            ? 'cancelled'\n            : 'internal';\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.event && this.event) {\n            const start = startOfDay(new Date(this.event.date));\n            const diff = differenceInMinutes(new Date(this.event.date), start);\n            this.top = diff / DAY_IN_MINUTES;\n            this.height = this.event.duration / DAY_IN_MINUTES;\n            this.overflow_top =\n                (diff - (this.event.setup_time || 0)) / DAY_IN_MINUTES;\n            this.overflow_height =\n                (this.event.duration +\n                    (this.event.setup_time || 0) +\n                    (this.event.breakdown_time || 0)) /\n                DAY_IN_MINUTES;\n        }\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { CalendarEvent } from '@placeos/events';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'dayview-space',\n    template: `\n        <ng-container *ngIf=\"space\">\n            <dayview-event\n                *ngFor=\"let event of events | async\"\n                [event]=\"event\"\n            ></dayview-event>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class DayviewSpaceComponent extends AsyncHandler implements OnInit {\n    /** Space to display events for */\n    @Input() public space: Space;\n\n    public shown_event: CalendarEvent;\n    /** List of events for the selected space */\n    public readonly events = this._state.filtered.pipe(\n        map((bookings) => {\n            return bookings.filter((bkn) =>\n                bkn.resources.find((space) => this.space.email === space.email)\n            );\n        })\n    );\n\n    constructor(private _state: EventsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription('events', this._state.filtered.subscribe());\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { querySystems } from '@placeos/ts-client';\nimport { combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { EventsStateService } from './events-state.service';\n\nconst HOUR_BLOCKS = new Array(24).fill(0).map((_, idx) => {\n    return (idx % 12 === 0 ? 12 : idx % 12) + (idx >= 12 ? ' PM' : ' AM');\n});\n\n@Component({\n    selector: 'dayview-timeline',\n    template: `\n        <div class=\"absolute inset-0 flex\">\n            <div class=\"time h-full w-24 overflow-hidden bg-base-100 relative\">\n                <div header class=\"relative h-16 z-50\">\n                    <div\n                        class=\"bg-base-100 absolute top-0 left-0 right-0 bottom-8\"\n                    ></div>\n                </div>\n                <div\n                    *ngFor=\"let time of blocks\"\n                    change-transform\n                    class=\"relative h-16 border-r border-base-300 z-10\"\n                    [style.transform]=\"'translateY(-' + scroll.y + 'px)'\"\n                >\n                    <div\n                        class=\"absolute text-center w-full text-xs top-0 transform -translate-y-1/2 opacity-40\"\n                    >\n                        {{ time }}\n                    </div>\n                    <div\n                        class=\"absolute h-px w-2 top-0 right-0 bg-base-300\"\n                    ></div>\n                </div>\n                <div class=\"absolute h-8 w-px top-8 right-0 bg-base-300\"></div>\n            </div>\n            <div class=\"h-full flex-1 flex flex-col w-1/2\">\n                <div\n                    header\n                    class=\"flex relative overflow-hidden border-b border-base-300 border-opacity-50 bg-base-100 h-16 w-full\"\n                >\n                    <div\n                        *ngFor=\"let space of space_list | async\"\n                        change-transform\n                        class=\"relative h-16 w-48 min-w-[12rem]\"\n                        [style.transform]=\"'translateX(-' + scroll.x + 'px)'\"\n                    >\n                        <div\n                            bar\n                            class=\"absolute h-8 w-px bottom-0 -left-px bg-base-300\"\n                        ></div>\n                        <div class=\"name m-2 text-center\">\n                            {{ space.display_name || space.name }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    #scroll_el\n                    content\n                    class=\"relative flex flex-1 overflow-auto\"\n                    (scroll)=\"onScroll($event)\"\n                >\n                    <dayview-space\n                        *ngFor=\"let space of space_list | async\"\n                        [space]=\"space\"\n                        class=\"w-48 min-w-[12rem] h-[96rem] border-r border-base-300\"\n                    ></dayview-space>\n                    <div\n                        *ngFor=\"let time of blocks; let i = index\"\n                        class=\"absolute bg-base-300 h-px min-w-full left-0\"\n                        [style.width]=\"\n                            (space_list | async)?.length * 12 + 'rem'\n                        \"\n                        [style.top]=\"i * 4 + 'rem'\"\n                    ></div>\n                </div>\n            </div>\n            <mat-progress-bar\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n                class=\"absolute bottom-0 left-0 right-0\"\n            ></mat-progress-bar>\n            <view-event-details\n                *ngIf=\"event | async\"\n                [event]=\"event | async\"\n            ></view-event-details>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [change-transform] {\n                will-change: transform;\n            }\n        `,\n    ],\n})\nexport class DayviewTimelineComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    /** Time blocks to display */\n    public readonly blocks: string[] = HOUR_BLOCKS;\n    /** Current scroll position of the content */\n    public scroll: { x: number; y: number } = { x: 0, y: 0 };\n    /** Whether event data is loading */\n    public readonly loading = this._state.loading;\n    /** Event to show more details about */\n    public readonly event = this._state.event;\n\n    public readonly spaces = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap(({ id }) =>\n            querySystems({ zone_id: id, limit: 1000 }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map(({ data }) =>\n            data.map(\n                (_) =>\n                    new Space({\n                        ..._,\n                        level: this._org.levelWithID(_.zones),\n                    } as any)\n            )\n        ),\n        shareReplay(1)\n    );\n    /** List of spaces to display */\n    public readonly space_list = combineLatest([\n        this.spaces,\n        this._state.zones,\n    ]).pipe(\n        map(\n            ([spaces, zones]) =>\n                spaces.filter(\n                    (space) =>\n                        !zones?.length ||\n                        space.zones.find((z) => zones.includes(z))\n                ) || []\n        )\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: EventsStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n\n    public onScroll(e) {\n        requestAnimationFrame(\n            () =>\n                (this.scroll = {\n                    x: e.srcElement.scrollLeft,\n                    y: e.srcElement.scrollTop,\n                })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, Identity, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BookingUIOptions, EventsStateService } from './events-state.service';\n\n@Component({\n    selector: 'dayview-topbar',\n    template: `\n        <div\n            class=\"flex items-center px-4 h-20 bg-base-100 border-b border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                new\n                class=\"w-12 xl:w-auto overflow-hidden\"\n                (click)=\"newBooking()\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon\n                        class=\"mr-2\"\n                        [icon]=\"{ class: 'material-icons', content: 'add' }\"\n                    ></app-icon>\n                    <div class=\"hidden xl:block\">New Booking</div>\n                </div>\n            </button>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"type_list\"\n                    (ngModelChange)=\"updateTypes($event)\"\n                    placeholder=\"No Events\"\n                >\n                    <mat-select-trigger>Legend</mat-select-trigger>\n                    <mat-option *ngFor=\"let type of types\" [value]=\"type.id\">\n                        {{ type.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(ui_options | async)?.show_overflow\"\n                (ngModelChange)=\"updateUIOptions({ show_overflow: $event })\"\n                *ngIf=\"allow_setup_breakdown\"\n            >\n                <div class=\"text-xs\">Setup / Breakdown</div>\n            </mat-slide-toggle>\n            <div class=\"flex-1 w-0\"></div>\n            <!-- <searchbar class=\"mr-2\"></searchbar> -->\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n                margin-left: 1em;\n            }\n\n            mat-slide-toggle div {\n                width: 5.5em;\n                white-space: initial;\n                line-height: 1.2em;\n            }\n        `,\n    ],\n})\nexport class DayviewTopbarComponent extends AsyncHandler {\n    /** List of selected levels */\n    public zones: string[] = [];\n\n    public readonly types: Identity[] = [\n        { id: 'internal', name: 'Internal' },\n        { id: 'external', name: 'External' },\n        { id: 'cancelled', name: 'Cancelled' },\n    ];\n    /** List of selected types */\n    public type_list: string[] = this.types.map((i) => `${i.id}`);\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly ui_options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setDate(d);\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n    /** List of levels for the active building */\n    public readonly updateTypes = (types) =>\n        this._state.setFilters({\n            hide_type: this.types.reduce((list, item) => {\n                !types.includes(item.id) ? list.push(item) : '';\n                return list;\n            }, []),\n        });\n\n    public updateUIOptions(options: BookingUIOptions) {\n        this._state.setUIOptions(options);\n    }\n\n    public get allow_setup_breakdown() {\n        return this._settings.get('app.events.allow_setup_breakdown');\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.zones = zones;\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.updateTypes(this.type_list);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { CateringOrderStateService } from 'libs/catering/src/lib/catering-order-modal/catering-order-state.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'event-form',\n    template: `\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"flex flex-col\">\n                <label for=\"title\">Title<span>*</span>:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"title\"\n                        formControlName=\"title\"\n                        placeholder=\"Meeting Title\"\n                    />\n                    <mat-error>A valid title is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col relative\">\n                <label for=\"date\">Date<span>*</span>:</label>\n                <a-date-field name=\"date\" formControlName=\"date\"></a-date-field>\n                <mat-checkbox\n                    formControlName=\"all_day\"\n                    *ngIf=\"allow_all_day\"\n                    class=\"absolute -top-2 right-0\"\n                >\n                    {{ 'FORM.ALL_DAY' | translate }}\n                </mat-checkbox>\n            </div>\n            <div class=\"flex space-x-2\" *ngIf=\"!form.value.all_day\">\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"start-time\">Start Time<span>*</span>:</label>\n                    <a-time-field\n                        name=\"start-time\"\n                        [ngModel]=\"form.get('date').value\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1\">\n                    <label for=\"duration\">Duration<span>*</span>:</label>\n                    <a-duration-field\n                        name=\"duration\"\n                        [time]=\"form.controls?.date?.value\"\n                        formControlName=\"duration\"\n                        [use_24hr]=\"use_24hr_time\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"organiser\">Host<span>*</span>:</label>\n                <a-user-search-field\n                    name=\"organiser\"\n                    formControlName=\"organiser\"\n                    class=\"mb-4\"\n                ></a-user-search-field>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"attendees\">Attendees<span>*</span>:</label>\n                <a-user-list-field\n                    name=\"attendees\"\n                    formControlName=\"attendees\"\n                ></a-user-list-field>\n            </div>\n            <div class=\"flex flex-col flex-1\">\n                <label for=\"space\">Space<span>*</span>:</label>\n                <space-list-field\n                    class=\"w-full\"\n                    formControlName=\"resources\"\n                ></space-list-field>\n            </div>\n            <div\n                class=\"py-2\"\n                *ngIf=\"(has_catering | async) && form.contains('catering')\"\n            >\n                <label for=\"catering\">Catering:</label>\n                <catering-list-field\n                    name=\"catering\"\n                    formControlName=\"catering\"\n                    [options]=\"{\n                        date: form.value.date,\n                        duration: form.value.duration,\n                        all_day: form.value.all_day,\n                        zone_id: form.value.resources[0]?.level?.parent_id\n                    }\"\n                ></catering-list-field>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full mt-2\"\n                    *ngIf=\"form.value.catering?.length && has_codes | async\"\n                    (openedChange)=\"focusInput()\"\n                >\n                    <mat-select\n                        formControlName=\"catering_charge_code\"\n                        placeholder=\"Charge Code\"\n                    >\n                        <input\n                            #input\n                            class=\"sticky top-0 bg-base-100 px-4 py-3 text-base border-x-0 border-t-0 border-b focus:border-b border-base-200 w-full rounded-none z-50\"\n                            [ngModel]=\"code_filter.getValue()\"\n                            (ngModelChange)=\"code_filter.next($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Search charge codes...\"\n                        />\n                        <mat-option class=\"hidden\"></mat-option>\n                        <mat-option\n                            *ngFor=\"let code of filtered_codes | async\"\n                            [value]=\"code\"\n                        >\n                            {{ code }}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error> Catering charge code is required </mat-error>\n                </mat-form-field>\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-full\"\n                    [class.mt-2]=\"\n                        !(form.value.catering?.length && has_codes | async)\n                    \"\n                    *ngIf=\"form.value.catering?.length\"\n                >\n                    <textarea\n                        matInput\n                        formControlName=\"catering_notes\"\n                        placeholder=\"Extra catering details...\"\n                    ></textarea>\n                    <mat-error> Catering Order notes are required </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col flex-1 mb-4\" *ngIf=\"has_assets\">\n                <label for=\"space\">Assets:</label>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </div>\n            <div class=\"flex space-x-2\">\n                <div class=\"flex flex-col space-y-2 flex-1\">\n                    <label for=\"setup\">Setup Duration</label>\n                    <a-duration-field\n                        name=\"setup\"\n                        formControlName=\"setup_time\"\n                        [min]=\"0\"\n                        [custom_options]=\"[5, 10]\"\n                    ></a-duration-field>\n                </div>\n                <div class=\"flex flex-col space-y-2 flex-1\">\n                    <label for=\"breakdown\">Breakdown Duration</label>\n                    <a-duration-field\n                        name=\"breakdown\"\n                        [min]=\"0\"\n                        formControlName=\"breakdown_time\"\n                        [custom_options]=\"[5, 10]\"\n                    ></a-duration-field>\n                </div>\n            </div>\n        </form>\n    `,\n    styles: [``],\n})\nexport class EventFormComponent {\n    @Input() public form: FormGroup;\n\n    public code_filter = new BehaviorSubject('');\n\n    public readonly has_catering = this._catering.available_menu.pipe(\n        map((l) => l.length > 0)\n    );\n\n    public readonly has_codes = this._catering.charge_codes.pipe(\n        map((l) => l.length > 0),\n        tap((has_codes) => {\n            if (!has_codes) {\n                this.form.get('catering_charge_code').setValidators([]);\n                this.form.updateValueAndValidity();\n            }\n        })\n    );\n\n    public readonly filtered_codes = combineLatest([\n        this.code_filter,\n        this._catering.charge_codes,\n    ]).pipe(\n        map(([s, l]) =>\n            l.filter((_) => _.toLowerCase().includes(s.toLowerCase()))\n        )\n    );\n\n    public get allow_all_day() {\n        return !!this._settings.get('app.events.allow_all_day');\n    }\n\n    public get has_assets() {\n        return !!this._settings.get('app.events.has_assets');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _settings: SettingsService,\n        private _catering: CateringOrderStateService\n    ) {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-new-dayview]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"relative flex flex-col flex-1 w-1/2 h-full\">\n                <room-bookings></room-bookings>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewDayViewComponent {}\n","import { Component } from '@angular/core';\nimport { EventsStateService } from './events-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\nimport { CalendarEvent } from '@placeos/events';\n\n@Component({\n    selector: 'room-bookings-approvals',\n    template: `\n        <div\n            class=\"flex flex-col h-full overflow-hidden border-l border-base-200\"\n            [style.width]=\"show ? '' : '0px'\"\n        >\n            <div\n                class=\"flex items-center p-2 border-b border-base-200 space-x-2\"\n            >\n                <button\n                    btn\n                    icon\n                    matRipple\n                    class=\"bg-base-200\"\n                    (click)=\"show = !show\"\n                >\n                    <app-icon>chevron_right</app-icon>\n                </button>\n                <h3 class=\"flex-1\">\n                    Pending Approval ({{ (pending | async)?.length || '0' }})\n                </h3>\n                <button btn icon matRipple>\n                    <app-icon>search</app-icon>\n                </button>\n            </div>\n            <div class=\"flex-1 overflow-auto p-2 space-y-2\">\n                <div\n                    *ngIf=\"!(pending | async)?.length\"\n                    class=\"w-full h-full flex flex-col items-center justify-center space-y-2\"\n                >\n                    <img src=\"assets/icons/no-pending.svg\" />\n                    <p>No pending requests</p>\n                </div>\n                <div\n                    *ngFor=\"let event of pending | async\"\n                    class=\"relative border border-base-200 p-2 w-full rounded\"\n                >\n                    <h3>{{ event.title }}</h3>\n                    <p class=\"opacity-30 text-xs mb-2\">\n                        {{ event.date | date: 'medium' }}\n                    </p>\n                    <div class=\"w-64 h-32 overflow-hidden mb-2 bg-base-200\">\n                        <img\n                            auth\n                            class=\"object-cover min-w-full min-h-full\"\n                            [source]=\"\n                                (event.resources[0]?.email | space | async)\n                                    ?.images[0]\n                            \"\n                            *ngIf=\"event.resources.length\"\n                        />\n                    </div>\n                    <div class=\"flex items-center space-x-2 mb-2\">\n                        <div\n                            class=\"h-8 w-8 bg-base-200 rounded-full flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-xl\">place</app-icon>\n                        </div>\n                        <div class=\"flex-1 text-xs\">\n                            {{\n                                (\n                                    event.resources.length &&\n                                    (event.resources[0]?.email | space | async)\n                                )?.display_name ||\n                                    (event.resources[0]?.email | space | async)\n                                        ?.name ||\n                                    'No Location'\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2 mb-2\">\n                        <div\n                            class=\"h-8 w-8 bg-base-200 rounded-full flex items-center justify-center\"\n                        >\n                            <app-icon class=\"text-xl\">person</app-icon>\n                        </div>\n                        <div class=\"flex-1 text-xs\">\n                            {{ event.organiser?.name || event.host }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <button\n                            btn\n                            matRipple\n                            class=\"border-success bg-success-light text-black flex flex-1 items-center space-x-2\"\n                            [disabled]=\"status[event.id] === 'accept'\"\n                            (click)=\"approve(event)\"\n                        >\n                            <div>\n                                {{\n                                    status[event.id] === 'accept'\n                                        ? 'Approved'\n                                        : 'Approve'\n                                }}\n                            </div>\n                            <app-icon class=\"text-success\">done</app-icon>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"border-error bg-error-light text-black flex flex-1 items-center space-x-2 \"\n                            [disabled]=\"status[event.id] === 'decline'\"\n                            (click)=\"reject(event)\"\n                        >\n                            <div>\n                                {{\n                                    status[event.id] === 'decline'\n                                        ? 'Declined'\n                                        : 'Decline'\n                                }}\n                            </div>\n                            <app-icon class=\"text-error\">close</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"absolute bottom-0 left-0 right-0 top-14 p-2 flex flex-col items-center justify-center space-y-2\"\n                *ngIf=\"loading\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-80 z-0\"></div>\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"relative z-10\">Processing...</p>\n            </div>\n        </div>\n        <button\n            btn\n            icon\n            matRipple\n            class=\"bg-warning absolute top-2 -left-8 shadow text-warning-content\"\n            *ngIf=\"!show\"\n            (click)=\"show = !show\"\n        >\n            <app-icon>chevron_left</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                position: relative;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class RoomBookingsApprovalsComponent {\n    public show = true;\n    public loading = false;\n    public status: Record<string, 'accept' | 'decline' | undefined> = {};\n    public readonly pending = this._state.pending;\n\n    constructor(\n        private _state: EventsStateService,\n        private _org: OrganisationService\n    ) {}\n\n    public async approve(event: CalendarEvent) {\n        const system_id = this._org.binding('approvals');\n        if (!system_id) return;\n        const mod = getModule(system_id, 'RoomBookingApproval', 1);\n        if (!mod) return;\n        this.loading = true;\n        await mod.execute('accept_event', [event.mailbox, event.id]).catch();\n        this.loading = false;\n        this.status[event.id] = 'accept';\n    }\n\n    public async reject(event: CalendarEvent) {\n        const system_id = this._org.binding('approvals');\n        if (!system_id) return;\n        const mod = getModule(system_id, 'RoomBookingApproval', 1);\n        if (!mod) return;\n        this.loading = true;\n        await mod.execute('decline_event', [event.mailbox, event.id]).catch();\n        this.loading = false;\n        this.status[event.id] = 'decline';\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganisationService } from '@placeos/organisation';\nimport { EventsStateService } from './events-state.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { filter, map, take } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\nconst EMPTY = [];\n@Component({\n    selector: 'room-bookings',\n    template: `\n        <div class=\"absolute inset-0 flex flex-col overflow-hidden pl-8\">\n            <div class=\"flex items-center justify-between w-full py-4 pr-8\">\n                <h2 class=\"text-2xl font-medium\">Room Bookings</h2>\n                <button btn matRipple class=\"space-x-2\" (click)=\"newBooking()\">\n                    <div>New Booking</div>\n                    <app-icon>add</app-icon>\n                </button>\n            </div>\n            <div class=\"w-full flex items-center\">\n                <mat-form-field appearance=\"outline\" class=\"no-subscript w-52\">\n                    <mat-select\n                        [ngModel]=\"zones | async\"\n                        (ngModelChange)=\"updateZones($event)\"\n                        placeholder=\"All Levels\"\n                        multiple\n                    >\n                        <mat-option\n                            *ngFor=\"let level of levels | async\"\n                            [value]=\"level.id\"\n                        >\n                            <div class=\"flex flex-col-reverse\">\n                                <div\n                                    class=\"text-xs opacity-30\"\n                                    *ngIf=\"use_region\"\n                                >\n                                    {{\n                                        (level.parent_id | building)\n                                            ?.display_name\n                                    }}\n                                    <span class=\"opacity-0\"> - </span>\n                                </div>\n                                <div>\n                                    {{ level.display_name || level.name }}\n                                </div>\n                            </div>\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <ng-container *ngIf=\"allow_setup_breakdown\">\n                    <div\n                        class=\"border-l h-full ml-8 mr-4\"\n                        *ngIf=\"!use_region\"\n                    ></div>\n                    <mat-slide-toggle\n                        class=\"m-2\"\n                        [ngModel]=\"(ui_options | async)?.show_overflow\"\n                        (ngModelChange)=\"\n                            updateUIOptions({ show_overflow: $event })\n                        \"\n                    >\n                        <div class=\"text-xs\">Setup / Breakdown</div>\n                    </mat-slide-toggle>\n                </ng-container>\n                <div class=\"border-l h-full ml-8 mr-4\"></div>\n                <div\n                    class=\"flex items-center space-x-2 max-w-[calc(100%-16rem)] flex-1\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        class=\"inverse\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <app-icon>filter_list</app-icon>\n                        <div class=\"mx-2\">Filters</div>\n                    </button>\n                    <mat-menu #menu=\"matMenu\" class=\"\">\n                        <div\n                            class=\"flex flex-col space-y-2 overflow-hidden w-48\"\n                        >\n                            <mat-checkbox\n                                *ngFor=\"let type of types\"\n                                [ngModel]=\"!type_list.includes(type.id)\"\n                                (ngModelChange)=\"setFilter(type.id, !$event)\"\n                            >\n                                {{ type.name }}\n                            </mat-checkbox>\n                        </div>\n                    </mat-menu>\n                    <div\n                        class=\"flex items-center overflow-x-auto flex-1 w-px space-x-2 px-2\"\n                    >\n                        @for (type of types; track type.id) {\n                            <div\n                                class=\"flex items-center border border-base-200 rounded-3xl\"\n                                *ngIf=\"!type_list.includes(type.id)\"\n                            >\n                                <div\n                                    class=\"h-4 w-4 m-2 rounded-full\"\n                                    [style.background-color]=\"type.color\"\n                                ></div>\n                                <div>{{ type.name }}</div>\n                                <button\n                                    icon\n                                    matRipple\n                                    (click)=\"setFilter(type.id, true)\"\n                                >\n                                    <app-icon>close</app-icon>\n                                </button>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n            <div class=\"flex w-full flex-1 h-px border-t mt-4 border-base-200\">\n                <room-bookings-timeline class=\"flex-1 w-1/2\" />\n                <room-bookings-approvals *ngIf=\"has_approvals\" />\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class RoomBookingsComponent extends AsyncHandler {\n    public readonly zones = this._state.zones;\n    public readonly ui_options = this._state.options;\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld),\n        ),\n    );\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setZones(z);\n    };\n    public readonly updateUIOptions = (o) => this._state.setUIOptions(o);\n    /**  */\n    public readonly newBooking = (d?) => this._state.newBooking(d);\n\n    public readonly types: any[] = [\n        { id: 'internal', name: 'Internal', color: '#D81B60' },\n        { id: 'external', name: 'External', color: '#1E88E5' },\n        { id: 'cancelled', name: 'Cancelled', color: '#eeeeee' },\n    ];\n\n    public get type_list() {\n        return this._state.filters.hide_type || EMPTY;\n    }\n\n    public get has_approvals() {\n        return this._org.binding('approvals');\n    }\n\n    public get allow_setup_breakdown() {\n        return this._settings.get('app.events.allow_setup_breakdown');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: EventsStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (this.use_region) return;\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id,\n                        );\n                    }\n                }\n            }),\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                if (this.use_region) return;\n                const zones = (\n                    await this.zones.pipe(take(1)).toPromise()\n                ).filter((zone) => levels.find((lvl) => lvl.id === zone));\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            }),\n        );\n        this.subscription(\n            'region',\n            this._org.active_region\n                .pipe(filter((_) => !!_))\n                .subscribe((_) => this.updateZones([_.id])),\n        );\n    }\n\n    public setFilter(id: string, value: boolean) {\n        const filters = this._state.filters;\n        let hide_type = filters.hide_type || [];\n        hide_type = hide_type.filter((i) => i !== id);\n        if (value) hide_type.push(id as any);\n        this._state.setFilters({ hide_type });\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport {\n    differenceInMinutes,\n    format,\n    isSameDay,\n    setHours,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { EventsStateService } from './events-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    CalendarEvent,\n    EventDetailsModalComponent,\n    SetupBreakdownModalComponent,\n    declineEvent,\n} from '@placeos/events';\n\n@Component({\n    selector: 'room-bookings-timeline',\n    template: `\n        <div\n            class=\"relative flex items-center justify-center p-2 space-x-2 border-b border-base-200\"\n        >\n            <date-options\n                [date]=\"date | async\"\n                (dateChange)=\"setDate($event)\"\n                [is_new]=\"true\"\n            ></date-options>\n            <div\n                class=\"absolute top-1/2 -translate-y-1/2 left-4 text-info text-sm\"\n                *ngIf=\"is_today | async\"\n            >\n                Today\n            </div>\n        </div>\n        <div timeline class=\"grid overflow-auto w-full h-1/2 flex-1\">\n            <div\n                timezone\n                class=\"sticky top-0 left-0 z-30 bg-base-100 flex items-center justify-center\"\n            >\n                <div class=\"text-xs opacity-30\">\n                    {{ date | async | date: 'z' }}\n                </div>\n                <div\n                    class=\"absolute h-2 w-px right-0 bottom-0 bg-base-300\"\n                ></div>\n                <div\n                    class=\"absolute w-2 h-px right-0 bottom-0 bg-base-300\"\n                ></div>\n            </div>\n            <div\n                space-headers\n                class=\"sticky top-0 z-20 border-b border-base-300 flex items-center bg-base-100\"\n                [style.width]=\"(spaces | async)?.length * 14 + 'rem'\"\n            >\n                <div\n                    *ngFor=\"let space of spaces | async\"\n                    class=\"relative h-full w-56 flex items-center justify-center\"\n                >\n                    <div class=\"truncate\">\n                        {{ space.display_name || space.name }}\n                    </div>\n                    <div\n                        class=\"absolute h-2 w-px -left-px bottom-0 bg-base-300\"\n                    ></div>\n                </div>\n            </div>\n            <div\n                hour-blocks\n                class=\"sticky left-0 z-10 border-r border-base-300 bg-base-100\"\n                [style.height]=\"24 * 3 + 'rem'\"\n            >\n                <div\n                    *ngFor=\"let hour of hours; let i = index\"\n                    class=\"relative h-12 w-full\"\n                >\n                    <div\n                        class=\"absolute -top-px right-0 w-2 h-px bg-base-300\"\n                    ></div>\n                    <div\n                        class=\"absolute -top-px right-3 -translate-y-1/2 text-xs opacity-60\"\n                        *ngIf=\"i !== 0\"\n                    >\n                        {{ formatHour(hour) }}\n                    </div>\n                </div>\n                <div\n                    class=\"absolute bg-secondary right-0 translate-x-1/2 -translate-y-1/2 h-2 w-2 rounded-full\"\n                    *ngIf=\"is_today | async\"\n                    [style.top]=\"'calc(' + timeToOffset(now) + '% + 1px)'\"\n                ></div>\n            </div>\n            <div space-blocks class=\"relative overflow-hidden\">\n                <div\n                    *ngFor=\"let hour of hours; let i = index\"\n                    class=\"relative h-12 w-full border-b border-base-200\"\n                ></div>\n                <div\n                    *ngFor=\"let space of spaces | async; let i = index\"\n                    class=\"absolute w-px h-full bg-base-200 top-0\"\n                    [style.left]=\"'calc(' + i * 14 + 'rem - 1px)'\"\n                ></div>\n\n                <ng-container\n                    *ngFor=\"let space of spaces | async; let i = index\"\n                >\n                    <ng-container\n                        *ngFor=\"let event of (events | async)[space.id] || []\"\n                    >\n                        <button\n                            event\n                            matRipple\n                            class=\"absolute w-52 hover:opacity-90 text-left\"\n                            [style.left]=\"i * 14 + 0.25 + 'rem'\"\n                            [style.top]=\"timeToOffset(event.date) + '%'\"\n                            [style.height]=\"endToOffset(event.duration) + '%'\"\n                            [class.pointer-events-none]=\"event.state === 'done'\"\n                            (click)=\"viewEvent(event, space.id)\"\n                        >\n                            <div\n                                class=\"relative w-full h-full shadow bg-base-100 border border-base-200 hover:bg-base-200 rounded-lg overflow-hidden px-3 py-1 text-xs\"\n                                [class.opacity-60]=\"event.state === 'done'\"\n                                [class.!rounded-none]=\"event.is_system_event\"\n                                [class.!border-secondary]=\"\n                                    event.is_system_event\n                                \"\n                            >\n                                <ng-container *ngIf=\"event.is_system_event\">\n                                    <div\n                                        class=\"absolute inset-0 bg-secondary opacity-50\"\n                                    ></div>\n                                </ng-container>\n                                <ng-container *ngIf=\"!event.is_system_event\">\n                                    <div\n                                        class=\"absolute left-0 inset-y-0 w-1 \"\n                                        [class.bg-secondary]=\"\n                                            event.status !== 'cancelled'\n                                        \"\n                                        [class.bg-error]=\"\n                                            event.status === 'cancelled'\n                                        \"\n                                    ></div>\n                                    <p\n                                        class=\"truncate\"\n                                        [class.opacity-60]=\"\n                                            event.status === 'cancelled'\n                                        \"\n                                    >\n                                        {{\n                                            event.all_day\n                                                ? 'All Day'\n                                                : (event.date\n                                                  | date: time_format)\n                                        }}\n                                        &ndash;\n                                        {{\n                                            event.organiser?.name || event.hjost\n                                        }}\n                                    </p>\n                                    <p\n                                        class=\"truncate\"\n                                        [class.opacity-60]=\"\n                                            event.status === 'cancelled'\n                                        \"\n                                    >\n                                        {{ event.title }}\n                                    </p>\n                                </ng-container>\n                            </div>\n                        </button>\n                    </ng-container>\n                </ng-container>\n                <div\n                    *ngIf=\"is_today | async\"\n                    class=\"absolute inset-x-0 h-[2px] bg-secondary\"\n                    [style.top]=\"timeToOffset(now) + '%'\"\n                ></div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                max-width: 100%;\n            }\n\n            [timeline] {\n                grid-template-columns: 4rem auto;\n                grid-template-rows: 4rem auto;\n            }\n        `,\n    ],\n})\nexport class RoomBookingsTimelineComponent extends AsyncHandler {\n    public hours = Array.from({ length: 24 }, (_, i) => i);\n    public readonly ui_options = this._state.options;\n    public readonly spaces = this._state.spaces;\n    public readonly date = this._state.date;\n    public readonly is_today = this.date.pipe(\n        map((d) => isSameDay(d, Date.now()))\n    );\n    public readonly events = combineLatest([\n        this._state.spaces,\n        this._state.filtered,\n    ]).pipe(\n        map(([spaces, events]) => {\n            const map = {};\n            for (const space of spaces) {\n                map[space.id] = events.filter(\n                    (event) =>\n                        event.resources.find(\n                            (item) =>\n                                item.id === space.id ||\n                                item.email === space.email\n                        ) ||\n                        event.system?.id === space.id ||\n                        event.system?.email === space.email\n                );\n            }\n            return map;\n        }),\n        shareReplay(1)\n    );\n\n    public get now() {\n        return startOfMinute(Date.now()).valueOf();\n    }\n\n    public readonly edit = (e) => this._state.newBooking(e);\n    public readonly setDate = (d) => this._state.setDate(d);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: EventsStateService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public formatHour(hour: number) {\n        const date = setHours(Date.now(), hour);\n        return this._settings.get('app.use_24_hour_time')\n            ? format(date, 'HH:00')\n            : format(date, 'h a');\n    }\n\n    public ngOnInit() {\n        this.subscription('poll', this._state.startPolling());\n    }\n\n    public timeToOffset(date: number) {\n        const diff = differenceInMinutes(date, startOfDay(date));\n        return (Math.max(0, diff / 60) / 24) * 100;\n    }\n\n    public endToOffset(duration: number) {\n        return (Math.min(24, duration / 60) / 24) * 100;\n    }\n\n    public viewEvent(event: CalendarEvent, space_id: string) {\n        if (event.is_system_event) return;\n        const ref = this._dialog.open(EventDetailsModalComponent, {\n            data: event,\n        });\n        ref.componentInstance.hide_edit = !this._settings.get(\n            'app.events.allow_edit'\n        );\n        this.subscription(\n            'remove',\n            ref.componentInstance.remove.subscribe(() =>\n                this.remove(event, space_id)\n            )\n        );\n        this.subscription(\n            'edit',\n            ref.componentInstance.edit.subscribe(() => this.edit(event))\n        );\n        this.subscription(\n            'actions',\n            ref.componentInstance.action.subscribe(async (action) => {\n                if (!action.includes('breakdown')) return;\n                const ref = this._dialog.open(SetupBreakdownModalComponent, {\n                    data: event,\n                });\n                const data = await ref.afterClosed().toPromise();\n                if (data) this._state.replace(data);\n            })\n        );\n    }\n\n    public async remove(item: CalendarEvent, space_id: string) {\n        const time = `${format(item.date, 'dd MMM yyyy ' + this.time_format)}`;\n        const resource_name = item.space?.display_name;\n        const content = `Delete the booking for ${resource_name} at ${time}`;\n        const resp = await openConfirmModal(\n            { title: `Delete booking`, content, icon: { content: 'delete' } },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.loading('Requesting booking deletion...');\n        await declineEvent(item.id, {\n            calendar: item.calendar || item.mailbox || item.host,\n            system_id: space_id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(`Unable to delete booking. ${e}`);\n                resp.close();\n                throw e;\n            });\n        notifySuccess('Successfully deleted booking.');\n        this._dialog.closeAll();\n    }\n}\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["EventEmitter","MatDialogRef","MAT_DIALOG_DATA","SettingsService","notifyError","notifySuccess","EventFormService","queryEvents","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r0","loading","ɵɵlistener","BookingModalComponent_footer_13_Template_button_click_1_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","save","BookingModalComponent","form","_service","constructor","_data","_dialog_ref","_settings","event","ngOnInit","_this","_asyncToGenerator","creator","mailbox","period_start","event_start","period_end","event_end","ical_uid","toPromise","find","_","id","all_day","get","newForm","_this2","postForm","catch","emit","reason","metadata","close","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","outputs","decls","vars","consts","template","BookingModalComponent_Template","rf","ctx","ɵɵtemplate","BookingModalComponent_div_11_Template","BookingModalComponent_footer_13_Template","ɵɵtextInterpolate1","value","ɵɵclassProp","Router","DayViewComponent","links","_router","route","includes","navigate","attrs","_c0","DayViewComponent_Template","CommonModule","FormsModule","RouterModule","UIModule","DayviewTopbarComponent","DayviewTimelineComponent","DayviewSpaceComponent","DayviewEventComponent","EventFormComponent","SharedSpacesModule","SharedUsersModule","SharedCateringModule","RoomBookingsComponent","RoomBookingsTimelineComponent","RoomBookingsApprovalsComponent","NewDayViewComponent","MeetingFormDetailsComponent","EventBookModalComponent","ROUTES","path","component","DayViewModule","_3","forChild","declarations","imports","SimpleChanges","startOfDay","differenceInMinutes","format","addMinutes","CalendarEvent","EventsStateService","ɵɵclassMap","type","ɵɵstyleProp","overflow_top","overflow_height","title","time","ɵɵtextInterpolate2","attendees","length","DayviewEventComponent_div_2_Template_div_click_0_listener","view","DayviewEventComponent_div_2_div_3_Template","DayviewEventComponent_div_2_div_4_Template","DayviewEventComponent_div_2_div_5_Template","top","height","organiser","name","duration","ext","ɵɵpipeBind2","time_format","DAY_IN_MINUTES","date","Date","guests","status","_state","ui_options","options","e","setEvent","ngOnChanges","changes","start","diff","setup_time","breakdown_time","inputs","features","ɵɵNgOnChangesFeature","DayviewEventComponent_Template","DayviewEventComponent_div_0_Template","DayviewEventComponent_div_2_Template","DayviewEventComponent_div_3_Template","tmp_0_0","show_overflow","tmp_2_0","show_cleaning","map","Space","AsyncHandler","event_r1","ɵɵelementContainerStart","DayviewSpaceComponent_ng_container_0_dayview_event_1_Template","ctx_r1","events","filtered","pipe","bookings","filter","bkn","resources","space","email","subscription","subscribe","ɵɵInheritDefinitionFeature","DayviewSpaceComponent_Template","DayviewSpaceComponent_ng_container_0_Template","querySystems","combineLatest","of","catchError","shareReplay","switchMap","OrganisationService","ctx_r2","scroll","y","time_r2","x","space_r4","display_name","space_r5","tmp_4_0","space_list","i_r6","HOUR_BLOCKS","Array","fill","idx","_org","blocks","spaces","active_building","zone_id","limit","data","level","levelWithID","zones","z","startPolling","ngOnDestroy","stopPolling","onScroll","requestAnimationFrame","srcElement","scrollLeft","scrollTop","DayviewTimelineComponent_Template","DayviewTimelineComponent_div_4_Template","DayviewTimelineComponent_div_8_Template","DayviewTimelineComponent_Template_div_scroll_10_listener","$event","_r1","DayviewTimelineComponent_dayview_space_12_Template","DayviewTimelineComponent_div_14_Template","DayviewTimelineComponent_mat_progress_bar_15_Template","DayviewTimelineComponent_view_event_details_17_Template","ActivatedRoute","first","level_r1","type_r2","DayviewTopbarComponent_mat_slide_toggle_15_Template_mat_slide_toggle_ngModelChange_0_listener","_r3","ctx_r3","updateUIOptions","tmp_1_0","setUIOptions","allow_setup_breakdown","_route","types","type_list","i","levels","active_levels","setDate","d","newBooking","updateZones","relativeTo","queryParams","zone_ids","join","setZones","updateTypes","setFilters","hide_type","reduce","list","item","push","initialised","queryParamMap","params","has","split","building","buildings","bld","parent_id","zone","lvl","i4","DayviewTopbarComponent_Template","DayviewTopbarComponent_Template_button_click_1_listener","ɵɵtwoWayListener","DayviewTopbarComponent_Template_mat_select_ngModelChange_7_listener","ɵɵtwoWayBindingSet","DayviewTopbarComponent_mat_option_8_Template","DayviewTopbarComponent_Template_mat_select_ngModelChange_11_listener","DayviewTopbarComponent_mat_option_14_Template","DayviewTopbarComponent_mat_slide_toggle_15_Template","DayviewTopbarComponent_Template_date_options_dateChange_17_listener","ɵɵpureFunction0","ɵɵtwoWayProperty","FormGroup","MatDialog","CateringOrderStateService","BehaviorSubject","tap","EventFormComponent_form_0_div_19_Template_a_time_field_ngModelChange_7_listener","patchValue","_c1","use_24hr_time","controls","code_r4","EventFormComponent_form_0_div_41_mat_form_field_4_Template_mat_form_field_openedChange_0_listener","focusInput","EventFormComponent_form_0_div_41_mat_form_field_4_Template_input_ngModelChange_2_listener","code_filter","next","EventFormComponent_form_0_div_41_mat_form_field_4_mat_option_5_Template","getValue","filtered_codes","catering","has_codes","EventFormComponent_form_0_div_41_mat_form_field_4_Template","EventFormComponent_form_0_div_41_mat_form_field_6_Template","ɵɵpureFunction4","_c2","EventFormComponent_form_0_mat_checkbox_18_Template","EventFormComponent_form_0_div_19_Template","EventFormComponent_form_0_div_41_Template","EventFormComponent_form_0_div_43_Template","allow_all_day","has_catering","contains","has_assets","_dialog","_catering","available_menu","l","charge_codes","setValidators","updateValueAndValidity","s","toLowerCase","EventFormComponent_Template","EventFormComponent_form_0_Template","NewDayViewComponent_Template","getModule","tmp_3_0","event_r2","images","RoomBookingsApprovalsComponent_div_14_img_7_Template","RoomBookingsApprovalsComponent_div_14_Template_button_click_25_listener","$implicit","approve","RoomBookingsApprovalsComponent_div_14_Template_button_click_30_listener","reject","tmp_5_0","host","RoomBookingsApprovalsComponent_button_17_Template_button_click_0_listener","_r4","show","pending","system_id","binding","mod","execute","RoomBookingsApprovalsComponent_Template","RoomBookingsApprovalsComponent_Template_button_click_2_listener","RoomBookingsApprovalsComponent_div_12_Template","RoomBookingsApprovalsComponent_div_14_Template","RoomBookingsApprovalsComponent_div_16_Template","RoomBookingsApprovalsComponent_button_17_Template","take","level_r2","RoomBookingsComponent_mat_option_13_div_2_Template","use_region","RoomBookingsComponent_ng_container_15_div_1_Template","RoomBookingsComponent_ng_container_15_Template_mat_slide_toggle_ngModelChange_2_listener","RoomBookingsComponent_mat_checkbox_26_Template_mat_checkbox_ngModelChange_0_listener","type_r6","_r5","setFilter","RoomBookingsComponent_For_29_div_0_Template_button_click_4_listener","_r7","type_r8","color","RoomBookingsComponent_For_29_div_0_Template","EMPTY","filters","has_approvals","active_region","region","levelsForRegion","levelsForBuilding","o","_ref","_x","apply","arguments","RoomBookingsComponent_Template","RoomBookingsComponent_Template_button_click_4_listener","RoomBookingsComponent_Template_mat_select_ngModelChange_11_listener","RoomBookingsComponent_mat_option_13_Template","RoomBookingsComponent_ng_container_15_Template","RoomBookingsComponent_mat_checkbox_26_Template","ɵɵrepeaterCreate","RoomBookingsComponent_For_29_Template","_forTrack0","RoomBookingsComponent_room_bookings_approvals_32_Template","menu_r9","ɵɵrepeater","isSameDay","setHours","startOfMinute","openConfirmModal","EventDetailsModalComponent","SetupBreakdownModalComponent","declineEvent","space_r1","formatHour","hour_r2","RoomBookingsTimelineComponent_div_18_div_2_Template","i_r4","timeToOffset","now","i_r5","event_r7","hjost","RoomBookingsTimelineComponent_ng_container_25_ng_container_1_Template_button_click_1_listener","_r6","space_r8","viewEvent","RoomBookingsTimelineComponent_ng_container_25_ng_container_1_ng_container_3_Template","RoomBookingsTimelineComponent_ng_container_25_ng_container_1_ng_container_4_Template","i_r9","endToOffset","state","is_system_event","RoomBookingsTimelineComponent_ng_container_25_ng_container_1_Template","valueOf","hours","from","is_today","system","edit","hour","Math","max","min","space_id","ref","open","componentInstance","hide_edit","remove","action","afterClosed","replace","resource_name","content","resp","icon","calendar","closeAll","RoomBookingsTimelineComponent_Template","RoomBookingsTimelineComponent_Template_date_options_dateChange_1_listener","RoomBookingsTimelineComponent_div_3_Template","RoomBookingsTimelineComponent_div_15_Template","RoomBookingsTimelineComponent_div_18_Template","RoomBookingsTimelineComponent_div_19_Template","RoomBookingsTimelineComponent_div_22_Template","RoomBookingsTimelineComponent_div_23_Template","RoomBookingsTimelineComponent_ng_container_25_Template","RoomBookingsTimelineComponent_div_27_Template","getUnixTime","MapLocation","location","position","map_id","asset_id","map_width","map_height","variance","last_seen","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}