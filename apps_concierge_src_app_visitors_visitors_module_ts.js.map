{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/invite-visitor-modal.component.ts","./apps/concierge/src/app/visitors/new-visitors.component.ts","./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { Booking } from '@placeos/bookings';\nimport { showMetadata } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <div\n            class=\"w-full min-h-full flex flex-col flex-1 text-sm h-full overflow-auto pb-20\"\n        >\n            <simple-table\n                class=\"min-w-[64rem] block text-sm\"\n                [data]=\"guests\"\n                [columns]=\"[\n                    {\n                        key: 'state',\n                        name: ' ',\n                        content: state_template,\n                        size: '3.5rem',\n                        sortable: false\n                    },\n                    {\n                        key: 'date',\n                        name: 'Time',\n                        content: date_template,\n                        size: '8rem'\n                    },\n                    { key: 'asset_name', name: 'Person' },\n                    { key: 'user_name', name: 'Host' },\n                    {\n                        key: 'status',\n                        name: 'State',\n                        content: status_template,\n                        size: '8.5rem'\n                    },\n                    {\n                        key: 'induction',\n                        name: 'Inducted',\n                        content: boolean_template,\n                        show: !!inductions_enabled,\n                        size: '5.5rem'\n                    },\n                    {\n                        key: 'parking_space',\n                        name: 'Parking',\n                        content: parking_template,\n                        show: !!has_parking,\n                        size: '5.5rem'\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        content: action_template,\n                        size: '3.25rem',\n                        sortable: false\n                    }\n                ]\"\n                [filter]=\"search | async\"\n                [sortable]=\"true\"\n            ></simple-table>\n        </div>\n        <ng-template #state_template let-row=\"row\">\n            <div class=\"px-2\">\n                <i\n                    *ngIf=\"!row?.checked_in; else checkin_state\"\n                    matTooltip=\"Not checked in\"\n                    matTooltipPosition=\"right\"\n                    class=\"flex items-center justify-center rounded-full material-icons border-2 border-dashed border-neutral text-xl h-9 w-9\"\n                >\n                    close\n                </i>\n                <ng-template #checkin_state>\n                    <i\n                        class=\"flex items-center justify-center rounded-full material-icons bg-success border-2 border-neutral text-white text-xl h-9 w-9\"\n                        matTooltip=\"Checked In\"\n                        matTooltipPosition=\"right\"\n                    >\n                        done\n                    </i>\n                </ng-template>\n            </div>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-base-100 rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #parking_template let-row=\"row\">\n            <div class=\"px-4\">\n                <div\n                    *ngIf=\"row.extension_data.parking_booking_id\"\n                    class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n                >\n                    <app-icon>done</app-icon>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #boolean_template let-row=\"row\">\n            <div class=\"px-4\">\n                <div\n                    *ngIf=\"row.induction\"\n                    class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n                >\n                    <app-icon>done</app-icon>\n                </div>\n                <div\n                    *ngIf=\"\n                        !row.induction && row.process_state.includes('declined')\n                    \"\n                    class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-error text-error-content mx-auto\"\n                >\n                    <app-icon>close</app-icon>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <div class=\"px-4\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl bg-warning text-warning-content border-none\"\n                    [class.!text-success-content]=\"row?.status === 'approved'\"\n                    [class.!bg-success]=\"row?.status === 'approved'\"\n                    [class.!text-error-content]=\"row?.status === 'declined'\"\n                    [class.!bg-error]=\"row?.status === 'declined'\"\n                    [class.!text-neutral-content]=\"row?.status === 'ended'\"\n                    [class.!bg-neutral]=\"row?.status === 'ended'\"\n                    [class.opacity-60]=\"row?.status === 'ended'\"\n                    [matMenuTriggerFor]=\"menu\"\n                    [disabled]=\"row?.status === 'ended'\"\n                >\n                    <div class=\"flex items-center\">\n                        <div class=\"mx-2\">\n                            {{\n                                row?.status === 'ended'\n                                    ? 'Ended'\n                                    : row?.status === 'approved'\n                                    ? 'Approved'\n                                    : row?.status === 'declined'\n                                    ? 'Declined'\n                                    : 'Pending'\n                            }}\n                        </div>\n                        <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                    </div>\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    Approve Visitor\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    Decline Visitor\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            <div class=\"px-4\">\n                {{\n                    row.date\n                        | date\n                            : ((filters | async)?.period > 1\n                                  ? 'MMM d, ' + time_format\n                                  : time_format)\n                }}\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center justify-end px-2\">\n                <button icon matRipple [matMenuTriggerFor]=\"guest_menu\">\n                    <app-icon>more_horiz</app-icon>\n                </button>\n                <mat-menu #guest_menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        [disabled]=\"!row.attachment?.length\"\n                        [matMenuTriggerFor]=\"attachment_menu\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">attachment</app-icon>\n                            <div>View Attachments</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        *ngIf=\"\n                            has_parking &&\n                            !row.extension_data.parking_booking_id\n                        \"\n                        [matMenuTriggerFor]=\"attachment_menu\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">directions_car</app-icon>\n                            <div>Assign Parking Space</div>\n                        </div>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <a\n                            *ngFor=\"let item of row.attachments\"\n                            [href]=\"item.url\"\n                            mat-menu-item\n                        >\n                            {{ item.name }}\n                        </a>\n                    </mat-menu>\n                    <button mat-menu-item (click)=\"setExt(row, 'remote', true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                {{\n                                    row.extension_data.remote\n                                        ? 'business'\n                                        : 'laptop'\n                                }}\n                            </app-icon>\n                            <div>\n                                Set as\n                                {{\n                                    row.extension_data.remote\n                                        ? 'Onsite'\n                                        : 'Remote'\n                                }}\n                                Visitor\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        *ngIf=\"can_print\"\n                        (click)=\"printQRCode()\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">print</app-icon>\n                            <div>Print QR Code</div>\n                        </div>\n                    </button>\n                    <a mat-menu-item [href]=\"'mailto:' + row?.asset_id\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">email</app-icon>\n                            <div>\n                                Email\n                                {{\n                                    row?.user_email === row?.asset_id\n                                        ? 'Host'\n                                        : 'Guest'\n                                }}\n                            </div>\n                        </div>\n                    </a>\n                    <button\n                        mat-menu-item\n                        (click)=\"row.checked_in ? checkout(row) : checkin(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                {{\n                                    row.checked_in\n                                        ? 'event_busy'\n                                        : 'event_available'\n                                }}\n                            </app-icon>\n                            <div>\n                                {{ row.checked_in ? 'Checkout' : 'Checkin' }}\n                                Guest\n                            </div>\n                        </div>\n                    </button>\n                    <ng-container *ngIf=\"row.linked_event\">\n                        <button mat-menu-item (click)=\"checkinAllVisitors(row)\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    event_available\n                                </app-icon>\n                                <div>Checkin all for Meeting</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"checkoutAllVisitors(row)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    event_busy\n                                </app-icon>\n                                <div>Checkout all for Meeting</div>\n                            </div>\n                        </button>\n                    </ng-container>\n                </mat-menu>\n            </div>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent extends AsyncHandler {\n    public readonly guests = this._state.filtered_bookings.pipe(\n        tap((_: any) => console.log(_))\n    );\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n    public inductions_enabled = false;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly checkinAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, true);\n    public readonly checkoutAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, false);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n\n    public readonly checkin = async (item: Booking) => {\n        await this._state.setCheckinState(item, true);\n        this._state.poll();\n    };\n\n    public readonly checkout = async (item: Booking) => {\n        await this._state.setCheckinState(item, false);\n        this._state.poll();\n    };\n\n    public get has_parking() {\n        return (\n            this._settings.get('app.features')?.includes('parking') &&\n            this._settings.get('app.visitors.has_parking')\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld) => {\n                if (!bld) return;\n                const visitor_kiosk_app =\n                    this._settings.get('app.visitor_kiosk_app') ||\n                    'visitor-kiosk_app';\n                const metadata: any = await showMetadata(\n                    bld.id,\n                    visitor_kiosk_app\n                ).toPromise();\n                this.inductions_enabled =\n                    metadata.details?.induction_enabled &&\n                    metadata.details?.induction_details;\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'invite-visitor-modal',\n    template: `\n        <main class=\"relative min-w-[40rem] min-h-[40rem]\">\n            <invite-visitor-form (done)=\"onDone()\"></invite-visitor-form>\n        </main>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorModalComponent {\n    constructor(\n        private _dialog_ref: MatDialogRef<InviteVisitorModalComponent>\n    ) {}\n\n    public onDone() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-visitors]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center px-8 py-4 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Visitors</h2>\n                    <div class=\"flex-1 w-2\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        (modelChange)=\"setSearch($event)\"\n                    ></searchbar>\n                    <button btn matRipple (click)=\"inviteVisitor()\">\n                        Invite Visitor\n                    </button>\n                </div>\n                <div class=\"flex items-center px-8 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-2\"></div>\n                    <date-options (dateChange)=\"setDate($event)\"></date-options>\n                </div>\n                <div class=\"px-8\">\n                    <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewVisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this._settings.get('app.use_region')\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld)\n        )\n    );\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public inviteVisitor() {\n        this._dialog.open(InviteVisitorModalComponent);\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    SettingsService,\n    downloadFile,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { GuestUser, updateGuest } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    approveBooking,\n    checkinBooking,\n    queryBookings,\n    rejectBooking,\n} from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from '@placeos/spaces';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly bookings = combineLatest([\n        this._org.active_building,\n        this._filters,\n        this._poll,\n    ]).pipe(\n        filter(([building]) => !!building),\n        debounceTime(150),\n        switchMap(([bld, filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryBookings({\n                type: 'visitor',\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zones: (filters.zones || []).join(',') || bld.id,\n                include_checked_out: true,\n                limit: 1000,\n            }).pipe(catchError((_) => of([] as Booking[])));\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_bookings = combineLatest([\n        this._search,\n        this.bookings,\n    ]).pipe(\n        map(([search, guest_list]) => {\n            const filter = search.toLowerCase();\n            const out = guest_list\n                .filter(\n                    (_) =>\n                        _.asset_name?.toLowerCase().includes(filter) ||\n                        _.user_name?.toLowerCase().includes(filter) ||\n                        _.user_email?.toLowerCase().includes(filter) ||\n                        _.asset_id?.toLowerCase().includes(filter)\n                )\n                .sort((a, b) => a.date - b.date);\n            return out;\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public poll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n        this._poll.next(Date.now());\n    }\n\n    public async approveVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await (approveBooking(item.id) as any).toPromise().catch((e) => {\n            notifyError(\n                `Error approving visitor: ${e.message || e.error || e}`\n            );\n            details.close();\n            throw e;\n        });\n        notifySuccess(`Successfully approved visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async declineVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await rejectBooking(item.id)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error declining visitor: ${e.message || e.error || e}`\n                );\n                details.close();\n                throw e;\n            });\n        notifySuccess(`Successfully declining visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async setCheckinState(item: Booking, state = true) {\n        const new_user = await checkinBooking(item.id, state)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking ${state ? 'in' : 'out'} ${\n                        item.asset_name || item.asset_id\n                    } for ${item.user_name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} ${\n                item.asset_name || item.asset_id\n            } from ${item.user_name}'s meeting`\n        );\n    }\n\n    public async setCheckinStateForEvent(event_id: string, state = true) {\n        if (!event_id) return;\n        const bookings = await this.bookings.pipe(take(1)).toPromise();\n        const event_bookings = bookings.filter(\n            (_) =>\n                _.parent_id === event_id ||\n                _.extension_data.parent_id === event_id ||\n                _.linked_event?.id === event_id ||\n                _.linked_event?.event_id === event_id\n        );\n        if (!event_bookings.length) return;\n        await Promise.all(\n            event_bookings.map((_) =>\n                checkinBooking(_.id, state)\n                    .toPromise()\n                    .catch((e) => {\n                        notifyError(\n                            `Error checking ${state ? 'in' : 'out'} ${\n                                _.asset_name || _.asset_id\n                            } for ${_.user_name}'s meeting`\n                        );\n                        throw e;\n                    })\n            )\n        );\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} all visitors from ${\n                event_bookings[0].user_name\n            }'s meeting`\n        );\n        this._poll.next(Date.now());\n    }\n\n    public async downloadVisitorsList() {\n        const bookings = await this.filtered_bookings.pipe(take(1)).toPromise();\n        if (!bookings.length) return;\n        const { date } = this._filters.getValue();\n        const list = bookings.map((_) => ({\n            Name: _.asset_name,\n            Email: _.asset_id,\n            'Checked In': _.checked_in,\n            Host: _.user_email || '',\n            Status: _.status,\n            Date: format(_.date, 'dd MMM ' + this.time_format),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-base-200\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { GuestListingComponent } from './guest-listing.component';\nimport { NewVisitorsComponent } from './new-visitors.component';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: 'new', component: NewVisitorsComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewVisitorsComponent,\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        GuestListingComponent,\n        InviteVisitorModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["AsyncHandler","SettingsService","VisitorsStateService","showMetadata","OrganisationService","tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","GuestListingComponent_ng_template_3_i_1_Template","GuestListingComponent_ng_template_3_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵadvance","ɵɵproperty","row_r1","checked_in","checkin_state_r2","ɵɵtextInterpolate1","row_r3","extension_data","id_confirmed","ɵɵelement","ɵɵlistener","GuestListingComponent_ng_template_5_ng_template_2_Template_button_click_2_listener","ɵɵrestoreView","_r4","ɵɵnextContext","row","ctx_r4","ɵɵresetView","setExt","GuestListingComponent_ng_template_5_ng_template_2_Template_button_click_4_listener","id_data","url","ɵɵsanitizeUrl","GuestListingComponent_ng_template_5_button_1_Template","GuestListingComponent_ng_template_5_ng_template_2_Template","id_confirmation_r6","GuestListingComponent_ng_template_7_div_1_Template","row_r7","parking_booking_id","GuestListingComponent_ng_template_9_div_1_Template","GuestListingComponent_ng_template_9_div_2_Template","row_r8","induction","process_state","includes","GuestListingComponent_ng_template_11_Template_button_click_9_listener","row_r10","_r9","approveVisitor","GuestListingComponent_ng_template_11_Template_button_click_11_listener","declineVisitor","ɵɵclassProp","status","menu_r11","ɵɵpipeBind2","row_r12","date","tmp_9_0","ɵɵpipeBind1","filters","period","time_format","attachment_menu","item_r14","name","GuestListingComponent_ng_template_15_button_22_Template_button_click_0_listener","_r16","printQRCode","ɵɵelementContainerStart","GuestListingComponent_ng_template_15_ng_container_35_Template_button_click_1_listener","_r17","row_r15","checkinAllVisitors","GuestListingComponent_ng_template_15_ng_container_35_Template_button_click_7_listener","checkoutAllVisitors","GuestListingComponent_ng_template_15_button_12_Template","GuestListingComponent_ng_template_15_a_15_Template","GuestListingComponent_ng_template_15_Template_button_click_16_listener","_r13","GuestListingComponent_ng_template_15_button_22_Template","GuestListingComponent_ng_template_15_Template_button_click_29_listener","checkout","checkin","GuestListingComponent_ng_template_15_ng_container_35_Template","guest_menu_r18","attachment","length","has_parking","attachments","remote","can_print","asset_id","user_email","linked_event","GuestListingComponent_button_17_Template_button_click_0_listener","_r19","downloadVisitorList","GuestListingComponent","_settings","get","constructor","_state","_org","_this","this","guests","filtered_bookings","pipe","_","console","log","search","inductions_enabled","downloadVisitorsList","u","setCheckinStateForEvent","id","f","v","_ref","_asyncToGenerator","item","setCheckinState","poll","_x","apply","arguments","_ref2","_x2","ngOnInit","_this2","subscription","active_building","subscribe","_ref3","bld","visitor_kiosk_app","metadata","toPromise","details","induction_enabled","induction_details","_x3","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","GuestListingComponent_Template","rf","ctx","GuestListingComponent_ng_template_3_Template","GuestListingComponent_ng_template_5_Template","GuestListingComponent_ng_template_7_Template","GuestListingComponent_ng_template_9_Template","GuestListingComponent_ng_template_11_Template","GuestListingComponent_ng_template_13_Template","GuestListingComponent_ng_template_15_Template","GuestListingComponent_button_17_Template","ɵɵpureFunction8","_c8","ɵɵpureFunction1","_c0","state_template_r20","_c1","date_template_r24","ɵɵpureFunction0","_c2","_c3","_c4","status_template_r23","ɵɵpureFunction2","_c5","boolean_template_r22","_c6","parking_template_r21","_c7","action_template_r25","tmp_11_0","MatDialogRef","InviteVisitorModalComponent","_dialog_ref","onDone","close","InviteVisitorModalComponent_Template","InviteVisitorModalComponent_Template_invite_visitor_form_done_1_listener","ActivatedRoute","Router","MatDialog","combineLatest","map","tmp_3_0","level_r1","parent_id","display_name","NewVisitorsComponent_mat_option_15_div_2_Template","ctx_r1","use_region","NewVisitorsComponent","_router","_route","_dialog","loading","zones","levels","active_region","region","levelsForRegion","levelsForBuilding","setDate","setFilters","setSearch","str","setSearchString","updateZones","navigate","relativeTo","queryParams","zone_ids","join","inviteVisitor","open","startPolling","ngOnDestroy","stopPolling","i4","i5","attrs","NewVisitorsComponent_Template","NewVisitorsComponent_Template_searchbar_modelChange_8_listener","$event","NewVisitorsComponent_Template_button_click_9_listener","NewVisitorsComponent_Template_mat_select_ngModelChange_13_listener","NewVisitorsComponent_mat_option_15_Template","NewVisitorsComponent_Template_date_options_dateChange_18_listener","NewVisitorsComponent_mat_progress_bar_21_Template","tmp_0_0","BehaviorSubject","of","catchError","debounceTime","filter","shareReplay","switchMap","take","startOfDay","getUnixTime","addDays","format","downloadFile","jsonToCsv","notifyError","notifySuccess","openConfirmModal","updateGuest","approveBooking","checkinBooking","queryBookings","rejectBooking","_search","getValue","_poll","_filters","_loading","asObservable","bookings","building","next","Date","start","end","type","period_start","period_end","include_checked_out","limit","guest_list","toLowerCase","out","asset_name","user_name","sort","a","b","now","delay","interval","clearInterval","guest","field","value","title","content","icon","reason","catch","e","message","error","_this3","state","new_user","event_id","_this4","event_bookings","Promise","all","_this5","list","Name","Email","Host","Status","data","ɵɵinject","factory","ɵfac","providedIn","first","VisitorsTopbarComponent","active_levels","initialised","queryParamMap","params","has","split","level","levelWithID","buildings","find","zone","lvl","push","VisitorsTopbarComponent_Template","ɵɵtwoWayListener","VisitorsTopbarComponent_Template_mat_select_ngModelChange_2_listener","ɵɵtwoWayBindingSet","VisitorsTopbarComponent_mat_option_3_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_6_listener","VisitorsTopbarComponent_Template_searchbar_modelChange_15_listener","VisitorsTopbarComponent_Template_date_options_dateChange_16_listener","ɵɵtwoWayProperty","tmp_2_0","VisitorsComponent","VisitorsComponent_Template","VisitorsComponent_mat_progress_bar_4_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedBookingsModule","ROUTES","path","component","VisitorsModule","_3","forChild","declarations","imports","MapLocation","_data","location","position","map_id","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}