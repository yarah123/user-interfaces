{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/invite-visitor-modal.component.ts","./apps/concierge/src/app/visitors/new-visitors.component.ts","./apps/concierge/src/app/visitors/visitor-induction-modal.component.ts","./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService, notifyError } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { Booking } from '@placeos/bookings';\nimport { showMetadata } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <simple-table\n            class=\"min-w-[60rem] block text-sm\"\n            [data]=\"guests\"\n            [columns]=\"[\n                {\n                    key: 'state',\n                    name: 'Checked In',\n                    content: state_template,\n                    size: '6.5rem',\n                    sortable: false\n                },\n                {\n                    key: 'date',\n                    name: 'Time',\n                    content: date_template,\n                    size: '6rem'\n                },\n                {\n                    key: 'asset_name',\n                    name: 'Visitor',\n                    content: person_template\n                },\n                { key: 'user_name', name: 'Host', content: host_template },\n                {\n                    key: 'status',\n                    name: 'State',\n                    content: status_template,\n                    size: '9.5rem'\n                },\n                {\n                    key: 'induction',\n                    name: 'Inducted',\n                    content: boolean_template,\n                    show: !!inductions_enabled,\n                    size: '5.5rem'\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    size: '3.25rem',\n                    sortable: false\n                }\n            ]\"\n            [filter]=\"search | async\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #state_template let-row=\"row\">\n            <div\n                *ngIf=\"!row?.checked_in && row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-base-400 text-neutral-content mx-auto\"\n                [matTooltip]=\"\n                    'Checked out at ' + (row.checked_out_at | date: time_format)\n                \"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"!row?.checked_in && !row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-warning text-warning-content mx-auto\"\n                matTooltip=\"Not checked in\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>question_mark</app-icon>\n            </div>\n            <div\n                *ngIf=\"row?.checked_in\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n                matTooltip=\"Checked In\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #person_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.asset_name || row.asset_id }}</div>\n                <div\n                    *ngIf=\"row.asset_name && row.asset_id\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.asset_id }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.user_name || row.user_email }}</div>\n                <div\n                    *ngIf=\"row.user_name && row.user_email\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.user_email }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-base-100 rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #boolean_template let-row=\"row\">\n            <div\n                *ngIf=\"inducted(row)\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"inducted(row) === null\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-warning text-warning-content mx-auto\"\n            >\n                <app-icon>question_mark</app-icon>\n            </div>\n            <div\n                *ngIf=\"inducted(row) === false\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-error text-error-content mx-auto\"\n            >\n                <app-icon>close</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <div class=\"px-4\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl bg-warning text-warning-content border-none w-[7.5rem] h-10\"\n                    [class.!text-success-content]=\"row?.status === 'approved'\"\n                    [class.!bg-success]=\"row?.status === 'approved'\"\n                    [class.!text-error-content]=\"row?.status === 'declined'\"\n                    [class.!bg-error]=\"row?.status === 'declined'\"\n                    [class.!text-neutral-content]=\"row?.status === 'ended'\"\n                    [class.!bg-neutral]=\"row?.status === 'ended'\"\n                    [class.opacity-30]=\"row?.status === 'ended'\"\n                    [matMenuTriggerFor]=\"menu\"\n                    [disabled]=\"\n                        row?.status === 'ended' ||\n                        (row.checked_in && !row.checked_out_at)\n                    \"\n                >\n                    <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                        <div class=\"flex-1 text-left\">\n                            {{\n                                row?.status === 'ended'\n                                    ? 'Ended'\n                                    : row?.status === 'approved'\n                                    ? 'Approved'\n                                    : row?.status === 'declined'\n                                    ? 'Declined'\n                                    : 'Pending'\n                            }}\n                        </div>\n                        <app-icon\n                            class=\"text-2xl\"\n                            *ngIf=\"\n                                !(\n                                    row?.status === 'ended' ||\n                                    (row.checked_in && !row.checked_out_at)\n                                )\n                            \"\n                        >\n                            arrow_drop_down\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_available</app-icon>\n                        <div class=\"pr-2\">Approve Visitor</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl text-error\">\n                            event_busy\n                        </app-icon>\n                        <div class=\"pr-2\">Decline Visitor</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            <div class=\"px-4\">\n                {{\n                    row.date\n                        | date\n                            : ((filters | async)?.period > 1\n                                  ? 'MMM d, ' + time_format\n                                  : time_format)\n                }}\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center justify-end px-2\">\n                <button icon matRipple [matMenuTriggerFor]=\"guest_menu\">\n                    <app-icon>more_horiz</app-icon>\n                </button>\n                <mat-menu #guest_menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        [disabled]=\"!row.attachment?.length\"\n                        [matMenuTriggerFor]=\"attachment_menu\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">attachment</app-icon>\n                            <div>View Attachments</div>\n                        </div>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <a\n                            *ngFor=\"let item of row.attachments\"\n                            [href]=\"item.url\"\n                            mat-menu-item\n                        >\n                            {{ item.name }}\n                        </a>\n                    </mat-menu>\n                    <button mat-menu-item (click)=\"setExt(row, 'remote', true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                {{\n                                    row.extension_data.remote\n                                        ? 'business'\n                                        : 'laptop'\n                                }}\n                            </app-icon>\n                            <div>\n                                Set as\n                                {{\n                                    row.extension_data.remote\n                                        ? 'Onsite'\n                                        : 'Remote'\n                                }}\n                                Visitor\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        *ngIf=\"can_print\"\n                        (click)=\"printQRCode()\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">print</app-icon>\n                            <div>Print QR Code</div>\n                        </div>\n                    </button>\n                    <a mat-menu-item [href]=\"'mailto:' + row?.asset_id\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">email</app-icon>\n                            <div>\n                                Email\n                                {{\n                                    row?.user_email === row?.asset_id\n                                        ? 'Host'\n                                        : 'Guest'\n                                }}\n                            </div>\n                        </div>\n                    </a>\n                    <button\n                        mat-menu-item\n                        (click)=\"row.checked_in ? checkout(row) : checkin(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                {{\n                                    row.checked_in\n                                        ? 'event_busy'\n                                        : 'event_available'\n                                }}\n                            </app-icon>\n                            <div>\n                                {{ row.checked_in ? 'Checkout' : 'Checkin' }}\n                                Guest\n                            </div>\n                        </div>\n                    </button>\n                    <ng-container *ngIf=\"row.linked_event\">\n                        <button mat-menu-item (click)=\"checkinAllVisitors(row)\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    event_available\n                                </app-icon>\n                                <div>Checkin all for Meeting</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"checkoutAllVisitors(row)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    event_busy\n                                </app-icon>\n                                <div>Checkout all for Meeting</div>\n                            </div>\n                        </button>\n                    </ng-container>\n                </mat-menu>\n            </div>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n        <div class=\"w-full h-8\"></div>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent extends AsyncHandler {\n    public readonly guests = this._state.filtered_bookings;\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n    public inductions_enabled = false;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly checkinAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, true);\n    public readonly checkoutAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, false);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n\n    public readonly checkin = async (item: Booking) => {\n        await this._state.setCheckinState(item, true).catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n        this._state.poll();\n    };\n\n    public readonly checkout = async (item: Booking) => {\n        await this._state.setCheckinState(item, false);\n        this._state.poll();\n    };\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public inducted(item: Booking) {\n        return item.process_state.includes('declined')\n            ? false\n            : item.process_state.includes('inducted') || item.induction\n            ? true\n            : null;\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld) => {\n                if (!bld) return;\n                const visitor_kiosk_app =\n                    this._settings.get('app.visitor_kiosk_app') ||\n                    'visitor-kiosk_app';\n                const metadata: any = await showMetadata(\n                    bld.id,\n                    visitor_kiosk_app\n                ).toPromise();\n                this.inductions_enabled =\n                    metadata.details?.induction_enabled &&\n                    metadata.details?.induction_details;\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'invite-visitor-modal',\n    template: `\n        <main class=\"relative min-w-[40rem] min-h-[40rem]\">\n            <invite-visitor-form (done)=\"onDone()\"></invite-visitor-form>\n        </main>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorModalComponent {\n    constructor(\n        private _dialog_ref: MatDialogRef<InviteVisitorModalComponent>\n    ) {}\n\n    public onDone() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-visitors]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center px-8 py-4 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Visitors</h2>\n                    <div class=\"flex-1 w-2\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        (modelChange)=\"setSearch($event)\"\n                    ></searchbar>\n                    <button btn matRipple (click)=\"inviteVisitor()\">\n                        Invite Visitor\n                    </button>\n                </div>\n                <div class=\"flex items-center px-8 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-2\"></div>\n                    <date-options (dateChange)=\"setDate($event)\"></date-options>\n                </div>\n                <div class=\"mx-8 flex-1 h-1/2 overflow-auto\">\n                    <guest-listings></guest-listings>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewVisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this._settings.get('app.use_region')\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld)\n        )\n    );\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public inviteVisitor() {\n        this._dialog.open(InviteVisitorModalComponent);\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'visitor-induction-modal',\n    template: `\n        <div\n            class=\"relative bg-base-100 rounded shadow overflow-hidden flex flex-col items-center w-[32rem] p-4\"\n        >\n            <p class=\"my-4\">\n                Please read the induction information below before proceeding\n            </p>\n            <div\n                class=\"rounded border border-base-300 w-full p-4 opacity-60 text-sm overflow-y-auto overflow-x-hidden max-h-[50vh] whitespace-pre-wrap\"\n            >\n                {{ induction_details }}\n            </div>\n            <mat-checkbox [(ngModel)]=\"agree\" class=\"my-4\">\n                I agree\n            </mat-checkbox>\n            <div class=\"flex items-center justify-center space-x-2\">\n                <button\n                    btn\n                    matRipple\n                    class=\"w-32 clear underline\"\n                    [mat-dialog-close]=\"false\"\n                >\n                    Decline\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-32\"\n                    [disabled]=\"!agree\"\n                    [mat-dialog-close]=\"true\"\n                >\n                    Accept\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class VisitorInductionModalComponent {\n    public agree = false;\n\n    public get induction_details() {\n        return this._settings.get('app.induction_details');\n    }\n\n    public get is_enabled() {\n        return (\n            this._settings.get('app.induction_enabled') &&\n            this._settings.get('app.induction_details')\n        );\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    SettingsService,\n    downloadFile,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { GuestUser, updateGuest } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    approveBooking,\n    checkinBooking,\n    queryBookings,\n    rejectBooking,\n    setBookingState,\n    updateBooking,\n} from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from '@placeos/spaces';\nimport { VisitorInductionModalComponent } from './visitor-induction-modal.component';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly bookings = combineLatest([\n        this._org.active_building,\n        this._filters,\n        this._poll,\n    ]).pipe(\n        filter(([building]) => !!building),\n        debounceTime(150),\n        switchMap(([bld, filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryBookings({\n                type: 'visitor',\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zones: (filters.zones || []).join(',') || bld.id,\n                include_checked_out: true,\n                limit: 1000,\n            }).pipe(catchError((_) => of([] as Booking[])));\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_bookings = combineLatest([\n        this._search,\n        this.bookings,\n    ]).pipe(\n        map(([search, guest_list]) => {\n            const filter = search.toLowerCase();\n            const out = guest_list\n                .filter(\n                    (_) =>\n                        _.asset_name?.toLowerCase().includes(filter) ||\n                        _.user_name?.toLowerCase().includes(filter) ||\n                        _.user_email?.toLowerCase().includes(filter) ||\n                        _.asset_id?.toLowerCase().includes(filter)\n                )\n                .sort((a, b) => a.date - b.date);\n            return out;\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public poll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n        this._poll.next(Date.now());\n    }\n\n    public async approveVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await (approveBooking(item.id) as any).toPromise().catch((e) => {\n            notifyError(\n                `Error approving visitor: ${e.message || e.error || e}`\n            );\n            details.close();\n            throw e;\n        });\n        notifySuccess(`Successfully approved visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async declineVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await rejectBooking(item.id)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error declining visitor: ${e.message || e.error || e}`\n                );\n                details.close();\n                throw e;\n            });\n        notifySuccess(`Successfully declining visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async requestInduction(item: Booking) {\n        const ref = this._dialog.open(VisitorInductionModalComponent, {\n            data: { item },\n        });\n        const result = await ref.afterClosed().toPromise();\n        if (!result) {\n            if (result === false) {\n                await setBookingState(\n                    item.id,\n                    'declined_induction'\n                ).toPromise();\n            }\n            throw 'User declined';\n        }\n        await setBookingState(item.id, 'inducted').toPromise();\n        await updateBooking(item.id, { ...item, induction: true });\n    }\n\n    public async setCheckinState(item: Booking, state = true) {\n        if (item.rejected) throw 'You cannot check in a rejected meeting';\n        if (state === true) {\n            await this.requestInduction(item);\n        }\n        if (!item.approved && state === true) {\n            await approveBooking(item.id).toPromise();\n        }\n        const new_user = await checkinBooking(item.id, state)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking ${state ? 'in' : 'out'} ${\n                        item.asset_name || item.asset_id\n                    } for ${item.user_name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} ${\n                item.asset_name || item.asset_id\n            } from ${item.user_name}'s meeting`\n        );\n    }\n\n    public async setCheckinStateForEvent(event_id: string, state = true) {\n        if (!event_id) return;\n        const bookings = await this.bookings.pipe(take(1)).toPromise();\n        const event_bookings = bookings.filter(\n            (_) =>\n                _.parent_id === event_id ||\n                _.extension_data.parent_id === event_id ||\n                _.linked_event?.id === event_id ||\n                _.linked_event?.event_id === event_id\n        );\n        if (!event_bookings.length) return;\n        await Promise.all(\n            event_bookings.map((_) =>\n                checkinBooking(_.id, state)\n                    .toPromise()\n                    .catch((e) => {\n                        notifyError(\n                            `Error checking ${state ? 'in' : 'out'} ${\n                                _.asset_name || _.asset_id\n                            } for ${_.user_name}'s meeting`\n                        );\n                        throw e;\n                    })\n            )\n        );\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} all visitors from ${\n                event_bookings[0].user_name\n            }'s meeting`\n        );\n        this._poll.next(Date.now());\n    }\n\n    public async downloadVisitorsList() {\n        const bookings = await this.filtered_bookings.pipe(take(1)).toPromise();\n        if (!bookings.length) return;\n        const { date } = this._filters.getValue();\n        const list = bookings.map((_) => ({\n            Name: _.asset_name,\n            Email: _.asset_id,\n            'Checked In': _.checked_in,\n            Host: _.user_email || '',\n            Status: _.status,\n            Date: format(_.date, 'dd MMM ' + this.time_format),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-base-200\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { GuestListingComponent } from './guest-listing.component';\nimport { NewVisitorsComponent } from './new-visitors.component';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { VisitorInductionModalComponent } from './visitor-induction-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: 'new', component: NewVisitorsComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewVisitorsComponent,\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        GuestListingComponent,\n        InviteVisitorModalComponent,\n        VisitorInductionModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["AsyncHandler","SettingsService","notifyError","VisitorsStateService","showMetadata","OrganisationService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpipeBind2","row_r1","checked_out_at","ctx_r1","time_format","ɵɵtemplate","GuestListingComponent_ng_template_2_div_0_Template","GuestListingComponent_ng_template_2_div_1_Template","GuestListingComponent_ng_template_2_div_2_Template","checked_in","ɵɵadvance","ɵɵtextInterpolate1","row_r3","asset_id","GuestListingComponent_ng_template_4_div_3_Template","ɵɵtextInterpolate","asset_name","row_r4","user_email","GuestListingComponent_ng_template_6_div_3_Template","user_name","row_r5","extension_data","id_confirmed","ɵɵelement","ɵɵlistener","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_2_listener","ɵɵrestoreView","_r6","ɵɵnextContext","row","ɵɵresetView","setExt","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_4_listener","id_data","url","ɵɵsanitizeUrl","GuestListingComponent_ng_template_8_button_1_Template","GuestListingComponent_ng_template_8_ng_template_2_Template","ɵɵtemplateRefExtractor","id_confirmation_r7","GuestListingComponent_ng_template_10_div_0_Template","GuestListingComponent_ng_template_10_div_1_Template","GuestListingComponent_ng_template_10_div_2_Template","inducted","row_r8","GuestListingComponent_ng_template_12_app_icon_5_Template","GuestListingComponent_ng_template_12_Template_button_click_8_listener","row_r10","_r9","approveVisitor","GuestListingComponent_ng_template_12_Template_button_click_14_listener","declineVisitor","ɵɵclassProp","status","menu_r11","row_r12","date","tmp_10_0","ɵɵpipeBind1","filters","period","item_r14","name","GuestListingComponent_ng_template_16_button_21_Template_button_click_0_listener","_r16","printQRCode","ɵɵelementContainerStart","GuestListingComponent_ng_template_16_ng_container_34_Template_button_click_1_listener","_r17","row_r15","checkinAllVisitors","GuestListingComponent_ng_template_16_ng_container_34_Template_button_click_7_listener","checkoutAllVisitors","GuestListingComponent_ng_template_16_a_14_Template","GuestListingComponent_ng_template_16_Template_button_click_15_listener","_r13","GuestListingComponent_ng_template_16_button_21_Template","GuestListingComponent_ng_template_16_Template_button_click_28_listener","checkout","checkin","GuestListingComponent_ng_template_16_ng_container_34_Template","guest_menu_r18","attachment","length","attachment_menu","attachments","remote","can_print","linked_event","GuestListingComponent_button_18_Template_button_click_0_listener","_r19","downloadVisitorList","GuestListingComponent","_settings","item","process_state","includes","induction","constructor","_state","_org","_this","this","guests","filtered_bookings","search","inductions_enabled","downloadVisitorsList","u","setCheckinStateForEvent","id","f","v","_ref","_asyncToGenerator","setCheckinState","catch","e","poll","_x","apply","arguments","_ref2","_x2","ngOnInit","_this2","subscription","active_building","subscribe","_ref3","bld","visitor_kiosk_app","get","metadata","toPromise","details","induction_enabled","induction_details","_x3","_","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","GuestListingComponent_Template","rf","ctx","GuestListingComponent_ng_template_2_Template","GuestListingComponent_ng_template_4_Template","GuestListingComponent_ng_template_6_Template","GuestListingComponent_ng_template_8_Template","GuestListingComponent_ng_template_10_Template","GuestListingComponent_ng_template_12_Template","GuestListingComponent_ng_template_14_Template","GuestListingComponent_ng_template_16_Template","GuestListingComponent_button_18_Template","ɵɵpureFunction7","_c7","ɵɵpureFunction1","_c0","state_template_r20","_c1","date_template_r25","_c2","person_template_r21","_c3","host_template_r22","_c4","status_template_r24","ɵɵpureFunction2","_c5","boolean_template_r23","_c6","action_template_r26","tmp_12_0","MatDialogRef","InviteVisitorModalComponent","_dialog_ref","onDone","close","InviteVisitorModalComponent_Template","InviteVisitorModalComponent_Template_invite_visitor_form_done_1_listener","ActivatedRoute","Router","MatDialog","combineLatest","map","tmp_3_0","level_r1","parent_id","display_name","NewVisitorsComponent_mat_option_15_div_2_Template","use_region","NewVisitorsComponent","_router","_route","_dialog","loading","zones","levels","active_region","pipe","region","levelsForRegion","levelsForBuilding","setDate","setFilters","setSearch","str","setSearchString","updateZones","navigate","relativeTo","queryParams","zone_ids","join","inviteVisitor","open","startPolling","ngOnDestroy","stopPolling","i4","i5","attrs","NewVisitorsComponent_Template","NewVisitorsComponent_Template_searchbar_modelChange_8_listener","$event","NewVisitorsComponent_Template_button_click_9_listener","NewVisitorsComponent_Template_mat_select_ngModelChange_13_listener","NewVisitorsComponent_mat_option_15_Template","NewVisitorsComponent_Template_date_options_dateChange_18_listener","NewVisitorsComponent_mat_progress_bar_21_Template","tmp_0_0","VisitorInductionModalComponent","is_enabled","agree","VisitorInductionModalComponent_Template","ɵɵtwoWayListener","VisitorInductionModalComponent_Template_mat_checkbox_ngModelChange_5_listener","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","BehaviorSubject","of","catchError","debounceTime","filter","shareReplay","switchMap","take","tap","startOfDay","getUnixTime","addDays","format","downloadFile","jsonToCsv","notifySuccess","openConfirmModal","updateGuest","approveBooking","checkinBooking","queryBookings","rejectBooking","setBookingState","updateBooking","_search","getValue","_poll","_filters","_loading","asObservable","bookings","building","next","Date","start","end","type","period_start","period_end","include_checked_out","limit","guest_list","toLowerCase","out","sort","a","b","now","delay","interval","clearInterval","guest","field","value","title","content","icon","reason","message","error","_this3","requestInduction","_this4","ref","data","result","afterClosed","state","_this5","rejected","approved","new_user","event_id","_this6","event_bookings","Promise","all","_this7","list","Name","Email","Host","Status","ɵɵinject","factory","ɵfac","providedIn","first","VisitorsTopbarComponent","active_levels","initialised","queryParamMap","params","has","split","level","levelWithID","buildings","find","zone","lvl","push","VisitorsTopbarComponent_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_2_listener","VisitorsTopbarComponent_mat_option_3_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_6_listener","VisitorsTopbarComponent_Template_searchbar_modelChange_15_listener","VisitorsTopbarComponent_Template_date_options_dateChange_16_listener","tmp_2_0","VisitorsComponent","VisitorsComponent_Template","VisitorsComponent_mat_progress_bar_4_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedBookingsModule","ROUTES","path","component","VisitorsModule","_3","forChild","declarations","imports","MapLocation","_data","location","position","map_id","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}