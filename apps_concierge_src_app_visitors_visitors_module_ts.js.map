{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/invite-visitor-modal.component.ts","./apps/concierge/src/app/visitors/new-visitors.component.ts","./apps/concierge/src/app/visitors/visitor-induction-modal.component.ts","./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService, notifyError } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { Booking } from '@placeos/bookings';\nimport { showMetadata } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <div\n            class=\"w-full flex flex-col flex-1 text-sm h-full overflow-auto pb-20\"\n        >\n            <custom-table\n                class=\"min-w-[80rem]\"\n                [dataSource]=\"guests\"\n                [filter]=\"search | async\"\n                [columns]=\"columns\"\n                [display_column]=\"display_columns\"\n                [column_size]=\"column_sizes\"\n                [template]=\"{\n                    state: state_template,\n                    status: status_template,\n                    date: date_template,\n                    host: host_template,\n                    id_data: id_template,\n                    actions: action_template,\n                    induction: boolean_template\n                }\"\n                [empty]=\"\n                    (search | async)\n                        ? 'No matching visitors'\n                        : 'There are visitors for the currently selected date.'\n                \"\n            ></custom-table>\n        </div>\n        <ng-template #state_template let-row=\"row\">\n            <div\n                *ngIf=\"!row?.checked_in && row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-base-400 text-neutral-content mx-auto\"\n                [matTooltip]=\"\n                    'Checked out at ' + (row.checked_out_at | date: time_format)\n                \"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"!row?.checked_in && !row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-warning text-warning-content mx-auto\"\n                matTooltip=\"Not checked in\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>question_mark</app-icon>\n            </div>\n            <div\n                *ngIf=\"row?.checked_in\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n                matTooltip=\"Checked In\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            {{ row.extension_data?.host }}\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-base-100 rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #boolean_template let-row=\"row\">\n            <div\n                *ngIf=\"row.induction\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"\n                    !row.induction && !row.process_state.includes('declined')\n                \"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-warning text-warning-content mx-auto\"\n            >\n                <app-icon>question_mark</app-icon>\n            </div>\n            <div\n                *ngIf=\"!row.induction && row.process_state.includes('declined')\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-error text-error-content mx-auto\"\n            >\n                <app-icon>close</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl bg-warning text-warning-content border-none\"\n                [class.!text-success-content]=\"row?.status === 'approved'\"\n                [class.!bg-success]=\"row?.status === 'approved'\"\n                [class.!text-error-content]=\"row?.status === 'declined'\"\n                [class.!bg-error]=\"row?.status === 'declined'\"\n                [class.!text-neutral-content]=\"row?.status === 'ended'\"\n                [class.!bg-neutral]=\"row?.status === 'ended'\"\n                [class.opacity-60]=\"row?.status === 'ended'\"\n                [matMenuTriggerFor]=\"menu\"\n                [disabled]=\"row?.status === 'ended'\"\n            >\n                <div class=\"flex items-center\">\n                    <div class=\"mx-2\">\n                        {{\n                            row?.status === 'ended'\n                                ? 'Ended'\n                                : row?.status === 'approved'\n                                ? 'Approved'\n                                : row?.status === 'declined'\n                                ? 'Declined'\n                                : 'Pending'\n                        }}\n                    </div>\n                    <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                </div>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    Approve Visitor\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    Decline Visitor\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{\n                row.date\n                    | date\n                        : ((filters | async)?.period > 1\n                              ? 'MMM d, ' + time_format\n                              : time_format)\n            }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center justify-end\">\n                <button\n                    icon\n                    matRipple\n                    [class.pointer-events-none]=\"!row.linked_event\"\n                    [matMenuTriggerFor]=\"checkin_menu\"\n                >\n                    <app-icon\n                        class=\"text-2xl\"\n                        [class.opacity-0]=\"!row.linked_event\"\n                    >\n                        event\n                    </app-icon>\n                </button>\n                <mat-menu #checkin_menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"checkinAllVisitors(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                event_available\n                            </app-icon>\n                            <div>Checkin All for Booking</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"checkoutAllVisitors(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">event_busy</app-icon>\n                            <div>Checkout All for Booking</div>\n                        </div>\n                    </button>\n                </mat-menu>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!row.attachments?.length\"\n                    title=\"\"\n                    matTooltip=\"View Attachments\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <app-icon>attachment</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <a\n                        *ngFor=\"let item of row.attachments\"\n                        [href]=\"item.url\"\n                        mat-menu-item\n                        >{{ item.name }}</a\n                    >\n                </mat-menu>\n                <action-icon\n                    remote\n                    [matTooltip]=\"\n                        row.extension_data.remote\n                            ? 'Set as In-Person Visitor'\n                            : 'Set as Remote Visitior'\n                    \"\n                    [loading]=\"loading === 'remote'\"\n                    [content]=\"\n                        row.extension_data.remote ? 'tap_and_play' : 'business'\n                    \"\n                    (click)=\"setExt(row, 'remote', !row.extension_data.remote)\"\n                >\n                </action-icon>\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin Guest\"\n                    [loading]=\"loading === 'checkin'\"\n                    [state]=\"row?.checked_in ? 'success' : ''\"\n                    content=\"event_available\"\n                    (click)=\"checkin(row)\"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout Guest\"\n                    [loading]=\"loading === 'checkout'\"\n                    content=\"event_busy\"\n                    (click)=\"checkout(row)\"\n                >\n                </action-icon>\n                <a\n                    [href]=\"'mailto:' + row?.asset_id\"\n                    icon\n                    matRipple\n                    [matTooltip]=\"\n                        row?.user_email === row?.asset_id\n                            ? 'Email Host'\n                            : 'Email Guest'\n                    \"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n                <action-icon\n                    matTooltip=\"Print QR Code\"\n                    [loading]=\"loading === 'printing'\"\n                    content=\"event_busy\"\n                    (click)=\"printQRCode()\"\n                    [class.invisible]=\"!can_print\"\n                >\n                </action-icon>\n            </div>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent extends AsyncHandler {\n    public readonly guests = this._state.filtered_bookings.pipe(\n        tap((_: any) => console.log(_))\n    );\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n    private _inductions_enabled = false;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly checkinAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, true);\n    public readonly checkoutAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, false);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n\n    public readonly checkin = async (item: Booking) => {\n        await this._state.setCheckinState(item, true).catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n        this._state.poll();\n    };\n\n    public readonly checkout = async (item: Booking) => {\n        await this._state.setCheckinState(item, false);\n        this._state.poll();\n    };\n\n    public get columns() {\n        return this._inductions_enabled\n            ? [\n                  'state',\n                  'date',\n                  'asset_name',\n                  'user_name',\n                  'asset_id',\n                  'status',\n                  'induction',\n                  'actions',\n              ]\n            : [\n                  'state',\n                  'date',\n                  'asset_name',\n                  'user_name',\n                  'asset_id',\n                  'status',\n                  'actions',\n              ];\n    }\n\n    public get display_columns() {\n        const fields = {\n            state: 'Checked In',\n            date: 'Time',\n            asset_name: 'Person',\n            user_name: 'Host',\n            asset_id: 'Email',\n            id_data: 'ID',\n            status: 'State',\n            induction: 'Inducted',\n            actions: ' ',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    public get column_sizes() {\n        const fields = {\n            state: '4.5r',\n            date: '8r',\n            asset_name: '12r',\n            user_name: '12r',\n            asset_id: 'flex',\n            id_data: '8r',\n            status: '10r',\n            actions: '16r',\n            induction: '5r',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld) => {\n                if (!bld) return;\n                const visitor_kiosk_app =\n                    this._settings.get('app.visitor_kiosk_app') ||\n                    'visitor-kiosk_app';\n                const metadata: any = await showMetadata(\n                    bld.id,\n                    visitor_kiosk_app\n                ).toPromise();\n                this._inductions_enabled =\n                    metadata.details?.induction_enabled &&\n                    metadata.details?.induction_details;\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'invite-visitor-modal',\n    template: `\n        <main class=\"relative min-w-[40rem] min-h-[40rem]\">\n            <invite-visitor-form (done)=\"onDone()\"></invite-visitor-form>\n        </main>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorModalComponent {\n    constructor(\n        private _dialog_ref: MatDialogRef<InviteVisitorModalComponent>\n    ) {}\n\n    public onDone() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-visitors]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center px-8 py-4 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Visitors</h2>\n                    <div class=\"flex-1 w-2\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        (modelChange)=\"setSearch($event)\"\n                    ></searchbar>\n                    <button btn matRipple (click)=\"inviteVisitor()\">\n                        Invite Visitor\n                    </button>\n                </div>\n                <div class=\"flex items-center px-8 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-2\"></div>\n                    <date-options (dateChange)=\"setDate($event)\"></date-options>\n                </div>\n                <div class=\"px-8\">\n                    <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewVisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this._settings.get('app.use_region')\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld)\n        )\n    );\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public inviteVisitor() {\n        this._dialog.open(InviteVisitorModalComponent);\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'visitor-induction-modal',\n    template: `\n        <div\n            class=\"relative bg-base-100 rounded shadow overflow-hidden flex flex-col items-center w-[32rem] p-4\"\n        >\n            <p class=\"my-4\">\n                Please read the induction information below before proceeding\n            </p>\n            <div\n                class=\"rounded border border-base-300 w-full p-4 opacity-60 text-sm overflow-y-auto overflow-x-hidden max-h-[50vh] whitespace-pre-wrap\"\n            >\n                {{ induction_details }}\n            </div>\n            <mat-checkbox [(ngModel)]=\"agree\" class=\"my-4\">\n                I agree\n            </mat-checkbox>\n            <div class=\"flex items-center justify-center space-x-2\">\n                <button\n                    btn\n                    matRipple\n                    class=\"w-32 clear underline\"\n                    [mat-dialog-close]=\"false\"\n                >\n                    Decline\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-32\"\n                    [disabled]=\"!agree\"\n                    [mat-dialog-close]=\"true\"\n                >\n                    Accept\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class VisitorInductionModalComponent {\n    public agree = false;\n\n    public get induction_details() {\n        return this._settings.get('app.induction_details');\n    }\n\n    public get is_enabled() {\n        return (\n            this._settings.get('app.induction_enabled') &&\n            this._settings.get('app.induction_details')\n        );\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    SettingsService,\n    downloadFile,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { GuestUser, updateGuest } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    approveBooking,\n    checkinBooking,\n    queryBookings,\n    rejectBooking,\n    setBookingState,\n} from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from '@placeos/spaces';\nimport { VisitorInductionModalComponent } from './visitor-induction-modal.component';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly bookings = combineLatest([\n        this._org.active_building,\n        this._filters,\n        this._poll,\n    ]).pipe(\n        filter(([building]) => !!building),\n        debounceTime(150),\n        switchMap(([bld, filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryBookings({\n                type: 'visitor',\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zones: (filters.zones || []).join(',') || bld.id,\n                include_checked_out: true,\n                limit: 1000,\n            }).pipe(catchError((_) => of([] as Booking[])));\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_bookings = combineLatest([\n        this._search,\n        this.bookings,\n    ]).pipe(\n        map(([search, guest_list]) => {\n            const filter = search.toLowerCase();\n            const out = guest_list\n                .filter(\n                    (_) =>\n                        _.asset_name?.toLowerCase().includes(filter) ||\n                        _.user_name?.toLowerCase().includes(filter) ||\n                        _.user_email?.toLowerCase().includes(filter) ||\n                        _.asset_id?.toLowerCase().includes(filter)\n                )\n                .sort((a, b) => a.date - b.date);\n            return out;\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public poll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n        this._poll.next(Date.now());\n    }\n\n    public async approveVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await (approveBooking(item.id) as any).toPromise().catch((e) => {\n            notifyError(\n                `Error approving visitor: ${e.message || e.error || e}`\n            );\n            details.close();\n            throw e;\n        });\n        notifySuccess(`Successfully approved visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async declineVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await rejectBooking(item.id)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error declining visitor: ${e.message || e.error || e}`\n                );\n                details.close();\n                throw e;\n            });\n        notifySuccess(`Successfully declining visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async requestInduction(item: Booking) {\n        const ref = this._dialog.open(VisitorInductionModalComponent, {\n            data: { item },\n        });\n        const result = await ref.afterClosed().toPromise();\n        if (!result) {\n            await setBookingState(item.id, 'declined_induction').toPromise();\n            throw 'User declined';\n        }\n        await setBookingState(item.id, 'inducted').toPromise();\n    }\n\n    public async setCheckinState(item: Booking, state = true) {\n        if (item.rejected) throw 'You cannot check in a rejected meeting';\n        if (state === true) {\n            await this.requestInduction(item);\n        }\n        if (!item.approved && state === true) {\n            await approveBooking(item.id).toPromise();\n        }\n        const new_user = await checkinBooking(item.id, state)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking ${state ? 'in' : 'out'} ${\n                        item.asset_name || item.asset_id\n                    } for ${item.user_name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} ${\n                item.asset_name || item.asset_id\n            } from ${item.user_name}'s meeting`\n        );\n    }\n\n    public async setCheckinStateForEvent(event_id: string, state = true) {\n        if (!event_id) return;\n        const bookings = await this.bookings.pipe(take(1)).toPromise();\n        const event_bookings = bookings.filter(\n            (_) =>\n                _.parent_id === event_id ||\n                _.extension_data.parent_id === event_id ||\n                _.linked_event?.id === event_id ||\n                _.linked_event?.event_id === event_id\n        );\n        if (!event_bookings.length) return;\n        await Promise.all(\n            event_bookings.map((_) =>\n                checkinBooking(_.id, state)\n                    .toPromise()\n                    .catch((e) => {\n                        notifyError(\n                            `Error checking ${state ? 'in' : 'out'} ${\n                                _.asset_name || _.asset_id\n                            } for ${_.user_name}'s meeting`\n                        );\n                        throw e;\n                    })\n            )\n        );\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} all visitors from ${\n                event_bookings[0].user_name\n            }'s meeting`\n        );\n        this._poll.next(Date.now());\n    }\n\n    public async downloadVisitorsList() {\n        const bookings = await this.filtered_bookings.pipe(take(1)).toPromise();\n        if (!bookings.length) return;\n        const { date } = this._filters.getValue();\n        const list = bookings.map((_) => ({\n            Name: _.asset_name,\n            Email: _.asset_id,\n            'Checked In': _.checked_in,\n            Host: _.user_email || '',\n            Status: _.status,\n            Date: format(_.date, 'dd MMM ' + this.time_format),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-base-200\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { GuestListingComponent } from './guest-listing.component';\nimport { NewVisitorsComponent } from './new-visitors.component';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { VisitorInductionModalComponent } from './visitor-induction-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: 'new', component: NewVisitorsComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewVisitorsComponent,\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        GuestListingComponent,\n        InviteVisitorModalComponent,\n        VisitorInductionModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["AsyncHandler","SettingsService","notifyError","VisitorsStateService","showMetadata","OrganisationService","tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpipeBind2","row_r1","checked_out_at","ctx_r1","time_format","ɵɵtemplate","GuestListingComponent_ng_template_4_div_0_Template","GuestListingComponent_ng_template_4_div_1_Template","GuestListingComponent_ng_template_4_div_2_Template","checked_in","ɵɵadvance","ɵɵtextInterpolate1","row_r3","extension_data","host","row_r4","id_confirmed","ɵɵelement","ɵɵlistener","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_2_listener","ɵɵrestoreView","_r5","ɵɵnextContext","row","ɵɵresetView","setExt","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_4_listener","id_data","url","ɵɵsanitizeUrl","GuestListingComponent_ng_template_8_button_1_Template","GuestListingComponent_ng_template_8_ng_template_2_Template","ɵɵtemplateRefExtractor","id_confirmation_r6","GuestListingComponent_ng_template_10_div_0_Template","GuestListingComponent_ng_template_10_div_1_Template","GuestListingComponent_ng_template_10_div_2_Template","row_r7","induction","process_state","includes","GuestListingComponent_ng_template_12_Template_button_click_8_listener","row_r9","_r8","approveVisitor","GuestListingComponent_ng_template_12_Template_button_click_10_listener","declineVisitor","ɵɵclassProp","status","menu_r10","row_r11","date","tmp_9_0","ɵɵpipeBind1","filters","period","item_r14","ɵɵtextInterpolate","name","GuestListingComponent_ng_template_16_Template_button_click_6_listener","row_r13","_r12","checkinAllVisitors","GuestListingComponent_ng_template_16_Template_button_click_12_listener","checkoutAllVisitors","GuestListingComponent_ng_template_16_a_23_Template","GuestListingComponent_ng_template_16_Template_action_icon_click_24_listener","remote","GuestListingComponent_ng_template_16_Template_action_icon_click_25_listener","checkin","GuestListingComponent_ng_template_16_Template_action_icon_click_26_listener","checkout","GuestListingComponent_ng_template_16_Template_action_icon_click_30_listener","printQRCode","linked_event","checkin_menu_r15","attachments","length","menu_r16","loading","asset_id","user_email","can_print","GuestListingComponent_button_18_Template_button_click_0_listener","_r17","downloadVisitorList","GuestListingComponent","columns","_inductions_enabled","display_columns","fields","state","asset_name","user_name","actions","map","_","column_sizes","_settings","constructor","_state","_org","_this","this","guests","filtered_bookings","pipe","console","log","search","downloadVisitorsList","u","setCheckinStateForEvent","id","f","v","_ref","_asyncToGenerator","item","setCheckinState","catch","e","poll","_x","apply","arguments","_ref2","_x2","ngOnInit","_this2","subscription","active_building","subscribe","_ref3","bld","visitor_kiosk_app","get","metadata","toPromise","details","induction_enabled","induction_details","_x3","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","GuestListingComponent_Template","rf","ctx","GuestListingComponent_ng_template_4_Template","GuestListingComponent_ng_template_6_Template","GuestListingComponent_ng_template_8_Template","GuestListingComponent_ng_template_10_Template","GuestListingComponent_ng_template_12_Template","GuestListingComponent_ng_template_14_Template","GuestListingComponent_ng_template_16_Template","GuestListingComponent_button_18_Template","ɵɵpureFunction7","_c0","state_template_r18","status_template_r22","date_template_r23","host_template_r19","id_template_r20","action_template_r24","boolean_template_r21","tmp_14_0","MatDialogRef","InviteVisitorModalComponent","_dialog_ref","onDone","close","InviteVisitorModalComponent_Template","InviteVisitorModalComponent_Template_invite_visitor_form_done_1_listener","ActivatedRoute","Router","MatDialog","combineLatest","tmp_3_0","level_r1","parent_id","display_name","NewVisitorsComponent_mat_option_15_div_2_Template","use_region","NewVisitorsComponent","_router","_route","_dialog","zones","levels","active_region","region","levelsForRegion","levelsForBuilding","setDate","setFilters","setSearch","str","setSearchString","updateZones","navigate","relativeTo","queryParams","zone_ids","join","inviteVisitor","open","startPolling","ngOnDestroy","stopPolling","i4","i5","attrs","NewVisitorsComponent_Template","NewVisitorsComponent_Template_searchbar_modelChange_8_listener","$event","NewVisitorsComponent_Template_button_click_9_listener","NewVisitorsComponent_Template_mat_select_ngModelChange_13_listener","NewVisitorsComponent_mat_option_15_Template","NewVisitorsComponent_Template_date_options_dateChange_18_listener","NewVisitorsComponent_mat_progress_bar_21_Template","tmp_0_0","VisitorInductionModalComponent","is_enabled","agree","VisitorInductionModalComponent_Template","ɵɵtwoWayListener","VisitorInductionModalComponent_Template_mat_checkbox_ngModelChange_5_listener","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","BehaviorSubject","of","catchError","debounceTime","filter","shareReplay","switchMap","take","startOfDay","getUnixTime","addDays","format","downloadFile","jsonToCsv","notifySuccess","openConfirmModal","updateGuest","approveBooking","checkinBooking","queryBookings","rejectBooking","setBookingState","_search","getValue","_poll","_filters","_loading","asObservable","bookings","building","next","Date","start","end","type","period_start","period_end","include_checked_out","limit","guest_list","toLowerCase","out","sort","a","b","now","delay","interval","clearInterval","guest","field","value","title","content","icon","reason","message","error","_this3","requestInduction","_this4","ref","data","result","afterClosed","_this5","rejected","approved","new_user","event_id","_this6","event_bookings","Promise","all","_this7","list","Name","Email","Host","Status","ɵɵinject","factory","ɵfac","providedIn","first","VisitorsTopbarComponent","active_levels","initialised","queryParamMap","params","has","split","level","levelWithID","buildings","find","zone","lvl","push","VisitorsTopbarComponent_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_2_listener","VisitorsTopbarComponent_mat_option_3_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_6_listener","VisitorsTopbarComponent_Template_searchbar_modelChange_15_listener","VisitorsTopbarComponent_Template_date_options_dateChange_16_listener","tmp_2_0","VisitorsComponent","VisitorsComponent_Template","VisitorsComponent_mat_progress_bar_4_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedBookingsModule","ROUTES","path","component","VisitorsModule","_3","forChild","declarations","imports","MapLocation","_data","location","position","map_id","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}