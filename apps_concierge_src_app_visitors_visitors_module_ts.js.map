{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/invite-visitor-modal.component.ts","./apps/concierge/src/app/visitors/new-visitors.component.ts","./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/desk.service.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { GuestUser } from '@placeos/users';\nimport { CalendarEvent } from '@placeos/events';\nimport { Booking } from '@placeos/bookings';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <div\n            class=\"w-full flex flex-col flex-1 text-sm h-full overflow-auto pb-20\"\n        >\n            <custom-table\n                class=\"min-w-[72rem]\"\n                [dataSource]=\"guests\"\n                [filter]=\"search | async\"\n                [columns]=\"columns\"\n                [display_column]=\"display_columns\"\n                [column_size]=\"column_sizes\"\n                [template]=\"{\n                    state: state_template,\n                    status: status_template,\n                    date: date_template,\n                    host: host_template,\n                    id_data: id_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (search | async)\n                        ? 'No matching visitors'\n                        : 'There are visitors for the currently selected date.'\n                \"\n            ></custom-table>\n        </div>\n        <ng-template #state_template let-row=\"row\">\n            <i\n                *ngIf=\"!row?.checked_in; else checkin_state\"\n                matTooltip=\"Not checked in\"\n                class=\"flex items-center justify-center rounded-full material-icons border-2 border-dashed border-neutral text-xl h-9 w-9\"\n            >\n                close\n            </i>\n            <ng-template #checkin_state>\n                <i\n                    class=\"flex items-center justify-center rounded-full material-icons bg-success border-2 border-neutral text-white text-xl h-9 w-9\"\n                    matTooltip=\"Checked In\"\n                >\n                    done\n                </i>\n            </ng-template>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            {{ row.extension_data?.host }}\n        </ng-template>\n        <ng-template #vaccinated_template let-row=\"row\">\n            <div customTooltip [content]=\"vaccine_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.vaccination_proof?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.vaccination_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.vaccination_confirmed ===\n                              false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #vaccine_confirmation>\n                <div\n                    class=\"bg-base-100 rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.vaccination_proof?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] p-2 object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'vaccination_confirmed', true)\"\n                    >\n                        Confirm Vaccination Proof\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'vaccination_confirmed', false)\"\n                    >\n                        Reject Vaccination Proof\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-base-100 rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl bg-warning text-warning-content border-none\"\n                [class.!text-success-content]=\"row?.status === 'approved'\"\n                [class.!bg-success]=\"row?.status === 'approved'\"\n                [class.!text-error-content]=\"row?.status === 'declined'\"\n                [class.!bg-error]=\"row?.status === 'declined'\"\n                [class.!text-neutral-content]=\"row?.status === 'ended'\"\n                [class.!bg-neutral]=\"row?.status === 'ended'\"\n                [class.opacity-60]=\"row?.status === 'ended'\"\n                [matMenuTriggerFor]=\"menu\"\n                [disabled]=\"row?.status === 'ended'\"\n            >\n                <div class=\"flex items-center\">\n                    <div class=\"mx-2\">\n                        {{\n                            row?.status === 'ended'\n                                ? 'Ended'\n                                : row?.status === 'approved'\n                                ? 'Approved'\n                                : row?.status === 'declined'\n                                ? 'Declined'\n                                : 'Pending'\n                        }}\n                    </div>\n                    <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                </div>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    Approve Visitor\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    Decline Visitor\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{\n                row.date\n                    | date\n                        : ((filters | async)?.period > 1\n                              ? 'MMM d, ' + time_format\n                              : time_format)\n            }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <button\n                icon\n                matRipple\n                matTooltip=\"Linked to Room Booking\"\n                class=\"pl-2\"\n                [class.pointer-events-none]=\"!row.linked_event\"\n                [matMenuTriggerFor]=\"checkin_menu\"\n            >\n                <app-icon\n                    class=\"text-2xl\"\n                    [class.opacity-0]=\"!row.linked_event\"\n                >\n                    event\n                </app-icon>\n            </button>\n            <mat-menu #checkin_menu=\"matMenu\">\n                <button mat-menu-item (click)=\"checkinAllVisitors(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_available</app-icon>\n                        <div>Checkin All for Booking</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"checkoutAllVisitors(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_busy</app-icon>\n                        <div>Checkout All for Booking</div>\n                    </div>\n                </button>\n            </mat-menu>\n            <button\n                icon\n                matRipple\n                [disabled]=\"!row.attachments?.length\"\n                title=\"\"\n                matTooltip=\"View Attachments\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <app-icon>attachment</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <a\n                    *ngFor=\"let item of row.attachments\"\n                    [href]=\"item.url\"\n                    mat-menu-item\n                    >{{ item.name }}</a\n                >\n            </mat-menu>\n            <action-icon\n                remote\n                [matTooltip]=\"\n                    row.extension_data.remote\n                        ? 'Set as In-Person Visitor'\n                        : 'Set as Remote Visitior'\n                \"\n                [loading]=\"loading === 'remote'\"\n                [content]=\"\n                    row.extension_data.remote ? 'tap_and_play' : 'business'\n                \"\n                (click)=\"setExt(row, 'remote', !row.extension_data.remote)\"\n            >\n            </action-icon>\n            <action-icon\n                checkin\n                matTooltip=\"Checkin Guest\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"row?.checked_in ? 'success' : ''\"\n                content=\"event_available\"\n                (click)=\"checkin(row)\"\n            >\n            </action-icon>\n            <action-icon\n                checkout\n                matTooltip=\"Checkout Guest\"\n                [loading]=\"loading === 'checkout'\"\n                content=\"event_busy\"\n                (click)=\"checkout(row)\"\n            >\n            </action-icon>\n            <a\n                [href]=\"'mailto:' + row?.asset_id\"\n                icon\n                matRipple\n                [matTooltip]=\"\n                    row?.user_email === row?.asset_id\n                        ? 'Email Host'\n                        : 'Email Guest'\n                \"\n            >\n                <app-icon>email</app-icon>\n            </a>\n            <action-icon\n                matTooltip=\"Print QR Code\"\n                [loading]=\"loading === 'printing'\"\n                content=\"event_busy\"\n                (click)=\"printQRCode()\"\n                [class.invisible]=\"!can_print\"\n            >\n            </action-icon>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent {\n    public readonly guests = this._state.filtered_bookings;\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly checkinAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, true);\n    public readonly checkoutAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, false);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n\n    public readonly checkin = async (item: Booking) => {\n        await this._state.setCheckinState(item, true);\n        this._state.poll();\n    };\n\n    public readonly checkout = async (item: Booking) => {\n        await this._state.setCheckinState(item, false);\n        this._state.poll();\n    };\n\n    public get columns() {\n        return [\n            'state',\n            'date',\n            'asset_name',\n            'user_name',\n            'asset_id',\n            'status',\n            'actions',\n        ];\n    }\n\n    public get display_columns() {\n        const fields = {\n            state: ' ',\n            date: 'Time',\n            asset_name: 'Person',\n            user_name: 'Host',\n            asset_id: 'Email',\n            id_data: 'ID',\n            status: 'State',\n            actions: ' ',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    public get column_sizes() {\n        const fields = {\n            state: '3.5r',\n            date: '8r',\n            asset_name: '12r',\n            user_name: '12r',\n            asset_id: 'flex',\n            id_data: '8r',\n            status: '10r',\n            actions: '16r',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'invite-visitor-modal',\n    template: `\n        <main class=\"relative min-w-[40rem] min-h-[40rem]\">\n            <invite-visitor-form (done)=\"onDone()\"></invite-visitor-form>\n        </main>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorModalComponent {\n    constructor(\n        private _dialog_ref: MatDialogRef<InviteVisitorModalComponent>\n    ) {}\n\n    public onDone() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-visitors]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center px-8 py-4 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Visitors</h2>\n                    <div class=\"flex-1 w-2\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        (modelChange)=\"setSearch($event)\"\n                    ></searchbar>\n                    <button btn matRipple (click)=\"inviteVisitor()\">\n                        Invite Visitor\n                    </button>\n                </div>\n                <div class=\"flex items-center px-8 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-[15rem]\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-2\"></div>\n                    <date-options (dateChange)=\"setDate($event)\"></date-options>\n                </div>\n                <div class=\"px-8\">\n                    <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewVisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this._settings.get('app.use_region')\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld)\n        )\n    );\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public inviteVisitor() {\n        this._dialog.open(InviteVisitorModalComponent);\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    SettingsService,\n    downloadFile,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { GuestUser, updateGuest } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    approveBooking,\n    checkinBooking,\n    queryBookings,\n    rejectBooking,\n} from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from '@placeos/spaces';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly bookings = combineLatest([\n        this._org.active_building,\n        this._filters,\n        this._poll,\n    ]).pipe(\n        filter(([building]) => !!building),\n        debounceTime(150),\n        switchMap(([bld, filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryBookings({\n                type: 'visitor',\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zones: (filters.zones || []).join(',') || bld.id,\n                include_checked_out: true,\n                limit: 1000,\n            }).pipe(catchError((_) => of([] as Booking[])));\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_bookings = combineLatest([\n        this._search,\n        this.bookings,\n    ]).pipe(\n        map(([search, guest_list]) => {\n            const filter = search.toLowerCase();\n            const out = guest_list\n                .filter(\n                    (_) =>\n                        _.asset_name?.toLowerCase().includes(filter) ||\n                        _.user_name?.toLowerCase().includes(filter) ||\n                        _.user_email?.toLowerCase().includes(filter) ||\n                        _.asset_id?.toLowerCase().includes(filter)\n                )\n                .sort((a, b) => a.date - b.date);\n            return out;\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public poll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n        this._poll.next(Date.now());\n    }\n\n    public async approveVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await (approveBooking(item.id) as any).toPromise().catch((e) => {\n            notifyError(\n                `Error approving visitor: ${e.message || e.error || e}`\n            );\n            details.close();\n            throw e;\n        });\n        notifySuccess(`Successfully approved visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async declineVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await rejectBooking(item.id)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error declining visitor: ${e.message || e.error || e}`\n                );\n                details.close();\n                throw e;\n            });\n        notifySuccess(`Successfully declining visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async setCheckinState(item: Booking, state = true) {\n        const new_user = await checkinBooking(item.id, state)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking ${state ? 'in' : 'out'} ${\n                        item.asset_name || item.asset_id\n                    } for ${item.user_name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} ${\n                item.asset_name || item.asset_id\n            } from ${item.user_name}'s meeting`\n        );\n    }\n\n    public async setCheckinStateForEvent(event_id: string, state = true) {\n        if (!event_id) return;\n        const bookings = await this.bookings.pipe(take(1)).toPromise();\n        const event_bookings = bookings.filter(\n            (_) =>\n                _.parent_id === event_id ||\n                _.extension_data.parent_id === event_id ||\n                _.linked_event?.id === event_id ||\n                _.linked_event?.event_id === event_id\n        );\n        if (!event_bookings.length) return;\n        await Promise.all(\n            event_bookings.map((_) =>\n                checkinBooking(_.id, state)\n                    .toPromise()\n                    .catch((e) => {\n                        notifyError(\n                            `Error checking ${state ? 'in' : 'out'} ${\n                                _.asset_name || _.asset_id\n                            } for ${_.user_name}'s meeting`\n                        );\n                        throw e;\n                    })\n            )\n        );\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} all visitors from ${\n                event_bookings[0].user_name\n            }'s meeting`\n        );\n        this._poll.next(Date.now());\n    }\n\n    public async downloadVisitorsList() {\n        const bookings = await this.filtered_bookings.pipe(take(1)).toPromise();\n        if (!bookings.length) return;\n        const { date } = this._filters.getValue();\n        const list = bookings.map((_) => ({\n            Name: _.asset_name,\n            Email: _.asset_id,\n            'Checked In': _.checked_in,\n            Host: _.user_email || '',\n            Status: _.status,\n            Date: format(_.date, 'dd MMM ' + this.time_format),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-base-200\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { GuestListingComponent } from './guest-listing.component';\nimport { NewVisitorsComponent } from './new-visitors.component';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: 'new', component: NewVisitorsComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewVisitorsComponent,\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        GuestListingComponent,\n        InviteVisitorModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n"],"names":["SettingsService","VisitorsStateService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","GuestListingComponent_ng_template_4_i_0_Template","GuestListingComponent_ng_template_4_ng_template_1_Template","ɵɵtemplateRefExtractor","ɵɵproperty","row_r15","checked_in","_r18","ɵɵtextInterpolate1","row_r19","extension_data","host","ɵɵadvance","row_r20","vaccination_confirmed","ɵɵelement","ɵɵlistener","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_2_listener","ɵɵrestoreView","_r27","ɵɵnextContext","row","ctx_r25","ɵɵresetView","setExt","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_4_listener","ctx_r28","vaccination_proof","url","ɵɵsanitizeUrl","GuestListingComponent_ng_template_8_button_1_Template","GuestListingComponent_ng_template_8_ng_template_2_Template","_r23","row_r31","id_confirmed","GuestListingComponent_ng_template_10_ng_template_2_Template_button_click_2_listener","_r38","ctx_r36","GuestListingComponent_ng_template_10_ng_template_2_Template_button_click_4_listener","ctx_r39","id_data","GuestListingComponent_ng_template_10_button_1_Template","GuestListingComponent_ng_template_10_ng_template_2_Template","_r34","GuestListingComponent_ng_template_12_Template_button_click_8_listener","restoredCtx","_r45","row_r42","ctx_r44","approveVisitor","GuestListingComponent_ng_template_12_Template_button_click_10_listener","ctx_r46","declineVisitor","ɵɵclassProp","status","_r43","ɵɵpipeBind2","row_r47","date","tmp_0_0","ɵɵpipeBind1","ctx_r10","filters","period","time_format","item_r52","ɵɵtextInterpolate","name","GuestListingComponent_ng_template_16_Template_button_click_5_listener","_r54","row_r48","ctx_r53","checkinAllVisitors","GuestListingComponent_ng_template_16_Template_button_click_11_listener","ctx_r55","checkoutAllVisitors","GuestListingComponent_ng_template_16_a_22_Template","GuestListingComponent_ng_template_16_Template_action_icon_click_23_listener","ctx_r56","remote","GuestListingComponent_ng_template_16_Template_action_icon_click_24_listener","ctx_r57","checkin","GuestListingComponent_ng_template_16_Template_action_icon_click_25_listener","ctx_r58","checkout","GuestListingComponent_ng_template_16_Template_action_icon_click_29_listener","ctx_r59","printQRCode","linked_event","_r49","attachments","length","_r50","ctx_r12","loading","asset_id","user_email","can_print","GuestListingComponent_button_18_Template_button_click_0_listener","_r61","ctx_r60","downloadVisitorList","GuestListingComponent","columns","display_columns","fields","state","asset_name","user_name","actions","map","_","column_sizes","_settings","constructor","_state","_this","guests","filtered_bookings","search","downloadVisitorsList","u","setCheckinStateForEvent","id","f","v","_ref","_asyncToGenerator","item","setCheckinState","poll","_x","apply","arguments","_ref2","_x2","ɵɵdirectiveInject","i1","i2","_2","selectors","decls","vars","consts","template","GuestListingComponent_Template","rf","ctx","GuestListingComponent_ng_template_4_Template","GuestListingComponent_ng_template_6_Template","GuestListingComponent_ng_template_8_Template","GuestListingComponent_ng_template_10_Template","GuestListingComponent_ng_template_12_Template","GuestListingComponent_ng_template_14_Template","GuestListingComponent_ng_template_16_Template","GuestListingComponent_button_18_Template","ɵɵpureFunction6","_c0","_r1","_r9","_r11","_r3","_r7","_r13","tmp_7_0","MatDialogRef","InviteVisitorModalComponent","_dialog_ref","onDone","close","InviteVisitorModalComponent_Template","InviteVisitorModalComponent_Template_invite_visitor_form_done_1_listener","OrganisationService","ActivatedRoute","Router","MatDialog","combineLatest","level_r2","parent_id","display_name","NewVisitorsComponent_mat_option_15_div_2_Template","ctx_r0","use_region","NewVisitorsComponent","get","_org","_router","_route","_dialog","zones","levels","active_building","active_region","pipe","bld","region","levelsForRegion","levelsForBuilding","setDate","setFilters","setSearch","str","setSearchString","updateZones","navigate","relativeTo","queryParams","zone_ids","join","inviteVisitor","open","ngOnInit","startPolling","ngOnDestroy","stopPolling","i3","i4","i5","attrs","NewVisitorsComponent_Template","NewVisitorsComponent_Template_searchbar_modelChange_8_listener","$event","NewVisitorsComponent_Template_button_click_9_listener","NewVisitorsComponent_Template_mat_select_ngModelChange_13_listener","NewVisitorsComponent_mat_option_15_Template","NewVisitorsComponent_Template_date_options_dateChange_18_listener","NewVisitorsComponent_mat_progress_bar_21_Template","BehaviorSubject","of","catchError","debounceTime","filter","shareReplay","switchMap","take","tap","startOfDay","getUnixTime","addDays","format","AsyncHandler","downloadFile","jsonToCsv","notifyError","notifySuccess","openConfirmModal","updateGuest","approveBooking","checkinBooking","queryBookings","rejectBooking","_search","getValue","_poll","_filters","_loading","asObservable","bookings","building","next","Date","start","end","type","period_start","period_end","include_checked_out","limit","guest_list","toLowerCase","out","includes","sort","a","b","now","delay","interval","clearInterval","guest","field","value","toPromise","_this2","details","title","content","icon","reason","catch","e","message","error","_this3","new_user","event_id","_this4","event_bookings","Promise","all","_this5","list","Name","Email","Host","Status","data","ɵɵinject","factory","ɵfac","providedIn","first","level_r1","VisitorsTopbarComponent","active_levels","initialised","subscription","queryParamMap","subscribe","params","has","split","level","levelWithID","buildings","find","zone","lvl","push","features","ɵɵInheritDefinitionFeature","VisitorsTopbarComponent_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_2_listener","VisitorsTopbarComponent_mat_option_3_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_6_listener","VisitorsTopbarComponent_Template_searchbar_modelChange_15_listener","VisitorsTopbarComponent_Template_date_options_dateChange_16_listener","tmp_2_0","VisitorsComponent","VisitorsComponent_Template","VisitorsComponent_mat_progress_bar_4_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedBookingsModule","ROUTES","path","component","VisitorsModule","_3","forChild","declarations","imports","currentUser","endOfDay","saveBooking","DeskConfirmModalComponent","DeskQuestionsModalComponent","DesksService","can_set_date","error_on_host","bookDesk","desks","attendees","Array","ref","success","race","componentInstance","event","afterClosed","desk_list","d","email","users","desk","idx","makeDeskBooking","valueOf","for_user","location","booking_data","booking_start","user_id","booking_end","Math","floor","description","booking_type","map_id","groups"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}