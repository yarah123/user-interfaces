{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACgE;AACA;AAEd;AACU;AACvB;;;;;;;;;;;;;;;;;;;;;;;;IAgCzBM,4DAAA,YAIC;IACGA,oDAAA,cACJ;IAAAA,0DAAA,EAAI;;;;;IAEAA,4DAAA,YAGC;IACGA,oDAAA,aACJ;IAAAA,0DAAA,EAAI;;;;;IANRA,wDAPA,IAAAK,gDAAA,gBAIC,IAAAC,0DAAA,gCAAAN,oEAAA,CAG2B;;;;;IANCA,wDAAxB,WAAAS,MAAA,kBAAAA,MAAA,CAAAC,UAAA,EAAwB,aAAAC,gBAAA,CAAkB;;;;;IAgB/CX,oDAAA,GACJ;;;;IADIA,gEAAA,MAAAa,MAAA,CAAAC,cAAA,kBAAAD,MAAA,CAAAC,cAAA,CAAAC,IAAA,MACJ;;;;;IAGQf,4DAAA,iBAIC;IACGA,oDAAA,GAQJ;IAAAA,0DAAA,EAAS;;;;IARLA,uDAAA,EAQJ;IARIA,gEAAA,OAAAiB,MAAA,CAAAH,cAAA,kBAAAG,MAAA,CAAAH,cAAA,CAAAI,qBAAA,mBAAAD,MAAA,CAAAH,cAAA,kBAAAG,MAAA,CAAAH,cAAA,CAAAI,qBAAA,4CAQJ;;;;;;IAGAlB,4DAAA,cAEC;IACGA,uDAAA,cAGE;IACFA,4DAAA,iBAGC;IADGA,wDAAA,mBAAAqB,mFAAA;MAAArB,2DAAA,CAAAuB,GAAA;MAAA,MAAAN,MAAA,GAAAjB,2DAAA,GAAAyB,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAAE,MAAA,CAAAX,MAAA,EAAY,uBAAuB,EAAE,IAAI,CAAC;IAAA,EAAC;IAEpDjB,oDAAA,kCACJ;IAAAA,0DAAA,EAAS;IACTA,4DAAA,iBAIC;IADGA,wDAAA,mBAAA6B,mFAAA;MAAA7B,2DAAA,CAAAuB,GAAA;MAAA,MAAAN,MAAA,GAAAjB,2DAAA,GAAAyB,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAAE,MAAA,CAAAX,MAAA,EAAY,uBAAuB,EAAE,KAAK,CAAC;IAAA,EAAC;IAErDjB,oDAAA,iCACJ;IACJA,0DADI,EAAS,EACP;;;;IAhBEA,uDAAA,EAAkD;IAAlDA,wDAAA,QAAAiB,MAAA,CAAAH,cAAA,kBAAAG,MAAA,CAAAH,cAAA,CAAAgB,iBAAA,kBAAAb,MAAA,CAAAH,cAAA,CAAAgB,iBAAA,CAAAC,GAAA,EAAA/B,2DAAA,CAAkD;;;;;IArB9DA,4DAAA,cAAoD;IAChDA,wDAAA,IAAAiC,qDAAA,qBAIC;IAULjC,0DAAA,EAAM;IACNA,wDAAA,IAAAkC,0DAAA,gCAAAlC,oEAAA,CAAmC;;;;;IAhBhBA,wDAAA,YAAAmC,uBAAA,CAAgC;IAG1CnC,uDAAA,EAAgD;IAAhDA,wDAAA,SAAAiB,MAAA,CAAAH,cAAA,kBAAAG,MAAA,CAAAH,cAAA,CAAAgB,iBAAA,kBAAAb,MAAA,CAAAH,cAAA,CAAAgB,iBAAA,CAAAC,GAAA,CAAgD;;;;;IAuCrD/B,4DAAA,iBAIC;IACGA,oDAAA,GAOJ;IAAAA,0DAAA,EAAS;;;;IAPLA,uDAAA,EAOJ;IAPIA,gEAAA,OAAAoC,MAAA,CAAAtB,cAAA,kBAAAsB,MAAA,CAAAtB,cAAA,CAAAuB,YAAA,mBAAAD,MAAA,CAAAtB,cAAA,kBAAAsB,MAAA,CAAAtB,cAAA,CAAAuB,YAAA,4CAOJ;;;;;;IAGArC,4DAAA,cAEC;IACGA,uDAAA,cAGE;IACFA,4DAAA,iBAGC;IADGA,wDAAA,mBAAAsC,oFAAA;MAAAtC,2DAAA,CAAAuC,GAAA;MAAA,MAAAH,MAAA,GAAApC,2DAAA,GAAAyB,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAAE,MAAA,CAAAQ,MAAA,EAAY,cAAc,EAAE,IAAI,CAAC;IAAA,EAAC;IAE3CpC,oDAAA,mBACJ;IAAAA,0DAAA,EAAS;IACTA,4DAAA,iBAIC;IADGA,wDAAA,mBAAAwC,oFAAA;MAAAxC,2DAAA,CAAAuC,GAAA;MAAA,MAAAH,MAAA,GAAApC,2DAAA,GAAAyB,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAAE,MAAA,CAAAQ,MAAA,EAAY,cAAc,EAAE,KAAK,CAAC;IAAA,EAAC;IAE5CpC,oDAAA,kBACJ;IACJA,0DADI,EAAS,EACP;;;;IAhBEA,uDAAA,EAAwC;IAAxCA,wDAAA,QAAAoC,MAAA,CAAAtB,cAAA,kBAAAsB,MAAA,CAAAtB,cAAA,CAAA2B,OAAA,kBAAAL,MAAA,CAAAtB,cAAA,CAAA2B,OAAA,CAAAV,GAAA,EAAA/B,2DAAA,CAAwC;;;;;IApBpDA,4DAAA,cAA+C;IAC3CA,wDAAA,IAAA0C,sDAAA,qBAIC;IASL1C,0DAAA,EAAM;IACNA,wDAAA,IAAA2C,2DAAA,iCAAA3C,oEAAA,CAA8B;;;;;IAfXA,wDAAA,YAAA4C,mBAAA,CAA2B;IAGrC5C,uDAAA,EAAsC;IAAtCA,wDAAA,SAAAoC,MAAA,CAAAtB,cAAA,kBAAAsB,MAAA,CAAAtB,cAAA,CAAA2B,OAAA,kBAAAL,MAAA,CAAAtB,cAAA,CAAA2B,OAAA,CAAAV,GAAA,CAAsC;;;;;IAyC3C/B,4DAJJ,cAGC,eACa;IAAAA,oDAAA,WAAI;IAClBA,0DADkB,EAAW,EACvB;;;;;IAKFA,4DAJJ,cAGC,eACa;IAAAA,oDAAA,YAAK;IACnBA,0DADmB,EAAW,EACxB;;;;;IALNA,wDANA,IAAA6C,mDAAA,kBAGC,IAAAC,mDAAA,kBAMA;;;;IARI9C,wDAAA,SAAA+C,OAAA,CAAAC,SAAA,CAAmB;IAMnBhD,uDAAA,EAA8D;IAA9DA,wDAAA,UAAA+C,OAAA,CAAAC,SAAA,IAAAD,OAAA,CAAAE,aAAA,CAAAC,QAAA,aAA8D;;;;;;IAqB3DlD,4DAdR,iBAYC,cACkC,cACT;IACdA,oDAAA,GASJ;IAAAA,0DAAA,EAAM;IACNA,4DAAA,mBAA2B;IAAAA,oDAAA,sBAAe;IAElDA,0DAFkD,EAAW,EACnD,EACD;IAELA,4DADJ,yBAA0B,iBAC8B;IAA9BA,wDAAA,mBAAAmD,sEAAA;MAAA,MAAAC,OAAA,GAAApD,2DAAA,CAAAqD,IAAA,EAAA5B,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAA4B,cAAA,CAAAF,OAAA,CAAmB;IAAA,EAAC;IAC/CpD,oDAAA,wBACJ;IAAAA,0DAAA,EAAS;IACTA,4DAAA,kBAAoD;IAA9BA,wDAAA,mBAAAuD,uEAAA;MAAA,MAAAH,OAAA,GAAApD,2DAAA,CAAAqD,IAAA,EAAA5B,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAA8B,cAAA,CAAAJ,OAAA,CAAmB;IAAA,EAAC;IAC/CpD,oDAAA,yBACJ;IACJA,0DADI,EAAS,EACF;;;;;IA1BPA,yDANA,2BAAAoD,OAAA,kBAAAA,OAAA,CAAAM,MAAA,iBAA0D,iBAAAN,OAAA,kBAAAA,OAAA,CAAAM,MAAA,iBACV,yBAAAN,OAAA,kBAAAA,OAAA,CAAAM,MAAA,iBACQ,eAAAN,OAAA,kBAAAA,OAAA,CAAAM,MAAA,iBACV,2BAAAN,OAAA,kBAAAA,OAAA,CAAAM,MAAA,cACS,iBAAAN,OAAA,kBAAAA,OAAA,CAAAM,MAAA,cACV,gBAAAN,OAAA,kBAAAA,OAAA,CAAAM,MAAA,cACD;IAE5C1D,wDADA,sBAAA2D,QAAA,CAA0B,cAAAP,OAAA,kBAAAA,OAAA,CAAAM,MAAA,cACU;IAI5B1D,uDAAA,GASJ;IATIA,gEAAA,OAAAoD,OAAA,kBAAAA,OAAA,CAAAM,MAAA,2BAAAN,OAAA,kBAAAA,OAAA,CAAAM,MAAA,iCAAAN,OAAA,kBAAAA,OAAA,CAAAM,MAAA,+CASJ;;;;;IAcR1D,oDAAA,GAOJ;;;;;;;;IAPIA,gEAAA,MAAAA,yDAAA,OAAA6D,OAAA,CAAAC,IAAA,IAAAC,QAAA,GAAA/D,yDAAA,OAAA0B,MAAA,CAAAuC,OAAA,oBAAAF,QAAA,CAAAG,MAAA,oBAAAxC,MAAA,CAAAyC,WAAA,GAAAzC,MAAA,CAAAyC,WAAA,OAOJ;;;;;IA2CYnE,4DAAA,YAIK;IAAAA,oDAAA,GAAe;IAAAA,0DAAA,EACnB;;;;IAHGA,wDAAA,SAAAoE,QAAA,CAAArC,GAAA,EAAA/B,2DAAA,CAAiB;IAEhBA,uDAAA,EAAe;IAAfA,+DAAA,CAAAoE,QAAA,CAAAE,IAAA,CAAe;;;;;;IAtCpBtE,4DAPR,cAA2C,iBAMtC,mBAII;IACGA,oDAAA,cACJ;IACJA,0DADI,EAAW,EACN;IAELA,4DADJ,yBAAkC,iBAC0B;IAAlCA,wDAAA,mBAAAuE,sEAAA;MAAA,MAAAC,OAAA,GAAAxE,2DAAA,CAAAyE,IAAA,EAAAhD,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAAgD,kBAAA,CAAAF,OAAA,CAAuB;IAAA,EAAC;IAE/CxE,4DADJ,cAAyC,mBAEhC;IAAAA,oDAAA,sBAAe;IAAAA,0DAAA,EACnB;IACDA,4DAAA,WAAK;IAAAA,oDAAA,+BAAuB;IAEpCA,0DAFoC,EAAM,EAChC,EACD;IACTA,4DAAA,kBAAyD;IAAnCA,wDAAA,mBAAA2E,uEAAA;MAAA,MAAAH,OAAA,GAAAxE,2DAAA,CAAAyE,IAAA,EAAAhD,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAAkD,mBAAA,CAAAJ,OAAA,CAAwB;IAAA,EAAC;IAEhDxE,4DADJ,eAAyC,oBACV;IAAAA,oDAAA,kBAAU;IAAAA,0DAAA,EAAW;IAChDA,4DAAA,WAAK;IAAAA,oDAAA,gCAAwB;IAGzCA,0DAHyC,EAAM,EACjC,EACD,EACF;IASPA,4DARJ,kBAOC,gBACa;IAAAA,oDAAA,kBAAU;IACxBA,0DADwB,EAAW,EAC1B;IACTA,4DAAA,0BAA0B;IACtBA,wDAAA,KAAA6E,kDAAA,gBAIK;IAET7E,0DAAA,EAAW;IACXA,4DAAA,uBAYC;IADGA,wDAAA,mBAAA8E,4EAAA;MAAA,MAAAN,OAAA,GAAAxE,2DAAA,CAAAyE,IAAA,EAAAhD,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAAE,MAAA,CAAA4C,OAAA,EAAY,QAAQ,GAAAA,OAAA,CAAA1D,cAAA,CAAAiE,MAAA,CAA6B;IAAA,EAAC;IAE/D/E,0DAAA,EAAc;IACdA,4DAAA,uBAOC;IADGA,wDAAA,mBAAAgF,4EAAA;MAAA,MAAAR,OAAA,GAAAxE,2DAAA,CAAAyE,IAAA,EAAAhD,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAAuD,OAAA,CAAAT,OAAA,CAAY;IAAA,EAAC;IAE1BxE,0DAAA,EAAc;IACdA,4DAAA,uBAMC;IADGA,wDAAA,mBAAAkF,4EAAA;MAAA,MAAAV,OAAA,GAAAxE,2DAAA,CAAAyE,IAAA,EAAAhD,GAAA;MAAA,MAAAC,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAAyD,QAAA,CAAAX,OAAA,CAAa;IAAA,EAAC;IAE3BxE,0DAAA,EAAc;IAWVA,4DAVJ,aASC,gBACa;IAAAA,oDAAA,aAAK;IACnBA,0DADmB,EAAW,EAC1B;IACJA,4DAAA,uBAMC;IAFGA,wDAAA,mBAAAoF,4EAAA;MAAApF,2DAAA,CAAAyE,IAAA;MAAA,MAAA/C,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAA2D,WAAA,EAAa;IAAA,EAAC;IAI/BrF,0DADI,EAAc,EACZ;;;;;;;IA/FEA,uDAAA,EAA+C;IAA/CA,yDAAA,yBAAAwE,OAAA,CAAAc,YAAA,CAA+C;IAC/CtF,wDAAA,sBAAAuF,gBAAA,CAAkC;IAI9BvF,uDAAA,EAAqC;IAArCA,yDAAA,eAAAwE,OAAA,CAAAc,YAAA,CAAqC;IAwBzCtF,uDAAA,IAAqC;IAGrCA,wDAHA,eAAAwE,OAAA,CAAAgB,WAAA,kBAAAhB,OAAA,CAAAgB,WAAA,CAAAC,MAAA,EAAqC,sBAAAC,QAAA,CAGX;IAML1F,uDAAA,GAAkB;IAAlBA,wDAAA,YAAAwE,OAAA,CAAAgB,WAAA,CAAkB;IAQvCxF,uDAAA,EAIC;IAEDA,wDANA,eAAAwE,OAAA,CAAA1D,cAAA,CAAAiE,MAAA,yDAIC,YAAArD,MAAA,CAAAiE,OAAA,cAC+B,YAAAnB,OAAA,CAAA1D,cAAA,CAAAiE,MAAA,+BAG/B;IAOD/E,uDAAA,EAAiC;IACjCA,wDADA,YAAA0B,MAAA,CAAAiE,OAAA,eAAiC,WAAAnB,OAAA,kBAAAA,OAAA,CAAA9D,UAAA,mBACS;IAQ1CV,uDAAA,EAAkC;IAAlCA,wDAAA,YAAA0B,MAAA,CAAAiE,OAAA,gBAAkC;IAMlC3F,uDAAA,EAAkC;IAGlCA,wDAHA,sBAAAwE,OAAA,kBAAAA,OAAA,CAAAoB,QAAA,GAAA5F,2DAAA,CAAkC,gBAAAwE,OAAA,kBAAAA,OAAA,CAAAqB,UAAA,OAAArB,OAAA,kBAAAA,OAAA,CAAAoB,QAAA,iCAOjC;IASD5F,uDAAA,GAA8B;IAA9BA,yDAAA,eAAA0B,MAAA,CAAAoE,SAAA,CAA8B;IAH9B9F,wDAAA,YAAA0B,MAAA,CAAAiE,OAAA,gBAAkC;;;;;;IAQ9C3F,4DAAA,iBAQC;IADGA,wDAAA,mBAAA+F,iEAAA;MAAA/F,2DAAA,CAAAgG,IAAA;MAAA,MAAAtE,MAAA,GAAA1B,2DAAA;MAAA,OAAAA,yDAAA,CAAS0B,MAAA,CAAAuE,mBAAA,EAAqB;IAAA,EAAC;IAE/BjG,4DAAA,eAAU;IAAAA,oDAAA,eAAQ;IACtBA,0DADsB,EAAW,EACxB;;;AAIX,MAAOkG,qBAAsB,SAAQxG,yDAAY;EA6BnD,IAAWyG,OAAOA,CAAA;IACd,OAAO,IAAI,CAACC,mBAAmB,GACzB,CACI,OAAO,EACP,MAAM,EACN,YAAY,EACZ,WAAW,EACX,UAAU,EACV,QAAQ,EACR,WAAW,EACX,SAAS,CACZ,GACD,CACI,OAAO,EACP,MAAM,EACN,YAAY,EACZ,WAAW,EACX,UAAU,EACV,QAAQ,EACR,SAAS,CACZ;EACX;EAEA,IAAWC,eAAeA,CAAA;IACtB,MAAMC,MAAM,GAAG;MACXC,KAAK,EAAE,GAAG;MACVzC,IAAI,EAAE,MAAM;MACZ0C,UAAU,EAAE,QAAQ;MACpBC,SAAS,EAAE,MAAM;MACjBb,QAAQ,EAAE,OAAO;MACjBnD,OAAO,EAAE,IAAI;MACbiB,MAAM,EAAE,OAAO;MACfV,SAAS,EAAE,UAAU;MACrB0D,OAAO,EAAE;KACZ;IACD,OAAO,IAAI,CAACP,OAAO,CAACQ,GAAG,CAAEC,CAAC,IAAKN,MAAM,CAACM,CAAC,CAAC,IAAIA,CAAC,CAAC;EAClD;EAEA,IAAWC,YAAYA,CAAA;IACnB,MAAMP,MAAM,GAAG;MACXC,KAAK,EAAE,MAAM;MACbzC,IAAI,EAAE,IAAI;MACV0C,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE,KAAK;MAChBb,QAAQ,EAAE,MAAM;MAChBnD,OAAO,EAAE,IAAI;MACbiB,MAAM,EAAE,KAAK;MACbgD,OAAO,EAAE,KAAK;MACd1D,SAAS,EAAE;KACd;IACD,OAAO,IAAI,CAACmD,OAAO,CAACQ,GAAG,CAAEC,CAAC,IAAKN,MAAM,CAACM,CAAC,CAAC,IAAIA,CAAC,CAAC;EAClD;EAEA,IAAWzC,WAAWA,CAAA;IAClB,OAAO,IAAI,CAAC2C,SAAS,CAAC3C,WAAW;EACrC;EAEA4C,YACYC,MAA4B,EAC5BF,SAA0B,EAC1BG,IAAyB;IAAA,IAAAC,KAAA;IAEjC,KAAK,EAAE;IAAAA,KAAA,GAAAC,IAAA;IAJC,KAAAH,MAAM,GAANA,MAAM;IACN,KAAAF,SAAS,GAATA,SAAS;IACT,KAAAG,IAAI,GAAJA,IAAI;IAxFA,KAAAG,MAAM,GAAG,IAAI,CAACJ,MAAM,CAACK,iBAAiB,CAACC,IAAI,CACvDvH,oDAAG,CAAE6G,CAAM,IAAKW,OAAO,CAACC,GAAG,CAACZ,CAAC,CAAC,CAAC,CAClC;IACe,KAAAa,MAAM,GAAG,IAAI,CAACT,MAAM,CAACS,MAAM;IAC3B,KAAAxD,OAAO,GAAG,IAAI,CAAC+C,MAAM,CAAC/C,OAAO;IACrC,KAAAmC,mBAAmB,GAAG,KAAK;IAEnB,KAAAH,mBAAmB,GAAG,MAClC,IAAI,CAACe,MAAM,CAACU,oBAAoB,EAAE;IAEtB,KAAApE,cAAc,GAAIqE,CAAC,IAAK,IAAI,CAACX,MAAM,CAAC1D,cAAc,CAACqE,CAAC,CAAC;IACrD,KAAAnE,cAAc,GAAImE,CAAC,IAAK,IAAI,CAACX,MAAM,CAACxD,cAAc,CAACmE,CAAC,CAAC;IACrD,KAAAjD,kBAAkB,GAAIiD,CAAC,IACnC,IAAI,CAACX,MAAM,CAACY,uBAAuB,CAACD,CAAC,CAACrC,YAAY,EAAEuC,EAAE,EAAE,IAAI,CAAC;IACjD,KAAAjD,mBAAmB,GAAI+C,CAAC,IACpC,IAAI,CAACX,MAAM,CAACY,uBAAuB,CAACD,CAAC,CAACrC,YAAY,EAAEuC,EAAE,EAAE,KAAK,CAAC;IAClD,KAAAjG,MAAM,GAAG,CAAC+F,CAAC,EAAEG,CAAC,EAAEC,CAAC,KAAK,IAAI,CAACf,MAAM,CAACpF,MAAM,CAAC+F,CAAC,EAAEG,CAAC,EAAEC,CAAC,CAAC;IAEjD,KAAA9C,OAAO;MAAA,IAAA+C,IAAA,GAAAC,wJAAA,CAAG,WAAOC,IAAa,EAAI;QAC9C,MAAMhB,KAAI,CAACF,MAAM,CAACmB,eAAe,CAACD,IAAI,EAAE,IAAI,CAAC;QAC7ChB,KAAI,CAACF,MAAM,CAACoB,IAAI,EAAE;MACtB,CAAC;MAAA,iBAAAC,EAAA;QAAA,OAAAL,IAAA,CAAAM,KAAA,OAAAC,SAAA;MAAA;IAAA;IAEe,KAAApD,QAAQ;MAAA,IAAAqD,KAAA,GAAAP,wJAAA,CAAG,WAAOC,IAAa,EAAI;QAC/C,MAAMhB,KAAI,CAACF,MAAM,CAACmB,eAAe,CAACD,IAAI,EAAE,KAAK,CAAC;QAC9ChB,KAAI,CAACF,MAAM,CAACoB,IAAI,EAAE;MACtB,CAAC;MAAA,iBAAAK,GAAA;QAAA,OAAAD,KAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;IAAA;EAiED;EAEOG,QAAQA,CAAA;IAAA,IAAAC,MAAA;IACX,IAAI,CAACC,YAAY,CACb,UAAU,EACV,IAAI,CAAC3B,IAAI,CAAC4B,eAAe,CAACC,SAAS;MAAA,IAAAC,KAAA,GAAAd,wJAAA,CAAC,WAAOe,GAAG,EAAI;QAC9C,IAAI,CAACA,GAAG,EAAE;QACV,MAAMC,iBAAiB,GACnBN,MAAI,CAAC7B,SAAS,CAACoC,GAAG,CAAC,uBAAuB,CAAC,IAC3C,mBAAmB;QACvB,MAAMC,QAAQ,SAActJ,gEAAY,CACpCmJ,GAAG,CAACnB,EAAE,EACNoB,iBAAiB,CACpB,CAACG,SAAS,EAAE;QACbT,MAAI,CAACvC,mBAAmB,GACpB+C,QAAQ,CAACE,OAAO,EAAEC,iBAAiB,IACnCH,QAAQ,CAACE,OAAO,EAAEE,iBAAiB;MAC3C,CAAC;MAAA,iBAAAC,GAAA;QAAA,OAAAT,KAAA,CAAAT,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC,CACL;EACL;EAAC,QAAA3B,CAAA;qBA/GQV,qBAAqB,EAAAlG,+DAAA,CAAA0J,yEAAA,GAAA1J,+DAAA,CAAA2J,4DAAA,GAAA3J,+DAAA,CAAA4J,sEAAA;EAAA;EAAA,QAAAC,EAAA;UAArB3D,qBAAqB;IAAA4D,SAAA;IAAAC,QAAA,GAAA/J,wEAAA;IAAAiK,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAhT1BtK,4DAAA,cAEC;QACGA,uDAAA,uBAqBgB;;;QACpBA,0DAAA,EAAM;QAyQNA,wDAxQA,IAAAwK,4CAAA,gCAAAxK,oEAAA,CAA2C,IAAAyK,4CAAA,gCAAAzK,oEAAA,CAiBD,IAAA0K,4CAAA,gCAAA1K,oEAAA,CAGM,KAAA2K,6CAAA,gCAAA3K,oEAAA,CAyCR,KAAA4K,6CAAA,gCAAA5K,oEAAA,CAwCK,KAAA6K,6CAAA,kCAAA7K,oEAAA,CAcD,KAAA8K,6CAAA,gCAAA9K,oEAAA,CAsCF,KAAA+K,6CAAA,kCAAA/K,oEAAA,CASE,KAAAgL,wCAAA,qBA8G3C;;;;;;;;;;;;QArSOhL,uDAAA,EAAqB;QAcrBA,wDAdA,eAAAuK,GAAA,CAAAnD,MAAA,CAAqB,WAAApH,yDAAA,OAAAuK,GAAA,CAAA9C,MAAA,EACI,YAAA8C,GAAA,CAAApE,OAAA,CACN,mBAAAoE,GAAA,CAAAlE,eAAA,CACe,gBAAAkE,GAAA,CAAA1D,YAAA,CACN,aAAA7G,6DAAA,KAAAkL,GAAA,EAAAC,kBAAA,EAAAC,mBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,eAAA,EAAAC,mBAAA,EAAAC,oBAAA,EAS1B,UAAAzL,yDAAA,QAAAuK,GAAA,CAAA9C,MAAA,mFAKD;QAiRJzH,uDAAA,IAA8B;QAA9BA,wDAAA,UAAA0L,QAAA,GAAA1L,yDAAA,SAAAuK,GAAA,CAAAnD,MAAA,oBAAAsE,QAAA,CAAAjG,MAAA,CAA8B;;;;;;;;;;;;;;;;;;;;;;AClTa;;;;AAWlD,MAAOmG,2BAA2B;EACpC7E,YACY8E,WAAsD;IAAtD,KAAAA,WAAW,GAAXA,WAAW;EACpB;EAEIC,MAAMA,CAAA;IACT,IAAI,CAACD,WAAW,CAACE,KAAK,EAAE;EAC5B;EAAC,QAAAnF,CAAA;qBAPQgF,2BAA2B,EAAA5L,+DAAA,CAAA0J,kEAAA;EAAA;EAAA,QAAAG,EAAA;UAA3B+B,2BAA2B;IAAA9B,SAAA;IAAAG,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA4B,qCAAA1B,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAL5BtK,4DADJ,cAAmD,6BACR;QAAlBA,wDAAA,kBAAAiM,yEAAA;UAAA,OAAQ1B,GAAA,CAAAuB,MAAA,EAAQ;QAAA,EAAC;QAC1C9L,0DAD2C,EAAsB,EAC1D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiD;AACJ;AACH;AACJ;AAC0B;;;;;;;;;;;;;;;;;;;;IAyBnDA,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAAqM,QAAA,CAAAxE,EAAA,CAAkB;IAElB7H,uDAAA,EACJ;IADIA,gEAAA,MAAAqM,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAA/H,IAAA,MACJ;;;;;IAOZtE,uDAAA,2BAIoB;;;AAgB9B,MAAOuM,oBAAoB;EAsB7BxF,YACYC,MAA4B,EAC5BC,IAAyB,EACzBuF,OAAe,EACfC,MAAsB,EACtBC,OAAkB;IAJlB,KAAA1F,MAAM,GAANA,MAAM;IACN,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAuF,OAAO,GAAPA,OAAO;IACP,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;IA1BH,KAAA/G,OAAO,GAAG,IAAI,CAACqB,MAAM,CAACrB,OAAO;IAC7B,KAAA1B,OAAO,GAAG,IAAI,CAAC+C,MAAM,CAAC/C,OAAO;IAC7C;IACO,KAAA0I,KAAK,GAAa,EAAE;IAC3B;IACgB,KAAAC,MAAM,GAAG,IAAI,CAAC3F,IAAI,CAAC4F,aAAa;IAChD;IACgB,KAAAC,OAAO,GAAIhJ,IAAI,IAAK,IAAI,CAACkD,MAAM,CAAC+F,UAAU,CAAC;MAAEjJ;IAAI,CAAE,CAAC;IACpE;IACgB,KAAAiJ,UAAU,GAAI9I,OAAO,IAAK,IAAI,CAAC+C,MAAM,CAAC+F,UAAU,CAAC9I,OAAO,CAAC;IACzE;IACgB,KAAA+I,SAAS,GAAIC,GAAG,IAAK,IAAI,CAACjG,MAAM,CAACkG,eAAe,CAACD,GAAG,CAAC;IACrE;IACgB,KAAAE,WAAW,GAAIR,KAAK,IAAI;MACpC,IAAI,CAACH,OAAO,CAACY,QAAQ,CAAC,EAAE,EAAE;QACtBC,UAAU,EAAE,IAAI,CAACZ,MAAM;QACvBa,WAAW,EAAE;UAAEC,QAAQ,EAAEZ,KAAK,CAACa,IAAI,CAAC,GAAG;QAAC;OAC3C,CAAC;MACF,IAAI,CAACxG,MAAM,CAAC+F,UAAU,CAAC;QAAEJ;MAAK,CAAE,CAAC;IACrC,CAAC;EAQE;EAEIc,aAAaA,CAAA;IAChB,IAAI,CAACf,OAAO,CAACgB,IAAI,CAAC9B,wFAA2B,CAAC;EAClD;EAEOlD,QAAQA,CAAA;IACX,IAAI,CAAC1B,MAAM,CAAC2G,YAAY,EAAE;EAC9B;EAEOC,WAAWA,CAAA;IACd,IAAI,CAAC5G,MAAM,CAAC6G,WAAW,EAAE;EAC7B;EAAC,QAAAjH,CAAA;qBAxCQ2F,oBAAoB,EAAAvM,+DAAA,CAAA0J,yEAAA,GAAA1J,+DAAA,CAAA2J,sEAAA,GAAA3J,+DAAA,CAAA4J,mDAAA,GAAA5J,+DAAA,CAAA4J,2DAAA,GAAA5J,+DAAA,CAAA8N,gEAAA;EAAA;EAAA,QAAAjE,EAAA;UAApB0C,oBAAoB;IAAAzC,SAAA;IAAAiE,KAAA,EAAA7C,GAAA;IAAAjB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA4D,8BAAA1D,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QApDzBtK,uDAAA,iBAAyB;QACzBA,4DAAA,aAA8B;QAC1BA,uDAAA,kBAA2B;QAGnBA,4DAFR,cAAgD,aACC,YACR;QAAAA,oDAAA,eAAQ;QAAAA,0DAAA,EAAK;QAC9CA,uDAAA,aAA8B;QAC9BA,4DAAA,sBAA6C;QAA/BA,wDAAA,wBAAAiO,iEAAAC,MAAA;UAAA,OAAc3D,GAAA,CAAAuC,OAAA,CAAAoB,MAAA,CAAe;QAAA,EAAC;QAAClO,0DAAA,EAAe;QAC5DA,4DAAA,gBAAgD;QAA1BA,wDAAA,mBAAAmO,sDAAA;UAAA,OAAS5D,GAAA,CAAAkD,aAAA,EAAe;QAAA,EAAC;QAC3CzN,oDAAA,wBACJ;QACJA,0DADI,EAAS,EACP;QAGEA,4DAFR,cAAyC,yBACqB,qBAMrD;QAHGA,8DAAA,2BAAAqO,mEAAAH,MAAA;UAAAlO,gEAAA,CAAAuK,GAAA,CAAAoC,KAAA,EAAAuB,MAAA,MAAA3D,GAAA,CAAAoC,KAAA,GAAAuB,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAmB;QACnBlO,wDAAA,2BAAAqO,mEAAAH,MAAA;UAAA,OAAiB3D,GAAA,CAAA4C,WAAA,CAAAe,MAAA,CAAmB;QAAA,EAAC;QAGrClO,wDAAA,KAAAuO,2CAAA,yBAGC;;QAITvO,0DADI,EAAa,EACA;QACjBA,uDAAA,cAA8B;QAC9BA,4DAAA,qBAA6C;QAAlCA,wDAAA,yBAAAwO,gEAAAN,MAAA;UAAA,OAAe3D,GAAA,CAAAyC,SAAA,CAAAkB,MAAA,CAAiB;QAAA,EAAC;QAChDlO,0DADiD,EAAY,EACvD;QACNA,uDAAA,0BAA2D;QAC3DA,wDAAA,KAAAyO,iDAAA,+BAIC;;QAETzO,0DADI,EAAO,EACL;;;QAtBcA,uDAAA,IAAmB;QAAnBA,8DAAA,YAAAuK,GAAA,CAAAoC,KAAA,CAAmB;QAKG3M,uDAAA,EAAiB;QAAjBA,wDAAA,YAAAA,yDAAA,QAAAuK,GAAA,CAAAqC,MAAA,EAAiB;QAa9C5M,uDAAA,GAAqB;QAArBA,wDAAA,SAAAA,yDAAA,QAAAuK,GAAA,CAAA5E,OAAA,EAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CgB;AAUlC;AAC4C;AAU3C;AAC+B;AACH;AAO1B;AACiC;;;;;AAatD,MAAO/F,oBAAqB,SAAQF,yDAAY;EAyDlD,IAAW+H,MAAMA,CAAA;IACb,OAAO,IAAI,CAACyI,OAAO,CAACC,QAAQ,EAAE;EAClC;EAEA,IAAWhM,WAAWA,CAAA;IAClB,OAAO,IAAI,CAAC2C,SAAS,CAAC3C,WAAW;EACrC;EAEA4C,YACY2F,OAAkB,EAClBzF,IAAyB,EACzBH,SAA0B;IAElC,KAAK,EAAE;IAJC,KAAA4F,OAAO,GAAPA,OAAO;IACP,KAAAzF,IAAI,GAAJA,IAAI;IACJ,KAAAH,SAAS,GAATA,SAAS;IAnEb,KAAAsJ,KAAK,GAAG,IAAIzB,iDAAe,CAAS,CAAC,CAAC;IAEtC,KAAA0B,QAAQ,GAAG,IAAI1B,iDAAe,CAAiB,EAAE,CAAC;IAElD,KAAAuB,OAAO,GAAG,IAAIvB,iDAAe,CAAS,EAAE,CAAC;IAEzC,KAAA2B,QAAQ,GAAG,IAAI3B,iDAAe,CAAU,KAAK,CAAC;IAEtC,KAAAhJ,OAAO,GAAG,IAAI,CAAC2K,QAAQ,CAACC,YAAY,EAAE;IAEtC,KAAAtM,OAAO,GAAG,IAAI,CAACoM,QAAQ,CAACE,YAAY,EAAE;IAEtC,KAAAC,QAAQ,GAAG5B,mDAAa,CAAC,CACrC,IAAI,CAAC3H,IAAI,CAAC4B,eAAe,EACzB,IAAI,CAACwH,QAAQ,EACb,IAAI,CAACD,KAAK,CACb,CAAC,CAAC9I,IAAI,CACH0H,sDAAM,CAAC,CAAC,CAACyB,QAAQ,CAAC,KAAK,CAAC,CAACA,QAAQ,CAAC,EAClC1B,4DAAY,CAAC,GAAG,CAAC,EACjBG,yDAAS,CAAC,CAAC,CAAClG,GAAG,EAAE/E,OAAO,CAAC,KAAI;MACzB,IAAI,CAACqM,QAAQ,CAACI,IAAI,CAAC,IAAI,CAAC;MACxB,MAAM5M,IAAI,GAAGG,OAAO,CAACH,IAAI,GAAG,IAAI6M,IAAI,CAAC1M,OAAO,CAACH,IAAI,CAAC,GAAG,IAAI6M,IAAI,EAAE;MAC/D,MAAMC,KAAK,GAAGxB,qDAAU,CAACtL,IAAI,CAAC;MAC9B,MAAM+M,GAAG,GAAGvB,qDAAO,CAACsB,KAAK,EAAE3M,OAAO,CAACC,MAAM,IAAI,CAAC,CAAC;MAC/C,OAAO8L,gEAAa,CAAC;QACjBc,IAAI,EAAE,SAAS;QACfC,YAAY,EAAE1B,qDAAW,CAACuB,KAAK,CAAC;QAChCI,UAAU,EAAE3B,qDAAW,CAACwB,GAAG,CAAC;QAC5BlE,KAAK,EAAE,CAAC1I,OAAO,CAAC0I,KAAK,IAAI,EAAE,EAAEa,IAAI,CAAC,GAAG,CAAC,IAAIxE,GAAG,CAACnB,EAAE;QAChDoJ,mBAAmB,EAAE,IAAI;QACzBC,KAAK,EAAE;OACV,CAAC,CAAC5J,IAAI,CAACwH,2DAAU,CAAElI,CAAC,IAAKiI,yCAAE,CAAC,EAAe,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,EACF9O,oDAAG,CAAC,MAAM,IAAI,CAACuQ,QAAQ,CAACI,IAAI,CAAC,KAAK,CAAC,CAAC,EACpCzB,4DAAW,CAAC,CAAC,CAAC,CACjB;IAEe,KAAA5H,iBAAiB,GAAGuH,mDAAa,CAAC,CAC9C,IAAI,CAACsB,OAAO,EACZ,IAAI,CAACM,QAAQ,CAChB,CAAC,CAAClJ,IAAI,CACHX,oDAAG,CAAC,CAAC,CAACc,MAAM,EAAE0J,UAAU,CAAC,KAAI;MACzB,MAAMnC,MAAM,GAAGvH,MAAM,CAAC2J,WAAW,EAAE;MACnC,MAAMC,GAAG,GAAGF,UAAU,CACjBnC,MAAM,CACFpI,CAAC,IACEA,CAAC,CAACJ,UAAU,EAAE4K,WAAW,EAAE,CAAClO,QAAQ,CAAC8L,MAAM,CAAC,IAC5CpI,CAAC,CAACH,SAAS,EAAE2K,WAAW,EAAE,CAAClO,QAAQ,CAAC8L,MAAM,CAAC,IAC3CpI,CAAC,CAACf,UAAU,EAAEuL,WAAW,EAAE,CAAClO,QAAQ,CAAC8L,MAAM,CAAC,IAC5CpI,CAAC,CAAChB,QAAQ,EAAEwL,WAAW,EAAE,CAAClO,QAAQ,CAAC8L,MAAM,CAAC,CACjD,CACAsC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACzN,IAAI,GAAG0N,CAAC,CAAC1N,IAAI,CAAC;MACpC,OAAOuN,GAAG;IACd,CAAC,CAAC,CACL;EAgBD;EAEOtE,UAAUA,CAAC9I,OAAuB;IACrC,IAAI,CAACoM,QAAQ,CAACK,IAAI,CAAC;MAAE,GAAG,IAAI,CAACL,QAAQ,CAACF,QAAQ,EAAE;MAAE,GAAGlM;IAAO,CAAE,CAAC;EACnE;EAEOiJ,eAAeA,CAACzF,MAAc;IACjC,IAAI,CAACyI,OAAO,CAACQ,IAAI,CAACjJ,MAAM,CAAC;EAC7B;EAEOW,IAAIA,CAAA;IACP,IAAI,CAACgI,KAAK,CAACM,IAAI,CAACC,IAAI,CAACc,GAAG,EAAE,CAAC;EAC/B;EAEO9D,YAAYA,CAAC+D,KAAA,GAAgB,EAAE,GAAG,IAAI;IACzC,IAAI,CAACC,QAAQ,CAAC,MAAM,EAAE,MAAM,IAAI,CAACvB,KAAK,CAACM,IAAI,CAACC,IAAI,CAACc,GAAG,EAAE,CAAC,EAAEC,KAAK,CAAC;EACnE;EAEO7D,WAAWA,CAAA;IACd,IAAI,CAAC+D,aAAa,CAAC,MAAM,CAAC;EAC9B;EAEahQ,MAAMA,CAAUiQ,KAAgB,EAAEC,KAAa,EAAEC,KAAQ;IAAA,IAAA7K,KAAA;IAAA,OAAAe,wJAAA;MAClE,MAAMnH,cAAc,GAAG;QAAE,GAAG+Q,KAAK,CAAC/Q;MAAc,CAAE;MAClDA,cAAc,CAACgR,KAAK,CAAC,GAAGC,KAAK;MAC7B,MAAMlC,2DAAW,CAACgC,KAAK,CAAChK,EAAE,EAAE;QAAE,GAAGgK,KAAK;QAAE/Q;MAAc,CAAE,CAAC,CAACsI,SAAS,EAAE;MACrElC,KAAI,CAACkJ,KAAK,CAACM,IAAI,CAACC,IAAI,CAACc,GAAG,EAAE,CAAC;IAAC;EAChC;EAEanO,cAAcA,CAAC4E,IAAa;IAAA,IAAAS,MAAA;IAAA,OAAAV,wJAAA;MACrC,MAAMoB,OAAO,SAASuG,iEAAgB,CAClC;QACIoC,KAAK,EAAE,iBAAiB;QACxBC,OAAO,EAAE,yBACL/J,IAAI,CAAC1B,UAAU,IAAI0B,IAAI,CAACtC,QAC5B,oBAAoB;QACpBsM,IAAI,EAAE;UAAED,OAAO,EAAE;QAAiB;OACrC,EACDtJ,MAAI,CAAC+D,OAAO,CACf;MACD,IAAIrD,OAAO,CAAC8I,MAAM,KAAK,MAAM,EAAE,OAAO9I,OAAO,CAAC0C,KAAK,EAAE;MACrD1C,OAAO,CAAC1D,OAAO,CAAC,wBAAwB,CAAC;MACzC,MAAOmK,iEAAc,CAAC5H,IAAI,CAACL,EAAE,CAAS,CAACuB,SAAS,EAAE,CAACgJ,KAAK,CAAEC,CAAC,IAAI;QAC3D3C,4DAAW,CACP,4BAA4B2C,CAAC,CAACC,OAAO,IAAID,CAAC,CAACE,KAAK,IAAIF,CAAC,EAAE,CAC1D;QACDhJ,OAAO,CAAC0C,KAAK,EAAE;QACf,MAAMsG,CAAC;MACX,CAAC,CAAC;MACF1C,8DAAa,CAAC,+BAA+B,CAAC;MAC9ChH,MAAI,CAACyH,KAAK,CAACM,IAAI,CAACC,IAAI,CAACc,GAAG,EAAE,CAAC;MAC3BpI,OAAO,CAAC0C,KAAK,EAAE;IAAC;EACpB;EAEavI,cAAcA,CAAC0E,IAAa;IAAA,IAAAsK,MAAA;IAAA,OAAAvK,wJAAA;MACrC,MAAMoB,OAAO,SAASuG,iEAAgB,CAClC;QACIoC,KAAK,EAAE,iBAAiB;QACxBC,OAAO,EAAE,yBACL/J,IAAI,CAAC1B,UAAU,IAAI0B,IAAI,CAACtC,QAC5B,oBAAoB;QACpBsM,IAAI,EAAE;UAAED,OAAO,EAAE;QAAiB;OACrC,EACDO,MAAI,CAAC9F,OAAO,CACf;MACD,IAAIrD,OAAO,CAAC8I,MAAM,KAAK,MAAM,EAAE,OAAO9I,OAAO,CAAC0C,KAAK,EAAE;MACrD1C,OAAO,CAAC1D,OAAO,CAAC,wBAAwB,CAAC;MACzC,MAAMsK,gEAAa,CAAC/H,IAAI,CAACL,EAAE,CAAC,CACvBuB,SAAS,EAAE,CACXgJ,KAAK,CAAEC,CAAC,IAAI;QACT3C,4DAAW,CACP,4BAA4B2C,CAAC,CAACC,OAAO,IAAID,CAAC,CAACE,KAAK,IAAIF,CAAC,EAAE,CAC1D;QACDhJ,OAAO,CAAC0C,KAAK,EAAE;QACf,MAAMsG,CAAC;MACX,CAAC,CAAC;MACN1C,8DAAa,CAAC,gCAAgC,CAAC;MAC/C6C,MAAI,CAACpC,KAAK,CAACM,IAAI,CAACC,IAAI,CAACc,GAAG,EAAE,CAAC;MAC3BpI,OAAO,CAAC0C,KAAK,EAAE;IAAC;EACpB;EAEa5D,eAAeA,CAACD,IAAa,EAAE3B,KAAK,GAAG,IAAI;IAAA,OAAA0B,wJAAA;MACpD,MAAMwK,QAAQ,SAAS1C,iEAAc,CAAC7H,IAAI,CAACL,EAAE,EAAEtB,KAAK,CAAC,CAChD6C,SAAS,EAAE,CACXgJ,KAAK,CAAEC,CAAC,IAAI;QACT3C,4DAAW,CACP,kBAAkBnJ,KAAK,GAAG,IAAI,GAAG,KAAK,IAClC2B,IAAI,CAAC1B,UAAU,IAAI0B,IAAI,CAACtC,QAC5B,QAAQsC,IAAI,CAACzB,SAAS,YAAY,CACrC;QACD,MAAM4L,CAAC;MACX,CAAC,CAAC;MACN1C,8DAAa,CACT,wBAAwBpJ,KAAK,GAAG,IAAI,GAAG,KAAK,IACxC2B,IAAI,CAAC1B,UAAU,IAAI0B,IAAI,CAACtC,QAC5B,SAASsC,IAAI,CAACzB,SAAS,YAAY,CACtC;IAAC;EACN;EAEamB,uBAAuBA,CAAC8K,QAAgB,EAAEnM,KAAK,GAAG,IAAI;IAAA,IAAAoM,MAAA;IAAA,OAAA1K,wJAAA;MAC/D,IAAI,CAACyK,QAAQ,EAAE;MACf,MAAMlC,QAAQ,SAASmC,MAAI,CAACnC,QAAQ,CAAClJ,IAAI,CAAC6H,qDAAI,CAAC,CAAC,CAAC,CAAC,CAAC/F,SAAS,EAAE;MAC9D,MAAMwJ,cAAc,GAAGpC,QAAQ,CAACxB,MAAM,CACjCpI,CAAC,IACEA,CAAC,CAACiM,SAAS,KAAKH,QAAQ,IACxB9L,CAAC,CAAC9F,cAAc,CAAC+R,SAAS,KAAKH,QAAQ,IACvC9L,CAAC,CAACtB,YAAY,EAAEuC,EAAE,KAAK6K,QAAQ,IAC/B9L,CAAC,CAACtB,YAAY,EAAEoN,QAAQ,KAAKA,QAAQ,CAC5C;MACD,IAAI,CAACE,cAAc,CAACnN,MAAM,EAAE;MAC5B,MAAMqN,OAAO,CAACC,GAAG,CACbH,cAAc,CAACjM,GAAG,CAAEC,CAAC,IACjBmJ,iEAAc,CAACnJ,CAAC,CAACiB,EAAE,EAAEtB,KAAK,CAAC,CACtB6C,SAAS,EAAE,CACXgJ,KAAK,CAAEC,CAAC,IAAI;QACT3C,4DAAW,CACP,kBAAkBnJ,KAAK,GAAG,IAAI,GAAG,KAAK,IAClCK,CAAC,CAACJ,UAAU,IAAII,CAAC,CAAChB,QACtB,QAAQgB,CAAC,CAACH,SAAS,YAAY,CAClC;QACD,MAAM4L,CAAC;MACX,CAAC,CAAC,CACT,CACJ;MACD1C,8DAAa,CACT,wBAAwBpJ,KAAK,GAAG,IAAI,GAAG,KAAK,sBACxCqM,cAAc,CAAC,CAAC,CAAC,CAACnM,SACtB,YAAY,CACf;MACDkM,MAAI,CAACvC,KAAK,CAACM,IAAI,CAACC,IAAI,CAACc,GAAG,EAAE,CAAC;IAAC;EAChC;EAEa/J,oBAAoBA,CAAA;IAAA,IAAAsL,MAAA;IAAA,OAAA/K,wJAAA;MAC7B,MAAMuI,QAAQ,SAASwC,MAAI,CAAC3L,iBAAiB,CAACC,IAAI,CAAC6H,qDAAI,CAAC,CAAC,CAAC,CAAC,CAAC/F,SAAS,EAAE;MACvE,IAAI,CAACoH,QAAQ,CAAC/K,MAAM,EAAE;MACtB,MAAM;QAAE3B;MAAI,CAAE,GAAGkP,MAAI,CAAC3C,QAAQ,CAACF,QAAQ,EAAE;MACzC,MAAM8C,IAAI,GAAGzC,QAAQ,CAAC7J,GAAG,CAAEC,CAAC,KAAM;QAC9BsM,IAAI,EAAEtM,CAAC,CAACJ,UAAU;QAClB2M,KAAK,EAAEvM,CAAC,CAAChB,QAAQ;QACjB,YAAY,EAAEgB,CAAC,CAAClG,UAAU;QAC1B0S,IAAI,EAAExM,CAAC,CAACf,UAAU,IAAI,EAAE;QACxBwN,MAAM,EAAEzM,CAAC,CAAClD,MAAM;QAChBiN,IAAI,EAAEpB,qDAAM,CAAC3I,CAAC,CAAC9C,IAAI,EAAE,SAAS,GAAGkP,MAAI,CAAC7O,WAAW;OACpD,CAAC,CAAC;MACH,MAAMmP,IAAI,GAAG7D,0DAAS,CAACwD,IAAI,CAAC;MAC5BzD,6DAAY,CACR,gBAAgBD,qDAAM,CAACzL,IAAI,IAAI6M,IAAI,CAACc,GAAG,EAAE,EAAE,QAAQ,CAAC,MAAM,EAC1D6B,IAAI,CACP;IAAC;EACN;EAAC,QAAA1M,CAAA;qBA5NQhH,oBAAoB,EAAAI,uDAAA,CAAA0J,gEAAA,GAAA1J,uDAAA,CAAA2J,sEAAA,GAAA3J,uDAAA,CAAA4J,4DAAA;EAAA;EAAA,QAAAC,EAAA;WAApBjK,oBAAoB;IAAA4T,OAAA,EAApB5T,oBAAoB,CAAA6T,IAAA;IAAAC,UAAA,EAFjB;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CmC;AAClB;AAEQ;AACa;AACI;;;;;;;;;;;;;;IAe5C1T,4DAAA,oBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAAqM,QAAA,CAAAxE,EAAA,CAAkB;IAElB7H,uDAAA,EACJ;IADIA,gEAAA,MAAAqM,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAA/H,IAAA,MACJ;;;AA+Bd,MAAOsP,uBAAwB,SAAQlU,yDAAY;EAsBrDqH,YACYC,MAA4B,EAC5BC,IAAyB,EACzBwF,MAAsB,EACtBD,OAAe;IAEvB,KAAK,EAAE;IALC,KAAAxF,MAAM,GAANA,MAAM;IACN,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAwF,MAAM,GAANA,MAAM;IACN,KAAAD,OAAO,GAAPA,OAAO;IAzBnB;IACO,KAAAG,KAAK,GAAa,EAAE;IAC3B;IACgB,KAAAC,MAAM,GAAG,IAAI,CAAC3F,IAAI,CAAC4F,aAAa;IAEhC,KAAA5I,OAAO,GAAG,IAAI,CAAC+C,MAAM,CAAC/C,OAAO;IAC7C;IACgB,KAAA6I,OAAO,GAAIhJ,IAAI,IAAK,IAAI,CAACkD,MAAM,CAAC+F,UAAU,CAAC;MAAEjJ;IAAI,CAAE,CAAC;IACpE;IACgB,KAAAiJ,UAAU,GAAI9I,OAAO,IAAK,IAAI,CAAC+C,MAAM,CAAC+F,UAAU,CAAC9I,OAAO,CAAC;IACzE;IACgB,KAAA+I,SAAS,GAAIC,GAAG,IAAK,IAAI,CAACjG,MAAM,CAACkG,eAAe,CAACD,GAAG,CAAC;IACrE;IACgB,KAAAE,WAAW,GAAIR,KAAK,IAAI;MACpC,IAAI,CAACH,OAAO,CAACY,QAAQ,CAAC,EAAE,EAAE;QACtBC,UAAU,EAAE,IAAI,CAACZ,MAAM;QACvBa,WAAW,EAAE;UAAEC,QAAQ,EAAEZ,KAAK,CAACa,IAAI,CAAC,GAAG;QAAC;OAC3C,CAAC;MACF,IAAI,CAACxG,MAAM,CAAC+F,UAAU,CAAC;QAAEJ;MAAK,CAAE,CAAC;IACrC,CAAC;EASD;EAEajE,QAAQA,CAAA;IAAA,IAAAxB,KAAA;IAAA,OAAAe,wJAAA;MACjB,MAAMf,KAAI,CAACD,IAAI,CAAC4M,WAAW,CAACvM,IAAI,CAACqM,qDAAK,CAAE/M,CAAC,IAAKA,CAAC,CAAC,CAAC,CAACwC,SAAS,EAAE;MAC7DlC,KAAI,CAAC0B,YAAY,CACb,aAAa,EACb1B,KAAI,CAACuF,MAAM,CAACqH,aAAa,CAAChL,SAAS,CAAEiL,MAAM,IAAI;QAC3C,IAAIA,MAAM,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE;UACxB,MAAMrH,KAAK,GAAGoH,MAAM,CAAC7K,GAAG,CAAC,UAAU,CAAC,CAAC+K,KAAK,CAAC,GAAG,CAAC;UAC/C,IAAItH,KAAK,CAAClH,MAAM,EAAE;YACd,MAAMyO,KAAK,GAAGhN,KAAI,CAACD,IAAI,CAACkN,WAAW,CAACxH,KAAK,CAAC;YAC1CzF,KAAI,CAACyF,KAAK,GAAGA,KAAK;YAClB,IAAI,CAACuH,KAAK,EAAE;YACZhN,KAAI,CAACD,IAAI,CAACwJ,QAAQ,GAAGvJ,KAAI,CAACD,IAAI,CAACmN,SAAS,CAACC,IAAI,CACxCrL,GAAG,IAAKA,GAAG,CAACnB,EAAE,KAAKqM,KAAK,CAACrB,SAAS,CACtC;UACL;QACJ;MACJ,CAAC,CAAC,CACL;MACD3L,KAAI,CAAC0B,YAAY,CACb,QAAQ,EACR1B,KAAI,CAACD,IAAI,CAAC4F,aAAa,CAAC/D,SAAS,CAAE8D,MAAM,IAAI;QACzC1F,KAAI,CAACyF,KAAK,GAAGzF,KAAI,CAACyF,KAAK,CAACqC,MAAM,CAAEsF,IAAI,IAChC1H,MAAM,CAACyH,IAAI,CAAEE,GAAG,IAAKA,GAAG,CAAC1M,EAAE,KAAKyM,IAAI,CAAC,CACxC;QACD,IAAI,CAACpN,KAAI,CAACyF,KAAK,CAAClH,MAAM,IAAImH,MAAM,CAACnH,MAAM,EAAE;UACrCyB,KAAI,CAACyF,KAAK,CAAC6H,IAAI,CAAC5H,MAAM,CAAC,CAAC,CAAC,CAAC/E,EAAE,CAAC;QACjC;QACAX,KAAI,CAACiG,WAAW,CAACjG,KAAI,CAACyF,KAAK,CAAC;MAChC,CAAC,CAAC,CACL;MACDzF,KAAI,CAAC8F,SAAS,CAAC,EAAE,CAAC;IAAC;EACvB;EAAC,QAAApG,CAAA;qBA9DQgN,uBAAuB,EAAA5T,+DAAA,CAAA0J,yEAAA,GAAA1J,+DAAA,CAAA2J,sEAAA,GAAA3J,+DAAA,CAAA4J,2DAAA,GAAA5J,+DAAA,CAAA4J,mDAAA;EAAA;EAAA,QAAAC,EAAA;UAAvB+J,uBAAuB;IAAA9J,SAAA;IAAAC,QAAA,GAAA/J,wEAAA;IAAAiK,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAqK,iCAAAnK,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA1CpBtK,4DAJR,aAEC,wBACwC,oBAMhC;QAHGA,8DAAA,2BAAA0U,qEAAAxG,MAAA;UAAAlO,gEAAA,CAAAuK,GAAA,CAAAoC,KAAA,EAAAuB,MAAA,MAAA3D,GAAA,CAAAoC,KAAA,GAAAuB,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAmB;QACnBlO,wDAAA,2BAAA0U,qEAAAxG,MAAA;UAAA,OAAiB3D,GAAA,CAAA4C,WAAA,CAAAe,MAAA,CAAmB;QAAA,EAAC;QAGrClO,wDAAA,IAAA2U,6CAAA,wBAGC;;QAIT3U,0DADI,EAAa,EACA;QAEbA,4DADJ,wBAAqC,oBAKhC;;QAFGA,wDAAA,2BAAA4U,qEAAA1G,MAAA;UAAA,OAAiB3D,GAAA,CAAAwC,UAAA,CAAW;YAAA7I,MAAA,EAAAgK;UAAA,CAAkB,CAAC;QAAA,EAAC;QAGhDlO,4DAAA,oBAAwB;QAAAA,oDAAA,eAAQ;QAAAA,0DAAA,EAAa;QAC7CA,4DAAA,qBAAwB;QAAAA,oDAAA,iBAAS;QAAAA,0DAAA,EAAa;QAC9CA,4DAAA,qBAAyB;QAAAA,oDAAA,kBAAU;QAE3CA,0DAF2C,EAAa,EACvC,EACA;QACjBA,uDAAA,cAA8B;QAC9BA,4DAAA,oBAGC;QADGA,wDAAA,yBAAA6U,mEAAA3G,MAAA;UAAA,OAAe3D,GAAA,CAAAyC,SAAA,CAAAkB,MAAA,CAAiB;QAAA,EAAC;QACpClO,0DAAA,EAAY;QACbA,4DAAA,uBAA6C;QAA/BA,wDAAA,wBAAA8U,qEAAA5G,MAAA;UAAA,OAAc3D,GAAA,CAAAuC,OAAA,CAAAoB,MAAA,CAAe;QAAA,EAAC;QAChDlO,0DADiD,EAAe,EAC1D;;;;QA7BMA,uDAAA,GAAmB;QAAnBA,8DAAA,YAAAuK,GAAA,CAAAoC,KAAA,CAAmB;QAKG3M,uDAAA,EAAiB;QAAjBA,wDAAA,YAAAA,yDAAA,OAAAuK,GAAA,CAAAqC,MAAA,EAAiB;QASvC5M,uDAAA,GAA0C;QAA1CA,wDAAA,cAAA+U,OAAA,GAAA/U,yDAAA,OAAAuK,GAAA,CAAAtG,OAAA,oBAAA8Q,OAAA,CAAA7Q,MAAA,OAA0C;QAI9BlE,uDAAA,GAAW;QAAXA,wDAAA,YAAW;QACXA,uDAAA,GAAW;QAAXA,wDAAA,YAAW;QACXA,uDAAA,GAAY;QAAZA,wDAAA,aAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCoB;;;;;;;;;;;IASpDA,uDAAA,0BAIoB;;;AAa1B,MAAOgV,iBAAiB;EAI1BjO,YAAoBC,MAA4B;IAA5B,KAAAA,MAAM,GAANA,MAAM;IAHV,KAAArB,OAAO,GAAG,IAAI,CAACqB,MAAM,CAACrB,OAAO;IAC7B,KAAA1B,OAAO,GAAG,IAAI,CAAC+C,MAAM,CAAC/C,OAAO;EAEM;EAE5CyE,QAAQA,CAAA;IACX,IAAI,CAAC1B,MAAM,CAAC2G,YAAY,EAAE;EAC9B;EAEOC,WAAWA,CAAA;IACd,IAAI,CAAC5G,MAAM,CAAC6G,WAAW,EAAE;EAC7B;EAAC,QAAAjH,CAAA;qBAZQoO,iBAAiB,EAAAhV,+DAAA,CAAA0J,yEAAA;EAAA;EAAA,QAAAG,EAAA;UAAjBmL,iBAAiB;IAAAlL,SAAA;IAAAiE,KAAA,EAAA7C,GAAA;IAAAjB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA6K,2BAAA3K,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QArBtBtK,uDAAA,cAAmB;QACnBA,4DAAA,cAAwD;QAEpDA,uDADA,yBAAkD,wBACS;QAC3DA,wDAAA,IAAAkV,6CAAA,8BAIC;;QACLlV,0DAAA,EAAO;;;QAHEA,uDAAA,GAAqB;QAArBA,wDAAA,SAAAA,yDAAA,OAAAuK,GAAA,CAAA5E,OAAA,EAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXS;AACF;AACS;AAEX;AAEc;AACa;AACJ;AACF;AACe;AACtB;;;AAEzD,MAAM6P,MAAM,GAAY,CACpB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEV,kEAAiBA;AAAA,CAAE,EAC1C;EAAES,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAEnJ,yEAAoBA;AAAA,CAAE,CACnD;AAkBK,MAAOoJ,cAAc;EAAA,QAAA/O,CAAA;qBAAd+O,cAAc;EAAA;EAAA,QAAA9L,EAAA;UAAd8L;EAAc;EAAA,QAAAC,EAAA;cAPnBT,yDAAY,EACZC,uDAAW,EACXE,mDAAQ,EACRC,mEAAoB,EACpBF,0DAAY,CAACQ,QAAQ,CAACL,MAAM,CAAC;EAAA;;;sHAGxBG,cAAc;IAAAG,YAAA,GAdnBvJ,yEAAoB,EACpByI,kEAAiB,EACjBpB,+EAAuB,EACvB1N,2EAAqB,EACrB0F,wFAA2B;IAAAmK,OAAA,GAG3BZ,yDAAY,EACZC,uDAAW,EACXE,mDAAQ,EACRC,mEAAoB,EAAA7L,0DAAA;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BO;AACY;AACiC;AACtC;AACL;AACJ;AACI;AACF;AACH;;;;;;;;;;;;;;;;ACPO;AAEjC,MAAOsM,WAAW;EAsBpBjP,YAAYkP,KAAA,GAAiB,EAAE;IAC3B,IAAI,CAACnF,IAAI,GAAGmF,KAAK,CAACnF,IAAI,IAAImF,KAAK,CAACC,QAAQ,IAAI,OAAO;IACnD,IAAI,CAACC,QAAQ,GAAGF,KAAK,CAACE,QAAQ,IAC1BF,KAAK,CAACG,MAAM,IAAIH,KAAK,CAACrQ,QAAQ,IAAI;MAC9ByQ,CAAC,EAAEJ,KAAK,CAACI,CAAC,GAAGJ,KAAK,CAACK,SAAS,IAAI,CAAC;MACjCC,CAAC,EAAEN,KAAK,CAACM,CAAC,GAAGN,KAAK,CAACO,UAAU,IAAI;KACpC;IACL,IAAI,CAACC,QAAQ,GAAGR,KAAK,CAACQ,QAAQ,IAAI,CAAC;IACnC,IAAI,CAACC,SAAS,GAAGT,KAAK,CAACS,SAAS,IAAIrH,oDAAW,CAAC,IAAIsB,IAAI,EAAE,CAAC;IAC3D,IAAI,CAACuD,KAAK,GAAG+B,KAAK,CAAC/B,KAAK;IACxB,IAAI,CAACzD,QAAQ,GAAGwF,KAAK,CAACxF,QAAQ;IAC9B,IAAI,CAACkG,WAAW,GAAG,CAAC,CAACV,KAAK,CAACU,WAAW;IACtC,IAAI,CAACC,gBAAgB,GAAGX,KAAK,CAACW,gBAAgB,IAAI,UAAU;EAChE","sources":["./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/invite-visitor-modal.component.ts","./apps/concierge/src/app/visitors/new-visitors.component.ts","./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { Booking } from '@placeos/bookings';\nimport { showMetadata } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <div\n            class=\"w-full flex flex-col flex-1 text-sm h-full overflow-auto pb-20\"\n        >\n            <custom-table\n                class=\"min-w-[80rem]\"\n                [dataSource]=\"guests\"\n                [filter]=\"search | async\"\n                [columns]=\"columns\"\n                [display_column]=\"display_columns\"\n                [column_size]=\"column_sizes\"\n                [template]=\"{\n                    state: state_template,\n                    status: status_template,\n                    date: date_template,\n                    host: host_template,\n                    id_data: id_template,\n                    actions: action_template,\n                    induction: boolean_template\n                }\"\n                [empty]=\"\n                    (search | async)\n                        ? 'No matching visitors'\n                        : 'There are visitors for the currently selected date.'\n                \"\n            ></custom-table>\n        </div>\n        <ng-template #state_template let-row=\"row\">\n            <i\n                *ngIf=\"!row?.checked_in; else checkin_state\"\n                matTooltip=\"Not checked in\"\n                class=\"flex items-center justify-center rounded-full material-icons border-2 border-dashed border-neutral text-xl h-9 w-9\"\n            >\n                close\n            </i>\n            <ng-template #checkin_state>\n                <i\n                    class=\"flex items-center justify-center rounded-full material-icons bg-success border-2 border-neutral text-white text-xl h-9 w-9\"\n                    matTooltip=\"Checked In\"\n                >\n                    done\n                </i>\n            </ng-template>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            {{ row.extension_data?.host }}\n        </ng-template>\n        <ng-template #vaccinated_template let-row=\"row\">\n            <div customTooltip [content]=\"vaccine_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.vaccination_proof?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.vaccination_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.vaccination_confirmed ===\n                              false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #vaccine_confirmation>\n                <div\n                    class=\"bg-base-100 rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.vaccination_proof?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] p-2 object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'vaccination_confirmed', true)\"\n                    >\n                        Confirm Vaccination Proof\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'vaccination_confirmed', false)\"\n                    >\n                        Reject Vaccination Proof\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-base-100 rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #boolean_template let-row=\"row\">\n            <div\n                *ngIf=\"row.induction\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"!row.induction && row.process_state.includes('declined')\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-error text-error-content mx-auto\"\n            >\n                <app-icon>close</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl bg-warning text-warning-content border-none\"\n                [class.!text-success-content]=\"row?.status === 'approved'\"\n                [class.!bg-success]=\"row?.status === 'approved'\"\n                [class.!text-error-content]=\"row?.status === 'declined'\"\n                [class.!bg-error]=\"row?.status === 'declined'\"\n                [class.!text-neutral-content]=\"row?.status === 'ended'\"\n                [class.!bg-neutral]=\"row?.status === 'ended'\"\n                [class.opacity-60]=\"row?.status === 'ended'\"\n                [matMenuTriggerFor]=\"menu\"\n                [disabled]=\"row?.status === 'ended'\"\n            >\n                <div class=\"flex items-center\">\n                    <div class=\"mx-2\">\n                        {{\n                            row?.status === 'ended'\n                                ? 'Ended'\n                                : row?.status === 'approved'\n                                ? 'Approved'\n                                : row?.status === 'declined'\n                                ? 'Declined'\n                                : 'Pending'\n                        }}\n                    </div>\n                    <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                </div>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    Approve Visitor\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    Decline Visitor\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{\n                row.date\n                    | date\n                        : ((filters | async)?.period > 1\n                              ? 'MMM d, ' + time_format\n                              : time_format)\n            }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center justify-end\">\n                <button\n                    icon\n                    matRipple\n                    [class.pointer-events-none]=\"!row.linked_event\"\n                    [matMenuTriggerFor]=\"checkin_menu\"\n                >\n                    <app-icon\n                        class=\"text-2xl\"\n                        [class.opacity-0]=\"!row.linked_event\"\n                    >\n                        event\n                    </app-icon>\n                </button>\n                <mat-menu #checkin_menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"checkinAllVisitors(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\"\n                                >event_available</app-icon\n                            >\n                            <div>Checkin All for Booking</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"checkoutAllVisitors(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">event_busy</app-icon>\n                            <div>Checkout All for Booking</div>\n                        </div>\n                    </button>\n                </mat-menu>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!row.attachments?.length\"\n                    title=\"\"\n                    matTooltip=\"View Attachments\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <app-icon>attachment</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <a\n                        *ngFor=\"let item of row.attachments\"\n                        [href]=\"item.url\"\n                        mat-menu-item\n                        >{{ item.name }}</a\n                    >\n                </mat-menu>\n                <action-icon\n                    remote\n                    [matTooltip]=\"\n                        row.extension_data.remote\n                            ? 'Set as In-Person Visitor'\n                            : 'Set as Remote Visitior'\n                    \"\n                    [loading]=\"loading === 'remote'\"\n                    [content]=\"\n                        row.extension_data.remote ? 'tap_and_play' : 'business'\n                    \"\n                    (click)=\"setExt(row, 'remote', !row.extension_data.remote)\"\n                >\n                </action-icon>\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin Guest\"\n                    [loading]=\"loading === 'checkin'\"\n                    [state]=\"row?.checked_in ? 'success' : ''\"\n                    content=\"event_available\"\n                    (click)=\"checkin(row)\"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout Guest\"\n                    [loading]=\"loading === 'checkout'\"\n                    content=\"event_busy\"\n                    (click)=\"checkout(row)\"\n                >\n                </action-icon>\n                <a\n                    [href]=\"'mailto:' + row?.asset_id\"\n                    icon\n                    matRipple\n                    [matTooltip]=\"\n                        row?.user_email === row?.asset_id\n                            ? 'Email Host'\n                            : 'Email Guest'\n                    \"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n                <action-icon\n                    matTooltip=\"Print QR Code\"\n                    [loading]=\"loading === 'printing'\"\n                    content=\"event_busy\"\n                    (click)=\"printQRCode()\"\n                    [class.invisible]=\"!can_print\"\n                >\n                </action-icon>\n            </div>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent extends AsyncHandler {\n    public readonly guests = this._state.filtered_bookings.pipe(\n        tap((_: any) => console.log(_))\n    );\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n    private _inductions_enabled = false;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly checkinAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, true);\n    public readonly checkoutAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, false);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n\n    public readonly checkin = async (item: Booking) => {\n        await this._state.setCheckinState(item, true);\n        this._state.poll();\n    };\n\n    public readonly checkout = async (item: Booking) => {\n        await this._state.setCheckinState(item, false);\n        this._state.poll();\n    };\n\n    public get columns() {\n        return this._inductions_enabled\n            ? [\n                  'state',\n                  'date',\n                  'asset_name',\n                  'user_name',\n                  'asset_id',\n                  'status',\n                  'induction',\n                  'actions',\n              ]\n            : [\n                  'state',\n                  'date',\n                  'asset_name',\n                  'user_name',\n                  'asset_id',\n                  'status',\n                  'actions',\n              ];\n    }\n\n    public get display_columns() {\n        const fields = {\n            state: ' ',\n            date: 'Time',\n            asset_name: 'Person',\n            user_name: 'Host',\n            asset_id: 'Email',\n            id_data: 'ID',\n            status: 'State',\n            induction: 'Inducted',\n            actions: ' ',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    public get column_sizes() {\n        const fields = {\n            state: '3.5r',\n            date: '8r',\n            asset_name: '12r',\n            user_name: '12r',\n            asset_id: 'flex',\n            id_data: '8r',\n            status: '10r',\n            actions: '16r',\n            induction: '5r',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld) => {\n                if (!bld) return;\n                const visitor_kiosk_app =\n                    this._settings.get('app.visitor_kiosk_app') ||\n                    'visitor-kiosk_app';\n                const metadata: any = await showMetadata(\n                    bld.id,\n                    visitor_kiosk_app\n                ).toPromise();\n                this._inductions_enabled =\n                    metadata.details?.induction_enabled &&\n                    metadata.details?.induction_details;\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'invite-visitor-modal',\n    template: `\n        <main class=\"relative min-w-[40rem] min-h-[40rem]\">\n            <invite-visitor-form (done)=\"onDone()\"></invite-visitor-form>\n        </main>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorModalComponent {\n    constructor(\n        private _dialog_ref: MatDialogRef<InviteVisitorModalComponent>\n    ) {}\n\n    public onDone() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\n\n@Component({\n    selector: '[app-new-visitors]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center p-4 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Visitors</h2>\n                    <div class=\"flex-1 w-2\"></div>\n                    <date-options (dateChange)=\"setDate($event)\"></date-options>\n                    <button btn matRipple (click)=\"inviteVisitor()\">\n                        Invite Visitor\n                    </button>\n                </div>\n                <div class=\"flex items-center px-4 pb-4\">\n                    <mat-form-field appearance=\"outline\" class=\"no-subscript\">\n                        <mat-select\n                            multiple\n                            [(ngModel)]=\"zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-2\"></div>\n                    <searchbar (modelChange)=\"setSearch($event)\"></searchbar>\n                </div>\n                <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewVisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {}\n\n    public inviteVisitor() {\n        this._dialog.open(InviteVisitorModalComponent);\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    SettingsService,\n    downloadFile,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { GuestUser, updateGuest } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    approveBooking,\n    checkinBooking,\n    queryBookings,\n    rejectBooking,\n} from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from '@placeos/spaces';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly bookings = combineLatest([\n        this._org.active_building,\n        this._filters,\n        this._poll,\n    ]).pipe(\n        filter(([building]) => !!building),\n        debounceTime(150),\n        switchMap(([bld, filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryBookings({\n                type: 'visitor',\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zones: (filters.zones || []).join(',') || bld.id,\n                include_checked_out: true,\n                limit: 1000,\n            }).pipe(catchError((_) => of([] as Booking[])));\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly filtered_bookings = combineLatest([\n        this._search,\n        this.bookings,\n    ]).pipe(\n        map(([search, guest_list]) => {\n            const filter = search.toLowerCase();\n            const out = guest_list\n                .filter(\n                    (_) =>\n                        _.asset_name?.toLowerCase().includes(filter) ||\n                        _.user_name?.toLowerCase().includes(filter) ||\n                        _.user_email?.toLowerCase().includes(filter) ||\n                        _.asset_id?.toLowerCase().includes(filter)\n                )\n                .sort((a, b) => a.date - b.date);\n            return out;\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public poll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n        this._poll.next(Date.now());\n    }\n\n    public async approveVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await (approveBooking(item.id) as any).toPromise().catch((e) => {\n            notifyError(\n                `Error approving visitor: ${e.message || e.error || e}`\n            );\n            details.close();\n            throw e;\n        });\n        notifySuccess(`Successfully approved visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async declineVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await rejectBooking(item.id)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error declining visitor: ${e.message || e.error || e}`\n                );\n                details.close();\n                throw e;\n            });\n        notifySuccess(`Successfully declining visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async setCheckinState(item: Booking, state = true) {\n        const new_user = await checkinBooking(item.id, state)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking ${state ? 'in' : 'out'} ${\n                        item.asset_name || item.asset_id\n                    } for ${item.user_name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} ${\n                item.asset_name || item.asset_id\n            } from ${item.user_name}'s meeting`\n        );\n    }\n\n    public async setCheckinStateForEvent(event_id: string, state = true) {\n        if (!event_id) return;\n        const bookings = await this.bookings.pipe(take(1)).toPromise();\n        const event_bookings = bookings.filter(\n            (_) =>\n                _.parent_id === event_id ||\n                _.extension_data.parent_id === event_id ||\n                _.linked_event?.id === event_id ||\n                _.linked_event?.event_id === event_id\n        );\n        if (!event_bookings.length) return;\n        await Promise.all(\n            event_bookings.map((_) =>\n                checkinBooking(_.id, state)\n                    .toPromise()\n                    .catch((e) => {\n                        notifyError(\n                            `Error checking ${state ? 'in' : 'out'} ${\n                                _.asset_name || _.asset_id\n                            } for ${_.user_name}'s meeting`\n                        );\n                        throw e;\n                    })\n            )\n        );\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} all visitors from ${\n                event_bookings[0].user_name\n            }'s meeting`\n        );\n        this._poll.next(Date.now());\n    }\n\n    public async downloadVisitorsList() {\n        const bookings = await this.filtered_bookings.pipe(take(1)).toPromise();\n        if (!bookings.length) return;\n        const { date } = this._filters.getValue();\n        const list = bookings.map((_) => ({\n            Name: _.asset_name,\n            Email: _.asset_id,\n            'Checked In': _.checked_in,\n            Host: _.user_email || '',\n            Status: _.status,\n            Date: format(_.date, 'dd MMM ' + this.time_format),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-base-200\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { GuestListingComponent } from './guest-listing.component';\nimport { NewVisitorsComponent } from './new-visitors.component';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: 'new', component: NewVisitorsComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewVisitorsComponent,\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        GuestListingComponent,\n        InviteVisitorModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["AsyncHandler","SettingsService","VisitorsStateService","showMetadata","OrganisationService","tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","GuestListingComponent_ng_template_4_i_0_Template","GuestListingComponent_ng_template_4_ng_template_1_Template","ɵɵtemplateRefExtractor","ɵɵproperty","row_r1","checked_in","checkin_state_r2","ɵɵtextInterpolate1","row_r3","extension_data","host","ɵɵadvance","row_r4","vaccination_confirmed","ɵɵelement","ɵɵlistener","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_2_listener","ɵɵrestoreView","_r5","ɵɵnextContext","row","ctx_r5","ɵɵresetView","setExt","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_4_listener","vaccination_proof","url","ɵɵsanitizeUrl","GuestListingComponent_ng_template_8_button_1_Template","GuestListingComponent_ng_template_8_ng_template_2_Template","vaccine_confirmation_r7","row_r8","id_confirmed","GuestListingComponent_ng_template_10_ng_template_2_Template_button_click_2_listener","_r9","GuestListingComponent_ng_template_10_ng_template_2_Template_button_click_4_listener","id_data","GuestListingComponent_ng_template_10_button_1_Template","GuestListingComponent_ng_template_10_ng_template_2_Template","id_confirmation_r10","GuestListingComponent_ng_template_12_div_0_Template","GuestListingComponent_ng_template_12_div_1_Template","row_r11","induction","process_state","includes","GuestListingComponent_ng_template_14_Template_button_click_8_listener","row_r13","_r12","approveVisitor","GuestListingComponent_ng_template_14_Template_button_click_10_listener","declineVisitor","ɵɵclassProp","status","menu_r14","ɵɵpipeBind2","row_r15","date","tmp_10_0","ɵɵpipeBind1","filters","period","time_format","item_r18","ɵɵtextInterpolate","name","GuestListingComponent_ng_template_18_Template_button_click_6_listener","row_r17","_r16","checkinAllVisitors","GuestListingComponent_ng_template_18_Template_button_click_12_listener","checkoutAllVisitors","GuestListingComponent_ng_template_18_a_23_Template","GuestListingComponent_ng_template_18_Template_action_icon_click_24_listener","remote","GuestListingComponent_ng_template_18_Template_action_icon_click_25_listener","checkin","GuestListingComponent_ng_template_18_Template_action_icon_click_26_listener","checkout","GuestListingComponent_ng_template_18_Template_action_icon_click_30_listener","printQRCode","linked_event","checkin_menu_r19","attachments","length","menu_r20","loading","asset_id","user_email","can_print","GuestListingComponent_button_20_Template_button_click_0_listener","_r21","downloadVisitorList","GuestListingComponent","columns","_inductions_enabled","display_columns","fields","state","asset_name","user_name","actions","map","_","column_sizes","_settings","constructor","_state","_org","_this","this","guests","filtered_bookings","pipe","console","log","search","downloadVisitorsList","u","setCheckinStateForEvent","id","f","v","_ref","_asyncToGenerator","item","setCheckinState","poll","_x","apply","arguments","_ref2","_x2","ngOnInit","_this2","subscription","active_building","subscribe","_ref3","bld","visitor_kiosk_app","get","metadata","toPromise","details","induction_enabled","induction_details","_x3","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","GuestListingComponent_Template","rf","ctx","GuestListingComponent_ng_template_4_Template","GuestListingComponent_ng_template_6_Template","GuestListingComponent_ng_template_8_Template","GuestListingComponent_ng_template_10_Template","GuestListingComponent_ng_template_12_Template","GuestListingComponent_ng_template_14_Template","GuestListingComponent_ng_template_16_Template","GuestListingComponent_ng_template_18_Template","GuestListingComponent_button_20_Template","ɵɵpureFunction7","_c0","state_template_r22","status_template_r26","date_template_r27","host_template_r23","id_template_r24","action_template_r28","boolean_template_r25","tmp_15_0","MatDialogRef","InviteVisitorModalComponent","_dialog_ref","onDone","close","InviteVisitorModalComponent_Template","InviteVisitorModalComponent_Template_invite_visitor_form_done_1_listener","ActivatedRoute","Router","MatDialog","level_r1","display_name","NewVisitorsComponent","_router","_route","_dialog","zones","levels","active_levels","setDate","setFilters","setSearch","str","setSearchString","updateZones","navigate","relativeTo","queryParams","zone_ids","join","inviteVisitor","open","startPolling","ngOnDestroy","stopPolling","i4","attrs","NewVisitorsComponent_Template","NewVisitorsComponent_Template_date_options_dateChange_8_listener","$event","NewVisitorsComponent_Template_button_click_9_listener","ɵɵtwoWayListener","NewVisitorsComponent_Template_mat_select_ngModelChange_13_listener","ɵɵtwoWayBindingSet","NewVisitorsComponent_mat_option_14_Template","NewVisitorsComponent_Template_searchbar_modelChange_17_listener","NewVisitorsComponent_mat_progress_bar_19_Template","ɵɵtwoWayProperty","BehaviorSubject","combineLatest","of","catchError","debounceTime","filter","shareReplay","switchMap","take","startOfDay","getUnixTime","addDays","format","downloadFile","jsonToCsv","notifyError","notifySuccess","openConfirmModal","updateGuest","approveBooking","checkinBooking","queryBookings","rejectBooking","_search","getValue","_poll","_filters","_loading","asObservable","bookings","building","next","Date","start","end","type","period_start","period_end","include_checked_out","limit","guest_list","toLowerCase","out","sort","a","b","now","delay","interval","clearInterval","guest","field","value","title","content","icon","reason","catch","e","message","error","_this3","new_user","event_id","_this4","event_bookings","parent_id","Promise","all","_this5","list","Name","Email","Host","Status","data","ɵɵinject","factory","ɵfac","providedIn","first","VisitorsTopbarComponent","initialised","queryParamMap","params","has","split","level","levelWithID","buildings","find","zone","lvl","push","VisitorsTopbarComponent_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_2_listener","VisitorsTopbarComponent_mat_option_3_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_6_listener","VisitorsTopbarComponent_Template_searchbar_modelChange_15_listener","VisitorsTopbarComponent_Template_date_options_dateChange_16_listener","tmp_2_0","VisitorsComponent","VisitorsComponent_Template","VisitorsComponent_mat_progress_bar_4_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedBookingsModule","ROUTES","path","component","VisitorsModule","_3","forChild","declarations","imports","MapLocation","_data","location","position","map_id","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}