{"version":3,"file":"apps_concierge_src_app_building-manager_building-manager_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAiE;AASrC;AACS;AACL;AAEyC;;;;;;;;;;;;;;IAUzDa,4DADJ,gBAAyD,kBAC1B;IAAAA,oDAAA,YAAK;IACpCA,0DADoC,EAAW,EACtC;;;;;;IAGTA,4DADJ,cAA+D,YACpD;IAAAA,oDAAA,mBAAY;IAAAA,0DAAA,EAAQ;IAC3BA,4DAAA,0BAGC;IADGA,8DAAA,2BAAAK,4FAAAC,MAAA;MAAAN,2DAAA,CAAAQ,GAAA;MAAA,MAAAC,MAAA,GAAAT,2DAAA;MAAAA,gEAAA,CAAAS,MAAA,CAAAG,QAAA,CAAAC,WAAA,EAAAP,MAAA,MAAAG,MAAA,CAAAG,QAAA,CAAAC,WAAA,GAAAP,MAAA;MAAA,OAAAN,yDAAA,CAAAM,MAAA;IAAA,EAAkC;IACrCN,0DAAA,EAAmB;IACpBA,4DAAA,YAAO;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAQ;IAC1BA,4DAAA,0BAGC;IADGA,8DAAA,2BAAAe,4FAAAT,MAAA;MAAAN,2DAAA,CAAAQ,GAAA;MAAA,MAAAC,MAAA,GAAAT,2DAAA;MAAAA,gEAAA,CAAAS,MAAA,CAAAG,QAAA,CAAAI,UAAA,EAAAV,MAAA,MAAAG,MAAA,CAAAG,QAAA,CAAAI,UAAA,GAAAV,MAAA;MAAA,OAAAN,yDAAA,CAAAM,MAAA;IAAA,EAAiC;IACpCN,0DAAA,EAAmB;IACpBA,4DAAA,YAAO;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAQ;IAEtBA,4DADJ,yBAAoD,sBAK/C;IAFGA,8DAAA,2BAAAiB,uFAAAX,MAAA;MAAAN,2DAAA,CAAAQ,GAAA;MAAA,MAAAC,MAAA,GAAAT,2DAAA;MAAAA,gEAAA,CAAAS,MAAA,CAAAG,QAAA,CAAAM,SAAA,EAAAZ,MAAA,MAAAG,MAAA,CAAAG,QAAA,CAAAM,SAAA,GAAAZ,MAAA;MAAA,OAAAN,yDAAA,CAAAM,MAAA;IAAA,EAAgC;IAMhCN,4DAAA,sBAAyB;IAACA,oDAAA,eAAM;IAAAA,0DAAA,EAAa;IAC7CA,4DAAA,sBAA4B;IAACA,oDAAA,kBAAS;IAAAA,0DAAA,EAAa;IACnDA,4DAAA,sBAA4B;IAACA,oDAAA,iBAAQ;IAGjDA,0DAHiD,EAAa,EACzC,EACA,EACd;;;;IAvBCA,uDAAA,GAAS;IAATA,wDAAA,UAAS;IACTA,8DAAA,YAAAS,MAAA,CAAAG,QAAA,CAAAC,WAAA,CAAkC;IAIlCb,uDAAA,GAAS;IAATA,wDAAA,UAAS;IACTA,8DAAA,YAAAS,MAAA,CAAAG,QAAA,CAAAI,UAAA,CAAiC;IAM7BhB,uDAAA,GAAgC;IAAhCA,8DAAA,YAAAS,MAAA,CAAAG,QAAA,CAAAM,SAAA,CAAgC;;;;;;IAaxClB,4DADJ,iBAAsD,iBACE;IAAjBA,wDAAA,mBAAAuB,4EAAA;MAAAvB,2DAAA,CAAAwB,GAAA;MAAA,MAAAf,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAgB,IAAA,EAAM;IAAA,EAAC;IAACzB,oDAAA,WAAI;IAC5DA,0DAD4D,EAAS,EAC5D;;;;;IAELA,4DAAA,eAEC;IACGA,uDAAA,sBAA2C;IAC3CA,4DAAA,QAAG;IAAAA,oDAAA,GAAa;IACpBA,0DADoB,EAAI,EACjB;;;;IAFUA,uDAAA,EAAe;IAAfA,wDAAA,gBAAe;IACzBA,uDAAA,GAAa;IAAbA,+DAAA,CAAAS,MAAA,CAAAmB,OAAA,CAAa;;;AAM1B,MAAOC,iCAAiC;EAK1CC,YACqCC,GAAW,EACpCC,WAA4D,EAC5DC,SAA0B;IAFD,KAAAF,GAAG,GAAHA,GAAG;IAC5B,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,SAAS,GAATA,SAAS;IAPd,KAAAL,OAAO,GAAG,EAAE;IACH,KAAAM,EAAE,GAAG,IAAI,CAACH,GAAG;IACtB,KAAAnB,QAAQ,GAAG,EAAE;EAMjB;EAEIuB,QAAQA,CAAA;IACX,IAAI,CAACC,YAAY,CAAC,IAAI,CAACF,EAAE,CAAC;EAC9B;EAEaE,YAAYA,CAACF,EAAU;IAAA,IAAAG,KAAA;IAAA,OAAAC,wJAAA;MAChCD,KAAI,CAACT,OAAO,GAAG,+CAA+C;MAC9DS,KAAI,CAACzB,QAAQ,GAAG,EAAE;MAClB,MAAMA,QAAQ,SAASpB,iEAAa,CAAC;QAAE+C,SAAS,EAAEL;MAAE,CAAE,CAAC,CAClDM,IAAI,CAAC5C,mDAAG,CAAE6C,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CACxBC,SAAS,EAAE;MAChB,MAAMC,WAAW,GAAGhC,QAAQ,CAACiC,IAAI,CAC5BJ,CAAC,IAAKA,CAAC,CAACK,gBAAgB,KAAKzD,+DAAe,CAAC0D,IAAI,CACrD;MACD,IAAI,CAACH,WAAW,EAAE;MAClB,IAAI;QACAP,KAAI,CAACzB,QAAQ,GACTf,yCAAS,CAAC+C,WAAW,CAACK,eAAe,CAAC,EAAEC,YAAY,IAAI,EAAE;MAClE,CAAC,CAAC,MAAM,CAAC;MACTb,KAAI,CAACT,OAAO,GAAG,EAAE;IAAC;EACtB;EAEaH,IAAIA,CAAA;IAAA,IAAA0B,MAAA;IAAA,OAAAb,wJAAA;MACba,MAAI,CAACvB,OAAO,GAAG,4CAA4C;MAC3D,MAAMhB,QAAQ,SAASpB,iEAAa,CAAC;QAAE+C,SAAS,EAAEY,MAAI,CAACjB;MAAE,CAAE,CAAC,CACvDM,IAAI,CAAC5C,mDAAG,CAAE6C,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CACxBC,SAAS,EAAE;MAChB,IAAIC,WAAW,GAAGhC,QAAQ,CAACiC,IAAI,CAC1BJ,CAAC,IAAKA,CAAC,CAACK,gBAAgB,KAAKzD,+DAAe,CAAC0D,IAAI,CACrD;MACD,IAAI,CAACH,WAAW,EAAE;QACdA,WAAW,GAAG,IAAItD,6DAAa,CAAC;UAC5BiD,SAAS,EAAEY,MAAI,CAACjB,EAAE;UAClBY,gBAAgB,EAAEzD,+DAAe,CAAC0D,IAAI;UACtCE,eAAe,EAAE;SACpB,CAAC;MACN;MACA,IAAIG,YAAY,GAAG,EAAE;MACrB,IAAI;QACAA,YAAY,GAAGvD,yCAAS,CAAC+C,WAAW,CAACK,eAAe,CAAC,IAAI,EAAE;MAC/D,CAAC,CAAC,MAAM,CAAC;MACRL,WAAmB,CAACK,eAAe,GAAGpD,yCAAS,CAAC;QAC7C,GAAGuD,YAAY;QACfF,YAAY,EAAEC,MAAI,CAACvC;OACtB,CAAC;MACFgC,WAAW,CAACV,EAAE,SACFvC,kEAAc,CAACiD,WAAW,CAACV,EAAE,EAAEU,WAAW,CAAC,CAACD,SAAS,EAAE,SACvDpD,+DAAW,CAACqD,WAAW,CAAC,CAACD,SAAS,EAAE;MAEhD,MAAMW,YAAY,GACdH,MAAI,CAAClB,SAAS,CAACsB,GAAG,CAAC,4BAA4B,CAAC,IAAI,eAAe;MACvE,MAAMC,QAAQ,SAAS/D,gEAAY,CAAC0D,MAAI,CAACjB,EAAE,EAAEoB,YAAY,CAAC,CAACX,SAAS,EAAE;MACtE,MAAMc,OAAO,GAAQD,QAAQ,CAACC,OAAO,IAAI,EAAE;MAC3CA,OAAO,CAACP,YAAY,GAAGC,MAAI,CAACvC,QAAQ;MACpC,MAAMlB,kEAAc,CAACyD,MAAI,CAACjB,EAAE,EAAE;QAC1BwB,IAAI,EAAEJ,YAAY;QAClBG,OAAO;QACPE,WAAW,EAAE;OAChB,CAAC,CAAChB,SAAS,EAAE;MACdvD,8DAAa,CAAC,+BAA+B,CAAC;MAC9C+D,MAAI,CAACvB,OAAO,GAAG,EAAE;MACjBuB,MAAI,CAACnB,WAAW,CAAC4B,KAAK,EAAE;IAAC;EAC7B;EAAC,QAAAnB,CAAA;qBAxEQZ,iCAAiC,EAAA7B,+DAAA,CAM9BF,qEAAe,GAAAE,+DAAA,CAAA8D,kEAAA,GAAA9D,+DAAA,CAAA+D,4DAAA;EAAA;EAAA,QAAAC,EAAA;UANlBnC,iCAAiC;IAAAoC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2CAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA9ClCvE,4DAHJ,gBAEC,YACmC;QAAAA,oDAAA,4BAAqB;QAAAA,0DAAA,EAAK;QAC1DA,wDAAA,IAAA0E,mDAAA,oBAAyD;QAG7D1E,0DAAA,EAAS;QA+BTA,wDA9BA,IAAA2E,iDAAA,mBAA+D,IAAAC,mDAAA,oBA2BT,IAAAC,wDAAA,gCAAA7E,oEAAA,CAG7B;;;;QAlCoBA,uDAAA,GAAc;QAAdA,wDAAA,UAAAwE,GAAA,CAAA5C,OAAA,CAAc;QAI7B5B,uDAAA,EAAgB;QAAAA,wDAAhB,UAAAwE,GAAA,CAAA5C,OAAA,CAAgB,aAAAmD,aAAA,CAAe;QA2BvB/E,uDAAA,EAAc;QAAdA,wDAAA,UAAAwE,GAAA,CAAA5C,OAAA,CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CrC;AAC6C;AAO3C;AAC6C;AACF;;;;;;;;;;;;;;IA4BxC5B,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAA8F,SAAA,CAAA5D,EAAA,CAAmB;IAEnBlC,uDAAA,EACJ;IADIA,gEAAA,MAAA8F,SAAA,CAAAE,YAAA,IAAAF,SAAA,CAAApC,IAAA,MACJ;;;;;IAjBR1D,4DAJJ,cAGC,gBACiD;IAA9CA,oDAAA,MAA8C;IAE9CA,0DAAA,EAAQ;IAOAA,4DANR,yBAAqC,qBAKhC,qBAEQ;IAAAA,oDAAA,WAAI;IAAAA,0DAAA,EACR;IACDA,wDAAA,IAAAkG,uEAAA,yBAGC;;IAKblG,0DAFQ,EAAa,EACA,EACf;;;;IAXkBA,uDAAA,GAAwB;IAAxBA,wDAAA,UAAAS,MAAA,CAAA0F,cAAA,CAAwB;IAIbnG,uDAAA,GAAsB;IAAtBA,wDAAA,YAAAA,yDAAA,OAAAS,MAAA,CAAA4F,WAAA,EAAsB;;;;;IAmCjDrG,4DAAA,qBAGK;IAAAA,oDAAA,GAAQ;IAAAA,0DAAA,EACZ;;;;IAFGA,wDAAA,UAAAsG,KAAA,CAAY;IACXtG,uDAAA,EAAQ;IAARA,+DAAA,CAAAsG,KAAA,CAAQ;;;;;IAEbtG,4DAAA,qBAAwD;IACpDA,oDAAA,8BACJ;IAAAA,0DAAA,EAAa;;;IAFyBA,wDAAA,kBAAiB;;;;;IA/DnEA,4DAAA,cAKC;IACGA,wDAAA,IAAAuG,0DAAA,iBAGC;;IAuBGvG,4DADJ,cAA2B,gBAC6B;IAApDA,oDAAA,MAAoD;IAEpDA,0DAAA,EAAQ;IACRA,4DAAA,yBAAqC;IACjCA,uDAAA,gBAKE;IAEVA,0DADI,EAAiB,EACf;IAEFA,4DADJ,cAA2B,gBAC6B;IAApDA,oDAAA,OAAoD;IAEpDA,0DAAA,EAAQ;IAEJA,4DADJ,0BAAqC,oBACI;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAW;IACtDA,uDAAA,iBAKE;IACNA,0DAAA,EAAiB;IACjBA,4DAAA,iCAA0C;IAMtCA,wDALA,KAAAwG,kEAAA,yBAGK,KAAAC,kEAAA,yBAEmD;IAIhEzG,0DADI,EAAmB,EACjB;IAEFA,4DADJ,eAA2B,iBACwB;IAA/CA,oDAAA,OAA+C;IAE/CA,0DAAA,EAAQ;IACRA,4DAAA,0BAAqC;IACjCA,uDAAA,iBAKE;IAGdA,0DAFQ,EAAiB,EACf,EACH;;;;;;IA7EHA,wDAAA,cAAAS,MAAA,CAAAiG,IAAA,CAAkB;IAIb1G,uDAAA,EAAmC;IAAnCA,wDAAA,UAAA2G,OAAA,GAAA3G,yDAAA,OAAAS,MAAA,CAAA4F,WAAA,oBAAAM,OAAA,CAAAC,MAAA,CAAmC;IA8C5B5G,uDAAA,IAAwB;IAAxBA,wDAAA,oBAAA6G,OAAA,CAAwB;IAKT7G,uDAAA,GAAqB;IAArBA,wDAAA,YAAAS,MAAA,CAAAqG,kBAAA,CAAqB;IAI3B9G,uDAAA,EAAuB;IAAvBA,wDAAA,UAAAS,MAAA,CAAAsG,SAAA,CAAAH,MAAA,CAAuB;;;;;IAhEpD5G,qEAAA,GAAgD;IAC5CA,wDAAA,IAAAiH,oDAAA,mBAKC;;;;;IAFIjH,uDAAA,EAAU;IAAVA,wDAAA,SAAAS,MAAA,CAAAiG,IAAA,CAAU;;;;;IAiFf1G,4DAAA,cAAiE;IAC7DA,uDAAA,sBAAyC;IACzCA,4DAAA,YAAgB;IAAAA,oDAAA,yBAAkB;IACtCA,0DADsC,EAAI,EACpC;;;AAKZ,MAAOkH,qBAAsB,SAAQ7B,yDAAY;EAuBnD,IAAWc,cAAcA,CAAA;IACrB,OAAO,IAAI,CAACgB,IAAI,CAACC,YAAY,CAAClF,EAAE;EACpC;EAEAJ,YAAoBqF,IAAyB;IACzC,KAAK,EAAE;IADS,KAAAA,IAAI,GAAJA,IAAI;IA1BR,KAAAE,QAAQ,GAAoB,IAAI;IAChC,KAAA5F,IAAI,GAAW,CAAC;IAChB,KAAAG,OAAO,GAAG,KAAK;IACd,KAAA0F,aAAa,GAAG,IAAItC,uDAAY,EAAW;IAC3C,KAAAuC,IAAI,GAAG,IAAIvC,uDAAY,EAAE;IAEnC,KAAA+B,SAAS,GAAa,EAAE;IACxB,KAAAD,kBAAkB,GAAa,EAAE;IACxB,KAAAT,WAAW,GAAG,IAAI,CAACc,IAAI,CAACd,WAAW;IAEnC,KAAAK,IAAI,GAAG,IAAIvB,qDAAS,CAAC;MACjCjD,EAAE,EAAE,IAAIgD,uDAAW,CAAC,EAAE,CAAC;MACvB3C,SAAS,EAAE,IAAI2C,uDAAW,CAAC,IAAI,CAACiC,IAAI,CAACC,YAAY,CAAClF,EAAE,EAAE,CAClDkD,sDAAU,CAACoC,QAAQ,CACtB,CAAC;MACFxB,YAAY,EAAE,IAAId,uDAAW,CAAC,EAAE,EAAE,CAACE,sDAAU,CAACoC,QAAQ,CAAC,CAAC;MACxDC,QAAQ,EAAE,IAAIvC,uDAAW,CACrBwC,IAAI,EAAEC,cAAc,EAAE,EAAEC,eAAe,EAAE,EAAEC,QAAQ,IAAI,EAAE,CAC5D;MACDC,QAAQ,EAAE,IAAI5C,uDAAW,CAAC,EAAE;KAC/B,CAAC;EAQF;EAEO/C,QAAQA,CAAA;IACX,IAAI,CAAC4F,mBAAmB,EAAE;IAC1B,IAAI,CAACC,YAAY,CACb,WAAW,EACX,IAAI,CAACtB,IAAI,CAACuB,YAAY,CAACC,SAAS,CAAC,MAAM,IAAI,CAACH,mBAAmB,EAAE,CAAC,CACrE;IACD,IAAI,IAAI,CAACV,QAAQ,EAAE,IAAI,CAACX,IAAI,CAACyB,UAAU,CAAC,IAAI,CAACd,QAAQ,CAAC;EAC1D;EAEOe,WAAWA,CAACC,OAAsB;IACrC,IAAIA,OAAO,CAAChB,QAAQ,IAAI,IAAI,CAACA,QAAQ,EAAE;MACnC,IAAI,CAACX,IAAI,CAACyB,UAAU,CAAC,IAAI,CAACd,QAAQ,CAAC;IACvC;IACA,IAAIgB,OAAO,CAAC5G,IAAI,IAAI,IAAI,CAACA,IAAI,EAAE,IAAI,CAAC6G,WAAW,EAAE;EACrD;EAEaA,WAAWA,CAAA;IAAA,IAAAjG,KAAA;IAAA,OAAAC,wJAAA;MACpBD,KAAI,CAACqE,IAAI,CAACyB,UAAU,CAAC;QACjB5F,SAAS,EAAEF,KAAI,CAACqE,IAAI,CAAC6B,KAAK,CAAChG,SAAS,IAAIF,KAAI,CAAC8E,IAAI,CAACC,YAAY,CAAClF;OAClE,CAAC;MACF,IAAI,CAACG,KAAI,CAACqE,IAAI,CAAC8B,KAAK,EAAE;QAClB,OAAOhD,4DAAW,CACd,kCAAkCD,iEAAgB,CAC9ClD,KAAI,CAACqE,IAAI,CACZ,CAAC+B,IAAI,CAAC,IAAI,CAAC,GAAG,CAClB;MACL;MACA,MAAM/F,IAAI,GAAGL,KAAI,CAACqE,IAAI,CAACgC,WAAW,EAAE;MACpCrG,KAAI,CAACT,OAAO,GAAG,IAAI;MACnBS,KAAI,CAACiF,aAAa,CAACqB,IAAI,CAAC,IAAI,CAAC;MAC7B,MAAMC,IAAI,GAAG;QACT,GAAGlG,IAAI;QACPmG,IAAI,EAAE,CAAC,UAAU,CAAC;QAClBnF,IAAI,EAAE,OAAOkC,6DAAS,EAAE,CAACjC,WAAW,IAAIjB,IAAI,CAACsD,YAAY;OAC5D;MACD,MAAMqB,QAAQ,SAAS,CAAC3E,IAAI,CAACR,EAAE,GACzB2D,8DAAU,CAACnD,IAAI,CAACR,EAAE,EAAE0G,IAAI,CAAC,GACzBjD,2DAAO,CAACiD,IAAI,CAAC,EAEdjG,SAAS,EAAE,CACXmG,KAAK,CAAEC,CAAC,IAAI;QACTvD,4DAAW,CACP,0BAA0BuD,CAAC,CAACC,OAAO,IAAID,CAAC,CAACE,KAAK,IAAIF,CAAC,EAAE,CACxD;QACD1G,KAAI,CAACT,OAAO,GAAG,KAAK;QACpBS,KAAI,CAACiF,aAAa,CAACqB,IAAI,CAAC,KAAK,CAAC;QAC9B,MAAMI,CAAC;MACX,CAAC,CAAC;MACN3J,8DAAa,CAAC,8BAA8B,CAAC;MAC7CiD,KAAI,CAACT,OAAO,GAAG,KAAK;MACpBS,KAAI,CAACiF,aAAa,CAACqB,IAAI,CAAC,KAAK,CAAC;MAC9BtG,KAAI,CAACkF,IAAI,CAACoB,IAAI,CAACtB,QAAQ,CAAC;IAAC;EAC7B;EAEQU,mBAAmBA,CAAA;IACvB,MAAMN,QAAQ,GAAG,IAAI,CAACf,IAAI,EAAE6B,KAAK,EAAEd,QAAQ,IAAI,EAAE;IACjD,IAAI,CAACV,SAAS,GAAGzB,2DAAc;IAC/B,IAAI,CAACwB,kBAAkB,GAAG,IAAI,CAACC,SAAS,CAACmC,MAAM,CAAEzG,CAAC,IAC9CA,CAAC,CAAC0G,WAAW,EAAE,CAACC,QAAQ,CAAC3B,QAAQ,CAAC0B,WAAW,EAAE,CAAC,CACnD;EACL;EAAC,QAAA1G,CAAA;qBA3FQyE,qBAAqB,EAAAlH,+DAAA,CAAA8D,sEAAA;EAAA;EAAA,QAAAE,EAAA;UAArBkD,qBAAqB;IAAAjD,SAAA;IAAAoF,MAAA;MAAAhC,QAAA;MAAA5F,IAAA;MAAAG,OAAA;IAAA;IAAA0H,OAAA;MAAAhC,aAAA;MAAAC,IAAA;IAAA;IAAAgC,QAAA,GAAAvJ,wEAAA,EAAAA,kEAAA;IAAAkE,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAAsF,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBA5DsCC,SAAA,kGAEpD;;;;;;;;;;iBAWoDA,SAAA,8FAEpD;;;;;;;;;;iBAsB+CA,SAAA,8FAE/C;;;;;;;;;;iBA7D8CA,SAAA,4FAE9C;;;;;;QAuEZ5J,wDApFA,IAAA6J,6CAAA,0BAAgD,IAAAC,4CAAA,gCAAA9J,oEAAA,CAoFvB;;;;QApFMA,wDAAhB,UAAAwE,GAAA,CAAA5C,OAAA,CAAgB,aAAAmI,aAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBoB;AACxB;;;;;;;;;;;;;;;;;;;;;IAmCtC/J,oDAAA,GACJ;;;;;;;IADIA,gEAAA,QAAA2G,OAAA,GAAA3G,yDAAA,OAAAiK,OAAA,oBAAAtD,OAAA,CAAAX,YAAA,OAAAW,OAAA,GAAA3G,yDAAA,OAAAiK,OAAA,oBAAAtD,OAAA,CAAAjD,IAAA,OACJ;;;;;IAEI1D,uDAAA,aAKE;;;;IAFEA,wDAAA,WAAAkK,OAAA,IAAkB;;;;;IAGtBlK,4DAAA,cAA8C;IAAAA,oDAAA,gBAAS;IAAAA,0DAAA,EAAO;;;;;IAA9DA,wDANA,IAAAmK,kDAAA,iBAKE,IAAAC,mDAAA,kBAC4C;;;;IAJzCpK,wDAAA,SAAAkK,OAAA,CAAAtD,MAAA,CAAiB;IAIf5G,uDAAA,EAAkB;IAAlBA,wDAAA,UAAAkK,OAAA,CAAAtD,MAAA,CAAkB;;;;;;IAKjB5G,4DAFR,cAA+C,iBACW,eACxC;IAAAA,oDAAA,gBAAS;IACvBA,0DADuB,EAAW,EACzB;IAELA,4DADJ,wBAA0B,iBACoC;IAApCA,wDAAA,mBAAAqK,qEAAA;MAAA,MAAAC,MAAA,GAAAtK,2DAAA,CAAAwB,GAAA,EAAA+I,GAAA;MAAA,MAAAC,MAAA,GAAAxK,2DAAA;MAAA,OAAAA,yDAAA,CAASwK,MAAA,CAAAC,oBAAA,CAAAH,MAAA,CAAyB;IAAA,EAAC;IAEjDtK,4DADJ,cAAyC,mBACX;IAAAA,oDAAA,kBAAW;IAAAA,0DAAA,EAAW;IAChDA,4DAAA,YAAM;IAAAA,oDAAA,yBAAiB;IAE/BA,0DAF+B,EAAO,EAC5B,EACD;IACTA,4DAAA,kBAAkD;IAA5BA,wDAAA,mBAAA0K,sEAAA;MAAA,MAAAJ,MAAA,GAAAtK,2DAAA,CAAAwB,GAAA,EAAA+I,GAAA;MAAA,MAAAC,MAAA,GAAAxK,2DAAA;MAAA,OAAAA,yDAAA,CAASwK,MAAA,CAAAG,YAAA,CAAAL,MAAA,CAAiB;IAAA,EAAC;IAEzCtK,4DADJ,eAAyC,oBACX;IAAAA,oDAAA,YAAI;IAAAA,0DAAA,EAAW;IACzCA,4DAAA,YAAM;IAAAA,oDAAA,qBAAa;IAE3BA,0DAF2B,EAAO,EACxB,EACD;IACTA,4DAAA,kBAAoD;IAA9BA,wDAAA,mBAAA4K,sEAAA;MAAA,MAAAN,MAAA,GAAAtK,2DAAA,CAAAwB,GAAA,EAAA+I,GAAA;MAAA,MAAAC,MAAA,GAAAxK,2DAAA;MAAA,OAAAA,yDAAA,CAASwK,MAAA,CAAAK,cAAA,CAAAP,MAAA,CAAmB;IAAA,EAAC;IAE3CtK,4DADJ,eAAyC,oBAIpC;IACGA,oDAAA,uBACJ;IAAAA,0DAAA,EAAW;IACXA,4DAAA,YAAM;IAAAA,oDAAA,6BAAqB;IAEnCA,0DAFmC,EAAO,EAChC,EACD;IACTA,4DAAA,kBAAkD;IAA5BA,wDAAA,mBAAA8K,sEAAA;MAAA,MAAAR,MAAA,GAAAtK,2DAAA,CAAAwB,GAAA,EAAA+I,GAAA;MAAA,MAAAC,MAAA,GAAAxK,2DAAA;MAAA,OAAAA,yDAAA,CAASwK,MAAA,CAAAO,YAAA,CAAAT,MAAA,CAAiB;IAAA,EAAC;IAEzCtK,4DADJ,eAAyC,oBAIpC;IACGA,oDAAA,eACJ;IAAAA,0DAAA,EAAW;IACXA,4DAAA,YAAM;IAAAA,oDAAA,0BAAkB;IAEhCA,0DAFgC,EAAO,EAC7B,EACD;IACTA,4DAAA,kBAA0D;IAApCA,wDAAA,mBAAAgL,sEAAA;MAAA,MAAAV,MAAA,GAAAtK,2DAAA,CAAAwB,GAAA,EAAA+I,GAAA;MAAA,MAAAC,MAAA,GAAAxK,2DAAA;MAAA,OAAAA,yDAAA,CAASwK,MAAA,CAAAS,oBAAA,CAAAX,MAAA,CAAyB;IAAA,EAAC;IAEjDtK,4DADJ,eAAyC,oBAIpC;IACGA,oDAAA,uBACJ;IAAAA,0DAAA,EAAW;IACXA,4DAAA,YAAM;IAAAA,oDAAA,6BAAqB;IAEnCA,0DAFmC,EAAO,EAChC,EACD;IACTA,4DAAA,kBAAoD;IAA9BA,wDAAA,mBAAAkL,sEAAA;MAAA,MAAAZ,MAAA,GAAAtK,2DAAA,CAAAwB,GAAA,EAAA+I,GAAA;MAAA,MAAAC,MAAA,GAAAxK,2DAAA;MAAA,OAAAA,yDAAA,CAASwK,MAAA,CAAAW,cAAA,CAAAb,MAAA,CAAmB;IAAA,EAAC;IAE3CtK,4DADJ,eAAsD,oBACb;IACjCA,oDAAA,gBACJ;IAAAA,0DAAA,EAAW;IACXA,4DAAA,YAAM;IAAAA,oDAAA,uBAAe;IAIrCA,0DAJqC,EAAO,EAC1B,EACD,EACF,EACT;;;;IA1DyBA,uDAAA,EAA0B;IAA1BA,wDAAA,sBAAAoL,OAAA,CAA0B;;;AA+D/D,MAAOC,qBAAqB;EAsB9BvJ,YACYwJ,QAAmC,EACnCrJ,SAA0B;IAD1B,KAAAqJ,QAAQ,GAARA,QAAQ;IACR,KAAArJ,SAAS,GAATA,SAAS;IAvBL,KAAAsJ,SAAS,GAAG,IAAI,CAACD,QAAQ,CAACE,kBAAkB;IACrD,KAAA5K,QAAQ,GAAG,EAAE;IAEJ,KAAA+J,YAAY,GAAItD,QAAQ,IACpC,IAAI,CAACiE,QAAQ,CAACX,YAAY,CAACtD,QAAQ,CAAC;IAExB,KAAAoD,oBAAoB,GAAIpD,QAAQ,IAC5C,IAAI,CAACiE,QAAQ,CAACb,oBAAoB,CAACpD,QAAQ,CAAC;IAEhC,KAAA8D,cAAc,GAAI9D,QAAQ,IACtC,IAAI,CAACiE,QAAQ,CAACH,cAAc,CAAC9D,QAAQ,CAAC;IAE1B,KAAAwD,cAAc,GAAIxD,QAAQ,IACtC,IAAI,CAACiE,QAAQ,CAACT,cAAc,CAACxD,QAAQ,CAAC;IAE1B,KAAA0D,YAAY,GAAI1D,QAAQ,IACpC,IAAI,CAACiE,QAAQ,CAACP,YAAY,CAAC1D,QAAQ,CAAC;IAExB,KAAA4D,oBAAoB,GAAI5D,QAAQ,IAC5C,IAAI,CAACiE,QAAQ,CAACL,oBAAoB,CAAC5D,QAAQ,CAAC;EAK7C;EAAC,QAAA5E,CAAA;qBAzBK4I,qBAAqB,EAAArL,+DAAA,CAAA8D,mFAAA,GAAA9D,+DAAA,CAAA+D,4DAAA;EAAA;EAAA,QAAAC,EAAA;UAArBqH,qBAAqB;IAAApH,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAoH,+BAAAlH,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA1G1BvE,4DAAA,aAAiD;QAC7CA,uDAAA,sBA0BgB;QACpBA,0DAAA,EAAM;QAaNA,wDAZA,IAAA0L,4CAAA,gCAAA1L,oEAAA,CAA6C,IAAA2L,4CAAA,gCAAA3L,oEAAA,CAGA,IAAA4L,4CAAA,iCAAA5L,oEAAA,CASD;;;;;;QAtCpCA,uDAAA,EAAwB;QAkBxBA,wDAlBA,eAAAwE,GAAA,CAAA+G,SAAA,CAAwB,YAAAvL,6DAAA,IAAA8L,GAAA,EAQtB,mBAAA9L,6DAAA,IAAA+L,GAAA,EAQA,gBAAA/L,6DAAA,IAAAgM,GAAA,EAC0D,aAAAhM,6DAAA,IAAAkM,GAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,kBAAA,EAK1D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BmC;AACa;AACI;AACX;AACL;AACjB;AAC+B;AACW;AACa;AACL;AAClB;;;;AAU/D,MAAOrC,yBAAyB;EAiClClI,YACYqF,IAAyB,EACzB6F,OAAkB;IADlB,KAAA7F,IAAI,GAAJA,IAAI;IACJ,KAAA6F,OAAO,GAAPA,OAAO;IAlCX,KAAAC,QAAQ,GAAG,IAAIP,iDAAe,CAAsB,EAAE,CAAC;IACvD,KAAAQ,OAAO,GAAG,IAAIR,iDAAe,CAAC,CAAC,CAAC;IAEjC,KAAAS,OAAO,GAAG,IAAI,CAACF,QAAQ,CAACG,YAAY,EAAE;IAE7B,KAAA5B,kBAAkB,GAAGmB,oDAAa,CAAC,CAC/C,IAAI,CAACxF,IAAI,CAACd,WAAW,EACrB,IAAI,CAACc,IAAI,CAACkG,aAAa,EACvB,IAAI,CAACJ,QAAQ,EACb,IAAI,CAAC9F,IAAI,CAACmG,WAAW,CACxB,CAAC,CAAC9K,IAAI,CACH5C,oDAAG,CAAC,CAAC,CAAC2N,OAAO,EAAEC,IAAI,EAAEL,OAAO,CAAC,KAAI;MAC7B,IAAIA,OAAO,CAACM,IAAI,EAAE;QACdD,IAAI,GAAGA,IAAI,CAACtE,MAAM,CAAEzG,CAAC,IAAKA,CAAC,CAACF,SAAS,KAAK4K,OAAO,CAACM,IAAI,CAAC;MAC3D;MACA,IAAIN,OAAO,CAACO,MAAM,EAAE;QAChBF,IAAI,GAAGA,IAAI,CAACtE,MAAM,CAAEzG,CAAC,IACjBA,CAAC,CAACiB,IAAI,CAACyF,WAAW,EAAE,CAACC,QAAQ,CAAC+D,OAAO,CAACO,MAAM,CAACvE,WAAW,EAAE,CAAC,CAC9D;MACL;MACA,KAAK,MAAMwE,GAAG,IAAIH,IAAI,EAAE;QACpB,MAAMI,MAAM,GAAGL,OAAO,CAAC1K,IAAI,CAAEJ,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKyL,GAAG,CAACpL,SAAS,CAAC;QAC1D,IAAIqL,MAAM,EAAE;UACPD,GAAW,CAACE,MAAM,GAAGD,MAAM,CAAC5H,YAAY,IAAI4H,MAAM,CAAClK,IAAI;QAC5D;QACCiK,GAAW,CAACG,WAAW,GACpB,IAAI,CAAC3G,IAAI,CAAC4G,iBAAiB,CAACJ,GAAG,CAAC,EAAE/G,MAAM,IAAI,CAAC;MACrD;MACA,OAAO4G,IAAI;IACf,CAAC,CAAC,CACL;EAKE;EAEIQ,UAAUA,CAACb,OAAqC;IACnD,IAAI,CAACF,QAAQ,CAACgB,IAAI,CAAC;MAAE,GAAG,IAAI,CAAChB,QAAQ,CAACiB,QAAQ,EAAE;MAAE,GAAGf;IAAO,CAAE,CAAC;EACnE;EAEOgB,eAAeA,CAACT,MAAc;IACjC,IAAI,CAACT,QAAQ,CAACgB,IAAI,CAAC;MAAE,GAAG,IAAI,CAAChB,QAAQ,CAACiB,QAAQ,EAAE;MAAER;IAAM,CAAE,CAAC;EAC/D;EAEO/C,YAAYA,CAACtD,QAAA,GAAsB,IAAImF,yDAAS,EAAE;IACrD,MAAM4B,GAAG,GAAG,IAAI,CAACpB,OAAO,CAACqB,IAAI,CAACzB,6EAAsB,EAAE;MAClDlK,IAAI,EAAE2E;KACT,CAAC;IACF+G,GAAG,CAACE,WAAW,EAAE,CAACpG,SAAS,CAAExF,IAAI,IAAI;MACjC,IAAIA,IAAI,EAAE,IAAI,CAACyE,IAAI,CAACxB,OAAO,CAACjD,IAAI,CAAC;IACrC,CAAC,CAAC;EACN;EAEO+H,oBAAoBA,CAACgD,IAAA,GAAkB,IAAIjB,yDAAS,EAAE;IACzD,MAAM4B,GAAG,GAAG,IAAI,CAACpB,OAAO,CAACqB,IAAI,CAACxB,uFAAyB,EAAE;MACrDnK,IAAI,EAAE;QAAE+K;MAAI;KACf,CAAC;IACFW,GAAG,CAACE,WAAW,EAAE,CAACpG,SAAS,CAAExF,IAAI,IAAI;MACjC,IAAIA,IAAI,EAAE6L,UAAU,CAAC,MAAMzG,QAAQ,CAAC0G,MAAM,EAAE,EAAE,GAAG,CAAC;IACtD,CAAC,CAAC;EACN;EAEO3D,cAAcA,CAACxD,QAAmB;IACrC,IAAI,CAACA,QAAQ,EAAEnF,EAAE,EAAE;IACnB,IAAI,CAAC8K,OAAO,CAACqB,IAAI,CAACxM,qGAAiC,EAAE;MACjDa,IAAI,EAAE2E,QAAQ,CAACnF;KAClB,CAAC;EACN;EAEO6I,YAAYA,CAAC1D,QAAmB;IACnC,IAAI,CAACA,QAAQ,EAAEnF,EAAE,EAAE;IACnB,IAAI,CAAC8K,OAAO,CAACqB,IAAI,CAACvB,gGAA+B,EAAE;MAC/CpK,IAAI,EAAE2E,QAAQ,CAACnF;KAClB,CAAC;EACN;EAEO+I,oBAAoBA,CAAC5D,QAAmB;IAC3C,IAAI,CAACA,QAAQ,EAAEnF,EAAE,EAAE;IACnB,IAAI,CAAC8K,OAAO,CAACqB,IAAI,CAACtB,8EAAsB,EAAE;MACtCrK,IAAI,EAAE2E,QAAQ,CAACnF;KAClB,CAAC;EACN;EAEaiJ,cAAcA,CAAC9D,QAAkB;IAAA,IAAAhF,KAAA;IAAA,OAAAC,wJAAA;MAC1C,MAAM8L,GAAG,SAAS7B,iEAAgB,CAC9B;QACIkC,KAAK,EAAE,iBAAiB;QACxBC,OAAO,EAAE,iDAAiDrH,QAAQ,CAAC3D,IAAI,IAAI;QAC3EiL,IAAI,EAAE;UAAED,OAAO,EAAE;QAAgB,CAAE;QACnCE,YAAY,EAAE;OACjB,EACDvM,KAAI,CAAC2K,OAAO,CACf;MACD,IAAIoB,GAAG,CAACS,MAAM,KAAK,MAAM,EAAE,OAAOT,GAAG,CAACxK,KAAK,EAAE;MAC7CwK,GAAG,CAACxM,OAAO,CAAC,sBAAsB,CAAC;MACnC,MAAM6K,8DAAU,CAACpF,QAAQ,CAACnF,EAAE,CAAC,CAACS,SAAS,EAAE;MACzCN,KAAI,CAAC8E,IAAI,CAACsF,UAAU,CAAC;QAAEvK,EAAE,EAAEmF,QAAQ,CAACnF,EAAE;QAAE2G,IAAI,EAAE,CAAC,UAAU;MAAC,CAAS,CAAC;MACpEzJ,8DAAa,CAAC,gCAAgC,CAAC;MAC/CgP,GAAG,CAACxK,KAAK,EAAE;IAAC;EAChB;EAAC,QAAAnB,CAAA;qBArGQuH,yBAAyB,EAAAhK,uDAAA,CAAA8D,sEAAA,GAAA9D,uDAAA,CAAA+D,gEAAA;EAAA;EAAA,QAAAC,EAAA;WAAzBgG,yBAAyB;IAAA+E,OAAA,EAAzB/E,yBAAyB,CAAAgF,IAAA;IAAAC,UAAA,EAFtB;EAAM;;;;;;;;;;;;;;;;;;;;;ACjBoD;;;;;;;;AA+CpE,MAAOC,wBAAwB;EAGjCpN,YAAoBqN,MAAiC;IAAjC,KAAAA,MAAM,GAANA,MAAM;IAFV,KAAAC,WAAW,GAAG,MAAM,IAAI,CAACD,MAAM,CAACxE,YAAY,EAAE;EAEN;EAAC,QAAAlI,CAAA;qBAHhDyM,wBAAwB,EAAAlP,+DAAA,CAAA8D,mFAAA;EAAA;EAAA,QAAAE,EAAA;UAAxBkL,wBAAwB;IAAAjL,SAAA;IAAAoL,KAAA,EAAAvD,GAAA;IAAA5H,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAiL,kCAAA/K,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA1C7BvE,uDAAA,iBAAyB;QACzBA,4DAAA,aAA8B;QAC1BA,uDAAA,kBAA2B;QAKnBA,4DAJR,cAAgD,gBAG3C,YACoC;QAAAA,oDAAA,0BAAmB;QAAAA,0DAAA,EAAK;QACzDA,4DAAA,gBAA2D;QAArCA,wDAAA,mBAAAuP,0DAAA;UAAA,OAAS/K,GAAA,CAAA4K,WAAA,EAAa;QAAA,EAAC;QACzCpP,oDAAA,qBACJ;QACJA,0DADI,EAAS,EACJ;QACTA,uDAAA,uBAEiB;QAEzBA,0DADI,EAAO,EACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBiC;AACF;AACS;AAEX;AAEU;AACF;AAEqB;AACf;AACS;AACA;AACE;AACwB;AACL;AAClB;;;AAErE,MAAM+P,MAAM,GAAY,CACpB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEf,iFAAwBA;AAAA,CAAE,EACjD;EAAEc,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAEf,iFAAwBA;AAAA,CAAE,CACvD;AAsBK,MAAOgB,qBAAqB;EAAA,QAAAzN,CAAA;qBAArByN,qBAAqB;EAAA;EAAA,QAAAlM,EAAA;UAArBkM;EAAqB;EAAA,QAAAC,EAAA;cAT1BX,0DAAY,EACZC,wDAAW,EACXE,mDAAQ,EACRC,+DAAkB,EAClBC,6DAAiB,EACjBC,oEAAc,EACdJ,0DAAY,CAACU,QAAQ,CAACL,MAAM,CAAC;EAAA;;;uHAGxBG,qBAAqB;IAAAG,YAAA,GAlB1BnB,iFAAwB,EACxB7D,2EAAqB,EACrBnE,2EAAqB,EACrB0F,6EAAsB,EACtB/K,qGAAiC,EACjCiL,gGAA+B,EAC/BC,8EAAsB;IAAAuD,OAAA,GAGtBd,0DAAY,EACZC,wDAAW,EACXE,mDAAQ,EACRC,+DAAkB,EAClBC,6DAAiB,EACjBC,oEAAc,EAAAhM,0DAAA;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACvCmD;AACxB;;;;;;;;IAQjC9D,4DADJ,gBAAmD,eACrC;IAAAA,oDAAA,YAAK;IACnBA,0DADmB,EAAW,EACrB;;;;;;IAcTA,4DAJJ,gBAGC,gBAC6C;IAAjBA,wDAAA,mBAAAuQ,iEAAA;MAAAvQ,2DAAA,CAAAQ,GAAA;MAAA,MAAAC,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAgB,IAAA,EAAM;IAAA,EAAC;IAACzB,oDAAA,WAAI;IAClDA,0DADkD,EAAS,EAClD;;;AAIX,MAAO4M,sBAAsB;EAQ/B9K,YACqC0O,KAA2B,EACpDxO,WAAiD;IADxB,KAAAwO,KAAK,GAALA,KAAK;IAC9B,KAAAxO,WAAW,GAAXA,WAAW;IAThB,KAAAJ,OAAO,GAAG,KAAK;IACf,KAAA6O,UAAU,GAAG,CAAC;IACL,KAAApJ,QAAQ,GAAG,IAAI,CAACmJ,KAAK;IAErB,KAAA5M,KAAK,GAAI8M,CAAE,IAAK,IAAI,CAAC1O,WAAW,CAAC4B,KAAK,CAAC8M,CAAC,CAAC;IACzC,KAAAjP,IAAI,GAAG,MAAO,IAAI,CAACgP,UAAU,GAAGE,IAAI,CAACC,GAAG,EAAG;EAKxD;EAAC,QAAAnO,CAAA;qBAXKmK,sBAAsB,EAAA5M,+DAAA,CASnBF,qEAAe,GAAAE,+DAAA,CAAA8D,kEAAA;EAAA;EAAA,QAAAE,EAAA;UATlB4I,sBAAsB;IAAA3I,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAwM,gCAAAtM,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAtBvBvE,4DADJ,aAAQ,SACA;QAAAA,oDAAA,GAA2C;QAAAA,0DAAA,EAAK;QACpDA,wDAAA,IAAA8Q,wCAAA,oBAAmD;QAGvD9Q,0DAAA,EAAS;QAELA,4DADJ,cAAiE,uBAM5D;QAFGA,8DAAA,2BAAA+Q,uEAAAzQ,MAAA;UAAAN,gEAAA,CAAAwE,GAAA,CAAA5C,OAAA,EAAAtB,MAAA,MAAAkE,GAAA,CAAA5C,OAAA,GAAAtB,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAqB;QACrBN,wDAAA,kBAAAgR,8DAAA1Q,MAAA;UAAA,OAAQkE,GAAA,CAAAZ,KAAA,CAAAtD,MAAA,CAAa;QAAA,EAAC;QAE9BN,0DADK,EAAgB,EACd;QACPA,wDAAA,IAAAiR,wCAAA,oBAGC;;;QAhBOjR,uDAAA,GAA2C;QAA3CA,gEAAA,KAAAwE,GAAA,CAAA6C,QAAA,CAAAnF,EAAA,+BAA2C;QACZlC,uDAAA,EAAc;QAAdA,wDAAA,UAAAwE,GAAA,CAAA5C,OAAA,CAAc;QAM7C5B,uDAAA,GAAqB;QACrBA,wDADA,aAAAwE,GAAA,CAAA6C,QAAA,CAAqB,SAAA7C,GAAA,CAAAiM,UAAA,CACF;QACnBzQ,8DAAA,YAAAwE,GAAA,CAAA5C,OAAA,CAAqB;QAMxB5B,uDAAA,EAAc;QAAdA,wDAAA,UAAAwE,GAAA,CAAA5C,OAAA,CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtB8C;AACK;AAClB;AAKhC;;;;;;;;;;;;;;;IAUZ5B,4DADJ,gBAAyD,kBAC1B;IAAAA,oDAAA,YAAK;IACpCA,0DADoC,EAAW,EACtC;;;;;;IAULA,4DARR,cAGC,wBAII,mBAMI;IAHGA,8DAAA,2BAAAkR,kFAAA5Q,MAAA;MAAAN,2DAAA,CAAAQ,GAAA;MAAA,MAAAC,MAAA,GAAAT,2DAAA;MAAAA,gEAAA,CAAAS,MAAA,CAAA0Q,iBAAA,EAAA7Q,MAAA,MAAAG,MAAA,CAAA0Q,iBAAA,GAAA7Q,MAAA;MAAA,OAAAN,yDAAA,CAAAM,MAAA;IAAA,EAA+B;IAIvCN,0DADK,EAAW,EACC;IACjBA,4DAAA,uBAAuC;IAAzBA,8DAAA,2BAAAoR,sFAAA9Q,MAAA;MAAAN,2DAAA,CAAAQ,GAAA;MAAA,MAAAC,MAAA,GAAAT,2DAAA;MAAAA,gEAAA,CAAAS,MAAA,CAAA4Q,UAAA,EAAA/Q,MAAA,MAAAG,MAAA,CAAA4Q,UAAA,GAAA/Q,MAAA;MAAA,OAAAN,yDAAA,CAAAM,MAAA;IAAA,EAAwB;IAClCN,oDAAA,sCACJ;IACJA,0DADI,EAAe,EACZ;;;;IARKA,uDAAA,GAA+B;IAA/BA,8DAAA,YAAAS,MAAA,CAAA0Q,iBAAA,CAA+B;IAKzBnR,uDAAA,EAAwB;IAAxBA,8DAAA,YAAAS,MAAA,CAAA4Q,UAAA,CAAwB;;;;;;IAKtCrR,4DADJ,iBAA4D,iBACJ;IAAjBA,wDAAA,mBAAAsR,0EAAA;MAAAtR,2DAAA,CAAAwB,GAAA;MAAA,MAAAf,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAgB,IAAA,EAAM;IAAA,EAAC;IAACzB,oDAAA,WAAI;IAC5DA,0DAD4D,EAAS,EAC5D;;;;;IAELA,4DAAA,eAEC;IACGA,uDAAA,sBAA2C;IAC3CA,4DAAA,QAAG;IAAAA,oDAAA,GAAa;IACpBA,0DADoB,EAAI,EACjB;;;;IAFUA,uDAAA,EAAe;IAAfA,wDAAA,gBAAe;IACzBA,uDAAA,GAAa;IAAbA,+DAAA,CAAAS,MAAA,CAAAmB,OAAA,CAAa;;;AAM1B,MAAOkL,+BAA+B;EAMxChL,YACqCyP,QAAgB,EACzCtP,SAA0B,EAC1BkF,IAAyB,EACzBnF,WAA0D;IAHjC,KAAAuP,QAAQ,GAARA,QAAQ;IACjC,KAAAtP,SAAS,GAATA,SAAS;IACT,KAAAkF,IAAI,GAAJA,IAAI;IACJ,KAAAnF,WAAW,GAAXA,WAAW;IAThB,KAAAJ,OAAO,GAAG,EAAE;IACZ,KAAAuP,iBAAiB,GAAW,EAAE;IAC9B,KAAAE,UAAU,GAAY,KAAK;IAC3B,KAAAzQ,QAAQ,GAAwB,EAAE;EAOtC;EAEIuB,QAAQA,CAAA;IACX,IAAI,CAAC,IAAI,CAACoP,QAAQ,EAAE;IACpB,IAAI,CAACnP,YAAY,EAAE;EACvB;EAEaA,YAAYA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,wJAAA;MACrBD,KAAI,CAACT,OAAO,GAAG,4CAA4C;MAC3D,MAAM4P,iBAAiB,GACnBnP,KAAI,CAACJ,SAAS,CAACsB,GAAG,CAAC,uBAAuB,CAAC,IAAI,mBAAmB;MACtElB,KAAI,CAACzB,QAAQ,GAAG,EAAE;MAClB,MAAM,CAAC6Q,YAAY,EAAEC,YAAY,EAAEC,YAAY,CAAC,SAASC,OAAO,CAACC,GAAG,CAAC,OAC3DpS,gEAAY,CAAC4C,KAAI,CAACkP,QAAQ,EAAEC,iBAAiB,CAAC,CAAC7O,SAAS,EAAE,QAC1DlD,gEAAY,CACd4C,KAAI,CAAC8E,IAAI,CAACC,YAAY,CAAClF,EAAE,EACzBsP,iBAAiB,CACpB,CAAC7O,SAAS,EAAE,QACPlD,gEAAY,CACd4C,KAAI,CAAC8E,IAAI,CAACC,YAAY,CAAClF,EAAE,EACzB,UAAU,CACb,CAACS,SAAS,EAAE,CAChB,CAAC;MACFN,KAAI,CAACzB,QAAQ,GAAG;QACZ,GAAG+Q,YAAY,CAAClO,OAAO;QACvB,GAAGiO,YAAY,CAACjO,OAAO;QACvB,GAAGgO,YAAY,CAAChO;OACnB;MACDpB,KAAI,CAAC8O,iBAAiB,GAAG9O,KAAI,CAACzB,QAAQ,CAACuQ,iBAAiB,IAAI,EAAE;MAC9D9O,KAAI,CAACgP,UAAU,GAAGhP,KAAI,CAACzB,QAAQ,CAACkR,iBAAiB,IAAI,KAAK;MAC1DzP,KAAI,CAACT,OAAO,GAAG,EAAE;IAAC;EACtB;EAEaH,IAAIA,CAAA;IAAA,IAAA0B,MAAA;IAAA,OAAAb,wJAAA;MACba,MAAI,CAACvB,OAAO,GAAG,8BAA8B;MAC7C,MAAM4P,iBAAiB,GACnBrO,MAAI,CAAClB,SAAS,CAACsB,GAAG,CAAC,uBAAuB,CAAC,IAAI,mBAAmB;MACtEJ,MAAI,CAACnB,WAAW,CAAC+P,YAAY,GAAG,IAAI;MACpC,MAAMvO,QAAQ,SAAS/D,gEAAY,CAC/B0D,MAAI,CAACoO,QAAQ,EACbC,iBAAiB,CACpB,CAAC7O,SAAS,EAAE;MACb,MAAMqP,YAAY,GAAG;QACjB,GAAGxO,QAAQ,CAACC,OAAO;QACnB0N,iBAAiB,EAAEhO,MAAI,CAACgO,iBAAiB;QACzCW,iBAAiB,EAAE3O,MAAI,CAACkO;OAC3B;MACD,MAAMY,MAAM,SAASvS,kEAAc,CAACyD,MAAI,CAACoO,QAAQ,EAAE;QAC/C7N,IAAI,EAAEF,QAAQ,CAACE,IAAI,IAAI8N,iBAAiB;QACxC7N,WAAW,EAAEH,QAAQ,CAACG,WAAW,IAAI,EAAE;QACvCF,OAAO,EAAEuO;OACZ,CAAC,CACGrP,SAAS,EAAE,CACXmG,KAAK,CAAEoJ,GAAG,IAAI;QACXC,OAAO,CAAClJ,KAAK,CAACiJ,GAAG,CAAC;QAClB1M,4DAAW,CAAC,iCAAiC,CAAC;MAClD,CAAC,CAAC;MACNrC,MAAI,CAACvB,OAAO,GAAG,EAAE;MACjB,IAAIqQ,MAAM,EAAE;QACR7S,8DAAa,CAAC,uCAAuC,CAAC;QACtD+D,MAAI,CAACnB,WAAW,CAAC4B,KAAK,EAAE;MAC5B;IAAC;EACL;EAAC,QAAAnB,CAAA;qBAzEQqK,+BAA+B,EAAA9M,+DAAA,CAO5BF,qEAAe,GAAAE,+DAAA,CAAA8D,4DAAA,GAAA9D,+DAAA,CAAA+D,sEAAA,GAAA/D,+DAAA,CAAAoS,kEAAA;EAAA;EAAA,QAAApO,EAAA;UAPlB8I,+BAA+B;IAAA7I,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAgO,yCAAA9N,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAtChCvE,4DAHJ,gBAEC,YACmC;QAAAA,oDAAA,yBAAkB;QAAAA,0DAAA,EAAK;QACvDA,wDAAA,IAAAsS,iDAAA,oBAAyD;QAG7DtS,0DAAA,EAAS;QAuBTA,wDAtBA,IAAAuS,+CAAA,kBAGC,IAAAC,iDAAA,oBAgB2D,IAAAC,sDAAA,gCAAAzS,oEAAA,CAGnC;;;;QA1BoBA,uDAAA,GAAc;QAAdA,wDAAA,UAAAwE,GAAA,CAAA5C,OAAA,CAAc;QAMtD5B,uDAAA,EAAgB;QAAAA,wDAAhB,UAAAwE,GAAA,CAAA5C,OAAA,CAAgB,aAAAmD,aAAA,CAAe;QAiBQ/E,uDAAA,EAAc;QAAdA,wDAAA,UAAAwE,GAAA,CAAA5C,OAAA,CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCO;AACF;AAEL;;;;;;;;;;;;IAwBlD5B,4DAJJ,aAGC,eAMK;IADEA,8DAAA,2BAAA0S,qEAAApS,MAAA;MAAA,MAAAqS,IAAA,GAAA3S,2DAAA,CAAAQ,GAAA,EAAAoS,KAAA;MAAA,MAAAC,MAAA,GAAA7S,2DAAA;MAAAA,gEAAA,CAAA6S,MAAA,CAAAC,SAAA,CAAAH,IAAA,EAAAjP,IAAA,EAAApD,MAAA,MAAAuS,MAAA,CAAAC,SAAA,CAAAH,IAAA,EAAAjP,IAAA,GAAApD,MAAA;MAAA,OAAAN,yDAAA,CAAAM,MAAA;IAAA,EAA+B;IAJnCN,0DAAA,EAKE;IACFA,4DAAA,eAKE;IADEA,8DAAA,2BAAA+S,qEAAAzS,MAAA;MAAA,MAAAqS,IAAA,GAAA3S,2DAAA,CAAAQ,GAAA,EAAAoS,KAAA;MAAA,MAAAC,MAAA,GAAA7S,2DAAA;MAAAA,gEAAA,CAAA6S,MAAA,CAAAC,SAAA,CAAAH,IAAA,EAAAK,KAAA,EAAA1S,MAAA,MAAAuS,MAAA,CAAAC,SAAA,CAAAH,IAAA,EAAAK,KAAA,GAAA1S,MAAA;MAAA,OAAAN,yDAAA,CAAAM,MAAA;IAAA,EAAgC;IAJpCN,0DAAA,EAKE;IACFA,4DAAA,gBAKC;IADGA,wDAAA,mBAAAiT,8DAAA;MAAA,MAAAN,IAAA,GAAA3S,2DAAA,CAAAQ,GAAA,EAAAoS,KAAA;MAAA,MAAAC,MAAA,GAAA7S,2DAAA;MAAA,OAAAA,yDAAA,CAAS6S,MAAA,CAAAC,SAAA,CAAAI,MAAA,CAAAP,IAAA,EAAoB,CAAC,CAAC;IAAA,EAAC;IAEhC3S,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAEvBA,0DAFuB,EAAW,EACrB,EACP;;;;;IAhBEA,uDAAA,EAA+B;IAA/BA,8DAAA,YAAA6S,MAAA,CAAAC,SAAA,CAAAH,IAAA,EAAAjP,IAAA,CAA+B;IAM/B1D,uDAAA,EAAgC;IAAhCA,8DAAA,YAAA6S,MAAA,CAAAC,SAAA,CAAAH,IAAA,EAAAK,KAAA,CAAgC;;;AAoB9C,MAAOjG,sBAAsB;EAM/BjL,YACqCqR,OAAe,EACxClR,SAA0B,EAC1BD,WAAiD;IAFxB,KAAAmR,OAAO,GAAPA,OAAO;IAChC,KAAAlR,SAAS,GAATA,SAAS;IACT,KAAAD,WAAW,GAAXA,WAAW;IARhB,KAAA8Q,SAAS,GAAsC,EAAE;IACjD,KAAAlR,OAAO,GAAY,KAAK;IAExB,KAAAwR,QAAQ,GAAG,CAACR,KAAa,EAAES,IAAS,KAAKT,KAAK;EAMlD;EAEUzQ,QAAQA,CAAA;IAAA,IAAAE,KAAA;IAAA,OAAAC,wJAAA;MACjB,MAAMgB,YAAY,GACdjB,KAAI,CAACJ,SAAS,CAACsB,GAAG,CAAC,4BAA4B,CAAC,IAAI,eAAe;MACvE,MAAMC,QAAQ,SAAc/D,gEAAY,CACpC4C,KAAI,CAAC8Q,OAAO,EACZ7P,YAAY,CACf,CAACX,SAAS,EAAE;MACb,MAAM2Q,KAAK,GAAG9P,QAAQ,EAAEC,OAAO,EAAE8P,mBAAmB,IAAI,EAAE;MAC1DlR,KAAI,CAACyQ,SAAS,GAAGQ,KAAK;IAAC;EAC3B;EAEa7R,IAAIA,CAAA;IAAA,IAAA0B,MAAA;IAAA,OAAAb,wJAAA;MACb,MAAMgB,YAAY,GACdH,MAAI,CAAClB,SAAS,CAACsB,GAAG,CAAC,4BAA4B,CAAC,IAAI,eAAe;MACvEJ,MAAI,CAACvB,OAAO,GAAG,IAAI;MACnB,MAAM0R,KAAK,GAAGnQ,MAAI,CAAC2P,SAAS,CAAC5J,MAAM,CAAEzG,CAAC,IAAKA,CAAC,CAAC;MAC7C,MAAMe,QAAQ,SAAc/D,gEAAY,CACpC0D,MAAI,CAACgQ,OAAO,EACZ7P,YAAY,CACf,CAACX,SAAS,EAAE;MACba,QAAQ,CAACC,OAAO,CAAC8P,mBAAmB,GAAGD,KAAK;MAC5C,MAAME,IAAI,SAAS9T,kEAAc,CAACyD,MAAI,CAACgQ,OAAO,EAAE;QAC5CzP,IAAI,EAAEJ,YAAY;QAClBG,OAAO,EAAED,QAAQ,CAACC,OAAO;QACzBE,WAAW,EAAEH,QAAQ,CAACG,WAAW,IAAI;OACxC,CAAC,CACGhB,SAAS,EAAE,CACXmG,KAAK,CAAErG,CAAC,IAAI;QACT+C,4DAAW,CAAC,+BAA+B/C,CAAC,EAAE,CAAC;MACnD,CAAC,CAAC;MACNU,MAAI,CAACvB,OAAO,GAAG,KAAK;MACpB,IAAI4R,IAAI,EAAErQ,MAAI,CAACnB,WAAW,CAAC4B,KAAK,EAAE;IAAC;EACvC;EAAC,QAAAnB,CAAA;qBA5CQsK,sBAAsB,EAAA/M,+DAAA,CAOnBF,qEAAe,GAAAE,+DAAA,CAAA8D,4DAAA,GAAA9D,+DAAA,CAAA+D,kEAAA;EAAA;EAAA,QAAAC,EAAA;UAPlB+I,sBAAsB;IAAA9I,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAoP,gCAAAlP,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAhDvBvE,4DADJ,aAAQ,SACA;QAAAA,oDAAA,kCAA2B;QAAAA,0DAAA,EAAK;QAEhCA,4DADJ,gBAA2C,eAC7B;QAAAA,oDAAA,YAAK;QAEvBA,0DAFuB,EAAW,EACrB,EACJ;QAELA,4DADJ,cAA6D,gBAMxD;QADGA,wDAAA,mBAAA0T,wDAAA;UAAA,OAASlP,GAAA,CAAAsO,SAAA,CAAAa,IAAA,CAAe;YAAAjQ,IAAA,EAAQ,EAAE;YAAAsP,KAAA,EAAS;UAAE,CAAE,CAAC;QAAA,EAAC;QAEjDhT,oDAAA,iBACJ;QAAAA,0DAAA,EAAS;QACTA,wDAAA,IAAA4T,qCAAA,iBAGC;QAsBL5T,0DAAA,EAAO;QAIHA,4DAHJ,iBAEC,iBACuD;QAAjBA,wDAAA,mBAAA6T,yDAAA;UAAA,OAASrP,GAAA,CAAA/C,IAAA,EAAM;QAAA,EAAC;QAACzB,oDAAA,YAAI;QAC5DA,0DAD4D,EAAS,EAC5D;;;QA5BgBA,uDAAA,GAAc;QAAeA,wDAA7B,YAAAwE,GAAA,CAAAsO,SAAA,CAAc,iBAAAtO,GAAA,CAAA4O,QAAA,CAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1B5C;AACY;AACiC;AACtC;AACL;AACJ;AACI;AACF;AACH;;;;;;;;;;;;;;;;ACPO;AAEjC,MAAOW,WAAW;EAsBpBjS,YAAY0O,KAAA,GAAiB,EAAE;IAC3B,IAAI,CAACwD,IAAI,GAAGxD,KAAK,CAACwD,IAAI,IAAIxD,KAAK,CAAC1I,QAAQ,IAAI,OAAO;IACnD,IAAI,CAACmM,QAAQ,GAAGzD,KAAK,CAACyD,QAAQ,IAC1BzD,KAAK,CAAC0D,MAAM,IAAI1D,KAAK,CAAC2D,QAAQ,IAAI;MAC9BC,CAAC,EAAE5D,KAAK,CAAC4D,CAAC,GAAG5D,KAAK,CAAC6D,SAAS,IAAI,CAAC;MACjCC,CAAC,EAAE9D,KAAK,CAAC8D,CAAC,GAAG9D,KAAK,CAAC+D,UAAU,IAAI;KACpC;IACL,IAAI,CAACC,QAAQ,GAAGhE,KAAK,CAACgE,QAAQ,IAAI,CAAC;IACnC,IAAI,CAACC,SAAS,GAAGjE,KAAK,CAACiE,SAAS,IAAIX,oDAAW,CAAC,IAAInD,IAAI,EAAE,CAAC;IAC3D,IAAI,CAAC+D,KAAK,GAAGlE,KAAK,CAACkE,KAAK;IACxB,IAAI,CAACrN,QAAQ,GAAGmJ,KAAK,CAACnJ,QAAQ;IAC9B,IAAI,CAACsN,WAAW,GAAG,CAAC,CAACnE,KAAK,CAACmE,WAAW;IACtC,IAAI,CAACC,gBAAgB,GAAGpE,KAAK,CAACoE,gBAAgB,IAAI,UAAU;EAChE","sources":["./apps/concierge/src/app/building-manager/auto-release-settings-modal.component.ts","./apps/concierge/src/app/building-manager/building-form.component.ts","./apps/concierge/src/app/building-manager/building-list.component.ts","./apps/concierge/src/app/building-manager/building-management.service.ts","./apps/concierge/src/app/building-manager/building-manager.component.ts","./apps/concierge/src/app/building-manager/building-manager.module.ts","./apps/concierge/src/app/building-manager/building-modal.component.ts","./apps/concierge/src/app/building-manager/induction-settings-modal.component.ts","./apps/concierge/src/app/building-manager/item-list-modal.component.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { SettingsService, notifySuccess } from '@placeos/common';\nimport {\n    EncryptionLevel,\n    PlaceSettings,\n    addSettings,\n    querySettings,\n    showMetadata,\n    updateMetadata,\n    updateSettings,\n} from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\nimport * as yaml from 'js-yaml';\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'auto-release-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between border-b border-gray-300 p-4\"\n        >\n            <h3 class=\"text-xl font-medium\">Auto-Release Settings</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon class=\"text-2xl\">close</app-icon>\n            </button>\n        </header>\n        <main class=\"px-2 w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <label>Before Event</label>\n            <a-duration-field\n                [min]=\"0\"\n                [(ngModel)]=\"settings.time_before\"\n            ></a-duration-field>\n            <label>After Event</label>\n            <a-duration-field\n                [min]=\"0\"\n                [(ngModel)]=\"settings.time_after\"\n            ></a-duration-field>\n            <label>Event Types</label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"settings.resources\"\n                    placeholder=\"Set Event Types...\"\n                >\n                    <!-- <mat-option value=\"room\">\n                        Rooms\n                    </mat-option> -->\n                    <mat-option value=\"desk\"> Desks </mat-option>\n                    <mat-option value=\"visitor\"> Visitors </mat-option>\n                    <mat-option value=\"parking\"> Parking </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </main>\n        <footer class=\"p-4 flex justify-end\" *ngIf=\"!loading\">\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-32 space-y-2\"\n            >\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AutoReleaseSettingsModalComponent {\n    public loading = '';\n    public readonly id = this._id;\n    public settings = {};\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _id: string,\n        private _dialog_ref: MatDialogRef<AutoReleaseSettingsModalComponent>,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        this.loadSettings(this.id);\n    }\n\n    public async loadSettings(id: string) {\n        this.loading = 'Loading auto-release settings for building...';\n        this.settings = {};\n        const settings = await querySettings({ parent_id: id })\n            .pipe(map((_) => _.data))\n            .toPromise();\n        const unencrypted = settings.find(\n            (_) => _.encryption_level === EncryptionLevel.None\n        );\n        if (!unencrypted) return;\n        try {\n            this.settings =\n                yaml.load(unencrypted.settings_string)?.auto_release || {};\n        } catch {}\n        this.loading = '';\n    }\n\n    public async save() {\n        this.loading = 'Saving changes to auto-release settings...';\n        const settings = await querySettings({ parent_id: this.id })\n            .pipe(map((_) => _.data))\n            .toPromise();\n        let unencrypted = settings.find(\n            (_) => _.encryption_level === EncryptionLevel.None\n        );\n        if (!unencrypted) {\n            unencrypted = new PlaceSettings({\n                parent_id: this.id,\n                encryption_level: EncryptionLevel.None,\n                settings_string: '',\n            });\n        }\n        let old_settings = {};\n        try {\n            old_settings = yaml.load(unencrypted.settings_string) || {};\n        } catch {}\n        (unencrypted as any).settings_string = yaml.dump({\n            ...old_settings,\n            auto_release: this.settings,\n        });\n        unencrypted.id\n            ? await updateSettings(unencrypted.id, unencrypted).toPromise()\n            : await addSettings(unencrypted).toPromise();\n\n        const metadata_key =\n            this._settings.get('app.workplace_metadata_key') || 'workplace_app';\n        const metadata = await showMetadata(this.id, metadata_key).toPromise();\n        const details: any = metadata.details || {};\n        details.auto_release = this.settings;\n        await updateMetadata(this.id, {\n            name: metadata_key,\n            details,\n            description: '',\n        }).toPromise();\n        notifySuccess('Auto-release settings updated');\n        this.loading = '';\n        this._dialog_ref.close();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    AsyncHandler,\n    TIMEZONES_IANA,\n    getInvalidFields,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { addZone, authority, updateZone } from '@placeos/ts-client';\n\n@Component({\n    selector: 'building-form',\n    template: `\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <form\n                building\n                class=\"flex flex-col w-[36rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"(region_list | async)?.length\"\n                >\n                    <label for=\"region\" i18n=\"@@displayNameLabel\">\n                        Region:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            name=\"region\"\n                            formControlName=\"parent_id\"\n                            placeholder=\"Select Region...\"\n                        >\n                            <mat-option [value]=\"default_parent\"\n                                >None</mat-option\n                            >\n                            <mat-option\n                                *ngFor=\"let region of region_list | async\"\n                                [value]=\"region.id\"\n                            >\n                                {{ region.display_name || region.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"display-name\" i18n=\"@@displayNameLabel\">\n                        Display Name:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"display-name\"\n                            placeholder=\"Display Name\"\n                            formControlName=\"display_name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"display-name\" i18n=\"@@displayNameLabel\">\n                        Timezone:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <app-icon matPrefix class=\"text-2xl\">search</app-icon>\n                        <input\n                            matInput\n                            formControlName=\"timezone\"\n                            placeholder=\"Building timezone\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                    </mat-form-field>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let tz of filtered_timezones\"\n                            [value]=\"tz\"\n                            >{{ tz }}</mat-option\n                        >\n                        <mat-option *ngIf=\"!timezones.length\" [disabled]=\"true\">\n                            No matching timezones\n                        </mat-option>\n                    </mat-autocomplete>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"address\" i18n=\"@@displayNameLabel\">\n                        Location:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"address\"\n                            placeholder=\"Location or Address...\"\n                            formControlName=\"location\"\n                        />\n                    </mat-form-field>\n                </div>\n            </form>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving building...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class BuildingFormComponent extends AsyncHandler {\n    @Input() public building: Building | null = null;\n    @Input() public save: number = 0;\n    @Input() public loading = false;\n    @Output() public loadingChange = new EventEmitter<boolean>();\n    @Output() public done = new EventEmitter();\n\n    public timezones: string[] = [];\n    public filtered_timezones: string[] = [];\n    public readonly region_list = this._org.region_list;\n\n    public readonly form = new FormGroup({\n        id: new FormControl(''),\n        parent_id: new FormControl(this._org.organisation.id, [\n            Validators.required,\n        ]),\n        display_name: new FormControl('', [Validators.required]),\n        timezone: new FormControl(\n            Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || ''\n        ),\n        location: new FormControl(''),\n    });\n\n    public get default_parent() {\n        return this._org.organisation.id;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._updateTimezoneList();\n        this.subscription(\n            'tz-change',\n            this.form.valueChanges.subscribe(() => this._updateTimezoneList())\n        );\n        if (this.building) this.form.patchValue(this.building);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.building && this.building) {\n            this.form.patchValue(this.building);\n        }\n        if (changes.save && this.save) this.saveChanges();\n    }\n\n    public async saveChanges() {\n        this.form.patchValue({\n            parent_id: this.form.value.parent_id || this._org.organisation.id,\n        });\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const data = this.form.getRawValue();\n        this.loading = true;\n        this.loadingChange.emit(true);\n        const body = {\n            ...data,\n            tags: ['building'],\n            name: `BLD ${authority().description} ${data.display_name}`,\n        };\n        const building = await (data.id\n            ? updateZone(data.id, body)\n            : addZone(body)\n        )\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error saving building: ${e.message || e.error || e}`\n                );\n                this.loading = false;\n                this.loadingChange.emit(false);\n                throw e;\n            });\n        notifySuccess('Successfully saved building.');\n        this.loading = false;\n        this.loadingChange.emit(false);\n        this.done.emit(building);\n    }\n\n    private _updateTimezoneList() {\n        const timezone = this.form?.value?.timezone || '';\n        this.timezones = TIMEZONES_IANA;\n        this.filtered_timezones = this.timezones.filter((_) =>\n            _.toLowerCase().includes(timezone.toLowerCase())\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { BuildingManagementService } from './building-management.service';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'building-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-8\">\n            <custom-table\n                class=\"block min-w-[60rem] w-full h-full\"\n                [dataSource]=\"buildings\"\n                [columns]=\"[\n                    'display_name',\n                    'address',\n                    'timezone',\n                    'region',\n                    'level_count',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'Name',\n                    'Location',\n                    'Timezone',\n                    'Region',\n                    'Levels',\n                    ' '\n                ]\"\n                [column_size]=\"['12r', 'flex', '12r', '10r', '6r', '3.75r']\"\n                [template]=\"{\n                    images: image_template,\n                    zones: level_template,\n                    actions: action_template\n                }\"\n                empty=\"No buildings\"\n            ></custom-table>\n        </div>\n        <ng-template #level_template let-data=\"data\">\n            {{ (data | level)?.display_name || (data | level)?.name }}\n        </ng-template>\n        <ng-template #image_template let-data=\"data\">\n            <img\n                auth\n                *ngIf=\"data.length\"\n                [source]=\"data[0]\"\n                class=\"max-h-[3rem] max-w-[8rem]\"\n            />\n            <span *ngIf=\"!data.length\" class=\"opacity-30\">No Images</span>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <button btn icon matRipple [matMenuTriggerFor]=\"menu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"editBuildingMetadata(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-xl\">edit_square</app-icon>\n                            <span>App Configuration</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"editBuilding(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-xl\">edit</app-icon>\n                            <span>Edit Building</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"setAutoRelease(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon\n                                className=\"material-symbols-rounded\"\n                                class=\"text-xl\"\n                            >\n                                release_alert\n                            </app-icon>\n                            <span>Auto-release Settings</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"setInduction(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon\n                                className=\"material-symbols-rounded\"\n                                class=\"text-xl\"\n                            >\n                                badge\n                            </app-icon>\n                            <span>Induction Settings</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"setSupportIssueTypes(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon\n                                className=\"material-symbols-rounded\"\n                                class=\"text-xl\"\n                            >\n                                support_agent\n                            </app-icon>\n                            <span>Support Request Types</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"removeBuilding(row)\">\n                        <div class=\"flex items-center space-x-2 text-red-500\">\n                            <app-icon class=\"text-error text-xl\">\n                                delete\n                            </app-icon>\n                            <span>Delete Building</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class BuildingListComponent {\n    public readonly buildings = this._manager.filtered_buildings;\n    public settings = {};\n\n    public readonly editBuilding = (building) =>\n        this._manager.editBuilding(building);\n\n    public readonly editBuildingMetadata = (building) =>\n        this._manager.editBuildingMetadata(building);\n\n    public readonly removeBuilding = (building) =>\n        this._manager.removeBuilding(building);\n\n    public readonly setAutoRelease = (building) =>\n        this._manager.setAutoRelease(building);\n\n    public readonly setInduction = (building) =>\n        this._manager.setInduction(building);\n\n    public readonly setSupportIssueTypes = (building) =>\n        this._manager.setSupportIssueTypes(building);\n\n    constructor(\n        private _manager: BuildingManagementService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { notifySuccess, openConfirmModal } from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { PlaceZone, removeZone } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BuildingModalComponent } from './building-modal.component';\nimport { AppSettingsModalComponent } from '../ui/app-settings-modal.component';\nimport { AutoReleaseSettingsModalComponent } from './auto-release-settings-modal.component';\nimport { InductionSettingsModalComponent } from './induction-settings-modal.component';\nimport { ItemListModalComponent } from './item-list-modal.component';\n\nexport interface BuildingListOptions {\n    zone?: string;\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BuildingManagementService {\n    private _options = new BehaviorSubject<BuildingListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    public readonly filtered_buildings = combineLatest([\n        this._org.region_list,\n        this._org.building_list,\n        this._options,\n        this._org.initialised,\n    ]).pipe(\n        map(([regions, list, options]) => {\n            if (options.zone) {\n                list = list.filter((_) => _.parent_id === options.zone);\n            }\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            for (const bld of list) {\n                const parent = regions.find((_) => _.id === bld.parent_id);\n                if (parent) {\n                    (bld as any).region = parent.display_name || parent.name;\n                }\n                (bld as any).level_count =\n                    this._org.levelsForBuilding(bld)?.length || 0;\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<BuildingListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editBuilding(building: PlaceZone = new PlaceZone()) {\n        const ref = this._dialog.open(BuildingModalComponent, {\n            data: building,\n        });\n        ref.afterClosed().subscribe((data) => {\n            if (data) this._org.addZone(data);\n        });\n    }\n\n    public editBuildingMetadata(zone: PlaceZone = new PlaceZone()) {\n        const ref = this._dialog.open(AppSettingsModalComponent, {\n            data: { zone },\n        });\n        ref.afterClosed().subscribe((data) => {\n            if (data) setTimeout(() => location.reload(), 300);\n        });\n    }\n\n    public setAutoRelease(building: PlaceZone) {\n        if (!building?.id) return;\n        this._dialog.open(AutoReleaseSettingsModalComponent, {\n            data: building.id,\n        });\n    }\n\n    public setInduction(building: PlaceZone) {\n        if (!building?.id) return;\n        this._dialog.open(InductionSettingsModalComponent, {\n            data: building.id,\n        });\n    }\n\n    public setSupportIssueTypes(building: PlaceZone) {\n        if (!building?.id) return;\n        this._dialog.open(ItemListModalComponent, {\n            data: building.id,\n        });\n    }\n\n    public async removeBuilding(building: Building) {\n        const ref = await openConfirmModal(\n            {\n                title: 'Remove Building',\n                content: `Are you sure you want to remove the building \"${building.name}\"?`,\n                icon: { content: 'delete_forever' },\n                confirm_text: 'Remove',\n            },\n            this._dialog\n        );\n        if (ref.reason !== 'done') return ref.close();\n        ref.loading('Removing building...');\n        await removeZone(building.id).toPromise();\n        this._org.removeZone({ id: building.id, tags: ['building'] } as any);\n        notifySuccess('Successfully removed building.');\n        ref.close();\n    }\n}\n","import { Component } from '@angular/core';\nimport { Building } from '@placeos/organisation';\nimport { BuildingManagementService } from './building-management.service';\n\n@Component({\n    selector: '[app-building-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header\n                    class=\"flex items-center justify-between mb-2 px-8 pt-4 pb-8\"\n                >\n                    <h2 class=\"text-2xl font-medium\">Building Management</h2>\n                    <button btn matRipple (click)=\"newBuilding()\" class=\"w-40\">\n                        Add Building\n                    </button>\n                </header>\n                <building-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></building-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class BuildingManagerComponent {\n    public readonly newBuilding = () => this._state.editBuilding();\n\n    constructor(private _state: BuildingManagementService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { BuildingManagerComponent } from './building-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { BuildingListComponent } from './building-list.component';\nimport { BuildingFormComponent } from './building-form.component';\nimport { BuildingModalComponent } from './building-modal.component';\nimport { AutoReleaseSettingsModalComponent } from './auto-release-settings-modal.component';\nimport { InductionSettingsModalComponent } from './induction-settings-modal.component';\nimport { ItemListModalComponent } from './item-list-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: BuildingManagerComponent },\n    { path: 'new', component: BuildingManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        BuildingManagerComponent,\n        BuildingListComponent,\n        BuildingFormComponent,\n        BuildingModalComponent,\n        AutoReleaseSettingsModalComponent,\n        InductionSettingsModalComponent,\n        ItemListModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class BuildingManagerModule {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Building } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-modal',\n    template: `\n        <header>\n            <h2>{{ building.id ? 'Edit' : 'Add' }} Building</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\">\n            <building-form\n                [building]=\"building\"\n                [save]=\"save_state\"\n                [(loading)]=\"loading\"\n                (done)=\"close($event)\"\n            ></building-form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class BuildingModalComponent {\n    public loading = false;\n    public save_state = 0;\n    public readonly building = this._data;\n\n    public readonly close = (d?) => this._dialog_ref.close(d);\n    public readonly save = () => (this.save_state = Date.now());\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: Building | undefined,\n        private _dialog_ref: MatDialogRef<BuildingModalComponent>\n    ) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notifyError, notifySuccess } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    querySettings,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\n\n@Component({\n    selector: 'induction-settings-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between border-b border-gray-300 p-4\"\n        >\n            <h3 class=\"text-xl font-medium\">Induction Settings</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon class=\"text-2xl\">close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 flex flex-col space-y-2\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <mat-form-field\n                appearance=\"outline\"\n                class=\"w-[36rem] max-w-[80vw] h-[50vh]\"\n            >\n                <textarea\n                    matInput\n                    [(ngModel)]=\"induction_details\"\n                    placeholder=\"Induction Details\"\n                    class=\"w-[34rem] max-w-[calc(80vw-2rem)] h-[calc(50vh-2rem)] resize-none\"\n                ></textarea>\n            </mat-form-field>\n            <mat-checkbox [(ngModel)]=\"is_enabled\">\n                Enable Induction for Building\n            </mat-checkbox>\n        </main>\n        <footer class=\"px-4 pb-4 flex justify-end\" *ngIf=\"!loading\">\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-32 space-y-2\"\n            >\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InductionSettingsModalComponent {\n    public loading = '';\n    public induction_details: string = '';\n    public is_enabled: boolean = false;\n    public settings: Record<string, any> = {};\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _zone_id: string,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog_ref: MatDialogRef<InductionSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        if (!this._zone_id) return;\n        this.loadSettings();\n    }\n\n    public async loadSettings() {\n        this.loading = 'Loading induction settings for building...';\n        const visitor_kiosk_app =\n            this._settings.get('app.visitor_kiosk_app') || 'visitor-kiosk_app';\n        this.settings = {};\n        const [bld_metadata, org_metadata, org_settings] = await Promise.all([\n            await showMetadata(this._zone_id, visitor_kiosk_app).toPromise(),\n            await showMetadata(\n                this._org.organisation.id,\n                visitor_kiosk_app\n            ).toPromise(),\n            await showMetadata(\n                this._org.organisation.id,\n                'settings'\n            ).toPromise(),\n        ]);\n        this.settings = {\n            ...org_settings.details,\n            ...org_metadata.details,\n            ...bld_metadata.details,\n        };\n        this.induction_details = this.settings.induction_details || '';\n        this.is_enabled = this.settings.induction_enabled ?? false;\n        this.loading = '';\n    }\n\n    public async save() {\n        this.loading = 'Saving induction settings...';\n        const visitor_kiosk_app =\n            this._settings.get('app.visitor_kiosk_app') || 'visitor-kiosk_app';\n        this._dialog_ref.disableClose = true;\n        const metadata = await showMetadata(\n            this._zone_id,\n            visitor_kiosk_app\n        ).toPromise();\n        const new_metadata = {\n            ...metadata.details,\n            induction_details: this.induction_details,\n            induction_enabled: this.is_enabled,\n        };\n        const result = await updateMetadata(this._zone_id, {\n            name: metadata.name || visitor_kiosk_app,\n            description: metadata.description || '',\n            details: new_metadata,\n        })\n            .toPromise()\n            .catch((err) => {\n                console.error(err);\n                notifyError('Error saving induction settings');\n            });\n        this.loading = '';\n        if (result) {\n            notifySuccess('Successfully saved induction settings');\n            this._dialog_ref.close();\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notify, notifyError } from '@placeos/common';\nimport { Building } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\n\n@Component({\n    selector: 'item-list-modal',\n    template: `\n        <header>\n            <h2>Support Request Issue Types</h2>\n            <button icon matRipple mat-dialog-close=\"\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[36rem] overflow-auto h-[50vh] p-2 space-y-2\">\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                (click)=\"item_list.push({ name: '', email: '' })\"\n            >\n                Add Item\n            </button>\n            <div\n                class=\"w-full flex items-center space-x-2\"\n                *ngFor=\"let item of item_list; let i = index; trackBy: identify\"\n            >\n                <input\n                    type=\"text\"\n                    class=\"flex-1 border border-base-200 px-4 py-3 rounded\"\n                    placeholder=\"Issue Name\"\n                    [(ngModel)]=\"item_list[i].name\"\n                />\n                <input\n                    type=\"email\"\n                    class=\"flex-[2] border border-base-200 px-4 py-3 rounded\"\n                    placeholder=\"Issue Email\"\n                    [(ngModel)]=\"item_list[i].email\"\n                />\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Remove Item\"\n                    (click)=\"item_list.splice(i, 1)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end p-2 border-t border-base-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class ItemListModalComponent {\n    public item_list: { name: string; email: string }[] = [];\n    public loading: boolean = false;\n\n    public identify = (index: number, item: any) => index;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _bld_id: string,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<ItemListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        const metadata_key =\n            this._settings.get('app.workplace_metadata_key') || 'workplace_app';\n        const metadata: any = await showMetadata(\n            this._bld_id,\n            metadata_key\n        ).toPromise();\n        const items = metadata?.details?.support_issue_types || [];\n        this.item_list = items;\n    }\n\n    public async save() {\n        const metadata_key =\n            this._settings.get('app.workplace_metadata_key') || 'workplace_app';\n        this.loading = true;\n        const items = this.item_list.filter((_) => _);\n        const metadata: any = await showMetadata(\n            this._bld_id,\n            metadata_key\n        ).toPromise();\n        metadata.details.support_issue_types = items;\n        const resp = await updateMetadata(this._bld_id, {\n            name: metadata_key,\n            details: metadata.details,\n            description: metadata.description || '',\n        })\n            .toPromise()\n            .catch((_) => {\n                notifyError(`Failed to save issue types. ${_}`);\n            });\n        this.loading = false;\n        if (resp) this._dialog_ref.close();\n    }\n}\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["SettingsService","notifySuccess","EncryptionLevel","PlaceSettings","addSettings","querySettings","showMetadata","updateMetadata","updateSettings","map","yaml","MAT_DIALOG_DATA","MatDialogRef","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","AutoReleaseSettingsModalComponent_main_4_Template_a_duration_field_ngModelChange_3_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","settings","time_before","ɵɵresetView","AutoReleaseSettingsModalComponent_main_4_Template_a_duration_field_ngModelChange_6_listener","time_after","AutoReleaseSettingsModalComponent_main_4_Template_mat_select_ngModelChange_10_listener","resources","ɵɵadvance","ɵɵproperty","ɵɵtwoWayProperty","ɵɵlistener","AutoReleaseSettingsModalComponent_footer_5_Template_button_click_1_listener","_r3","save","ɵɵelement","ɵɵtextInterpolate","loading","AutoReleaseSettingsModalComponent","constructor","_id","_dialog_ref","_settings","id","ngOnInit","loadSettings","_this","_asyncToGenerator","parent_id","pipe","_","data","toPromise","unencrypted","find","encryption_level","None","load","settings_string","auto_release","_this2","old_settings","dump","metadata_key","get","metadata","details","name","description","close","ɵɵdirectiveInject","i1","i2","_2","selectors","decls","vars","consts","template","AutoReleaseSettingsModalComponent_Template","rf","ctx","ɵɵtemplate","AutoReleaseSettingsModalComponent_button_3_Template","AutoReleaseSettingsModalComponent_main_4_Template","AutoReleaseSettingsModalComponent_footer_5_Template","AutoReleaseSettingsModalComponent_ng_template_6_Template","ɵɵtemplateRefExtractor","load_state_r4","EventEmitter","SimpleChanges","FormControl","FormGroup","Validators","AsyncHandler","TIMEZONES_IANA","getInvalidFields","notifyError","Building","OrganisationService","addZone","authority","updateZone","region_r1","ɵɵtextInterpolate1","display_name","ɵɵi18n","BuildingFormComponent_ng_container_0_form_1_div_1_mat_option_7_Template","default_parent","ɵɵpipeBind1","region_list","tz_r3","BuildingFormComponent_ng_container_0_form_1_div_1_Template","BuildingFormComponent_ng_container_0_form_1_mat_option_17_Template","BuildingFormComponent_ng_container_0_form_1_mat_option_18_Template","form","tmp_5_0","length","auto_r4","filtered_timezones","timezones","ɵɵelementContainerStart","BuildingFormComponent_ng_container_0_form_1_Template","BuildingFormComponent","_org","organisation","building","loadingChange","done","required","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","location","_updateTimezoneList","subscription","valueChanges","subscribe","patchValue","ngOnChanges","changes","saveChanges","value","valid","join","getRawValue","emit","body","tags","catch","e","message","error","filter","toLowerCase","includes","inputs","outputs","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","i18n_0","ngI18nClosureMode","$localize","BuildingFormComponent_ng_container_0_Template","BuildingFormComponent_ng_template_1_Template","load_state_r5","BuildingManagementService","data_r1","data_r2","BuildingListComponent_ng_template_4_img_0_Template","BuildingListComponent_ng_template_4_span_1_Template","BuildingListComponent_ng_template_6_Template_button_click_6_listener","row_r4","row","ctx_r4","editBuildingMetadata","BuildingListComponent_ng_template_6_Template_button_click_12_listener","editBuilding","BuildingListComponent_ng_template_6_Template_button_click_18_listener","setAutoRelease","BuildingListComponent_ng_template_6_Template_button_click_24_listener","setInduction","BuildingListComponent_ng_template_6_Template_button_click_30_listener","setSupportIssueTypes","BuildingListComponent_ng_template_6_Template_button_click_36_listener","removeBuilding","menu_r6","BuildingListComponent","_manager","buildings","filtered_buildings","BuildingListComponent_Template","BuildingListComponent_ng_template_2_Template","BuildingListComponent_ng_template_4_Template","BuildingListComponent_ng_template_6_Template","ɵɵpureFunction0","_c0","_c1","_c2","ɵɵpureFunction3","_c3","image_template_r8","level_template_r7","action_template_r9","MatDialog","openConfirmModal","PlaceZone","removeZone","BehaviorSubject","combineLatest","BuildingModalComponent","AppSettingsModalComponent","InductionSettingsModalComponent","ItemListModalComponent","_dialog","_options","_change","options","asObservable","building_list","initialised","regions","list","zone","search","bld","parent","region","level_count","levelsForBuilding","setFilters","next","getValue","setSearchString","ref","open","afterClosed","setTimeout","reload","title","content","icon","confirm_text","reason","ɵɵinject","factory","ɵfac","providedIn","BuildingManagerComponent","_state","newBuilding","attrs","BuildingManagerComponent_Template","BuildingManagerComponent_Template_button_click_7_listener","CommonModule","FormsModule","RouterModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","ROUTES","path","component","BuildingManagerModule","_3","forChild","declarations","imports","BuildingModalComponent_footer_6_Template_button_click_1_listener","_data","save_state","d","Date","now","BuildingModalComponent_Template","BuildingModalComponent_button_3_Template","BuildingModalComponent_Template_building_form_loadingChange_5_listener","BuildingModalComponent_Template_building_form_done_5_listener","BuildingModalComponent_footer_6_Template","InductionSettingsModalComponent_main_4_Template_textarea_ngModelChange_2_listener","induction_details","InductionSettingsModalComponent_main_4_Template_mat_checkbox_ngModelChange_3_listener","is_enabled","InductionSettingsModalComponent_footer_5_Template_button_click_1_listener","_zone_id","visitor_kiosk_app","bld_metadata","org_metadata","org_settings","Promise","all","induction_enabled","disableClose","new_metadata","result","err","console","i3","InductionSettingsModalComponent_Template","InductionSettingsModalComponent_button_3_Template","InductionSettingsModalComponent_main_4_Template","InductionSettingsModalComponent_footer_5_Template","InductionSettingsModalComponent_ng_template_6_Template","ItemListModalComponent_div_9_Template_input_ngModelChange_1_listener","i_r2","index","ctx_r2","item_list","ItemListModalComponent_div_9_Template_input_ngModelChange_2_listener","email","ItemListModalComponent_div_9_Template_button_click_3_listener","splice","_bld_id","identify","item","items","support_issue_types","resp","ItemListModalComponent_Template","ItemListModalComponent_Template_button_click_7_listener","push","ItemListModalComponent_div_9_Template","ItemListModalComponent_Template_button_click_11_listener","getUnixTime","MapLocation","type","position","map_id","asset_id","x","map_width","y","map_height","variance","last_seen","level","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}