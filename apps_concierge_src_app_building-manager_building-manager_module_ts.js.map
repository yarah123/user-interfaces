{"version":3,"file":"apps_concierge_src_app_building-manager_building-manager_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/building-manager/auto-release-settings-modal.component.ts","./apps/concierge/src/app/building-manager/building-form.component.ts","./apps/concierge/src/app/building-manager/building-list.component.ts","./apps/concierge/src/app/building-manager/building-management.service.ts","./apps/concierge/src/app/building-manager/building-manager.component.ts","./apps/concierge/src/app/building-manager/building-manager.module.ts","./apps/concierge/src/app/building-manager/building-modal.component.ts","./apps/concierge/src/app/building-manager/item-list-modal.component.ts"],"sourcesContent":["import { SettingsService, notifySuccess } from '@placeos/common';\nimport {\n    EncryptionLevel,\n    PlaceSettings,\n    addSettings,\n    querySettings,\n    showMetadata,\n    updateMetadata,\n    updateSettings,\n} from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\nimport * as yaml from 'js-yaml';\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'auto-release-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between border-b border-gray-300 p-4\"\n        >\n            <h3 class=\"text-xl font-medium\">Auto-Release Settings</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon class=\"text-2xl\">close</app-icon>\n            </button>\n        </header>\n        <main class=\"px-2 w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <label>Before Event</label>\n            <a-duration-field\n                [min]=\"0\"\n                [(ngModel)]=\"settings.time_before\"\n            ></a-duration-field>\n            <label>After Event</label>\n            <a-duration-field\n                [min]=\"0\"\n                [(ngModel)]=\"settings.time_after\"\n            ></a-duration-field>\n            <label>Event Types</label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"settings.resources\"\n                    placeholder=\"Set Event Types...\"\n                >\n                    <!-- <mat-option value=\"room\">\n                        Rooms\n                    </mat-option> -->\n                    <mat-option value=\"desk\"> Desks </mat-option>\n                    <mat-option value=\"visitor\"> Visitors </mat-option>\n                    <mat-option value=\"parking\"> Parking </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </main>\n        <footer class=\"p-4 flex justify-end\" *ngIf=\"!loading\">\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-32 space-y-2\"\n            >\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class AutoReleaseSettingsModalComponent {\n    public loading = '';\n    public readonly id = this._id;\n    public settings = {};\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _id: string,\n        private _dialog_ref: MatDialogRef<AutoReleaseSettingsModalComponent>,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        this.loadSettings(this.id);\n    }\n\n    public async loadSettings(id: string) {\n        this.loading = 'Loading auto-release settings for building...';\n        this.settings = {};\n        const settings = await querySettings({ parent_id: id })\n            .pipe(map((_) => _.data))\n            .toPromise();\n        const unencrypted = settings.find(\n            (_) => _.encryption_level === EncryptionLevel.None\n        );\n        if (!unencrypted) return;\n        try {\n            this.settings =\n                yaml.load(unencrypted.settings_string)?.auto_release || {};\n        } catch {}\n        this.loading = '';\n    }\n\n    public async save() {\n        this.loading = 'Saving changes to auto-release settings...';\n        const settings = await querySettings({ parent_id: this.id })\n            .pipe(map((_) => _.data))\n            .toPromise();\n        let unencrypted = settings.find(\n            (_) => _.encryption_level === EncryptionLevel.None\n        );\n        if (!unencrypted) {\n            unencrypted = new PlaceSettings({\n                parent_id: this.id,\n                encryption_level: EncryptionLevel.None,\n                settings_string: '',\n            });\n        }\n        let old_settings = {};\n        try {\n            old_settings = yaml.load(unencrypted.settings_string) || {};\n        } catch {}\n        (unencrypted as any).settings_string = yaml.dump({\n            ...old_settings,\n            auto_release: this.settings,\n        });\n        unencrypted.id\n            ? await updateSettings(unencrypted.id, unencrypted).toPromise()\n            : await addSettings(unencrypted).toPromise();\n\n        const metadata_key =\n            this._settings.get('app.workplace_metadata_key') || 'workplace_app';\n        const metadata = await showMetadata(this.id, metadata_key).toPromise();\n        const details: any = metadata.details || {};\n        details.auto_release = this.settings;\n        await updateMetadata(this.id, {\n            name: metadata_key,\n            details,\n            description: '',\n        }).toPromise();\n        notifySuccess('Auto-release settings updated');\n        this.loading = '';\n        this._dialog_ref.close();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    AsyncHandler,\n    TIMEZONES_IANA,\n    getInvalidFields,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { addZone, authority, updateZone } from '@placeos/ts-client';\n\n@Component({\n    selector: 'building-form',\n    template: `\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <form\n                building\n                class=\"flex flex-col w-[36rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"(region_list | async)?.length\"\n                >\n                    <label for=\"region\" i18n=\"@@displayNameLabel\">\n                        Region:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            name=\"region\"\n                            formControlName=\"parent_id\"\n                            placeholder=\"Select Region...\"\n                        >\n                            <mat-option [value]=\"default_parent\"\n                                >None</mat-option\n                            >\n                            <mat-option\n                                *ngFor=\"let region of region_list | async\"\n                                [value]=\"region.id\"\n                            >\n                                {{ region.display_name || region.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"display-name\" i18n=\"@@displayNameLabel\">\n                        Display Name:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"display-name\"\n                            placeholder=\"Display Name\"\n                            formControlName=\"display_name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"display-name\" i18n=\"@@displayNameLabel\">\n                        Timezone:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <app-icon matPrefix class=\"text-2xl\">search</app-icon>\n                        <input\n                            matInput\n                            formControlName=\"timezone\"\n                            placeholder=\"Building timezone\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                    </mat-form-field>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let tz of filtered_timezones\"\n                            [value]=\"tz\"\n                            >{{ tz }}</mat-option\n                        >\n                        <mat-option *ngIf=\"!timezones.length\" [disabled]=\"true\">\n                            No matching timezones\n                        </mat-option>\n                    </mat-autocomplete>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"address\" i18n=\"@@displayNameLabel\">\n                        Location:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"address\"\n                            placeholder=\"Location or Address...\"\n                            formControlName=\"location\"\n                        />\n                    </mat-form-field>\n                </div>\n            </form>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving building...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class BuildingFormComponent extends AsyncHandler {\n    @Input() public building: Building | null = null;\n    @Input() public save: number = 0;\n    @Input() public loading = false;\n    @Output() public loadingChange = new EventEmitter<boolean>();\n    @Output() public done = new EventEmitter();\n\n    public timezones: string[] = [];\n    public filtered_timezones: string[] = [];\n    public readonly region_list = this._org.region_list;\n\n    public readonly form = new FormGroup({\n        id: new FormControl(''),\n        parent_id: new FormControl(this._org.organisation.id, [\n            Validators.required,\n        ]),\n        display_name: new FormControl('', [Validators.required]),\n        timezone: new FormControl(\n            Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || ''\n        ),\n        location: new FormControl(''),\n    });\n\n    public get default_parent() {\n        return this._org.organisation.id;\n    }\n\n    constructor(private _org: OrganisationService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._updateTimezoneList();\n        this.subscription(\n            'tz-change',\n            this.form.valueChanges.subscribe(\n                ({ timezone }) =>\n                    (this.filtered_timezones = this.timezones.filter((_) =>\n                        _.toLowerCase().includes(timezone.toLowerCase())\n                    ))\n            )\n        );\n        if (this.building) this.form.patchValue(this.building);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.building && this.building) {\n            this.form.patchValue(this.building);\n        }\n        if (changes.save && this.save) this.saveChanges();\n    }\n\n    public async saveChanges() {\n        this.form.patchValue({\n            parent_id: this.form.value.parent_id || this._org.organisation.id,\n        });\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const data = this.form.getRawValue();\n        this.loading = true;\n        this.loadingChange.emit(true);\n        const body = {\n            ...data,\n            tags: ['building'],\n            name: `BLD ${authority().description} ${data.display_name}`,\n        };\n        const building = await (data.id\n            ? updateZone(data.id, body)\n            : addZone(body)\n        )\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error saving building: ${e.message || e.error || e}`\n                );\n                this.loading = false;\n                this.loadingChange.emit(false);\n                throw e;\n            });\n        notifySuccess('Successfully saved building.');\n        this.loading = false;\n        this.loadingChange.emit(false);\n        this.done.emit(building);\n    }\n\n    private _updateTimezoneList() {\n        const timezone = this.form?.value?.timezone || '';\n        this.timezones = TIMEZONES_IANA;\n        this.filtered_timezones = this.timezones.filter((_) =>\n            _.toLowerCase().includes(timezone.toLowerCase())\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { BuildingManagementService } from './building-management.service';\nimport {\n    EncryptionLevel,\n    PlaceSettings,\n    addSettings,\n    querySettings,\n    showMetadata,\n    updateMetadata,\n    updateSettings,\n} from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\nimport { SettingsService, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'building-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-4\">\n            <custom-table\n                class=\"block min-w-[60rem] w-full h-full\"\n                [dataSource]=\"buildings\"\n                [columns]=\"[\n                    'display_name',\n                    'address',\n                    'timezone',\n                    'region',\n                    'level_count',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'Name',\n                    'Location',\n                    'Timezone',\n                    'Region',\n                    'Levels',\n                    ' '\n                ]\"\n                [column_size]=\"['12r', 'flex', '12r', '10r', '6r', '3.75r']\"\n                [template]=\"{\n                    images: image_template,\n                    zones: level_template,\n                    actions: action_template\n                }\"\n                empty=\"No buildings\"\n            ></custom-table>\n        </div>\n        <ng-template #level_template let-data=\"data\">\n            {{ (data | level)?.display_name || (data | level)?.name }}\n        </ng-template>\n        <ng-template #image_template let-data=\"data\">\n            <img\n                auth\n                *ngIf=\"data.length\"\n                [source]=\"data[0]\"\n                class=\"max-h-[3rem] max-w-[8rem]\"\n            />\n            <span *ngIf=\"!data.length\" class=\"opacity-30\">No Images</span>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <button btn icon matRipple [matMenuTriggerFor]=\"menu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"editBuildingMetadata(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-xl\">edit_square</app-icon>\n                            <span>App Configuration</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"editBuilding(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-xl\">edit</app-icon>\n                            <span>Edit Building</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"setAutoRelease(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon\n                                className=\"material-symbols-rounded\"\n                                class=\"text-xl\"\n                            >\n                                release_alert\n                            </app-icon>\n                            <span>Auto-release Settings</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"setSupportIssueTypes(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon\n                                className=\"material-symbols-rounded\"\n                                class=\"text-xl\"\n                            >\n                                support_agent\n                            </app-icon>\n                            <span>Support Request Types</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"removeBuilding(row)\">\n                        <div class=\"flex items-center space-x-2 text-red-500\">\n                            <app-icon class=\"text-error text-xl\">\n                                delete\n                            </app-icon>\n                            <span>Delete Building</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class BuildingListComponent {\n    public readonly buildings = this._manager.filtered_buildings;\n    public settings = {};\n\n    public readonly editBuilding = (building) =>\n        this._manager.editBuilding(building);\n\n    public readonly editBuildingMetadata = (building) =>\n        this._manager.editBuildingMetadata(building);\n\n    public readonly removeBuilding = (building) =>\n        this._manager.removeBuilding(building);\n\n    public readonly setAutoRelease = (building) =>\n        this._manager.setAutoRelease(building);\n\n    public readonly setSupportIssueTypes = (building) =>\n        this._manager.setSupportIssueTypes(building);\n\n    constructor(\n        private _manager: BuildingManagementService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { notifySuccess, openConfirmModal } from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { PlaceZone, removeZone } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BuildingModalComponent } from './building-modal.component';\nimport { AppSettingsModalComponent } from '../ui/app-settings-modal.component';\nimport { AutoReleaseSettingsModalComponent } from './auto-release-settings-modal.component';\nimport { ItemListModalComponent } from './item-list-modal.component';\n\nexport interface BuildingListOptions {\n    zone?: string;\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BuildingManagementService {\n    private _options = new BehaviorSubject<BuildingListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    public readonly filtered_buildings = combineLatest([\n        this._org.region_list,\n        this._org.building_list,\n        this._options,\n        this._org.initialised,\n    ]).pipe(\n        map(([regions, list, options]) => {\n            if (options.zone) {\n                list = list.filter((_) => _.parent_id === options.zone);\n            }\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            for (const bld of list) {\n                const parent = regions.find((_) => _.id === bld.parent_id);\n                if (parent) {\n                    (bld as any).region = parent.display_name || parent.name;\n                }\n                (bld as any).level_count =\n                    this._org.levelsForBuilding(bld)?.length || 0;\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<BuildingListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editBuilding(building: PlaceZone = new PlaceZone()) {\n        const ref = this._dialog.open(BuildingModalComponent, {\n            data: building,\n        });\n        ref.afterClosed().subscribe((data) => {\n            if (data) this._org.addZone(data);\n        });\n    }\n\n    public editBuildingMetadata(zone: PlaceZone = new PlaceZone()) {\n        const ref = this._dialog.open(AppSettingsModalComponent, {\n            data: { zone },\n        });\n        ref.afterClosed().subscribe((data) => {\n            if (data) setTimeout(() => location.reload(), 300);\n        });\n    }\n\n    public setAutoRelease(building: PlaceZone) {\n        if (!building?.id) return;\n        this._dialog.open(AutoReleaseSettingsModalComponent, {\n            data: building.id,\n        });\n    }\n\n    public setSupportIssueTypes(building: PlaceZone) {\n        if (!building?.id) return;\n        this._dialog.open(ItemListModalComponent, {\n            data: building.id,\n        });\n    }\n\n    public async removeBuilding(building: Building) {\n        const ref = await openConfirmModal(\n            {\n                title: 'Remove Building',\n                content: `Are you sure you want to remove the building \"${building.name}\"?`,\n                icon: { content: 'delete_forever' },\n                confirm_text: 'Remove',\n            },\n            this._dialog\n        );\n        if (ref.reason !== 'done') return ref.close();\n        ref.loading('Removing building...');\n        await removeZone(building.id).toPromise();\n        this._org.removeZone({ id: building.id, tags: ['building'] } as any);\n        notifySuccess('Successfully removed building.');\n        ref.close();\n    }\n}\n","import { Component } from '@angular/core';\nimport { Building } from '@placeos/organisation';\nimport { BuildingManagementService } from './building-management.service';\n\n@Component({\n    selector: '[app-building-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header class=\"flex items-center justify-between mb-2 p-8\">\n                    <h2 class=\"text-2xl font-medium\">Building Management</h2>\n                    <button btn matRipple (click)=\"newBuilding()\">\n                        Add Building\n                    </button>\n                </header>\n                <building-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></building-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class BuildingManagerComponent {\n    public readonly newBuilding = () => this._state.editBuilding();\n\n    constructor(private _state: BuildingManagementService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { BuildingManagerComponent } from './building-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { BuildingListComponent } from './building-list.component';\nimport { BuildingFormComponent } from './building-form.component';\nimport { BuildingModalComponent } from './building-modal.component';\nimport { AutoReleaseSettingsModalComponent } from './auto-release-settings-modal.component';\nimport { ItemListModalComponent } from './item-list-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: BuildingManagerComponent },\n    { path: 'new', component: BuildingManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        BuildingManagerComponent,\n        BuildingListComponent,\n        BuildingFormComponent,\n        BuildingModalComponent,\n        AutoReleaseSettingsModalComponent,\n        ItemListModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class BuildingManagerModule {}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Building } from '@placeos/organisation';\n\n@Component({\n    selector: 'building-modal',\n    template: `\n        <header>\n            <h2>{{ building.id ? 'Edit' : 'Add' }} Building</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\">\n            <building-form\n                [building]=\"building\"\n                [save]=\"save_state\"\n                [(loading)]=\"loading\"\n                (done)=\"close($event)\"\n            ></building-form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class BuildingModalComponent {\n    public loading = false;\n    public save_state = 0;\n    public readonly building = this._data;\n\n    public readonly close = (d?) => this._dialog_ref.close(d);\n    public readonly save = () => (this.save_state = Date.now());\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: Building | undefined,\n        private _dialog_ref: MatDialogRef<BuildingModalComponent>\n    ) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notify, notifyError } from '@placeos/common';\nimport { Building } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\n\n@Component({\n    selector: 'item-list-modal',\n    template: `\n        <header>\n            <h2>Support Request Issue Types</h2>\n            <button icon matRipple mat-dialog-close=\"\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"w-[24rem] overflow-auto h-[50vh] p-2 space-y-2\">\n            <button btn matRipple class=\"w-full\" (click)=\"item_list.push('')\">\n                Add Item\n            </button>\n            <div\n                class=\"w-full flex items-center space-x-2\"\n                *ngFor=\"let item of item_list; let i = index; trackBy: identify\"\n            >\n                <input\n                    type=\"text\"\n                    class=\"w-full border border-base-200 px-4 py-3 rounded\"\n                    placeholder=\"Issue Name\"\n                    [(ngModel)]=\"item_list[i]\"\n                />\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Remove Item\"\n                    (click)=\"item_list.splice(i, 1)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-end p-2 border-t border-base-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n    `,\n    styles: [``],\n})\nexport class ItemListModalComponent {\n    public item_list: string[] = [];\n    public loading: boolean = false;\n\n    public identify = (index: number, item: any) => index;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _bld_id: string,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<ItemListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        const metadata_key =\n            this._settings.get('app.workplace_metadata_key') || 'workplace_app';\n        const metadata: any = await showMetadata(\n            this._bld_id,\n            metadata_key\n        ).toPromise();\n        const items = metadata?.details?.support_issue_types || [];\n        this.item_list = items;\n    }\n\n    public async save() {\n        const metadata_key =\n            this._settings.get('app.workplace_metadata_key') || 'workplace_app';\n        this.loading = true;\n        const items = this.item_list.filter((_) => _);\n        const metadata: any = await showMetadata(\n            this._bld_id,\n            metadata_key\n        ).toPromise();\n        metadata.details.support_issue_types = items;\n        const resp = await updateMetadata(this._bld_id, {\n            name: metadata_key,\n            details: metadata.details,\n            description: metadata.description || '',\n        })\n            .toPromise()\n            .catch((_) => {\n                notifyError(`Failed to save issue types. ${_}`);\n            });\n        this.loading = false;\n        if (resp) this._dialog_ref.close();\n    }\n}\n"],"names":["SettingsService","notifySuccess","EncryptionLevel","PlaceSettings","addSettings","querySettings","showMetadata","updateMetadata","updateSettings","map","yaml","MAT_DIALOG_DATA","MatDialogRef","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AutoReleaseSettingsModalComponent_main_4_Template_a_duration_field_ngModelChange_3_listener","$event","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","settings","time_before","AutoReleaseSettingsModalComponent_main_4_Template_a_duration_field_ngModelChange_6_listener","ctx_r7","time_after","AutoReleaseSettingsModalComponent_main_4_Template_mat_select_ngModelChange_10_listener","ctx_r8","resources","ɵɵadvance","ɵɵproperty","ctx_r1","AutoReleaseSettingsModalComponent_footer_5_Template_button_click_1_listener","_r10","ctx_r9","save","ɵɵelement","ɵɵtextInterpolate","ctx_r3","loading","AutoReleaseSettingsModalComponent","constructor","_id","_dialog_ref","_settings","id","ngOnInit","loadSettings","_this","_asyncToGenerator","parent_id","pipe","_","data","toPromise","unencrypted","find","encryption_level","None","load","settings_string","auto_release","_this2","old_settings","dump","metadata_key","get","metadata","details","name","description","close","ɵɵdirectiveInject","i1","i2","_2","selectors","decls","vars","consts","template","AutoReleaseSettingsModalComponent_Template","rf","ctx","ɵɵtemplate","AutoReleaseSettingsModalComponent_button_3_Template","AutoReleaseSettingsModalComponent_main_4_Template","AutoReleaseSettingsModalComponent_footer_5_Template","AutoReleaseSettingsModalComponent_ng_template_6_Template","ɵɵtemplateRefExtractor","_r4","EventEmitter","SimpleChanges","FormControl","FormGroup","Validators","AsyncHandler","TIMEZONES_IANA","getInvalidFields","notifyError","Building","OrganisationService","addZone","authority","updateZone","region_r9","ɵɵtextInterpolate1","display_name","ɵɵi18n","BuildingFormComponent_ng_container_0_form_1_div_1_mat_option_7_Template","ctx_r4","default_parent","ɵɵpipeBind1","region_list","tz_r10","BuildingFormComponent_ng_container_0_form_1_div_1_Template","BuildingFormComponent_ng_container_0_form_1_mat_option_17_Template","BuildingFormComponent_ng_container_0_form_1_mat_option_18_Template","form","tmp_1_0","length","_r5","filtered_timezones","timezones","ɵɵelementContainerStart","BuildingFormComponent_ng_container_0_form_1_Template","ɵɵelementContainerEnd","ctx_r0","BuildingFormComponent","_org","organisation","building","loadingChange","done","required","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","location","_updateTimezoneList","subscription","valueChanges","subscribe","filter","toLowerCase","includes","patchValue","ngOnChanges","changes","saveChanges","value","valid","join","getRawValue","emit","body","tags","catch","e","message","error","inputs","outputs","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","i18n_0","ngI18nClosureMode","$localize","BuildingFormComponent_ng_container_0_Template","BuildingFormComponent_ng_template_1_Template","_r2","BuildingManagementService","tmp_0_0","data_r6","data_r7","BuildingListComponent_ng_template_4_img_0_Template","BuildingListComponent_ng_template_4_span_1_Template","BuildingListComponent_ng_template_6_Template_button_click_6_listener","restoredCtx","_r14","row_r11","row","ctx_r13","editBuildingMetadata","BuildingListComponent_ng_template_6_Template_button_click_12_listener","ctx_r15","editBuilding","BuildingListComponent_ng_template_6_Template_button_click_18_listener","ctx_r16","setAutoRelease","BuildingListComponent_ng_template_6_Template_button_click_24_listener","ctx_r17","setSupportIssueTypes","BuildingListComponent_ng_template_6_Template_button_click_30_listener","ctx_r18","removeBuilding","_r12","BuildingListComponent","_manager","buildings","filtered_buildings","BuildingListComponent_Template","BuildingListComponent_ng_template_2_Template","BuildingListComponent_ng_template_4_Template","BuildingListComponent_ng_template_6_Template","ɵɵpureFunction0","_c0","_c1","_c2","ɵɵpureFunction3","_c3","_r3","_r1","MatDialog","openConfirmModal","PlaceZone","removeZone","BehaviorSubject","combineLatest","BuildingModalComponent","AppSettingsModalComponent","ItemListModalComponent","_dialog","_options","_change","options","asObservable","building_list","initialised","regions","list","zone","search","bld","parent","region","level_count","levelsForBuilding","setFilters","next","getValue","setSearchString","ref","open","afterClosed","setTimeout","reload","title","content","icon","confirm_text","reason","ɵɵinject","factory","ɵfac","providedIn","BuildingManagerComponent","_state","newBuilding","attrs","BuildingManagerComponent_Template","BuildingManagerComponent_Template_button_click_7_listener","CommonModule","FormsModule","RouterModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","ROUTES","path","component","BuildingManagerModule","_3","forChild","declarations","imports","BuildingModalComponent_footer_6_Template_button_click_1_listener","ctx_r2","_data","save_state","d","Date","now","BuildingModalComponent_Template","BuildingModalComponent_button_3_Template","BuildingModalComponent_Template_building_form_loadingChange_5_listener","BuildingModalComponent_Template_building_form_done_5_listener","BuildingModalComponent_footer_6_Template","ItemListModalComponent_div_9_Template_input_ngModelChange_1_listener","i_r2","index","item_list","ItemListModalComponent_div_9_Template_button_click_2_listener","splice","_bld_id","identify","item","items","support_issue_types","resp","ItemListModalComponent_Template","ItemListModalComponent_Template_button_click_7_listener","push","ItemListModalComponent_div_9_Template","ItemListModalComponent_Template_button_click_11_listener"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}