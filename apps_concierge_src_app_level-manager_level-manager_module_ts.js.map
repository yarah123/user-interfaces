{"version":3,"file":"apps_concierge_src_app_level-manager_level-manager_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/level-manager/level-list.component.ts","./apps/concierge/src/app/level-manager/level-management.service.ts","./apps/concierge/src/app/level-manager/level-manager.component.ts","./apps/concierge/src/app/level-manager/level-manager.module.ts","./apps/concierge/src/app/level-manager/level-modal.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LevelManagementService } from './level-management.service';\n\n@Component({\n    selector: 'level-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-4\">\n            <custom-table\n                class=\"block min-w-[28rem] w-full h-full\"\n                [dataSource]=\"levels\"\n                [columns]=\"['display_name', 'building', 'parking', 'actions']\"\n                [display_column]=\"['Name', 'Building', 'Parking', ' ']\"\n                [column_size]=\"['flex', '12r', '4r', '3.75r']\"\n                [template]=\"{\n                    actions: action_template,\n                    parking: parking_template\n                }\"\n                empty=\"No levels\"\n            ></custom-table>\n        </div>\n        <ng-template #parking_template let-row=\"row\">\n            <div\n                *ngIf=\"row.tags?.includes('parking')\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <button btn icon matRipple [matMenuTriggerFor]=\"menu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"editLevel(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon>edit</app-icon>\n                            <span>Edit Level</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"removeLevel(row)\">\n                        <div class=\"flex items-center space-x-2 text-red-500\">\n                            <app-icon>delete</app-icon>\n                            <span>Delete Level</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LevelListComponent {\n    public readonly levels = this._manager.filtered_levels;\n\n    public readonly editLevel = (level) => this._manager.editLevel(level);\n    public readonly removeLevel = (level) => this._manager.removeLevel(level);\n\n    constructor(private _manager: LevelManagementService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { PlaceZone, removeZone } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LevelModalComponent } from './level-modal.component';\nimport { notifySuccess, openConfirmModal } from '@placeos/common';\n\nexport interface LevelListOptions {\n    zone?: string;\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LevelManagementService {\n    private _options = new BehaviorSubject<LevelListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    public readonly level_list = this._org.level_list;\n\n    public readonly filtered_levels = combineLatest([\n        this.level_list,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            if (options.zone) {\n                list = list.filter((_) => _.parent_id === options.zone);\n            }\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            for (const level of list) {\n                const parent = this._org.buildings.find(\n                    (bld) => bld.id === level.parent_id\n                );\n                if (parent) {\n                    (level as any).building =\n                        parent.display_name || parent.name;\n                }\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<LevelListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editLevel(level: PlaceZone = new PlaceZone()) {\n        const ref = this._dialog.open(LevelModalComponent, {\n            data: level,\n        });\n        ref.afterClosed().subscribe((data) => {\n            if (data) this._org.addZone(data);\n        });\n    }\n\n    public async removeLevel(level: BuildingLevel) {\n        const ref = await openConfirmModal(\n            {\n                title: 'Remove Building',\n                content: `Are you sure you want to remove the building \"${level.name}\"?`,\n                icon: { content: 'delete_forever' },\n                confirm_text: 'Remove',\n            },\n            this._dialog\n        );\n        if (ref.reason !== 'done') return ref.close();\n        ref.loading('Removing building...');\n        await removeZone(level.id).toPromise();\n        this._org.removeZone({ id: level.id, tags: ['level'] } as any);\n        notifySuccess('Successfully removed building.');\n        ref.close();\n    }\n}\n","import { Component } from '@angular/core';\nimport { LevelManagementService } from './level-management.service';\n\n@Component({\n    selector: '[app-level-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header\n                    class=\"flex items-center justify-between mb-2 px-4 py-8\"\n                >\n                    <h2 class=\"text-2xl font-medium\">Level Management</h2>\n                    <button btn matRipple (click)=\"newLevel()\">\n                        Add Level\n                    </button>\n                </header>\n                <level-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></level-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class LevelManagerComponent {\n    public readonly newLevel = () => this._manager.editLevel();\n\n    constructor(private _manager: LevelManagementService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { LevelManagerComponent } from './level-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { LevelListComponent } from './level-list.component';\nimport { LevelModalComponent } from './level-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: LevelManagerComponent },\n    { path: 'new', component: LevelManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        LevelManagerComponent,\n        LevelListComponent,\n        LevelModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class LevelManagerModule {}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { getInvalidFields, notifyError } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { addZone, authority, updateZone } from '@placeos/ts-client';\n\n@Component({\n    selector: 'level-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Level</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[36rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.parent_id\">\n                    <label\n                        for=\"zone\"\n                        [class.error]=\"\n                            form.controls.parent_id.invalid &&\n                            form.controls.parent_id.touched\n                        \"\n                        i18n=\"@@zoneLabel\"\n                    >\n                        Building<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"parent_id\"\n                            placeholder=\"Select Building\"\n                        >\n                            <mat-option\n                                *ngFor=\"let building of building_list | async\"\n                                [value]=\"building.id\"\n                            >\n                                {{ building.display_name || building.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>Building is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.display_name\">\n                    <label for=\"display-name\" i18n=\"@@displayNameLabel\">\n                        Display Name:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"display-name\"\n                            placeholder=\"Display Name\"\n                            i18n-placeholder=\"@@displayNamePlaceholder\"\n                            formControlName=\"display_name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.map_id\">\n                    <label for=\"map-id\" i18n=\"@@mapIdLabel\"> Map URL: </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"map-id\"\n                            placeholder=\"URL of the Map SVG file\"\n                            i18n-placeholder=\"@@mapIdPlaceholder\"\n                            formControlName=\"map_id\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col py-2\" *ngIf=\"form.controls.parking\">\n                    <mat-checkbox name=\"parking\" formControlName=\"parking\">\n                        Has Parking Spaces\n                    </mat-checkbox>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving level...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LevelModalComponent {\n    public loading = false;\n    public readonly building_list = this._org.building_list;\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this._data?.id || ''),\n        display_name: new FormControl(this._data?.display_name || '', [\n            Validators.required,\n        ]),\n        parent_id: new FormControl(this._data?.parent_id || '', [\n            Validators.required,\n        ]),\n        map_id: new FormControl(this._data?.map_id || '', [\n            Validators.required,\n        ]),\n        parking: new FormControl(\n            this._data?.tags?.includes('parking') || false\n        ),\n    });\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: BuildingLevel | undefined,\n        private _dialog_ref: MatDialogRef<LevelModalComponent>\n    ) {}\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        this.loading = true;\n        const data: any = this.form.getRawValue();\n        data.tags = data.parking ? ['level', 'parking'] : ['level'];\n        const resp = await (data.id\n            ? updateZone(data.id, {\n                  ...data,\n                  name: `LEVEL ${authority().description} ${data.display_name}`,\n              })\n            : addZone({\n                  ...data,\n                  name: `LEVEL ${authority().description} ${data.display_name}`,\n              })\n        )\n            .toPromise()\n            .catch();\n        if (resp.id) this._dialog_ref.close(resp);\n        this.loading = false;\n    }\n}\n"],"names":["LevelManagementService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LevelListComponent_ng_template_2_div_0_Template","ɵɵproperty","row_r4","tags","includes","ɵɵlistener","LevelListComponent_ng_template_4_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r9","row_r6","row","ctx_r8","ɵɵnextContext","ɵɵresetView","editLevel","LevelListComponent_ng_template_4_Template_button_click_12_listener","ctx_r10","removeLevel","ɵɵadvance","_r7","LevelListComponent","constructor","_manager","levels","filtered_levels","level","_","ɵɵdirectiveInject","i1","_2","selectors","decls","vars","consts","template","LevelListComponent_Template","rf","ctx","ɵɵelement","LevelListComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","LevelListComponent_ng_template_4_Template","ɵɵpureFunction0","_c0","_c1","_c2","ɵɵpureFunction2","_c3","_r3","_r1","MatDialog","OrganisationService","PlaceZone","removeZone","BehaviorSubject","combineLatest","map","LevelModalComponent","notifySuccess","openConfirmModal","_org","_dialog","_options","_change","options","asObservable","level_list","pipe","list","zone","filter","parent_id","search","name","toLowerCase","parent","buildings","find","bld","id","building","display_name","setFilters","next","getValue","setSearchString","ref","open","data","afterClosed","subscribe","addZone","_this","_asyncToGenerator","title","content","icon","confirm_text","reason","close","loading","toPromise","ɵɵinject","i2","factory","ɵfac","providedIn","LevelManagerComponent","newLevel","attrs","LevelManagerComponent_Template","LevelManagerComponent_Template_button_click_7_listener","CommonModule","FormsModule","RouterModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","ROUTES","path","component","LevelManagerModule","_3","forChild","declarations","imports","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","MatDialogRef","getInvalidFields","notifyError","BuildingLevel","authority","updateZone","building_r11","ɵɵtextInterpolate1","ɵɵi18nStart","ɵɵi18nEnd","LevelModalComponent_main_4_form_1_div_1_mat_option_6_Template","ɵɵclassProp","ctx_r6","form","controls","invalid","touched","ɵɵpipeBind1","building_list","ɵɵi18n","LevelModalComponent_main_4_form_1_div_1_Template","LevelModalComponent_main_4_form_1_div_2_Template","LevelModalComponent_main_4_form_1_div_3_Template","LevelModalComponent_main_4_form_1_div_4_Template","ctx_r5","map_id","parking","LevelModalComponent_main_4_form_1_Template","ctx_r1","LevelModalComponent_footer_5_Template_button_click_1_listener","_r13","ctx_r12","save","_data","_dialog_ref","required","valid","join","getRawValue","resp","description","catch","i18n_0","ngI18nClosureMode","$localize","LevelModalComponent_button_3_Template","LevelModalComponent_main_4_Template","LevelModalComponent_footer_5_Template","LevelModalComponent_ng_template_6_Template","value","_r4"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}