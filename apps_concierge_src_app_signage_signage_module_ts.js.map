{"version":3,"file":"apps_concierge_src_app_signage_signage_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/signage/signage-display-modal.component.ts","./apps/concierge/src/app/signage/signage-displays.component.ts","./apps/concierge/src/app/signage/signage-media-preview-modal.component.ts","./apps/concierge/src/app/signage/signage-media.component.ts","./apps/concierge/src/app/signage/signage-playlist-modal.component.ts","./apps/concierge/src/app/signage/signage-playlists.component.ts","./apps/concierge/src/app/signage/signage-state.service.ts","./apps/concierge/src/app/signage/signage-topbar.component.ts","./apps/concierge/src/app/signage/signage-triggers.component.ts","./apps/concierge/src/app/signage/signage-zones.component.ts","./apps/concierge/src/app/signage/signage.classes.ts","./apps/concierge/src/app/signage/signage.component.ts","./apps/concierge/src/app/signage/signage.module.ts"],"sourcesContent":["import { Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\nimport { SignageDisplay, SignagePlaylist } from './signage.classes';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport { SignageStateService } from './signage-state.service';\nimport { ta } from 'date-fns/locale';\nimport { notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'signage-display-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">{{ display.id ? 'Edit' : 'New' }} Display</h1>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            class=\"p-2 flex flex-col\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <label for=\"name\">Name<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <input\n                    matInput\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\"\n                />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n            <label for=\"description\">Description</label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n            <label for=\"description\">Orientation<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <mat-select formControlName=\"orientation\">\n                    <mat-option value=\"landscape\">Landscape</mat-option>\n                    <mat-option value=\"portrait\">Portrait</mat-option>\n                </mat-select>\n                <mat-error>Orientation is required</mat-error>\n            </mat-form-field>\n            <label for=\"media\">Playlists</label>\n            <custom-table\n                class=\"block w-full mb-2\"\n                [dataSource]=\"playlist_list\"\n                [columns]=\"['_index', 'name', 'type', 'duration', 'actions']\"\n                [display_column]=\"[' ', 'Name', 'Type', 'Duration', ' ']\"\n                [column_size]=\"['3r', 'flex', '10r', '6r', '10r']\"\n                [template]=\"{\n                    duration: duration_template,\n                    actions: actions_template\n                }\"\n            >\n            </custom-table>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                [matMenuTriggerFor]=\"media_menu\"\n                (click)=\"focusSearchInput()\"\n            >\n                Add Playlist\n            </button>\n            <mat-menu #media_menu=\"matMenu\" class=\"w-[32rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <app-icon matPrefix class=\"text-2xl -left-1\">\n                        search\n                    </app-icon>\n                    <input\n                        #search_input\n                        matInput\n                        placeholder=\"Media Name\"\n                        [ngModel]=\"search.getValue()\"\n                        (ngModelChange)=\"search.next($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    />\n                </mat-form-field>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let item of new_playlists | async | slice: 0:8\"\n                    (click)=\"addPlaylist(item)\"\n                >\n                    <div class=\"flex items-center w-full\">\n                        <div class=\"flex-1 truncate\">{{ item.name }}</div>\n                        <code class=\"bg-base-300 text-base-content\">{{\n                            item.duration | mediaDuration\n                        }}</code>\n                    </div>\n                </button>\n            </mat-menu>\n        </main>\n        <footer\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"saveDisplay()\">\n                Save Display\n            </button>\n        </footer>\n        <ng-template\n            #actions_template\n            let-row=\"row\"\n            let-first=\"first\"\n            let-last=\"last\"\n        >\n            <div class=\"w-full flex items-center justify-end\">\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Playlist to previous item\"\n                    [disabled]=\"first\"\n                    (click)=\"changeOrder(row, -1)\"\n                >\n                    <app-icon>arrow_upward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Playlist to next item\"\n                    [disabled]=\"last\"\n                    (click)=\"changeOrder(row, 1)\"\n                >\n                    <app-icon>arrow_downward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Preview Playlist\"\n                    (click)=\"previewPlaylist(row)\"\n                >\n                    <app-icon>visibility</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Remove Playlist from Display\"\n                    class=\"text-error\"\n                    (click)=\"removePlaylist(row)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n\n        <ng-template #duration_template let-data=\"data\">\n            <code class=\"bg-base-300 text-base-content\">\n                {{ data | mediaDuration }}\n            </code>\n        </ng-template>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Display...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignageDisplayModalComponent {\n    public loading = false;\n    public readonly display = this._data;\n    public readonly playlists = combineLatest([\n        this._state.playlists,\n        this._state.media,\n    ]).pipe(\n        map(([playlists, media]) =>\n            playlists.map((_) => ({\n                ..._,\n                duration: _.media.reduce(\n                    (a, b) =>\n                        a +\n                        (_.media_durations[b] ||\n                            media.find(({ id }) => id === b)?.duration ||\n                            0),\n                    0\n                ),\n            }))\n        ),\n        tap(console.log)\n    );\n\n    public readonly search = new BehaviorSubject('');\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this.display.id || ''),\n        name: new FormControl(this.display.name || '', [Validators.required]),\n        description: new FormControl(this.display.description || ''),\n        orientation: new FormControl(this.display.orientation || 'landscape', [\n            Validators.required,\n        ]),\n        playlists: new FormControl(this.display.playlists || []),\n    });\n\n    public readonly playlist_list = combineLatest([\n        this.playlists,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([playlist_list, _]) =>\n            (this.form.getRawValue().playlists || []).map(\n                (id) =>\n                    playlist_list.find((_) => _.id === id) ||\n                    new SignagePlaylist({ id })\n            )\n        )\n    );\n\n    public readonly new_playlists = combineLatest([\n        this.playlists,\n        this.search,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([all_playlist, search, _]) =>\n            all_playlist\n                .filter(\n                    (_) => !this.form.getRawValue().playlists.includes(_.id)\n                )\n                .filter((_) =>\n                    _.name.toLowerCase().includes(search.toLowerCase())\n                )\n        )\n    );\n\n    @ViewChild('search_input')\n    public search_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: SignageDisplay = {} as any,\n        private _state: SignageStateService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<SignageDisplayModalComponent>\n    ) {}\n\n    public focusSearchInput() {\n        setTimeout(() => this.search_input.nativeElement?.focus(), 100);\n    }\n\n    public async saveDisplay() {\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n        this.loading = true;\n        await this._state.saveDisplay(this.form.getRawValue()).catch((_) => {\n            notifyError('Error saving display.');\n            this.loading = false;\n            throw _;\n        });\n        this._dialog_ref.close();\n    }\n\n    public addPlaylist(item: SignagePlaylist) {\n        const { id } = item;\n        const { playlists } = this.form.getRawValue();\n        this.form.patchValue({\n            playlists: [...playlists, id],\n        });\n    }\n\n    public removePlaylist(item: SignagePlaylist) {\n        const { playlists } = this.form.getRawValue();\n        const index = playlists.indexOf(item.id);\n        const new_playlists = [...playlists];\n        new_playlists.splice(index, 1);\n        this.form.patchValue({\n            playlists: new_playlists,\n        });\n    }\n\n    public changeOrder(item: SignagePlaylist, direction: number) {\n        const { playlists } = this.form.getRawValue();\n        const index = playlists.indexOf(item.id);\n        const new_playlists = [...playlists];\n        new_playlists.splice(index, 1);\n        new_playlists.splice(index + direction, 0, item.id);\n        this.form.patchValue({\n            playlists: new_playlists,\n        });\n    }\n\n    public previewPlaylist(item: SignagePlaylist) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'signage-displays',\n    template: ` <custom-table\n            class=\"block min-w-[52rem]\"\n            [dataSource]=\"display_list\"\n            [columns]=\"[\n                'name',\n                'description',\n                'playlists',\n                'orientation',\n                'duration',\n                'actions'\n            ]\"\n            [display_column]=\"[\n                'Name',\n                'Description',\n                'Media',\n                'Orientation',\n                'Duration',\n                ' '\n            ]\"\n            [column_size]=\"['8r', 'flex', '8r', '7r', '6r', '5r']\"\n            [template]=\"{\n                playlists: playlists_template,\n                duration: duration_template,\n                actions: actions_template\n            }\"\n        ></custom-table>\n        <ng-template #playlists_template let-row=\"row\">\n            {{ row.playlists.length }} Playlist(s)\n        </ng-template>\n        <ng-template #duration_template let-row=\"row\">\n            <code>{{ row.duration | mediaDuration }}</code>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <button icon matRipple (click)=\"editItem(row)\">\n                <app-icon>edit</app-icon>\n            </button>\n            <button icon matRipple class=\"text-error\" (click)=\"deleteItem(row)\">\n                <app-icon>delete</app-icon>\n            </button>\n        </ng-template>\n        <mat-progress-bar\n            class=\"absolute inset-x-0 bottom-0\"\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>`,\n    styles: [``],\n})\nexport class SignageDisplaysComponent {\n    public readonly loading = this._state.loading;\n    public readonly displays = this._state.displays;\n    public readonly playlists = this._state.playlists;\n    public readonly media = this._state.media;\n\n    public readonly deleteItem = (i) => this._state.removePlaylist(i);\n    public readonly editItem = (i) => this._state.editPlaylist(i);\n\n    public readonly display_list = combineLatest([\n        this.displays,\n        this.playlists,\n        this.media,\n    ]).pipe(\n        map(([displays, playlists, media]) =>\n            (displays || []).map((display) => ({\n                ...display,\n                playlists:\n                    display.playlists?.map((id) =>\n                        playlists.find((i) => i.id === id)\n                    ) || [],\n                duration: display.playlists.reduce((acc, id) => {\n                    const playlist = playlists.find((_) => _.id === id);\n                    if (!playlist) return acc;\n                    return (\n                        acc +\n                        playlist.media.reduce(\n                            (acc, item) =>\n                                acc +\n                                (playlist.media_durations[item] ||\n                                    media.find((m) => m.id === item)\n                                        ?.duration ||\n                                    15),\n                            0\n                        )\n                    );\n                }, 0),\n            }))\n        )\n    );\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { uploadFile } from '@placeos/common';\nimport { takeWhile } from 'rxjs/operators';\n\n@Component({\n    selector: 'signage-media-preview-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">Preview - {{ name }}</h1>\n            <button icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"bg-base-200\" *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"max-w-[80vw] max-h-[65vh] w-[80vw] h-[65vh] flex items-center justify-center\"\n            >\n                <img\n                    *ngIf=\"type === 'image'\"\n                    class=\"max-w-full max-h-full\"\n                    [src]=\"resource.toString()\"\n                />\n                <video\n                    *ngIf=\"type === 'video'\"\n                    class=\"max-w-full max-h-full\"\n                    [src]=\"resource.toString()\"\n                    autoplay\n                    controls\n                ></video>\n            </div>\n        </main>\n        <footer\n            *ngIf=\"can_save && !loading\"\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save.emit()\">\n                Save Media\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-8 w-[28rem] h-[20rem] max-w-[80vw] max-h-[65vh]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignageMediaPreviewModalComponent {\n    @Output() public readonly save = new EventEmitter<any>();\n    public loading = '';\n    public readonly resource = this._data.url;\n    public readonly type = this._data.type;\n    public readonly name = this._data.name;\n    public readonly file = this._data.file;\n    public readonly can_save = this._data.save !== false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            url: URL;\n            type: 'image' | 'video';\n            save: boolean;\n            name: string;\n            file?: File;\n        }\n    ) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { AsyncHandler, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'signage-media',\n    template: `\n        <div\n            class=\"relative bg-base-200 min-h-full w-full\"\n            (document:dragenter)=\"onEnter($event)\"\n            (document:drop)=\"hideOverlay($event)\"\n        >\n            <ng-container *ngIf=\"!(loading | async); else load_template\">\n                <ng-container\n                    *ngIf=\"(media | async)?.length; else empty_template\"\n                >\n                    <div\n                        class=\"flex flex-wrap items-start justify-start w-full p-2\"\n                    >\n                        <div\n                            class=\"m-2 p-2 bg-base-100 rounded-lg overflow-hidden h-[13rem] w-[17rem] border border-base-300 shadow\"\n                            *ngFor=\"let item of media | async\"\n                        >\n                            <button\n                                class=\"w-64 h-36 overflow-hidden bg-base-200 rounded m-0 p-0 relative\"\n                                (click)=\"previewMedia(item)\"\n                            >\n                                <img\n                                    *ngIf=\"\n                                        item.type === 'video'\n                                            ? (item.url | thumbnail)\n                                            : item.url\n                                    \"\n                                    [src]=\"\n                                        item.type === 'video'\n                                            ? (item.url | thumbnail)\n                                            : item.url\n                                    \"\n                                    class=\"object-contain w-full h-full\"\n                                />\n                                <div\n                                    class=\"absolute top-2 left-2 flex items-center justify-center rounded overflow-hidden\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{\n                                            item.type === 'image'\n                                                ? 'Image'\n                                                : 'Video'\n                                        }}\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"absolute top-2 right-2 flex items-center justify-center rounded overflow-hidden\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{ count || 0 }} Playlist(s)\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"absolute bottom-2 right-2 flex items-center justify-center rounded overflow-hidden\"\n                                    *ngIf=\"item.duration\"\n                                >\n                                    <div\n                                        class=\"absolute inset-0 bg-base-content opacity-60 z-0\"\n                                    ></div>\n                                    <div\n                                        class=\"relative text-base-100 z-10 px-2 py-1 text-xs\"\n                                    >\n                                        {{ item.duration | mediaDuration }}\n                                    </div>\n                                </div>\n                            </button>\n                            <div\n                                class=\"flex items-center justify-between space-x-2\"\n                            >\n                                <div class=\"truncate flex-1 w-1/2 px-2\">\n                                    {{ item.name }}\n                                </div>\n                                <button icon matRipple>\n                                    <app-icon>more_vert</app-icon>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </ng-container>\n            <div class=\"absolute inset-0\" *ngIf=\"show_dropzone\">\n                <div class=\"absolute inset-0 bg-base-200\"></div>\n                <div class=\"absolute inset-0 bg-base-content opacity-70\"></div>\n                <div\n                    class=\"absolute inset-4 border-4 border-dashed border-neutral text-base-100 rounded-xl flex flex-col items-center justify-center\"\n                >\n                    <app-icon class=\"text-8xl\">upload</app-icon>\n                    <p>Drop file to upload file</p>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 w-full opacity-0\"\n                    (change)=\"previewFile($event)\"\n                />\n            </div>\n        </div>\n        <ng-template #empty_template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 opacity-30\"\n            >\n                <app-icon class=\"text-8xl\">hide_image</app-icon>\n                <p>No media found.</p>\n            </div>\n        </ng-template>\n        <ng-template #load_template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Loading...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                min-height: 100%;\n            }\n        `,\n    ],\n})\nexport class SignageMediaComponent extends AsyncHandler {\n    public readonly loading = this._state.loading;\n    public readonly media = this._state.media;\n    public show_dropzone = false;\n\n    public readonly previewMedia = (item) => this._state.previewMedia(item);\n\n    public onEnter(e) {\n        this.show_dropzone = e?.dataTransfer?.types.includes('Files');\n    }\n\n    public hideOverlay(e) {\n        if (!(e.target instanceof HTMLInputElement)) {\n            e.preventDefault();\n        }\n        this.timeout('hide_overlay', () => (this.show_dropzone = false));\n    }\n\n    constructor(private _state: SignageStateService) {\n        super();\n    }\n\n    public previewFile(event) {\n        const element: HTMLInputElement = event.target as any;\n        /* istanbul ignore else */\n        if (!element?.files?.length) return;\n        const files: FileList = element.files;\n        const file = files[0];\n        if (\n            file &&\n            (file.type.includes('image') || file.type.includes('video'))\n        ) {\n            this._state.previewFileMedia(file);\n        } else {\n            notifyError('Invalid file type.');\n        }\n    }\n}\n","import {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n} from '@angular/material/dialog';\nimport { SignageStateService } from './signage-state.service';\nimport { Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { SignageMedia, SignagePlaylist } from './signage.classes';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { th } from 'date-fns/locale';\n\n@Component({\n    selector: 'signage-playlist-modal',\n    template: `\n        <header\n            class=\"flex items-center justify-between p-2 border-b border-base-300\"\n        >\n            <h1 class=\"px-2\">{{ playlist.id ? 'Edit' : 'New' }} Playlist</h1>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            [formGroup]=\"form\"\n            class=\"p-2 flex flex-col\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <label for=\"name\">Name<span required>*</span></label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <input\n                    matInput\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    formControlName=\"name\"\n                />\n                <mat-error>Name is required</mat-error>\n            </mat-form-field>\n            <label for=\"description\">Description</label>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <textarea\n                    matInput\n                    name=\"description\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                ></textarea>\n            </mat-form-field>\n            <label for=\"media\">Media</label>\n            <custom-table\n                class=\"block w-full mb-2\"\n                [dataSource]=\"media_list\"\n                [columns]=\"['_index', 'name', 'type', 'duration', 'actions']\"\n                [display_column]=\"[' ', 'Name', 'Type', 'Duration', ' ']\"\n                [column_size]=\"['3r', 'flex', '10r', '6r', '10r']\"\n                [template]=\"{\n                    duration: duration_template,\n                    actions: actions_template\n                }\"\n            >\n            </custom-table>\n            <button\n                btn\n                matRipple\n                class=\"w-full\"\n                [matMenuTriggerFor]=\"media_menu\"\n                (click)=\"focusSearchInput()\"\n            >\n                Add Media\n            </button>\n            <mat-menu #media_menu=\"matMenu\" class=\"w-[32rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <app-icon matPrefix class=\"text-2xl -left-1\">\n                        search\n                    </app-icon>\n                    <input\n                        #search_input\n                        matInput\n                        placeholder=\"Media Name\"\n                        [ngModel]=\"search.getValue()\"\n                        (ngModelChange)=\"search.next($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    />\n                </mat-form-field>\n                <button\n                    mat-menu-item\n                    *ngFor=\"let item of new_media | async | slice: 0:8\"\n                    (click)=\"addMedia(item)\"\n                >\n                    <div class=\"flex items-center w-full\">\n                        <div class=\"flex-1 truncate\">{{ item.name }}</div>\n                        <code class=\"capitalize\">{{ item.type }}</code>\n                        <code class=\"bg-base-300 text-base-content\">{{\n                            item.duration | mediaDuration\n                        }}</code>\n                    </div>\n                </button>\n            </mat-menu>\n        </main>\n        <footer\n            class=\"p-2 flex items-center justify-end space-x-2 border-t border-base-300\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"savePlaylist()\">\n                Save Playlist\n            </button>\n        </footer>\n        <ng-template #duration_template let-row=\"row\">\n            <button\n                matTooltip=\"Set Custom Duration\"\n                [matMenuTriggerFor]=\"duration_menu\"\n                [class.pointer-events-none]=\"row.type !== 'image'\"\n            >\n                <code\n                    [class.bg-warning]=\"form.value.media_durations[row.id]\"\n                    [class.text-warning-content]=\"\n                        form.value.media_durations[row.id]\n                    \"\n                >\n                    {{\n                        form.value.media_durations[row.id] || row.duration\n                            | mediaDuration\n                    }}\n                </code>\n            </button>\n            <mat-menu #duration_menu=\"matMenu\" class=\"w-[20rem] max-w-[80vw]\">\n                <mat-form-field\n                    appearance=\"outline\"\n                    class=\"w-[calc(100%-1rem)] mx-2 no-subscript\"\n                >\n                    <mat-select\n                        [ngModel]=\"form.value.media_durations[row.id] || 0\"\n                        (ngModelChange)=\"setDuration(row.id, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                        <mat-option [value]=\"0\">Use Media Default</mat-option>\n                        <mat-option [value]=\"5\">5 seconds</mat-option>\n                        <mat-option [value]=\"10\">10 seconds</mat-option>\n                        <mat-option [value]=\"15\">15 seconds</mat-option>\n                        <mat-option [value]=\"30\">30 seconds</mat-option>\n                        <mat-option [value]=\"45\">45 seconds</mat-option>\n                        <mat-option [value]=\"60\">1 minute</mat-option>\n                        <mat-option [value]=\"75\"\n                            >1 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"90\"\n                            >1 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"105\"\n                            >1 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"120\">2 minute</mat-option>\n                        <mat-option [value]=\"135\"\n                            >2 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"150\"\n                            >2 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"165\"\n                            >2 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"180\">3 minute</mat-option>\n                        <mat-option [value]=\"195\"\n                            >3 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"210\"\n                            >3 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"225\"\n                            >3 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"240\">4 minute</mat-option>\n                        <mat-option [value]=\"255\"\n                            >4 minute 15 seconds</mat-option\n                        >\n                        <mat-option [value]=\"270\"\n                            >4 minute 30 seconds</mat-option\n                        >\n                        <mat-option [value]=\"285\"\n                            >4 minute 45 seconds</mat-option\n                        >\n                        <mat-option [value]=\"300\">5 minute</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </mat-menu>\n        </ng-template>\n        <ng-template\n            #actions_template\n            let-row=\"row\"\n            let-first=\"first\"\n            let-last=\"last\"\n        >\n            <div class=\"w-full flex items-center justify-end\">\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Media to previous item\"\n                    [disabled]=\"first\"\n                    (click)=\"changeOrder(row, -1)\"\n                >\n                    <app-icon>arrow_upward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Move Media to next item\"\n                    [disabled]=\"last\"\n                    (click)=\"changeOrder(row, 1)\"\n                >\n                    <app-icon>arrow_downward</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Preview Media\"\n                    (click)=\"previewMedia(row)\"\n                >\n                    <app-icon>visibility</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Remove Media from Playlist\"\n                    class=\"text-error\"\n                    (click)=\"removeMedia(row)\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <main class=\"flex flex-col items-center justify-center p-8\">\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Playlist...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class SignagePlaylistModalComponent {\n    public loading = false;\n    public readonly playlist = this._data;\n    public readonly media = this._state.media;\n\n    public readonly search = new BehaviorSubject('');\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this.playlist.id || ''),\n        name: new FormControl(this.playlist.name || '', [Validators.required]),\n        description: new FormControl(this.playlist.description || ''),\n        media: new FormControl(this.playlist.media || []),\n        media_durations: new FormControl(this.playlist.media_durations || {}),\n    });\n\n    public readonly media_list = combineLatest([\n        this.media,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([media_list, { media }]) =>\n            (this.form.getRawValue().media || []).map(\n                (id) =>\n                    media_list.find((_) => _.id === id) ||\n                    new SignageMedia({ id })\n            )\n        )\n    );\n\n    public readonly new_media = combineLatest([\n        this.media,\n        this.search,\n        this.form.valueChanges.pipe(startWith(this.form.getRawValue())),\n    ]).pipe(\n        map(([all_media, search, _]) =>\n            all_media\n                .filter((_) => !this.form.getRawValue().media.includes(_.id))\n                .filter((_) =>\n                    _.name.toLowerCase().includes(search.toLowerCase())\n                )\n        )\n    );\n\n    @ViewChild('search_input')\n    public search_input: ElementRef<HTMLInputElement>;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: SignagePlaylist = {} as any,\n        private _state: SignageStateService,\n        private _dialog: MatDialog,\n        private _dialog_ref: MatDialogRef<SignagePlaylistModalComponent>\n    ) {}\n\n    public indexOf(id: string) {\n        return this.form.getRawValue().media.indexOf(id);\n    }\n\n    public focusSearchInput() {\n        setTimeout(() => this.search_input.nativeElement?.focus(), 100);\n    }\n\n    public async savePlaylist() {\n        this.form.markAllAsTouched();\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n        this.loading = true;\n        await this._state.savePlaylist(this.form.getRawValue()).catch((_) => {\n            notifyError('Error saving playlist');\n            this.loading = false;\n            throw _;\n        });\n        this._dialog_ref.close();\n    }\n\n    public setDuration(id: string, duration: number) {\n        const { media_durations } = this.form.getRawValue();\n        const new_media_durations = { ...media_durations };\n        new_media_durations[id] = duration;\n        this.form.patchValue({ media_durations: new_media_durations });\n    }\n\n    public addMedia(item: SignageMedia) {\n        const { id } = item;\n        const { media } = this.form.getRawValue();\n        this.form.patchValue({\n            media: [...media, id],\n        });\n    }\n\n    public removeMedia(item: SignageMedia) {\n        const { media, media_durations } = this.form.getRawValue();\n        const index = media.indexOf(item.id);\n        const new_media = [...media];\n        delete media_durations[item.id];\n        new_media.splice(index, 1);\n        this.form.patchValue({\n            media: new_media,\n            media_durations: { ...media_durations },\n        });\n    }\n\n    public changeOrder(item: SignageMedia, direction: number) {\n        const { media } = this.form.getRawValue();\n        const index = media.indexOf(item.id);\n        const new_media = [...media];\n        new_media.splice(index, 1);\n        new_media.splice(index + direction, 0, item.id);\n        this.form.patchValue({\n            media: new_media,\n        });\n    }\n\n    public previewMedia(item: SignageMedia) {\n        const { url, type, name } = item;\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name, save: false },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { SignagePlaylist } from './signage.classes';\nimport { map, take, tap } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'signage-playlists',\n    template: `\n        <custom-table\n            class=\"block min-w-[48rem]\"\n            [dataSource]=\"playlist_list\"\n            [columns]=\"['name', 'description', 'media', 'duration', 'actions']\"\n            [display_column]=\"['Name', 'Description', 'Media', 'Duration', ' ']\"\n            [column_size]=\"['8r', 'flex', '10r', '6r', '5r']\"\n            [template]=\"{\n                media: media_template,\n                duration: duration_template,\n                actions: actions_template\n            }\"\n        ></custom-table>\n        <ng-template #media_template let-row=\"row\">\n            {{ row.media.length }} Media Item(s)\n        </ng-template>\n        <ng-template #duration_template let-row=\"row\">\n            <code>{{ row.duration | mediaDuration }}</code>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <button icon matRipple (click)=\"editItem(row)\">\n                <app-icon>edit</app-icon>\n            </button>\n            <button icon matRipple class=\"text-error\" (click)=\"deleteItem(row)\">\n                <app-icon>delete</app-icon>\n            </button>\n        </ng-template>\n        <mat-progress-bar\n            class=\"absolute inset-x-0 bottom-0\"\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [``],\n})\nexport class SignagePlaylistsComponent {\n    public readonly loading = this._state.loading;\n    public readonly playlists = this._state.playlists;\n    public readonly media = this._state.media;\n\n    public readonly deleteItem = (i) => this._state.removePlaylist(i);\n    public readonly editItem = (i) => this._state.editPlaylist(i);\n\n    public readonly playlist_list = combineLatest([\n        this.playlists,\n        this.media,\n    ]).pipe(\n        map(([playlists, media]) =>\n            playlists.map((playlist) => ({\n                ...playlist,\n                duration: playlist.media.reduce(\n                    (acc, item) =>\n                        acc +\n                        (playlist.media_durations[item] ||\n                            media.find((m) => m.id === item)?.duration ||\n                            15),\n                    0\n                ),\n            }))\n        )\n    );\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n    notifyError,\n    notifySuccess,\n    randomString,\n    uploadFile,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport {\n    PlaceMetadata,\n    queryZones,\n    showMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { Attachment } from '@placeos/users';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\n\nimport {\n    SignageDisplay,\n    SignageMedia,\n    SignagePlaylist,\n} from './signage.classes';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { SignagePlaylistModalComponent } from './signage-playlist-modal.component';\nimport { SignageDisplayModalComponent } from './signage-display-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SignageStateService {\n    private _loading = new BehaviorSubject(false);\n    private _change = new BehaviorSubject(0);\n    private _active_upload = new BehaviorSubject<Attachment>(null);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly media: Observable<SignageMedia[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-media').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details instanceof Array ? _.details : null) || []),\n        shareReplay(1)\n    );\n\n    public readonly playlists: Observable<SignagePlaylist[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-playlists').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details instanceof Array ? _.details : []))\n    );\n\n    public readonly displays: Observable<SignageDisplay[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            showMetadata(bld.id, 'signage-displays').pipe(\n                catchError(() => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details instanceof Array ? _.details : []))\n    );\n\n    public readonly zones = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            queryZones({ parent_id: bld.id, tags: 'signage', limit: 100 }).pipe(\n                catchError(() => of({ data: [] }))\n            )\n        ),\n        map((_) => _.data || [])\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public editPlaylist(playlist: SignagePlaylist = new SignagePlaylist()) {\n        const ref = this._dialog.open(SignagePlaylistModalComponent, {\n            data: playlist,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async savePlaylist(playlist: SignagePlaylist, remove = false) {\n        const bld = this._org.building.id;\n        const playlist_list =\n            (await this.playlists.pipe(take(1)).toPromise()) || [];\n        const idx = playlist_list.findIndex((_) => _.id === playlist.id);\n        if (idx >= 0) playlist_list.splice(idx, 1);\n        if (!playlist.id) (playlist as any).id = `playlist-${randomString(8)}`;\n        if (!remove) playlist_list.push(playlist);\n        await updateMetadata(bld, {\n            name: 'signage-playlists',\n            details: playlist_list,\n            description: 'Playlists for signage displays',\n        }).toPromise();\n        notifySuccess(`Successfully ${remove ? 'removed' : 'saved'} playlist.`);\n        this._change.next(Date.now());\n    }\n\n    public async removePlaylist(playlist: SignagePlaylist) {\n        await this.savePlaylist(playlist, true);\n    }\n\n    public editDisplay(display: SignageDisplay = new SignageDisplay()) {\n        const ref = this._dialog.open(SignageDisplayModalComponent, {\n            data: display,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async saveDisplay(display: SignageDisplay, remove = false) {\n        const bld = this._org.building.id;\n        const display_list = await this.displays.pipe(take(1)).toPromise();\n        const idx = display_list.findIndex((_) => _.id === display.id);\n        if (idx >= 0) display_list.splice(idx, 1);\n        if (!display.id) (display as any).id = `display-${randomString(8)}`;\n        if (!remove) display_list.push(display);\n        await updateMetadata(bld, {\n            name: 'signage-displays',\n            details: display_list,\n            description: 'Displays for signage displays',\n        }).toPromise();\n        notifySuccess(`Successfully ${remove ? 'removed' : 'saved'} display.`);\n        this._change.next(Date.now());\n    }\n\n    public async removeDisplay(display: SignageDisplay) {\n        await this.saveDisplay(display, true);\n    }\n\n    public previewMedia(item: SignageMedia) {\n        const { url, type, name } = item;\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name, save: false },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n    }\n\n    public previewFileMedia(media: File) {\n        const url = URL.createObjectURL(media);\n        const type = media.type.includes('image') ? 'image' : 'video';\n        const ref = this._dialog.open(SignageMediaPreviewModalComponent, {\n            data: { url, type, name: media.name, save: true, file: media },\n        });\n        ref.afterClosed().subscribe(() => URL.revokeObjectURL(url));\n        ref.componentInstance.save.subscribe(async () => {\n            ref.componentInstance.loading = 'Saving...';\n            await this.addMedia(media).catch((e) => {\n                notifyError('Error saving media.');\n                ref.componentInstance.loading = '';\n                throw e;\n            });\n            ref.close();\n        });\n    }\n\n    public async addMedia(file: File) {\n        const upload = () =>\n            new Promise<string>((resolve, reject) => {\n                let state = null;\n                let resolved = false;\n                uploadFile(file).subscribe(\n                    (s) => {\n                        state = s;\n                        if (s.link) {\n                            resolved = true;\n                            resolve(s.link);\n                        }\n                    },\n                    reject,\n                    () => (!resolved ? resolve(state) : null)\n                );\n            });\n        const media = await upload();\n        const media_list = await this.media.pipe(take(1)).toPromise();\n        const video_metadata = new Promise<[boolean, number]>((resolve) => {\n            const url = URL.createObjectURL(file);\n            // file is loaded\n            if (file.type.includes('video')) {\n                let video = document.createElement('video');\n                video.src = url.toString();\n                video.addEventListener('loadedmetadata', () => {\n                    const { videoWidth, videoHeight } = video;\n                    resolve([videoWidth > videoHeight, duration]);\n                });\n                video.load();\n            } else {\n                let img = new Image();\n                img.onload = () => resolve([img.width > img.height, 0]);\n                img.src = url.toString(); // is the data URL because called with readAsDataURL\n            }\n        });\n        const [is_landscape, duration] = await video_metadata;\n        media_list.push({\n            id: `media-${randomString(8)}`,\n            name: file.name,\n            description: '',\n            url: media,\n            type: file.type.includes('image') ? 'image' : 'video',\n            orientation: is_landscape ? 'landscape' : 'portrait',\n            duration: duration || 15,\n        });\n        const bld = this._org.building.id;\n        await updateMetadata(bld, {\n            name: 'signage-media',\n            details: media_list,\n            description: 'Media for signage displays',\n        }).toPromise();\n        this._active_upload.next(null);\n        this._change.next(Date.now());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <!-- <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.only_onsite\"\n                (ngModelChange)=\"setFilters({ only_onsite: $event })\"\n                ><div class=\"text-xs\">Onsite Only</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar> -->\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class SignageTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    // public readonly filters = this._state.filters;\n    // /** Set filtered date */\n    // public readonly setDate = (date) => this._state.setFilters({ date });\n    // /** Set filtered date */\n    // public readonly setFilters = (filters) => this._state.setFilters(filters);\n    // /** Set filter string */\n    // public readonly setSearch = (str) => this._state.setSearchString(str);\n    // /** Update active zones for desks */\n    // public readonly updateZones = (zones) => {\n    //     this._router.navigate([], {\n    //         relativeTo: this._route,\n    //         queryParams: { zone_ids: zones.join(',') },\n    //     });\n    //     this._state.setFilters({ zones });\n    // };\n\n    constructor(\n        private _state: SignageStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                // this.updateZones(this.zones);\n            })\n        );\n        // this.setSearch('');\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-triggers',\n    template: ``,\n    styles: [``],\n})\nexport class SignageTriggersComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","import { Component } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\n\n@Component({\n    selector: 'signage-zones',\n    template: ``,\n    styles: [``],\n})\nexport class SignageZonesComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: SignageStateService) {}\n}\n","export class SignagePlaylist {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly media: string[];\n    public readonly media_durations: Record<string, number>;\n\n    constructor(_data: Partial<SignagePlaylist> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.media = _data.media || [];\n        this.media_durations = _data.media_durations || {};\n    }\n}\n\nexport class SignageDisplay {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly orientation: 'landscape' | 'portrait';\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageDisplay> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.orientation = _data.orientation || 'landscape';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageZone {\n    public readonly id: string;\n    public readonly zone_id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageZone> = {}) {\n        this.id = _data.id || '';\n        this.zone_id = _data.zone_id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageTrigger {\n    public readonly id: string;\n    public readonly zone_id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly playlists: string[];\n\n    constructor(_data: Partial<SignageTrigger> = {}) {\n        this.id = _data.id || '';\n        this.zone_id = _data.zone_id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.playlists = _data.playlists || [];\n    }\n}\n\nexport class SignageMedia {\n    public readonly id: string;\n    public readonly name: string;\n    public readonly description: string;\n    public readonly type: 'image' | 'video';\n    public readonly duration: number;\n    public readonly orientation: 'landscape' | 'portrait';\n    public readonly url: string;\n\n    constructor(_data: Partial<SignageMedia> = {}) {\n        this.id = _data.id || '';\n        this.name = _data.name || '';\n        this.description = _data.description || '';\n        this.type = _data.type || 'image';\n        this.duration = _data.duration || 15;\n        this.orientation = _data.orientation || 'landscape';\n        this.url = _data.url || '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { SignageStateService } from './signage-state.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-staff]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"p-8 h-28 flex items-center justify-between\">\n                    <h2 class=\"text-2xl font-medium\">\n                        Signage - {{ active_link }}\n                    </h2>\n                    <button\n                        btn\n                        matRipple\n                        class=\"w-32\"\n                        (click)=\"newItem(active_link)\"\n                        *ngIf=\"active_link !== 'Media'\"\n                    >\n                        Add {{ singular(active_link) }}\n                    </button>\n                </div>\n                <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n                    @for (link of links; track link) {\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"'/signage/' + (link | lowercase)\"\n                        (click)=\"active_link = link\"\n                        [active]=\"active_link == link\"\n                    >\n                        {{ link }}\n                    </a>\n                    }\n                </nav>\n                <mat-tab-nav-panel class=\"flex-1 h-1/2 overflow-auto\" #tabPanel>\n                    <router-outlet></router-outlet>\n                </mat-tab-nav-panel>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class SignageComponent extends AsyncHandler implements OnInit {\n    public readonly loading = this._state.loading;\n    public links = ['Playlists', 'Media', 'Displays', 'Zones', 'Triggers'];\n    public active_link = this.links[0];\n\n    public singular(name: string) {\n        return name.replace(/s$/, '');\n    }\n\n    public newItem(name: string) {\n        switch (name) {\n            case 'Playlists':\n                this._state.editPlaylist();\n                break;\n            case 'Displays':\n                this._state.editDisplay();\n                break;\n            case 'Zones':\n                // this._state.editZone();\n                break;\n            case 'Triggers':\n                // this._state.editTrigger();\n                break;\n        }\n    }\n\n    constructor(private _state: SignageStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._router.events.subscribe((event) => {\n                if (event instanceof NavigationEnd) {\n                    this.active_link = this.links.find((_) =>\n                        this._router.url.includes(_.toLowerCase())\n                    );\n                }\n            })\n        );\n        this.active_link = this.links.find((_) =>\n            this._router.url.includes(_.toLowerCase())\n        );\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { SignageComponent } from './signage.component';\nimport { SignageTopbarComponent } from './signage-topbar.component';\nimport { SignagePlaylistsComponent } from './signage-playlists.component';\nimport { SignageDisplaysComponent } from './signage-displays.component';\nimport { SignageZonesComponent } from './signage-zones.component';\nimport { SignageTriggersComponent } from './signage-triggers.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SignageMediaComponent } from './signage-media.component';\nimport { SignageMediaPreviewModalComponent } from './signage-media-preview-modal.component';\nimport { ComponentsModule } from '@placeos/components';\nimport { SignagePlaylistModalComponent } from './signage-playlist-modal.component';\nimport { SignageDisplayModalComponent } from './signage-display-modal.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: SignageComponent,\n        children: [\n            { path: '', redirectTo: 'playlists', pathMatch: 'full' },\n            { path: 'playlists', component: SignagePlaylistsComponent },\n            { path: 'media', component: SignageMediaComponent },\n            { path: 'displays', component: SignageDisplaysComponent },\n            { path: 'zones', component: SignageZonesComponent },\n            { path: 'triggers', component: SignageTriggersComponent },\n            { path: '*', redirectTo: 'playlists', pathMatch: 'full' },\n        ],\n    },\n];\n\nexport const COMPONENTS: Type<any>[] = [\n    SignageComponent,\n    SignageTopbarComponent,\n    SignagePlaylistsComponent,\n    SignageMediaComponent,\n    SignageDisplaysComponent,\n    SignageZonesComponent,\n    SignageTriggersComponent,\n    SignageMediaPreviewModalComponent,\n    SignagePlaylistModalComponent,\n    SignageDisplayModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        ComponentsModule,\n        RouterModule.forChild(ROUTES),\n        MatTabsModule,\n    ],\n})\nexport class SignageModule {}\n"],"names":["ElementRef","BehaviorSubject","combineLatest","map","startWith","tap","SignageDisplay","SignagePlaylist","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","MatDialog","MatDialogRef","SignageStateService","notifyError","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SignageDisplayModalComponent_main_4_button_37_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r14","item_r12","$implicit","ctx_r13","ɵɵnextContext","ɵɵresetView","addPlaylist","ɵɵadvance","ɵɵtextInterpolate","name","ɵɵpipeBind1","duration","ɵɵelement","SignageDisplayModalComponent_main_4_Template_button_click_28_listener","_r16","ctx_r15","focusSearchInput","SignageDisplayModalComponent_main_4_Template_input_ngModelChange_35_listener","$event","ctx_r17","search","next","ɵɵtemplate","SignageDisplayModalComponent_main_4_button_37_Template","ɵɵproperty","ctx_r1","form","playlist_list","ɵɵpureFunction0","_c1","_c2","_c3","ɵɵpureFunction2","_c4","_r6","_r4","_r9","getValue","_c5","ɵɵpipeBind3","new_playlists","SignageDisplayModalComponent_footer_5_Template_button_click_1_listener","_r19","ctx_r18","saveDisplay","SignageDisplayModalComponent_ng_template_6_Template_button_click_1_listener","_r24","row_r20","row","ctx_r23","changeOrder","SignageDisplayModalComponent_ng_template_6_Template_button_click_4_listener","ctx_r25","SignageDisplayModalComponent_ng_template_6_Template_button_click_7_listener","ctx_r26","previewPlaylist","SignageDisplayModalComponent_ng_template_6_Template_button_click_10_listener","ctx_r27","removePlaylist","first_r21","last_r22","ɵɵtextInterpolate1","data_r28","SignageDisplayModalComponent","constructor","_data","_state","_dialog","_dialog_ref","loading","display","playlists","media","pipe","_","reduce","a","b","media_durations","find","id","console","log","required","description","orientation","valueChanges","getRawValue","all_playlist","filter","includes","toLowerCase","setTimeout","search_input","nativeElement","focus","_this","_asyncToGenerator","markAllAsTouched","updateValueAndValidity","invalid","catch","close","item","patchValue","index","indexOf","splice","direction","ɵɵdirectiveInject","i1","i2","_2","selectors","viewQuery","SignageDisplayModalComponent_Query","rf","ctx","SignageDisplayModalComponent_button_3_Template","SignageDisplayModalComponent_main_4_Template","SignageDisplayModalComponent_footer_5_Template","SignageDisplayModalComponent_ng_template_6_Template","ɵɵtemplateRefExtractor","SignageDisplayModalComponent_ng_template_8_Template","SignageDisplayModalComponent_ng_template_10_Template","_r8","row_r7","length","row_r8","SignageDisplaysComponent_ng_template_5_Template_button_click_0_listener","_r11","row_r9","ctx_r10","editItem","SignageDisplaysComponent_ng_template_5_Template_button_click_3_listener","ctx_r12","deleteItem","SignageDisplaysComponent","displays","i","editPlaylist","display_list","acc","playlist","m","decls","vars","consts","template","SignageDisplaysComponent_Template","SignageDisplaysComponent_ng_template_1_Template","SignageDisplaysComponent_ng_template_3_Template","SignageDisplaysComponent_ng_template_5_Template","SignageDisplaysComponent_mat_progress_bar_7_Template","_c0","ɵɵpureFunction3","_r1","_r3","_r5","EventEmitter","ctx_r4","resource","toString","ɵɵsanitizeUrl","ctx_r5","SignageMediaPreviewModalComponent_main_6_img_2_Template","SignageMediaPreviewModalComponent_main_6_video_3_Template","ctx_r0","type","SignageMediaPreviewModalComponent_footer_7_Template_button_click_1_listener","_r7","ctx_r6","save","emit","ctx_r2","SignageMediaPreviewModalComponent","url","file","can_save","outputs","SignageMediaPreviewModalComponent_Template","SignageMediaPreviewModalComponent_main_6_Template","SignageMediaPreviewModalComponent_footer_7_Template","SignageMediaPreviewModalComponent_ng_template_8_Template","AsyncHandler","item_r8","SignageMediaComponent_ng_container_1_ng_container_1_div_2_Template_button_click_1_listener","previewMedia","SignageMediaComponent_ng_container_1_ng_container_1_div_2_img_2_Template","SignageMediaComponent_ng_container_1_ng_container_1_div_2_div_12_Template","ctx_r7","count","ɵɵelementContainerStart","SignageMediaComponent_ng_container_1_ng_container_1_div_2_Template","ɵɵelementContainerEnd","SignageMediaComponent_ng_container_1_ng_container_1_Template","tmp_0_0","SignageMediaComponent_div_3_Template_input_change_8_listener","previewFile","SignageMediaComponent","onEnter","e","show_dropzone","dataTransfer","types","hideOverlay","target","HTMLInputElement","preventDefault","timeout","event","element","files","previewFileMedia","features","ɵɵInheritDefinitionFeature","SignageMediaComponent_Template","SignageMediaComponent_Template_div_dragenter_0_listener","ɵɵresolveDocument","SignageMediaComponent_Template_div_drop_0_listener","SignageMediaComponent_ng_container_1_Template","SignageMediaComponent_div_3_Template","SignageMediaComponent_ng_template_4_Template","SignageMediaComponent_ng_template_6_Template","SignageMedia","SignagePlaylistModalComponent_main_4_button_25_Template_button_click_0_listener","addMedia","SignagePlaylistModalComponent_main_4_Template_button_click_16_listener","SignagePlaylistModalComponent_main_4_Template_input_ngModelChange_23_listener","SignagePlaylistModalComponent_main_4_button_25_Template","media_list","new_media","SignagePlaylistModalComponent_footer_5_Template_button_click_1_listener","savePlaylist","SignagePlaylistModalComponent_ng_template_6_Template_mat_select_ngModelChange_7_listener","_r23","ctx_r22","setDuration","ɵɵclassProp","_r21","ctx_r3","value","SignagePlaylistModalComponent_ng_template_8_Template_button_click_1_listener","_r28","row_r24","SignagePlaylistModalComponent_ng_template_8_Template_button_click_4_listener","ctx_r29","SignagePlaylistModalComponent_ng_template_8_Template_button_click_7_listener","ctx_r30","SignagePlaylistModalComponent_ng_template_8_Template_button_click_10_listener","ctx_r31","removeMedia","first_r25","last_r26","SignagePlaylistModalComponent","all_media","new_media_durations","ref","open","data","afterClosed","subscribe","URL","revokeObjectURL","SignagePlaylistModalComponent_Query","SignagePlaylistModalComponent_button_3_Template","SignagePlaylistModalComponent_main_4_Template","SignagePlaylistModalComponent_footer_5_Template","SignagePlaylistModalComponent_ng_template_6_Template","SignagePlaylistModalComponent_ng_template_8_Template","SignagePlaylistModalComponent_ng_template_10_Template","SignagePlaylistsComponent_ng_template_5_Template_button_click_0_listener","SignagePlaylistsComponent_ng_template_5_Template_button_click_3_listener","SignagePlaylistsComponent","SignagePlaylistsComponent_Template","SignagePlaylistsComponent_ng_template_1_Template","SignagePlaylistsComponent_ng_template_3_Template","SignagePlaylistsComponent_ng_template_5_Template","SignagePlaylistsComponent_mat_progress_bar_7_Template","notifySuccess","randomString","uploadFile","OrganisationService","queryZones","showMetadata","updateMetadata","of","catchError","shareReplay","switchMap","take","_org","_loading","_change","_active_upload","asObservable","active_building","bld","details","Array","zones","parent_id","tags","limit","Date","now","remove","building","toPromise","idx","findIndex","push","_this2","editDisplay","_this3","removeDisplay","_this4","_this5","createObjectURL","componentInstance","_this6","upload","Promise","resolve","reject","state","resolved","s","link","video_metadata","video","document","createElement","src","addEventListener","videoWidth","videoHeight","load","img","Image","onload","width","height","is_landscape","ɵɵinject","factory","ɵfac","providedIn","ActivatedRoute","Router","first","SignageTopbarComponent","_route","_router","levels","active_levels","ngOnInit","initialised","subscription","queryParamMap","params","has","get","split","level","levelWithID","buildings","zone","lvl","i3","SignageTopbarComponent_Template","SignageTriggersComponent","SignageTriggersComponent_Template","SignageZonesComponent","SignageZonesComponent_Template","SignageZone","zone_id","SignageTrigger","NavigationEnd","SignageComponent_button_7_Template_button_click_0_listener","newItem","active_link","singular","SignageComponent_For_10_Template_a_click_0_listener","link_r5","SignageComponent","replace","links","events","attrs","SignageComponent_Template","SignageComponent_button_7_Template","ɵɵrepeaterCreate","SignageComponent_For_10_Template","ɵɵrepeaterTrackByIdentity","_r2","ɵɵrepeater","CommonModule","Type","FormsModule","RouterModule","UIModule","MatTabsModule","ComponentsModule","ROUTES","path","component","children","redirectTo","pathMatch","COMPONENTS","SignageModule","_3","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}