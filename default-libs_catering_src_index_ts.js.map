{"version":3,"file":"default-libs_catering_src_index_ts.js","mappings":"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","sources":["./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts"],"sourcesContent":["export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-16 text-right h-14 relative\">\n                <div\n                    arm\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full -translate-x-px\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border-2 border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 items-center border-b border-base-200 border-solid py-4 space-x-4\"\n            >\n                <div class=\"\">\n                    <div\n                        class=\"p-1 rounded-full bg-base-400 w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex-1\">{{ item?.name }}</div>\n                <div class=\"flex space-x-2 mr-2 px-4\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-warning-content rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div class=\"flex flex-col h-full w-full overflow-auto px-8 py-4\">\n            <!-- <mat-progress-bar\n                [class.opacity-0]=\"!(loading | async)\"\n                class=\"w-full\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar> -->\n            <simple-table\n                class=\"min-w-[80rem] w-full block text-sm\"\n                [data]=\"order_list\"\n                [columns]=\"[\n                    {\n                        key: 'state',\n                        name: ' ',\n                        size: '4rem',\n                        sortable: false,\n                        content: state_template\n                    },\n                    {\n                        key: 'deliver_at',\n                        name: 'Time',\n                        content: time_template\n                    },\n                    {\n                        key: 'event',\n                        name: 'Meeting Time',\n                        content: event_time_template\n                    },\n                    {\n                        key: 'event',\n                        name: 'Location',\n                        content: location_template\n                    },\n                    { key: 'event', name: 'Host', content: host_template },\n                    { key: 'charge_code', name: 'Charge Code' },\n                    { key: 'invoice_number', name: 'Invoice No.' },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '11rem'\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        size: '6.5rem',\n                        content: actions_template,\n                        sortable: false\n                    }\n                ]\"\n                [sortable]=\"true\"\n                [show_children]=\"show_children\"\n                [child_template]=\"child_template\"\n                empty_message=\"No Catering Orders\"\n            >\n            </simple-table>\n            <ng-template #state_template let-data=\"data\">\n                <div class=\"p-2\">\n                    <div\n                        class=\"rounded-full bg-base-300 p-2 text-2xl text-base-content opacity-60 flex items-center justify-center\"\n                    >\n                        <app-icon>room_service</app-icon>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #time_template let-data=\"data\">\n                <div class=\"p-4\">{{ data | date: time_format }}</div>\n            </ng-template>\n            <ng-template #event_time_template let-data=\"data\">\n                <div class=\"px-4 py-2 text-sm\">\n                    {{ data?.date | date: 'MMM d' }},\n                    {{ data?.date | date: time_format }}\n                    <br />\n                    {{ data?.date_end | date: 'MMM d' }},\n                    {{ data?.date_end | date: time_format }}\n                </div>\n            </ng-template>\n            <ng-template #location_template let-data=\"data\">\n                <div class=\"p-4\">\n                    {{ data?.space?.display_name || data?.space?.name || '' }}\n                    <span\n                        class=\"opacity-30\"\n                        *ngIf=\"\n                            !(data?.space?.display_name || data?.space?.name)\n                        \"\n                    >\n                        No Location\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #host_template let-data=\"data\">\n                <div class=\"p-4\">\n                    {{ data?.organiser?.name || data?.host || '' }}\n                    <span\n                        class=\"opacity-30\"\n                        *ngIf=\"!(data?.organiser?.name || data?.host)\"\n                    >\n                        Unknown Host\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\" let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <button\n                        status\n                        matRipple\n                        class=\"rounded-3xl text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                        [style.background]=\"status(data)?.colour\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <div class=\"flex text-center capitalize mx-2\">\n                            {{ status(data)?.name }}\n                        </div>\n                        <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                    </button>\n                </div>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        *ngFor=\"let status of statuses\"\n                        class=\"flex items-center\"\n                        (click)=\"updateStatus(row, status.id)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"rounded-full h-4 w-4 mr-2\"\n                                [style.background-color]=\"status.colour\"\n                            ></div>\n                            <span class=\"mr-2 w-20\">{{ status.name }}</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #actions_template let-row=\"row\">\n                <div class=\"flex items-center space-x-2 p-2 mx-auto\">\n                    <button icon matRipple [matTooltip]=\"row.notes\">\n                        <app-icon>description</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"show_children[row.id] = !show_children[row.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_children[row.id]\n                                    ? 'keyboard_arrow_down'\n                                    : 'chevron_right'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <ng-template #child_template let-row=\"row\">\n                <ul\n                    *ngIf=\"row?.items.length\"\n                    class=\"list-none p-0 m-0 w-full relative z-0\"\n                >\n                    <li\n                        catering-order-item\n                        class=\"flex items-center\"\n                        *ngFor=\"let item of row.items; let i = index\"\n                        [order_id]=\"row?.id\"\n                        [item]=\"item\"\n                    ></li>\n                </ul>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent extends AsyncHandler {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    public readonly statuses = CATERING_STATUSES;\n    public readonly show_children: Record<string, boolean> = {};\n\n    public readonly updateStatus = async (order, s) => {\n        await this._orders.updateStatus(order, s);\n        this.timeout('status-change', () => ((order as any).status = s));\n    };\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public status(value: string) {\n        return CATERING_STATUSES.find((i) => i.id === value);\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n        MatProgressSpinnerModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n"],"names":["EventEmitter","csvToJson","downloadFile","CateringItem","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CateringImportMenuModalComponent_main_4_Template_input_change_6_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","handleFileEvent","CateringImportMenuModalComponent_main_4_Template_button_click_8_listener","downloadTemplate","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","loading","CateringImportMenuModalComponent","constructor","event","element","target","files","length","file","fileReader","FileReader","addEventListener","e","contents","result","data","emit","reason","metadata","filter","_","type","toLowerCase","map","i","options","tags","id","name","group","category","multiple","unit_price","readAsText","template","_2","selectors","outputs","decls","vars","consts","CateringImportMenuModalComponent_Template","rf","ctx","ɵɵtemplate","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","ɵɵtemplateRefExtractor","ɵɵproperty","load_state_r3","COMMA","ENTER","SPACE","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","randomInt","ɵɵclassProp","form","controls","invalid","touched","auto_r3","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template_mat_chip_row_removed_0_listener","item_r6","_r5","$implicit","removeTag","ɵɵtextInterpolate1","ɵɵi18n","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","CateringItemModalComponent_form_4_div_4_Template_input_matChipInputTokenEnd_7_listener","_r4","addTag","tag_list","chipList_r7","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_13_listener","value","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_15_listener","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_17_listener","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_19_listener","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_21_listener","CateringItemModalComponent_form_4_div_27_Template","description","tmp_9_0","get","hasTag","ɵɵpureFunction0","_c0","renderPercent","images","CateringItemModalComponent_footer_5_Template_button_click_1_listener","_r8","saveChanges","dirty","option_r9","CateringItemModalComponent","item","_data","categories","tag","includes","required","accept_points","discount_cap","markAsDirty","input","trim","push","setValue","existing_tag","index","indexOf","splice","ɵɵdirectiveInject","i18n_0","ngI18nClosureMode","$localize","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","load_state_r10","unique","CateringStateService","menu_r4","ɵɵtwoWayListener","CateringMenuItemComponent_div_1_Template_mat_checkbox_ngModelChange_1_listener","_r2","ctx_r2","ɵɵtwoWayBindingSet","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","CateringMenuItemComponent_div_1_Template_button_click_13_listener","show_options","ɵɵtwoWayProperty","ɵɵpipeBind2","ɵɵpipeBind1","symbol","can_edit","CateringMenuItemComponent_div_2_div_1_button_7_Template_button_click_0_listener","option_r6","editOption","CateringMenuItemComponent_div_2_div_1_button_8_Template_button_click_0_listener","_r7","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","ɵɵstyleProp","CateringMenuItemComponent","_catering","is_editable","hide_for_zones","zone","state","list","updateItem","currency","addOption","option","deleteOption","editItem","addItem","removeItem","deleteItem","i1","inputs","attrs","CateringMenuItemComponent_Template","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","CateringMenuItemComponent_Template_button_click_5_listener","CateringMenuItemComponent_Template_button_click_10_listener","CateringMenuItemComponent_Template_button_click_15_listener","BehaviorSubject","ɵɵelementContainerStart","item_r2","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r4","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r5","tab_menu","CateringMenuComponent","shown_tab","pipe","menu_map","CateringMenuComponent_Template","CateringMenuComponent_Template_mat_tab_group_selectedIndexChange_0_listener","next","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","tmp_1_0","empty_state_r6","ctx_r0","auto_r2","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","CateringItemOptionModalComponent_footer_5_Template_button_click_1_listener","_r3","option_r4","CateringItemOptionModalComponent","types","new_option","parent","concat","CateringItemOptionModalComponent_Template","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","load_state_r5","opt_r3","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","CateringOrderItemComponent_ng_container_0_Template_button_click_4_listener","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","active","amount","quantity","option_list","ACTIVE_ITEMS","Set","CateringOrderItemComponent","item_key","order_id","ngOnInit","has","delete","add","CateringOrderItemComponent_Template","CateringOrderItemComponent_ng_container_0_Template","CateringOrdersService","AsyncHandler","SettingsService","CATERING_STATUSES","data_r1","time_format","ɵɵtextInterpolate2","data_r3","date","date_end","CateringOrderListComponent_ng_template_8_span_2_Template","data_r4","space","display_name","CateringOrderListComponent_ng_template_10_span_2_Template","data_r5","organiser","host","CateringOrderListComponent_ng_template_12_button_8_Template_button_click_0_listener","status_r7","_r6","row_r8","row","updateStatus","colour","CateringOrderListComponent_ng_template_12_button_8_Template","tmp_12_0","status","data_r9","menu_r10","tmp_14_0","statuses","CateringOrderListComponent_ng_template_14_Template_button_click_4_listener","row_r12","_r11","show_children","notes","row_r14","item_r13","CateringOrderListComponent_ng_template_16_ul_0_li_1_Template","items","CateringOrderListComponent_ng_template_16_ul_0_Template","CateringOrderListComponent","_settings","find","_orders","_this","this","order_list","filtered","_ref","_asyncToGenerator","order","s","timeout","_x","_x2","apply","arguments","startPolling","ngOnDestroy","stopPolling","trackByFn","undefined","i2","features","ɵɵInheritDefinitionFeature","CateringOrderListComponent_Template","CateringOrderListComponent_ng_template_2_Template","CateringOrderListComponent_ng_template_4_Template","CateringOrderListComponent_ng_template_6_Template","CateringOrderListComponent_ng_template_8_Template","CateringOrderListComponent_ng_template_10_Template","CateringOrderListComponent_ng_template_12_Template","CateringOrderListComponent_ng_template_14_Template","CateringOrderListComponent_ng_template_16_Template","ɵɵpureFunctionV","_c9","ɵɵpureFunction1","state_template_r15","_c1","time_template_r16","_c2","event_time_template_r17","_c3","location_template_r18","_c4","host_template_r19","_c5","_c6","_c7","status_template_r20","_c8","actions_template_r21","child_template_r22","CateringOrder","OrganisationService","cateringItemAvailable","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template_a_counter_ngModelChange_0_listener","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template_button_click_7_listener","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r5","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","order_details_r6","CateringOrderModalComponent_footer_1_ng_container_1_Template_button_click_3_listener","item_count","CateringOrderModalComponent_footer_1_ng_template_2_Template_button_click_0_listener","CateringOrderModalComponent_footer_1_ng_template_2_Template_button_click_2_listener","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","order_actions_r9","optionsFor","item_r11","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","CateringOrderModalComponent_ng_template_4_div_4_Template_a_counter_ngModelChange_8_listener","_r10","total_cost","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","_org","currency_code","rules","getCateringConfig","level","parent_id","subscribe","cat","updateMenuQuantities","choose_options","old_item","itm","reduce","c","o","opt","selectOptions","then","new_item","options_string","sort","a","b","localeCompare","join","confirmOrder","CateringOrderModalComponent_Template","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","load_state_r12","opt_r4","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template_mat_radio_group_ngModelChange_1_listener","group_r2","updateGroupOption","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template_mat_checkbox_ngModelChange_0_listener","option_state","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","multi_options_r7","CateringOrderOptionsModalComponent","groups","group_list","saveOptions","CateringOrderOptionsModalComponent_Template","CateringOrderOptionsModalComponent_div_7_Template","CateringOrderOptionsModalComponent_Template_button_click_9_listener","combineLatest","of","switchMap","debounceTime","tap","shareReplay","catchError","startOfDay","endOfDay","getUnixTime","format","flatten","queryEvents","updateEventMetadata","CalendarEvent","checkOrder","filters","search","_filters","getValue","_poll","_loading","orders","zones","start","Date","now","end","zone_ids","period_start","period_end","events","valid_catering","deliver_at","asObservable","subscription","delay","interval","valueOf","clearInterval","updated_order","catering","extension_data","system_id","resources","system","booking","toPromise","factory","ɵfac","providedIn","MatDialog","updateMetadata","showMetadata","first","take","notifyError","notifySuccess","openConfirmModal","AttachedResourceConfigModalComponent","building","_menu","_dialog","_updated","_currency","_change","settings","active_building","details","post","require_notes","charge_codes","availability","disabled_rooms","bld","getCateringForZone","manageCateringOrder","_this2","ref","open","Promise","race","componentInstance","afterClosed","close","_this3","findIndex","updateMenu","_this4","_this5","_this6","title","content","icon","class","_this7","editConfig","_this8","config","saveNotes","saveSettings","updateConfig","importMenu","_this9","updated_menu","catch","zone_id","_this10","old_settings","Array","addItemToOrder","match","new_order","ɵɵinject","i3","CommonModule","Type","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatCheckboxModule","MatDialogModule","MatMenuModule","MatTabsModule","MatRadioModule","MatTooltipModule","MatFormFieldModule","FormFieldsModule","ComponentsModule","NewCateringOrderModalComponent","CateringItemListComponent","CateringItemDetailsComponent","CateringItemFiltersComponent","CateringListFieldComponent","ChargeCodeListModalComponent","CateringItemListItemComponent","MatProgressSpinnerModule","COMPONENTS","SharedCateringModule","_3","declarations","imports","exports","MatDialogRef","ChargeCodeListModalComponent_main_6_div_1_Template_input_ngModelChange_2_listener","i_r2","ChargeCodeListModalComponent_main_6_div_1_Template_button_click_3_listener","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","ChargeCodeListModalComponent_footer_7_Template_input_change_3_listener","addCodesFromFile","ChargeCodeListModalComponent_footer_7_Template_button_click_4_listener","newCode","ChargeCodeListModalComponent_footer_7_Template_button_click_6_listener","saveChargeCodes","_state","_dialog_ref","reader","evt","srcElement","cleaned_codes","idx","ChargeCodeListModalComponent_Template","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}