{"version":3,"file":"default-libs_catering_src_index_ts.js","mappings":"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","sources":["./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-menu-item.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-order.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts"],"sourcesContent":["export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringStateService } from './catering-state.service';\nimport { CateringOption } from './catering.interfaces';\n\n@Component({\n    selector: '[catering-menu-item]',\n    template: `\n        <div\n            class=\"w-full h-full bg-base-100 border border-base-200 overflow-hidden rounded\"\n        >\n            <div item class=\"flex items-center px-2\" *ngIf=\"item\">\n                <mat-checkbox\n                    class=\"mr-2\"\n                    matTooltip=\"Allow Ordering Item\"\n                    [(ngModel)]=\"is_enabled\"\n                ></mat-checkbox>\n                <div class=\"flex items-center p-2 flex-1\">\n                    <div class=\"flex-1\">\n                        <div>{{ item.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"p-2 m-2 text-xs font-bold text-secondary-content rounded bg-secondary\"\n                    >\n                        {{ item.unit_price / 100 | currency: (symbol | async) }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    [matMenuTriggerFor]=\"menu\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!item.options.length\"\n                    (click)=\"show_options = !show_options\"\n                >\n                    <app-icon>expand_more</app-icon>\n                </button>\n            </div>\n            <div\n                options\n                *ngIf=\"item\"\n                class=\"bg-base-200 overflow-hidden\"\n                [style.height]=\"\n                    show_options ? item.options.length * 3.5 + 'rem' : '0'\n                \"\n            >\n                <div\n                    class=\"flex p-2 items-center border-t border-solid border-base-200 relative\"\n                    *ngFor=\"let option of item.options\"\n                >\n                    <div\n                        class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                    ></div>\n                    <div class=\"flex-1 pl-4 pr-2\">\n                        <div class=\"text\">{{ option.name }}</div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ option.group }}\n                        </div>\n                    </div>\n                    <button\n                        edit\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"editOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        remove\n                        icon\n                        matRipple\n                        class=\"mx-2\"\n                        (click)=\"removeOption(option)\"\n                        *ngIf=\"can_edit\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"addOption()\"\n                >\n                    <app-icon>add</app-icon>\n                    <div class=\"ml-2\">Add Option</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"editItem()\"\n                >\n                    <app-icon>edit</app-icon>\n                    <div class=\"ml-2\">Edit Item</div>\n                </button>\n                <button\n                    mat-menu-item\n                    class=\"flex items-center\"\n                    (click)=\"removeItem()\"\n                >\n                    <app-icon>delete</app-icon>\n                    <div class=\"ml-2\">Remove Item</div>\n                </button>\n            </mat-menu>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                overflow: hidden;\n                width: 48rem;\n                margin: 0.5rem auto;\n                max-width: calc(100vw - 1rem);\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [options] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class CateringMenuItemComponent {\n    /** Item to display */\n    @Input() public item: CateringItem;\n    /** Whether to show item options */\n    public show_options = false;\n\n    public readonly addOption = () => this._catering.addOption(this.item);\n\n    public readonly editOption = (option: CateringOption) =>\n        this._catering.addOption(this.item, option);\n\n    public readonly removeOption = (option: CateringOption) =>\n        this._catering.deleteOption(this.item, option);\n\n    public readonly editItem = () => this._catering.addItem(this.item);\n\n    public readonly removeItem = () => this._catering.deleteItem(this.item);\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n\n    public get is_enabled() {\n        return !this.item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public set is_enabled(state: boolean) {\n        let list = this.item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...this.item, hide_for_zones: list })\n        );\n    }\n\n    /** Currency symbol for active menu */\n    public get symbol() {\n        return this._catering.currency;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <mat-tab-group\n            class=\"h-full\"\n            (selectedIndexChange)=\"\n                shown_tab.next($event === 0 ? '' : categories[$event - 1])\n            \"\n        >\n            <mat-tab label=\"All Items\">\n                <ng-container *ngIf=\"(menu | async)?.length; else empty_state\">\n                    <ng-container *ngFor=\"let item of menu | async\">\n                        <div catering-menu-item [item]=\"item\"></div>\n                    </ng-container>\n                </ng-container>\n            </mat-tab>\n            <mat-tab\n                *ngFor=\"let group of categories\"\n                [attr.label]=\"group\"\n                [label]=\"group\"\n            >\n                <ng-container *ngFor=\"let item of (tab_menu | async)[group]\">\n                    <div catering-menu-item [item]=\"item\"></div>\n                </ng-container>\n            </mat-tab>\n        </mat-tab-group>\n        <ng-template #empty_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2\">\n                <app-icon>close</app-icon>\n                <p>No items in menu</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n    /** Store for the currently selected tab */\n    public readonly shown_tab = new BehaviorSubject<string>('');\n    /** Observable for the menu list for the selected tab */\n    public readonly tab_menu = this.menu.pipe(\n        map((menu) => {\n            const menu_map = {};\n            for (const group of this.categories) {\n                menu_map[group] = menu.filter(\n                    (item) => item.category === group\n                );\n            }\n            return menu_map;\n        })\n    );\n\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(private _catering: CateringStateService) {}\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-20 text-right h-14 relative\">\n                <div\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 border-b border-base-200 border-solid py-4 space-x-2\"\n            >\n                <div class=\"\">{{ item?.name }}</div>\n                <div class=\"flex-1\">\n                    <div\n                        class=\"p-1 rounded-full bg-neutral w-8 h-8 flex items-center justify-center\"\n                    >\n                        ⨯{{ item?.amount || item?.quantity || 1 }}\n                    </div>\n                </div>\n                <div class=\"flex space-x-2 mr-2\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-black rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"w-36\">Meeting Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { CateringOrder } from './catering-order.class';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order',\n    template: `\n        <div\n            class=\"w-full flex items-center py-2\"\n            [class.bg-base-200]=\"!show_items\"\n            [class.bg-base-200]=\"show_items\"\n            *ngIf=\"order\"\n        >\n            <div\n                class=\"w-20 flex items-center justify-center z-20 h-full\"\n                [class.bg-base-200]=\"show_items\"\n                [class.dark:bg-neutral-700]=\"show_items\"\n            >\n                <div\n                    class=\"rounded-full bg-base-300 p-2 text-2xl text-black opacity-60 flex items-center justify-center\"\n                >\n                    <app-icon>room_service</app-icon>\n                </div>\n            </div>\n            <div time class=\"w-24\">\n                {{ order.deliver_at | date: time_format }}\n            </div>\n            <div time class=\"w-36 text-sm\">\n                {{ order.event?.date | date: 'MMM d' }},\n                {{ order.event?.date | date: time_format }}\n                <br />\n                {{ order.event?.date_end | date: 'MMM d' }},\n                {{ order.event?.date_end | date: time_format }}\n            </div>\n            <div class=\"flex-1\">\n                {{\n                    order.event?.space?.display_name ||\n                        order.event?.space?.name ||\n                        ''\n                }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"\n                        !(\n                            order.event?.space?.display_name ||\n                            order.event?.space?.name\n                        )\n                    \"\n                >\n                    No Location\n                </span>\n            </div>\n            <div class=\"w-56\">\n                {{ order.event?.organiser?.name || order.event?.host || '' }}\n                <span\n                    class=\"opacity-30\"\n                    *ngIf=\"!(order.event?.organiser?.name || order.event?.host)\"\n                >\n                    Unknown Host\n                </span>\n            </div>\n            <div class=\"w-28\">{{ order.charge_code || '~ No Code ~' }}</div>\n            <div class=\"w-24\">\n                <button\n                    *ngIf=\"order.notes\"\n                    class=\"clear underline\"\n                    [matTooltip]=\"order.notes\"\n                >\n                    View\n                </button>\n            </div>\n            <div class=\"w-28\">\n                {{ order.invoice_number || '' }}\n                <span class=\"opacity-30\" *ngIf=\"!order.invoice_number\">\n                    No Invoice\n                </span>\n            </div>\n            <div class=\"w-36\">\n                <button\n                    name=\"status\"\n                    class=\"text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                    matRipple\n                    [style.background]=\"status?.colour\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <div class=\"flex text-center capitalize mx-2\">\n                        {{ status?.name }}\n                    </div>\n                    <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                </button>\n            </div>\n            <div class=\"w-12\">\n                <button icon (click)=\"show_items = !show_items\">\n                    <app-icon>{{\n                        show_items\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <ul\n            *ngIf=\"order?.items.length\"\n            class=\"list-none p-0 m-0 w-full relative z-0\"\n            [class.shown]=\"show_items\"\n            [@show]=\"show_items ? 'show' : 'hide'\"\n        >\n            <li\n                catering-order-item\n                class=\"flex items-center\"\n                *ngFor=\"let item of order.items; let i = index\"\n                [order_id]=\"order?.id\"\n                [item]=\"item\"\n            ></li>\n        </ul>\n        <mat-menu #menu=\"matMenu\">\n            <button\n                mat-menu-item\n                *ngFor=\"let status of statuses\"\n                class=\"flex items-center\"\n                (click)=\"updateStatus(status.id)\"\n            >\n                <div\n                    class=\"rounded-full h-4 w-4 mr-2\"\n                    [style.background-color]=\"status.colour\"\n                ></div>\n                <span class=\"mr-2 w-20\">{{ status.name }}</span>\n            </button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            [name='status'] {\n                border-radius: 1.55rem;\n            }\n\n            button[mat-menu-item] {\n                display: flex;\n            }\n\n            [name='bar'] {\n                width: 2px;\n                top: -0.5rem;\n                left: calc(2.5rem - 1px);\n            }\n        `,\n    ],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class CateringOrderComponent extends AsyncHandler {\n    @Input() public order: CateringOrder;\n    /** Whether to show the items in the catering order */\n    public show_items = false;\n    /** List of status available to select */\n    public readonly statuses = CATERING_STATUSES;\n\n    public readonly updateStatus = async (s) => {\n        await this._orders.updateStatus(this.order, s);\n        this.timeout('status-change', () => ((this.order as any).status = s));\n    };\n\n    public get status() {\n        return this.statuses.find((i) => i.id === this.order.status);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu-item.component';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n"],"names":["EventEmitter","csvToJson","downloadFile","CateringItem","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CateringImportMenuModalComponent_main_4_Template_input_change_6_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","handleFileEvent","CateringImportMenuModalComponent_main_4_Template_button_click_8_listener","ctx_r6","downloadTemplate","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r2","loading","CateringImportMenuModalComponent","constructor","event","element","target","files","length","file","fileReader","FileReader","addEventListener","e","contents","result","data","emit","reason","metadata","filter","_","type","toLowerCase","map","i","options","tags","id","name","group","category","multiple","unit_price","readAsText","template","_2","selectors","outputs","decls","vars","consts","CateringImportMenuModalComponent_Template","rf","ctx","ɵɵtemplate","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","ɵɵtemplateRefExtractor","ɵɵproperty","_r3","COMMA","ENTER","SPACE","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","randomInt","ɵɵclassProp","ctx_r7","form","controls","invalid","touched","ctx_r8","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template_mat_chip_row_removed_0_listener","restoredCtx","_r17","item_r15","$implicit","ctx_r16","removeTag","ɵɵtextInterpolate1","ɵɵattribute","ɵɵi18n","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","CateringItemModalComponent_form_4_div_4_Template_input_matChipInputTokenEnd_7_listener","_r19","ctx_r18","addTag","ctx_r9","tag_list","_r13","separators","ctx_r11","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_13_listener","_r21","ctx_r20","value","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_15_listener","ctx_r22","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_17_listener","ctx_r23","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_19_listener","ctx_r24","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_21_listener","ctx_r25","CateringItemModalComponent_form_4_div_27_Template","ctx_r1","description","tmp_6_0","get","hasTag","ɵɵpureFunction0","_c0","renderPercent","images","CateringItemModalComponent_footer_5_Template_button_click_1_listener","_r27","ctx_r26","saveChanges","dirty","option_r28","CateringItemModalComponent","item","_data","categories","tag","includes","required","accept_points","discount_cap","markAsDirty","input","trim","push","setValue","existing_tag","index","indexOf","splice","ɵɵdirectiveInject","i18n_0","ngI18nClosureMode","$localize","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","_r4","unique","CateringStateService","_r2","CateringMenuItemComponent_div_1_Template_mat_checkbox_ngModelChange_1_listener","is_enabled","CateringMenuItemComponent_div_1_button_12_Template","CateringMenuItemComponent_div_1_Template_button_click_13_listener","show_options","ctx_r0","ɵɵpipeBind2","ɵɵpipeBind1","symbol","can_edit","CateringMenuItemComponent_div_2_div_1_button_7_Template_button_click_0_listener","option_r8","editOption","CateringMenuItemComponent_div_2_div_1_button_8_Template_button_click_0_listener","_r16","ctx_r14","removeOption","CateringMenuItemComponent_div_2_div_1_button_7_Template","CateringMenuItemComponent_div_2_div_1_button_8_Template","CateringMenuItemComponent_div_2_div_1_Template","ɵɵstyleProp","CateringMenuItemComponent","_catering","is_editable","hide_for_zones","zone","state","list","updateItem","currency","addOption","option","deleteOption","editItem","addItem","removeItem","deleteItem","i1","inputs","attrs","CateringMenuItemComponent_Template","CateringMenuItemComponent_div_1_Template","CateringMenuItemComponent_div_2_Template","CateringMenuItemComponent_Template_button_click_5_listener","CateringMenuItemComponent_Template_button_click_10_listener","CateringMenuItemComponent_Template_button_click_15_listener","BehaviorSubject","ɵɵelementContainerStart","ɵɵelementContainerEnd","item_r5","CateringMenuComponent_ng_container_2_ng_container_1_Template","menu","item_r8","CateringMenuComponent_mat_tab_4_ng_container_1_Template","group_r6","tab_menu","CateringMenuComponent","shown_tab","pipe","menu_map","CateringMenuComponent_Template","CateringMenuComponent_Template_mat_tab_group_selectedIndexChange_0_listener","next","CateringMenuComponent_ng_container_2_Template","CateringMenuComponent_mat_tab_4_Template","CateringMenuComponent_ng_template_5_Template","tmp_0_0","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","CateringItemOptionModalComponent_footer_5_Template_button_click_1_listener","_r12","option_r13","CateringItemOptionModalComponent","types","new_option","parent","concat","CateringItemOptionModalComponent_Template","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","opt_r2","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","CateringOrderItemComponent_ng_container_0_Template_button_click_4_listener","_r6","ctx_r5","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","active","amount","quantity","option_list","ACTIVE_ITEMS","Set","CateringOrderItemComponent","item_key","order_id","ngOnInit","has","delete","add","CateringOrderItemComponent_Template","CateringOrderItemComponent_ng_container_0_Template","CateringOrdersService","order_r3","CateringOrderListComponent","_orders","order_list","filtered","startPolling","ngOnDestroy","stopPolling","trackByFn","order","undefined","CateringOrderListComponent_Template","CateringOrderListComponent_li_20_Template","CateringOrderListComponent_div_22_Template","CateringOrderListComponent_mat_progress_bar_24_Template","tmp_2_0","AsyncHandler","CateringOrder","OrganisationService","cateringItemAvailable","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template_a_counter_ngModelChange_0_listener","item_r11","ctx_r15","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template_button_click_7_listener","ctx_r19","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","ctx_r10","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","CateringOrderModalComponent_footer_1_ng_container_1_Template_button_click_3_listener","_r28","ctx_r27","item_count","CateringOrderModalComponent_footer_1_ng_template_2_Template_button_click_0_listener","_r30","ctx_r29","CateringOrderModalComponent_footer_1_ng_template_2_Template_button_click_2_listener","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","_r26","ctx_r34","optionsFor","item_r33","ɵɵtextInterpolate2","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","CateringOrderModalComponent_ng_template_4_div_4_Template_a_counter_ngModelChange_8_listener","_r37","ctx_r36","total_cost","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","items","CateringOrderModalComponent","_org","currency_code","_this","_asyncToGenerator","rules","getCateringConfig","space","level","parent_id","subscribe","cat","updateMenuQuantities","timeout","choose_options","old_item","find","itm","reduce","c","o","opt","selectOptions","then","new_item","options_string","sort","a","b","localeCompare","join","confirmOrder","features","ɵɵInheritDefinitionFeature","CateringOrderModalComponent_Template","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template_mat_radio_group_ngModelChange_1_listener","_r11","group_r1","updateGroupOption","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template_mat_checkbox_ngModelChange_0_listener","_r18","ctx_r17","option_state","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","ctx_r13","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","groups","group_list","saveOptions","CateringOrderOptionsModalComponent_Template","CateringOrderOptionsModalComponent_div_7_Template","CateringOrderOptionsModalComponent_Template_button_click_9_listener","ANIMATION_SHOW_CONTRACT_EXPAND","SettingsService","CATERING_STATUSES","notes","CateringOrderComponent_div_0_span_18_Template","CateringOrderComponent_div_0_span_21_Template","CateringOrderComponent_div_0_button_25_Template","CateringOrderComponent_div_0_span_28_Template","CateringOrderComponent_div_0_Template_button_click_36_listener","_r9","show_items","deliver_at","time_format","date","date_end","display_name","organiser","host","charge_code","invoice_number","status","colour","CateringOrderComponent_ul_1_li_1_Template","CateringOrderComponent_button_4_Template_button_click_0_listener","_r15","status_r13","updateStatus","CateringOrderComponent","statuses","_settings","this","_ref","s","_x","apply","arguments","i2","CateringOrderComponent_Template","CateringOrderComponent_div_0_Template","CateringOrderComponent_ul_1_Template","CateringOrderComponent_button_4_Template","combineLatest","of","switchMap","debounceTime","tap","shareReplay","catchError","startOfDay","endOfDay","getUnixTime","format","flatten","queryEvents","updateEventMetadata","CalendarEvent","checkOrder","filters","search","_filters","getValue","_poll","_loading","orders","zones","start","Date","now","end","zone_ids","period_start","period_end","events","valid_catering","asObservable","subscription","delay","interval","valueOf","clearInterval","updated_order","catering","extension_data","system_id","resources","system","booking","toPromise","factory","ɵfac","providedIn","MatDialog","updateMetadata","showMetadata","first","take","notifyError","notifySuccess","openConfirmModal","AttachedResourceConfigModalComponent","building","_menu","_dialog","_updated","_currency","_change","settings","active_building","details","post","require_notes","charge_codes","availability","disabled_rooms","bld","getCateringForZone","manageCateringOrder","_this2","ref","open","Promise","race","componentInstance","afterClosed","close","_this3","findIndex","updateMenu","_this4","_this5","_this6","title","content","icon","class","_this7","editConfig","_this8","config","saveNotes","saveSettings","updateConfig","importMenu","_this9","updated_menu","catch","zone_id","_this10","old_settings","Array","addItemToOrder","match","new_order","ɵɵinject","i3","CommonModule","Type","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatCheckboxModule","MatDialogModule","MatMenuModule","MatTabsModule","MatRadioModule","MatTooltipModule","MatFormFieldModule","FormFieldsModule","ComponentsModule","NewCateringOrderModalComponent","CateringItemListComponent","CateringItemDetailsComponent","CateringItemFiltersComponent","CateringListFieldComponent","ChargeCodeListModalComponent","CateringItemListItemComponent","COMPONENTS","SharedCateringModule","_3","declarations","imports","exports","MatDialogRef","ChargeCodeListModalComponent_main_6_div_1_Template_input_ngModelChange_2_listener","_r8","i_r6","ChargeCodeListModalComponent_main_6_div_1_Template_button_click_3_listener","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","ChargeCodeListModalComponent_footer_7_Template_input_change_3_listener","addCodesFromFile","ChargeCodeListModalComponent_footer_7_Template_button_click_4_listener","ctx_r12","newCode","ChargeCodeListModalComponent_footer_7_Template_button_click_6_listener","saveChargeCodes","_state","_dialog_ref","reader","evt","srcElement","cleaned_codes","idx","ChargeCodeListModalComponent_Template","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}