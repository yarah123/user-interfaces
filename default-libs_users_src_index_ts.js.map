{"version":3,"file":"default-libs_users_src_index_ts.js","mappings":"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","sources":["./libs/users/src/index.ts","./libs/users/src/lib/find-availability-modal/find-availability-modal.component.ts","./libs/users/src/lib/find-availability-modal/user-availability.component.ts","./libs/users/src/lib/location.class.ts","./libs/users/src/lib/user.pipe.ts","./libs/users/src/lib/users.module.ts","./node_modules/date-fns/esm/fromUnixTime/index.js"],"sourcesContent":["export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import {\n    Component,\n    ElementRef,\n    Inject,\n    Renderer2,\n    ViewChild,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AsyncHandler } from '@placeos/common';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    fromUnixTime,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n} from 'date-fns';\nimport { queryUserFreeBusy } from 'libs/calendar/src/lib/calendar.fn';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    defaultIfEmpty,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { User } from '../user.class';\nimport { AvailabilityBlock } from './user-availability.component';\n\nexport interface FindAvailabilityData {\n    host: User;\n    users: User[];\n    date: number;\n    duration: number;\n}\n\n@Component({\n    selector: 'find-availability-modal',\n    template: `\n        <header class=\"relative flex items-center justify-center p-4\">\n            <h2 class=\"text-center\">Find Availability</h2>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-1/2 left-1 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"flex flex-col h-[calc(100vh-7rem)] sm:h-[65vh] overflow-hidden\"\n        >\n            <div\n                class=\"w-full flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 p-2\"\n            >\n                <a-date-field\n                    [(ngModel)]=\"date\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                    (ngModelChange)=\"on_change.next(on_change.getValue() + 1)\"\n                ></a-date-field>\n                <a-user-search-field\n                    [(ngModel)]=\"user\"\n                    (ngModelChange)=\"addUser($event)\"\n                    class=\"max-h-[3.25rem] flex-1\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"grid flex-1 h-1/2 w-full border-t border-base-200 relative overflow-hidden divide-x divide-y divide-base-200 max-w-[100vw] sm:max-w-[80vw]\"\n            >\n                <div\n                    times\n                    class=\"col-start-2 h-10 flex overflow-hidden border-l border-base-200\"\n                >\n                    <div\n                        hour\n                        *ngFor=\"let _ of hours; let hour = index\"\n                        class=\"relative border-r border-base-200 h-10 min-w-[5rem] p-2\"\n                        [attr.disabled]=\"today && current_hour > hour\"\n                        [style.left]=\"-offset_x + 'px'\"\n                    >\n                        {{ hour % 12 === 0 ? '12' : hour % 12\n                        }}{{ hour >= 12 ? 'pm' : 'am' }}\n                    </div>\n                </div>\n                <div users class=\"row-start-2 w-24 overflow-hidden\">\n                    <div\n                        host\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"host\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words overflow-hidden max-w-full px-2 text-center\"\n                        >\n                            {{ host.name || host.email }}\n                        </div>\n                    </div>\n                    <div\n                        person\n                        class=\"flex flex-col items-center justify-center h-32 w-24 relative border-b border-base-200 py-2\"\n                        [style.top]=\"-offset_y + 'px'\"\n                        *ngFor=\"let user of users | async\"\n                    >\n                        <a-user-avatar\n                            class=\"text-2xl\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <div\n                            class=\"text-xs break-words max-w-full px-2 text-center\"\n                        >\n                            {{ user.name || host.email }}\n                        </div>\n                        <button\n                            icon\n                            class=\"absolute -top-1 -left-1\"\n                            (click)=\"removeUser(user)\"\n                        >\n                            <app-icon>close</app-icon>\n                        </button>\n                    </div>\n                </div>\n                <div blocks class=\"relative row-start-2 overflow-hidden\">\n                    <div fixed class=\"absolute inset-0 flex overflow-hidden\">\n                        <div\n                            divider\n                            class=\"relative h-full min-w-[5rem] border-l border-base-200\"\n                            [style.left]=\"-(offset_x + 1) + 'px'\"\n                            [attr.disabled]=\"today && current_hour > h\"\n                            *ngFor=\"let _ of hours; let h = index\"\n                        ></div>\n                        <div\n                            selection\n                            class=\"absolute inset-y-0 !border-x-2 !border-info z-20 cursor-grab active:cursor-grabbing\"\n                            [style.left]=\"\n                                'calc(' +\n                                selection_left +\n                                'rem - ' +\n                                offset_x +\n                                'px)'\n                            \"\n                            [style.width]=\"selection_width + 'rem'\"\n                            (mousedown)=\"startMovePeriod($event)\"\n                            (touchstart)=\"startMovePeriod($event)\"\n                        >\n                            <div\n                                class=\"absolute inset-0 bg-info opacity-30\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -left-px -translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info\"\n                            ></div>\n                            <div\n                                handle\n                                class=\"absolute top-1/2 -right-px translate-x-1/2 -translate-y-1/2 h-3 w-3 rounded-full bg-info hover:h-4 hover:w-4 active:bg-secondary\"\n                                (mousedown)=\"startMoveDuration($event)\"\n                                (touchstart)=\"startMoveDuration($event)\"\n                            ></div>\n                            <div\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-2 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ duration | duration }}\n                            </div>\n                            <div\n                                *ngIf=\"move_time\"\n                                class=\"bg-base-100 border border-base-200 p-2 absolute top-12 left-1/2 -translate-x-1/2 shadow text-xs whitespace-nowrap rounded\"\n                            >\n                                {{ date | date: 'shortTime' }}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        scroll\n                        #container\n                        class=\"absolute inset-0 overflow-auto\"\n                        (scroll)=\"onScroll()\"\n                    >\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            [user]=\"host\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[host.email]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                        <user-availability-list\n                            class=\"pointer-events-none\"\n                            *ngFor=\"let user of users | async\"\n                            [user]=\"user\"\n                            [date]=\"date\"\n                            [availability]=\"\n                                (availability | async)\n                                    ? (availability | async)[\n                                          user.email.toLowerCase()\n                                      ]\n                                    : []\n                            \"\n                        ></user-availability-list>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center justify-between p-2 border-t border-base-200 w-full\"\n        >\n            <button\n                btn\n                matRipple\n                [mat-dialog-close]=\"true\"\n                class=\"clear text-secondary\"\n            >\n                <div class=\"flex items-center\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <div class=\"mr-1 underline\">Back to form</div>\n                </div>\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-columns: 6rem 1fr;\n                grid-template-rows: 2.5rem minmax(0, 1fr);\n            }\n            [disabled='true'],\n            [disabled='true'] [header] {\n                background: var(--b3) !important;\n                pointer-events: none;\n            }\n            [disabled='true'] > * {\n                opacity: 0.3;\n            }\n        `,\n    ],\n})\nexport class FindAvailabilityModalComponent extends AsyncHandler {\n    public readonly users = new BehaviorSubject([]);\n    public search = '';\n    public date = this._data.date || Date.now();\n    public duration = this._data.duration || 60;\n    public user?: User;\n    public offset_y = 0;\n    public offset_x = 0;\n\n    public readonly host = this._data.host;\n    public readonly hours = new Array(24).fill(0);\n    public readonly on_change = new BehaviorSubject(0);\n\n    public readonly availability = combineLatest([\n        this.users,\n        this.on_change,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([users]) => {\n            return queryUserFreeBusy({\n                calendars: [\n                    this.host.email,\n                    ...users.map((_) => _.email.toLowerCase()),\n                ].join(','),\n                period_start: getUnixTime(startOfDay(this.date)),\n                period_end: getUnixTime(endOfDay(this.date)),\n            }).pipe(catchError(() => of([])));\n        }),\n        map((availability_list) => {\n            const availability_map: Record<string, AvailabilityBlock[]> = {};\n            for (const item of availability_list) {\n                availability_map[item.id.toLowerCase()] = item.availability\n                    .filter((_) => _.status === 'busy')\n                    .map((block) => {\n                        const date = fromUnixTime(block.starts_at);\n                        const duration = differenceInMinutes(\n                            fromUnixTime(block.ends_at),\n                            fromUnixTime(block.starts_at)\n                        );\n                        return {\n                            date,\n                            duration,\n                            start:\n                                ((date.getHours() + date.getMinutes() / 60) /\n                                    24) *\n                                100,\n                            size: (duration / 60 / 24) * 100,\n                        };\n                    });\n            }\n            return availability_map;\n        }),\n        defaultIfEmpty({}),\n        shareReplay(1)\n    );\n\n    @ViewChild('container', { static: true })\n    private _container_el!: ElementRef<HTMLDivElement>;\n\n    public get today() {\n        return isSameDay(this.date, Date.now());\n    }\n\n    public get current_hour() {\n        return new Date().getHours();\n    }\n\n    public get selection_left() {\n        const date = new Date(this.date);\n        return (date.getHours() + date.getMinutes() / 60) * 5;\n    }\n\n    public get selection_width() {\n        return (this.duration / 60) * 5;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: FindAvailabilityData,\n        private _renderer: Renderer2,\n        private _dialog_ref: MatDialogRef<FindAvailabilityModalComponent>\n    ) {\n        super();\n        this.users.next([...this._data.users]);\n    }\n\n    public addUser(user: User) {\n        this.users.next([\n            ...this.users.getValue().filter((u) => u.email !== user.email),\n            user,\n        ]);\n        this.user = null;\n    }\n\n    public removeUser(user: User) {\n        this.users.next(\n            this.users.getValue().filter((u) => u.email !== user.email)\n        );\n        this.user = null;\n    }\n\n    public closeAndUpdate() {\n        this._dialog_ref.close(true);\n    }\n\n    public ngAfterViewInit() {\n        const date = new Date(this.date);\n        this.timeout(\n            'init',\n            () => {\n                const el = this._container_el.nativeElement.querySelector(\n                    `[hour=\"${date.getHours()}\"]`\n                );\n                if (el) {\n                    const rect =\n                        this._container_el.nativeElement.getBoundingClientRect();\n                    const el_rect = el.getBoundingClientRect();\n                    this._container_el.nativeElement.scrollTo(\n                        el_rect.left - 128 - rect.left,\n                        0\n                    );\n                }\n                this.onScroll();\n            },\n            300\n        );\n    }\n\n    public onScroll() {\n        this.offset_x = this._container_el.nativeElement.scrollLeft;\n        this.offset_y = this._container_el.nativeElement.scrollTop;\n    }\n\n    public move_time = false;\n    private _start_time = 0;\n    private _move_last = 0;\n    private _move_size = 80 * 24;\n\n    public startMovePeriod(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this.move_time = true;\n        this._start_time = this.date;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMovePeriod(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    public startMoveDuration(event: MouseEvent | TouchEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._move_last =\n            event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX;\n        this._start_time = this.duration;\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'mousemove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              )\n            : this.subscription(\n                  'on_move',\n                  this._renderer.listen('window', 'touchmove', (e) =>\n                      this._onMoveDuration(e)\n                  )\n              );\n        event instanceof MouseEvent\n            ? this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'mouseup', () =>\n                      this._onMoveEnd()\n                  )\n              )\n            : this.subscription(\n                  'on_move_end',\n                  this._renderer.listen('window', 'touchend', () =>\n                      this._onMoveEnd()\n                  )\n              );\n    }\n\n    private _onMovePeriod(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            const old_date = this.date;\n            this.date = addMinutes(this._start_time, change_min).valueOf();\n            if (this.date < Date.now()) this.date = old_date;\n        }\n    }\n\n    private _onMoveDuration(event: MouseEvent | TouchEvent) {\n        const change_px =\n            this._move_last -\n            (event instanceof MouseEvent\n                ? event.clientX\n                : event.touches[0].clientX);\n        const dir = change_px > 0 ? -1 : 1;\n        const change_min =\n            dir *\n            Math.floor(Math.abs((change_px / this._move_size) * 24 * 60) / 5) *\n            5;\n        if (change_min) {\n            this.duration = Math.max(30, this._start_time + change_min);\n        }\n    }\n\n    private _onMoveEnd() {\n        this.unsub('on_move');\n        this.unsub('on_move_end');\n        this._move_last = 0;\n        this.move_time = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { User } from '../user.class';\n\nexport interface AvailabilityBlock {\n    date: number;\n    duration: number;\n    start: number;\n    size: number;\n}\n\n@Component({\n    selector: 'user-availability-list',\n    template: `\n        <div\n            class=\"relative w-[120rem] h-32 inset-y-0 border-b border-base-200 \"\n        >\n            <div\n                event\n                *ngFor=\"let event of availability\"\n                class=\"absolute inset-y-0 bg-error text-white p-2 overflow-hidden border border-red-700 rounded\"\n                [style.left]=\"event.start + '%'\"\n                [style.width]=\"event.size + '%'\"\n            >\n                <div class=\"text-xs max-w-full\">\n                    {{ event.date | date: 'shortTime' }} -\n                    {{\n                        event.date.valueOf() + event.duration * 60 * 1000\n                            | date: 'shortTime'\n                    }}\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n            }\n        `,\n    ],\n})\nexport class UserAvailabilityComponent {\n    @Input() public user: User;\n    @Input() public availability: AvailabilityBlock[] = [];\n    @Input() public date: number = Date.now();\n}\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { Pipe } from '@angular/core';\nimport { showGuest } from './guests.fn';\nimport { showStaff } from './staff.fn';\nimport { User } from './user.class';\n\nconst USER_LIST: User[] = [];\n\nconst EMPTY_USER = new User();\n\n@Pipe({\n    name: 'user',\n})\nexport class UserPipe {\n    /**\n     * Get details of the user with the given ID\n     * @param user_id ID or Email of the user\n     */\n    public async transform(user_id: string): Promise<User> {\n        if (!user_id) return EMPTY_USER;\n        let user = USER_LIST.find(\n            ({ id, email }) => id === user_id || email === user_id\n        );\n        if (user) return user;\n        user = await showStaff(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        user = await showGuest(user_id)\n            .toPromise()\n            .catch(() => null);\n        if (user) {\n            USER_LIST.push(user);\n            return user;\n        }\n        return EMPTY_USER;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { NewUserModalComponent } from './new-user-modal.component';\nimport { UserFormComponent } from './user-form.component';\nimport { UserPipe } from './user.pipe';\nimport { WFHSettingsModalComponent } from './wfh-settings-modal.component';\nimport { FindAvailabilityModalComponent } from './find-availability-modal/find-availability-modal.component';\nimport { UserAvailabilityComponent } from './find-availability-modal/user-availability.component';\n\nconst COMPONENTS = [\n    NewUserModalComponent,\n    UserFormComponent,\n    WFHSettingsModalComponent,\n    UserPipe,\n    FindAvailabilityModalComponent,\n    UserAvailabilityComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatCheckboxModule,\n        MatProgressSpinnerModule,\n        MatMenuModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedUsersModule {}\n","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp (in seconds). Decimal values will be discarded.\n *\n * @param {Number} unixTime - the given Unix timestamp (in seconds)\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * const result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}"],"names":["ElementRef","Renderer2","MatDialogRef","MAT_DIALOG_DATA","AsyncHandler","addMinutes","differenceInMinutes","endOfDay","fromUnixTime","getUnixTime","isSameDay","startOfDay","queryUserFreeBusy","BehaviorSubject","combineLatest","of","catchError","debounceTime","defaultIfEmpty","map","shareReplay","switchMap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵstyleProp","ctx_r0","offset_x","ɵɵattribute","today","current_hour","hour_r7","ɵɵadvance","ɵɵtextInterpolate2","ɵɵelement","ɵɵlistener","FindAvailabilityModalComponent_div_18_Template_button_click_4_listener","restoredCtx","ɵɵrestoreView","_r10","user_r8","$implicit","ctx_r9","ɵɵnextContext","ɵɵresetView","removeUser","ctx_r1","offset_y","ɵɵproperty","ɵɵtextInterpolate1","name","host","email","ctx_r2","h_r12","ɵɵpipeBind2","ctx_r3","date","user_r13","ctx_r5","ɵɵpipeBind1","availability","toLowerCase","ɵɵpureFunction0","_c1","FindAvailabilityModalComponent","Date","now","getHours","selection_left","getMinutes","selection_width","duration","constructor","_data","_renderer","_dialog_ref","users","search","hours","Array","fill","on_change","pipe","calendars","_","join","period_start","period_end","availability_list","availability_map","item","id","filter","status","block","starts_at","ends_at","start","size","move_time","_start_time","_move_last","_move_size","next","addUser","user","getValue","u","closeAndUpdate","close","ngAfterViewInit","timeout","el","_container_el","nativeElement","querySelector","rect","getBoundingClientRect","el_rect","scrollTo","left","onScroll","scrollLeft","scrollTop","startMovePeriod","event","preventDefault","stopPropagation","MouseEvent","clientX","touches","subscription","listen","e","_onMovePeriod","_onMoveEnd","startMoveDuration","_onMoveDuration","change_px","dir","change_min","Math","floor","abs","old_date","valueOf","max","unsub","ɵɵdirectiveInject","i1","_2","selectors","viewQuery","FindAvailabilityModalComponent_Query","rf","ctx","FindAvailabilityModalComponent_Template_a_date_field_ngModelChange_8_listener","$event","FindAvailabilityModalComponent_Template_a_user_search_field_ngModelChange_9_listener","ɵɵtemplate","FindAvailabilityModalComponent_div_12_Template","FindAvailabilityModalComponent_div_18_Template","FindAvailabilityModalComponent_div_22_Template","FindAvailabilityModalComponent_Template_div_mousedown_23_listener","FindAvailabilityModalComponent_Template_div_touchstart_23_listener","FindAvailabilityModalComponent_Template_div_mousedown_26_listener","FindAvailabilityModalComponent_Template_div_touchstart_26_listener","FindAvailabilityModalComponent_div_30_Template","FindAvailabilityModalComponent_Template_div_scroll_31_listener","FindAvailabilityModalComponent_user_availability_list_36_Template","User","event_r1","UserAvailabilityComponent","inputs","decls","vars","consts","template","UserAvailabilityComponent_Template","UserAvailabilityComponent_div_1_Template","MapLocation","type","location","position","map_id","asset_id","x","map_width","y","map_height","variance","last_seen","level","building","at_location","coordinates_from","showGuest","showStaff","USER_LIST","EMPTY_USER","UserPipe","transform","user_id","_asyncToGenerator","find","toPromise","catch","push","pure","CommonModule","FormsModule","ReactiveFormsModule","MatProgressSpinnerModule","MatMenuModule","MatDialogModule","MatCheckboxModule","ComponentsModule","FormFieldsModule","NewUserModalComponent","UserFormComponent","WFHSettingsModalComponent","COMPONENTS","SharedUsersModule","_3","declarations","imports","exports","NgForOf","NgIf","i2","NgControlStatus","NgModel","i3","MatDialogClose","i4","TimeFieldComponent","i5","IconComponent","i6","UserAvatarComponent","i7","MatOption","i8","MatMenu","MatMenuItem","MatMenuTrigger","i9","MatFormField","i10","MatSelect","MatRipple","i11","MatProgressSpinner","DatePipe","i12","DateFieldComponent","i13","UserSearchFieldComponent","AsyncPipe","i14","DurationPipe","toDate","toInteger","requiredArgs","dirtyUnixTime","arguments","unixTime"],"sourceRoot":"webpack:///","x_google_ignoreList":[6]}