{"version":3,"file":"apps_concierge_src_app_region-manager_region-manager_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/region-manager/region-list.component.ts","./apps/concierge/src/app/region-manager/region-management.service.ts","./apps/concierge/src/app/region-manager/region-manager.component.ts","./apps/concierge/src/app/region-manager/region-manager.module.ts","./apps/concierge/src/app/region-manager/region-modal.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RegionManagementService } from './region-management.service';\n\n@Component({\n    selector: 'region-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-4\">\n            <custom-table\n                class=\"block min-w-[32rem] w-full h-full\"\n                [dataSource]=\"regions\"\n                [columns]=\"['display_name', 'building_count', 'actions']\"\n                [display_column]=\"['Name', 'Buildings', ' ']\"\n                [column_size]=\"['flex', '10r', '3.75r']\"\n                [template]=\"{\n                    actions: action_template\n                }\"\n                empty=\"No regions\"\n            ></custom-table>\n        </div>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <button btn icon matRipple [matMenuTriggerFor]=\"menu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"editMetadata(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon>edit_square</app-icon>\n                            <span>App Configuration</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"editRegion(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon>edit</app-icon>\n                            <span>Edit Region</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"removeRegion(row)\">\n                        <div class=\"flex items-center space-x-2 text-red-500\">\n                            <app-icon>delete</app-icon>\n                            <span>Delete Region</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class RegionListComponent {\n    public readonly regions = this._manager.filtered_regions;\n\n    public readonly editRegion = (region) => this._manager.editRegion(region);\n    public readonly removeRegion = (region) =>\n        this._manager.removeRegion(region);\n    public readonly editMetadata = (region) =>\n        this._manager.editRegionMetadata(region);\n\n    constructor(private _manager: RegionManagementService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService, Region } from '@placeos/organisation';\nimport { PlaceZone, removeZone } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RegionModalComponent } from './region-modal.component';\nimport { AppSettingsModalComponent } from '../ui/app-settings-modal.component';\nimport { notifySuccess, openConfirmModal } from '@placeos/common';\n\nexport interface RegionListOptions {\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RegionManagementService {\n    private _options = new BehaviorSubject<RegionListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    public readonly filtered_regions = combineLatest([\n        this._org.building_list,\n        this._org.region_list,\n        this._options,\n    ]).pipe(\n        map(([buildings, list, options]) => {\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            for (const region of list) {\n                (region as any).building_count = buildings.filter(\n                    (bld) => bld.parent_id === region.id\n                ).length;\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<RegionListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editRegion(region: PlaceZone = new PlaceZone()) {\n        const ref = this._dialog.open(RegionModalComponent, {\n            data: region,\n        });\n        ref.afterClosed().subscribe((data) => {\n            if (data) this._org.addZone(data);\n        });\n    }\n\n    public editRegionMetadata(region: PlaceZone = new PlaceZone()) {\n        const ref = this._dialog.open(AppSettingsModalComponent, {\n            data: { zone: region },\n        });\n        ref.afterClosed().subscribe((data) => {\n            if (data) setTimeout(() => location.reload(), 300);\n        });\n    }\n\n    public async removeRegion(region: Region) {\n        const ref = await openConfirmModal(\n            {\n                title: 'Remove Building',\n                content: `Are you sure you want to remove the building \"${region.name}\"?`,\n                icon: { content: 'delete_forever' },\n                confirm_text: 'Remove',\n            },\n            this._dialog\n        );\n        if (ref.reason !== 'done') return ref.close();\n        ref.loading('Removing building...');\n        await removeZone(region.id).toPromise();\n        this._org.removeZone({ id: region.id, tags: ['region'] } as any);\n        notifySuccess('Successfully removed building.');\n        ref.close();\n    }\n}\n","import { Component } from '@angular/core';\nimport { RegionManagementService } from './region-management.service';\n\n@Component({\n    selector: '[app-region-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header\n                    class=\"flex items-center justify-between mb-2 px-4 py-8\"\n                >\n                    <h2 class=\"text-2xl font-medium\">Region Management</h2>\n                    <button btn matRipple (click)=\"newRegion()\">\n                        Add Region\n                    </button>\n                </header>\n                <region-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></region-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class RegionManagerComponent {\n    public readonly newRegion = () => this._state.editRegion();\n\n    constructor(private readonly _state: RegionManagementService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { RegionManagerComponent } from './region-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { RegionListComponent } from './region-list.component';\nimport { RegionModalComponent } from './region-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: RegionManagerComponent },\n    { path: 'new', component: RegionManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        RegionManagerComponent,\n        RegionListComponent,\n        RegionModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class RegionManagerModule {}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    TIMEZONES_IANA,\n    getInvalidFields,\n    notifyError,\n} from '@placeos/common';\nimport { Region, OrganisationService } from '@placeos/organisation';\nimport { addZone, authority, updateZone } from '@placeos/ts-client';\n\n@Component({\n    selector: 'region-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Region</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[36rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.display_name\">\n                    <label for=\"display-name\" i18n=\"@@displayNameLabel\">\n                        Display Name:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"display-name\"\n                            placeholder=\"Display Name\"\n                            i18n-placeholder=\"@@displayNamePlaceholder\"\n                            formControlName=\"display_name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"display-name\" i18n=\"@@displayNameLabel\">\n                        Timezone:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <app-icon matPrefix class=\"text-2xl\">search</app-icon>\n                        <input\n                            matInput\n                            formControlName=\"timezone\"\n                            placeholder=\"Building timezone\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                    </mat-form-field>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let tz of filtered_timezones\"\n                            [value]=\"tz\"\n                            >{{ tz }}</mat-option\n                        >\n                        <mat-option *ngIf=\"!timezones.length\" [disabled]=\"true\">\n                            No matching timezones\n                        </mat-option>\n                    </mat-autocomplete>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving region...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class RegionModalComponent extends AsyncHandler {\n    public loading = false;\n    public readonly building_list = this._org.building_list;\n\n    public timezones: string[] = [];\n    public filtered_timezones: string[] = [];\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this._data?.id || ''),\n        display_name: new FormControl(this._data?.display_name || '', [\n            Validators.required,\n        ]),\n        timezone: new FormControl(\n            Intl?.DateTimeFormat()?.resolvedOptions()?.timeZone || ''\n        ),\n        parent_id: new FormControl(this._org.organisation.id),\n    });\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: Region | undefined,\n        private _dialog_ref: MatDialogRef<RegionModalComponent>\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._updateTimezoneList();\n        this.subscription(\n            'tz-change',\n            this.form.valueChanges.subscribe(\n                ({ timezone }) =>\n                    (this.filtered_timezones = this.timezones.filter((_) =>\n                        _.toLowerCase().includes(timezone.toLowerCase())\n                    ))\n            )\n        );\n    }\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const data: any = this.form.getRawValue();\n        data.tags = ['region'];\n        this.loading = true;\n        const resp = await (data.id\n            ? updateZone(data.id, {\n                  ...data,\n                  name: `REGION ${authority().description} ${\n                      data.display_name\n                  }`,\n              })\n            : addZone({\n                  ...data,\n                  name: `REGION ${authority().description} ${\n                      data.display_name\n                  }`,\n              })\n        )\n            .toPromise()\n            .catch();\n        if (resp.id) this._dialog_ref.close(resp);\n        this.loading = false;\n    }\n\n    private _updateTimezoneList() {\n        const timezone = this.form?.value?.timezone || '';\n        this.timezones = TIMEZONES_IANA;\n        this.filtered_timezones = this.timezones.filter((_) =>\n            _.toLowerCase().includes(timezone.toLowerCase())\n        );\n    }\n}\n"],"names":["RegionManagementService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegionListComponent_ng_template_2_Template_button_click_6_listener","restoredCtx","ɵɵrestoreView","_r5","row_r2","row","ctx_r4","ɵɵnextContext","ɵɵresetView","editMetadata","RegionListComponent_ng_template_2_Template_button_click_12_listener","ctx_r6","editRegion","RegionListComponent_ng_template_2_Template_button_click_18_listener","ctx_r7","removeRegion","ɵɵadvance","ɵɵproperty","_r3","RegionListComponent","constructor","_manager","regions","filtered_regions","region","editRegionMetadata","_","ɵɵdirectiveInject","i1","_2","selectors","decls","vars","consts","template","RegionListComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","RegionListComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵpureFunction0","_c0","_c1","_c2","ɵɵpureFunction1","_c3","_r1","MatDialog","OrganisationService","PlaceZone","removeZone","BehaviorSubject","combineLatest","map","RegionModalComponent","AppSettingsModalComponent","notifySuccess","openConfirmModal","_org","_dialog","_options","_change","options","asObservable","building_list","region_list","pipe","buildings","list","search","filter","name","toLowerCase","includes","building_count","bld","parent_id","id","length","setFilters","next","getValue","setSearchString","ref","open","data","afterClosed","subscribe","addZone","zone","setTimeout","location","reload","_this","_asyncToGenerator","title","content","icon","confirm_text","reason","close","loading","toPromise","tags","ɵɵinject","i2","factory","ɵfac","providedIn","RegionManagerComponent","_state","newRegion","attrs","RegionManagerComponent_Template","RegionManagerComponent_Template_button_click_7_listener","CommonModule","FormsModule","RouterModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","ROUTES","path","component","RegionManagerModule","_3","forChild","declarations","imports","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","MatDialogRef","AsyncHandler","TIMEZONES_IANA","getInvalidFields","notifyError","Region","authority","updateZone","ɵɵi18n","tz_r10","ɵɵtextInterpolate","RegionModalComponent_main_4_form_1_div_1_Template","RegionModalComponent_main_4_form_1_mat_option_11_Template","RegionModalComponent_main_4_form_1_mat_option_12_Template","ctx_r5","form","controls","display_name","_r7","filtered_timezones","timezones","RegionModalComponent_main_4_form_1_Template","ctx_r1","RegionModalComponent_footer_5_Template_button_click_1_listener","_r12","ctx_r11","save","_data","_dialog_ref","required","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","organisation","ngOnInit","_updateTimezoneList","subscription","valueChanges","valid","join","getRawValue","resp","description","catch","value","features","ɵɵInheritDefinitionFeature","i18n_0","ngI18nClosureMode","$localize","RegionModalComponent_button_3_Template","RegionModalComponent_main_4_Template","RegionModalComponent_footer_5_Template","RegionModalComponent_ng_template_6_Template","ɵɵtextInterpolate1","_r4"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}