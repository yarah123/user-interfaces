{"version":3,"file":"apps_concierge_src_app_events_events_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/events/event-calendar.component.ts","./apps/concierge/src/app/events/event-listing.component.ts","./apps/concierge/src/app/events/event-manage.component.ts","./apps/concierge/src/app/events/event-month-view.component.ts","./apps/concierge/src/app/events/event-state.service.ts","./apps/concierge/src/app/events/event-week-view.component.ts","./apps/concierge/src/app/events/events-list.component.ts","./apps/concierge/src/app/events/events.component.ts","./apps/concierge/src/app/events/events.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/desk.service.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts","./node_modules/date-fns/subMonths.mjs"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { EventStateService } from './event-state.service';\nimport { map, shareReplay, take } from 'rxjs/operators';\nimport { addMonths, addWeeks, format } from 'date-fns';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'event-calendar',\n    template: `\n        <div class=\"flex items-center border-y border-base-200 w-full\">\n            <div class=\"flex-1 px-2 py-4\">\n                <span *ngIf=\"is_today | async\" class=\"text-info text-xs\">{{\n                    (period | async) === 'week' ? 'This Week' : 'This Month'\n                }}</span>\n            </div>\n            <div class=\"flex-2 flex items-center justify-center space-x-2\">\n                <div class=\"font-medium pl-4\">\n                    {{ (options | async)?.date | date: 'MMM yyyy' }}\n                </div>\n                <button icon matRipple (click)=\"previousPeriod()\">\n                    <app-icon>chevron_left</app-icon>\n                </button>\n                <button icon matRipple (click)=\"nextPeriod()\">\n                    <app-icon>chevron_right</app-icon>\n                </button>\n            </div>\n            <div class=\"flex-1 flex items-center justify-end space-x-2 py-2\">\n                <button\n                    btn\n                    matRipple\n                    class=\"rounded-3xl\"\n                    [class.inverse]=\"(period | async) !== 'week'\"\n                    (click)=\"setPeriod('week')\"\n                >\n                    Week\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"rounded-3xl\"\n                    [class.inverse]=\"(period | async) !== 'month'\"\n                    (click)=\"setPeriod('month')\"\n                >\n                    Month\n                </button>\n            </div>\n        </div>\n        <div class=\"w-full h-4\"></div>\n        <div class=\"relative flex-1 h-1/2 w-full overflow-auto\">\n            <event-week-view\n                *ngIf=\"(period | async) !== 'month'; else month_calendar\"\n            ></event-week-view>\n            <ng-template #month_calendar>\n                <event-month-view></event-month-view>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class EventCalendarComponent {\n    public readonly period = this._state.options.pipe(map((_) => _.period));\n\n    public readonly options = this._state.options;\n    public readonly is_today = this.options.pipe(\n        map((_) => _.date <= Date.now() && _.end > Date.now())\n    );\n    public readonly event_list = this._state.event_list;\n    public readonly event_day_map = this.event_list.pipe(\n        map((list) => {\n            const map = {};\n            for (const event of list) {\n                const date = format(event.date, 'yyyy-MM-dd');\n                if (!map[date]) map[date] = [];\n                map[date].push(event);\n            }\n            return map;\n        }),\n        shareReplay(1)\n    );\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: EventStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {}\n\n    public setPeriod(period: 'week' | 'month') {\n        this._state.setOptions({ period });\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { period },\n            queryParamsHandling: 'merge',\n        });\n    }\n\n    public async nextPeriod() {\n        const { date, period } = await this.options.pipe(take(1)).toPromise();\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: {\n                range:\n                    period === 'week'\n                        ? addWeeks(date, 1).valueOf()\n                        : addMonths(date, 1).valueOf(),\n            },\n            queryParamsHandling: 'merge',\n        });\n    }\n\n    public async previousPeriod() {\n        const { date, period } = await this.options.pipe(take(1)).toPromise();\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: {\n                range:\n                    period === 'week'\n                        ? addWeeks(date, -1).valueOf()\n                        : addMonths(date, -1).valueOf(),\n            },\n            queryParamsHandling: 'merge',\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { EventStateService } from './event-state.service';\nimport { User } from '@placeos/users';\nimport { tap } from 'rxjs/operators';\nimport { CalendarEvent } from '@placeos/events';\n\n@Component({\n    selector: 'event-listing',\n    template: `\n        <mat-progress-bar\n            class=\"w-full\"\n            [class.opacity-0]=\"!(loading | async)\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <simple-table\n            class=\"min-w-[72rem] w-full block text-sm\"\n            [data]=\"event_list\"\n            empty_message=\"No group events for selected period\"\n            [columns]=\"[\n                { key: 'date', name: 'Event', content: event_template },\n                {\n                    key: 'level',\n                    name: 'Level',\n                    content: level_template,\n                    size: '8rem',\n                    sortable: false\n                },\n                {\n                    key: 'room',\n                    name: 'Room',\n                    content: room_template,\n                    size: '12rem',\n                    sortable: false\n                },\n                {\n                    key: 'interested',\n                    name: 'Interested',\n                    content: interested_template,\n                    size: '6rem',\n                    sortable: false\n                },\n                {\n                    key: 'attending',\n                    name: 'Attending',\n                    content: attending_template,\n                    size: '6rem',\n                    sortable: false\n                },\n                {\n                    key: 'state',\n                    name: 'Status',\n                    content: status_template,\n                    size: '8.5rem'\n                },\n                {\n                    key: 'access',\n                    name: 'Published',\n                    content: published_template,\n                    size: '6rem',\n                    sortable: false\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: actions_template,\n                    size: '4rem',\n                    sortable: false\n                }\n            ]\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <div class=\"w-full h-20\"></div>\n        <ng-template #event_template let-item=\"row\">\n            <div class=\"flex items-center space-x-2 px-3 py-2\">\n                <div date class=\"flex flex-col items-center leading-tight w-8\">\n                    <div\n                        month\n                        class=\"text-sm font-medium relative top-0.5 opacity-60\"\n                    >\n                        {{ item.date | date: 'MMM' }}\n                    </div>\n                    <div day class=\"text-2xl font-light relative -top-0.5\">\n                        {{ item.date | date: 'd' }}\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center justify-center h-12 w-12 rounded overflow-hidden bg-base-200 border border-base-200\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length\"\n                        auth\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full min-w-full object-cover\"\n                    />\n                </div>\n                <div details class=\"flex flex-col\">\n                    <div class=\"text-sm\">{{ item.title }}</div>\n                    <div class=\"text-xs opacity-40\">\n                        {{ item.date | date: 'EEEE, ' + time_format }} &ndash;\n                        {{\n                            item.date + item.duration * 60 * 1000\n                                | date: time_format + ' (z)'\n                        }}\n                    </div>\n                    <div class=\"text-xs\">\n                        {{\n                            (\n                                (item.linked_event?.system_id | space | async)\n                                    ?.zones | building\n                            )?.address\n                        }}\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #level_template let-item=\"row\">\n            <div class=\"p-4\">\n                {{\n                    ((room(item)?.email | space | async)?.zones | level)\n                        ?.display_name\n                }}\n                <span *ngIf=\"!room(item)?.email\" class=\"opacity-30\">\n                    No Level\n                </span>\n            </div>\n        </ng-template>\n        <ng-template #room_template let-item=\"row\">\n            <div class=\"p-4\">\n                {{ (room(item)?.email | space | async)?.display_name }}\n                <span *ngIf=\"!room(item)?.email\" class=\"opacity-30\">\n                    No Room\n                </span>\n            </div>\n        </ng-template>\n        <ng-template #interested_template let-item=\"row\">\n            <button\n                icon\n                matRipple\n                customTooltip\n                [content]=\"view_attendees\"\n                class=\"rounded h-12 w-12 mx-auto\"\n                [disabled]=\"!item.attendees?.length\"\n            >\n                {{ item.attendees?.length || 0 }}\n            </button>\n            <ng-template #view_attendees>\n                <div\n                    class=\"relative w-[20rem] h-[28rem] overflow-auto bg-white rounded shadow\"\n                >\n                    <attendee-list\n                        [list]=\"item.attendees\"\n                        [host]=\"item.user_email\"\n                        [hide_close]=\"true\"\n                        [custom_title]=\"'Interested'\"\n                    ></attendee-list>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #attending_template let-item=\"row\">\n            <button\n                icon\n                matRipple\n                customTooltip\n                [content]=\"view_attendees\"\n                class=\"rounded h-12 w-12 mx-auto\"\n                [disabled]=\"!checkedInCount(item.attendees)\"\n            >\n                {{ checkedInCount(item.attendees) }}\n            </button>\n            <ng-template #view_attendees>\n                <div\n                    class=\"relative w-[20rem] h-[28rem] overflow-auto bg-white rounded shadow\"\n                >\n                    <attendee-list\n                        [list]=\"checkedInList(item.attendees)\"\n                        [host]=\"item.user_email\"\n                        [hide_close]=\"true\"\n                    ></attendee-list>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #published_template let-data=\"data\">\n            <div\n                *ngIf=\"data === 'OPEN' || data === 'open'\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-item=\"row\">\n            <div class=\"p-4\">\n                <div\n                    class=\"px-4 py-1 rounded-full\"\n                    [class.bg-success]=\"\n                        item.state !== 'done' &&\n                        item.state !== 'in_progress' &&\n                        item.state !== 'started'\n                    \"\n                    [class.text-success-content]=\"\n                        item.state !== 'done' &&\n                        item.state !== 'in_progress' &&\n                        item.state !== 'started'\n                    \"\n                    [class.bg-warning]=\"\n                        item.state === 'in_progress' || item.state === 'started'\n                    \"\n                    [class.text-warning-content]=\"\n                        item.state === 'in_progress' || item.state === 'started'\n                    \"\n                    [class.bg-base-200]=\"item.state === 'done'\"\n                    [class.text-base-content]=\"item.state === 'done'\"\n                >\n                    {{\n                        item.state === 'done'\n                            ? 'Done'\n                            : item.state === 'in_progress' ||\n                              item.state === 'started'\n                            ? 'In Progress'\n                            : 'Active'\n                    }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <button\n                icon\n                matRipple\n                class=\"h-12 w-12 rounded mx-2\"\n                [matMenuTriggerFor]=\"menu\"\n                [disabled]=\"row.state === 'done'\"\n            >\n                <app-icon>more_vert</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item [disabled]=\"true\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">\n                            confirmation_number\n                        </app-icon>\n                        <div class=\"mr-2\">Promote Event</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"viewEvent(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">visibility</app-icon>\n                        <div class=\"mr-2\">View Event</div>\n                    </div>\n                </button>\n                <a\n                    mat-menu-item\n                    [routerLink]=\"[\n                        '/entertainment',\n                        'events',\n                        'manage',\n                        row?.id\n                    ]\"\n                >\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">edit</app-icon>\n                        <div class=\"mr-2\">Edit Event</div>\n                    </div>\n                </a>\n                <button mat-menu-item [disabled]=\"true\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">content_copy</app-icon>\n                        <div class=\"mr-2\">Copy URL</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"removeEvent(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl text-error\">delete</app-icon>\n                        <div class=\"mr-2\">Delete Event</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class EventListingComponent {\n    public readonly loading = this._state.loading;\n    public readonly event_list = this._state.event_list.pipe(\n        tap((_) => console.log('Event List:', _))\n    );\n\n    public readonly viewEvent = (event: any) => this._state.viewEvent(event);\n    public readonly removeEvent = (event: any) =>\n        this._state.removeEvent(event);\n\n    public room(item: CalendarEvent) {\n        return item.resources.find((_) => _.email !== this._state.calendar);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: EventStateService\n    ) {}\n\n    public checkedInCount(attendees: User[]) {\n        if (!attendees?.length) return 0;\n        return attendees.filter((user: User) => user.checked_in).length;\n    }\n\n    public checkedInList(attendees: User[]) {\n        if (!attendees?.length) return [];\n        return attendees.filter((user: User) => user.checked_in);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component } from '@angular/core';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    BookingFormService,\n    removeBooking,\n    showBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    SettingsService,\n    TIMEZONES_IANA,\n    currentUser,\n    getInvalidFields,\n    notifyError,\n    randomString,\n    unique,\n} from '@placeos/common';\nimport {\n    Building,\n    BuildingLevel,\n    OrganisationService,\n} from '@placeos/organisation';\nimport { first, startWith, take } from 'rxjs/operators';\nimport { EventStateService } from './event-state.service';\nimport {\n    differenceInMinutes,\n    format,\n    formatDuration,\n    startOfDay,\n} from 'date-fns';\nimport {\n    CalendarEvent,\n    EventFormService,\n    removeEvent,\n    showEvent,\n} from '@placeos/events';\nimport { StaffUser, User } from '@placeos/users';\nimport { Space, SpacePipe } from '@placeos/spaces';\n\nconst EMPTY = [];\n\n@Component({\n    selector: 'app-event-manage',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 overflow-auto\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <a\n                icon\n                matRipple\n                class=\"sticky top-2 right-2 ml-auto\"\n                [routerLink]=\"['/entertainment', 'events']\"\n            >\n                <app-icon>close</app-icon>\n            </a>\n            <form\n                class=\"flex flex-col w-[40rem] max-w-full mx-auto px-4\"\n                [formGroup]=\"form\"\n            >\n                <h3 class=\"py-4 text-2xl font-medium\">\n                    {{ form.value.id ? 'Edit' : 'New' }} Group Event\n                </h3>\n                <section class=\"flex flex-col space-y-2\">\n                    <label for=\"title\">Event Title<span>*</span></label>\n                    <ng-container>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Team Meeting\"\n                            />\n                            <mat-error>\n                                {{ 'FORM.TITLE_ERROR' | translate }}\n                            </mat-error>\n                        </mat-form-field>\n                        <label for=\"host\">Organiser<span>*</span></label>\n                        <a-user-search-field\n                            class=\"block mb-4\"\n                            name=\"host\"\n                            formControlName=\"organiser\"\n                        ></a-user-search-field>\n                        <label for=\"tags\">Tags</label>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"no-subscript\"\n                        >\n                            <mat-chip-grid #chipList aria-label=\"Event Tags\">\n                                <mat-chip-row\n                                    *ngFor=\"let tag of tag_list\"\n                                    [selectable]=\"true\"\n                                    [removable]=\"true\"\n                                    (removed)=\"removeTag(tag)\"\n                                >\n                                    {{ tag }}\n                                    <app-icon matChipRemove>close</app-icon>\n                                </mat-chip-row>\n                                <input\n                                    placeholder=\"Add new tags relevant to this event...\"\n                                    [matChipInputFor]=\"chipList\"\n                                    [matChipInputSeparatorKeyCodes]=\"separators\"\n                                    [matChipInputAddOnBlur]=\"true\"\n                                    (matChipInputTokenEnd)=\"addTag($event)\"\n                                />\n                            </mat-chip-grid>\n                        </mat-form-field>\n                        <div class=\"py-4 flex items-center space-x-8\">\n                            <mat-checkbox formControlName=\"featured\">\n                                Featured\n                            </mat-checkbox>\n                            <mat-checkbox\n                                [ngModel]=\"form.value.view_access === 'OPEN'\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                (ngModelChange)=\"\n                                    form.patchValue({\n                                        view_access: $event\n                                            ? 'OPEN'\n                                            : 'PRIVATE',\n                                    })\n                                \"\n                            >\n                                Publish\n                            </mat-checkbox>\n                        </div>\n                    </ng-container>\n                    <!-- END BASIC DETAILS -->\n                    <div class=\"w-full h-px bg-base-200\"></div>\n                    <h3 class=\"py-4 text-2xl font-medium\">Date and Time</h3>\n                    <ng-container>\n                        <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                            <div class=\"flex-1 min-w-[256px] relative\">\n                                <label for=\"date\">\n                                    {{ 'FORM.DATE' | translate }}<span>*</span>\n                                </label>\n                                <a-date-field\n                                    name=\"date\"\n                                    formControlName=\"date\"\n                                    [to]=\"end_date\"\n                                >\n                                    {{ 'FORM.DATE_ERROR' | translate }}\n                                </a-date-field>\n                            </div>\n                            <div class=\"flex-1 min-w-[256px] relative\">\n                                <label for=\"date\">\n                                    {{ 'FORM.END_DATE' | translate\n                                    }}<span>*</span>\n                                </label>\n                                <a-date-field\n                                    name=\"date\"\n                                    formControlName=\"date_end\"\n                                    [from]=\"start_date\"\n                                    [to]=\"end_date\"\n                                >\n                                    {{ 'FORM.DATE_ERROR' | translate }}\n                                </a-date-field>\n                            </div>\n                        </div>\n                        <div\n                            class=\"flex items-center space-x-2\"\n                            *ngIf=\"!form.value.all_day\"\n                        >\n                            <div class=\"flex-1 w-1/3\">\n                                <label for=\"start-time\">\n                                    {{ 'FORM.START_TIME' | translate }}\n                                    <span>*</span>\n                                </label>\n                                <a-time-field\n                                    name=\"start-time\"\n                                    [ngModel]=\"form.getRawValue().date\"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date: $event })\n                                    \"\n                                    [disabled]=\"form.controls.date.disabled\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                    [use_24hr]=\"use_24hr\"\n                                ></a-time-field>\n                            </div>\n                            <div class=\"flex-1 w-1/3\">\n                                <label for=\"end-time\">\n                                    {{ 'FORM.END_TIME' | translate\n                                    }}<span>*</span>\n                                </label>\n                                <a-time-field\n                                    name=\"end-time\"\n                                    [ngModel]=\"\n                                        form.value.date_end ||\n                                        form.value.date +\n                                            form.value.duration * 60 * 1000\n                                    \"\n                                    (ngModelChange)=\"\n                                        form.patchValue({ date_end: $event })\n                                    \"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                    [from]=\"\n                                        form?.getRawValue()?.date +\n                                        30 * 60 * 1000\n                                    \"\n                                    [use_24hr]=\"use_24hr\"\n                                    [extra_info_fn]=\"duration_info\"\n                                ></a-time-field>\n                            </div>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"display-name\" i18n=\"@@displayNameLabel\">\n                                Timezone:\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <app-icon matPrefix class=\"text-2xl\">\n                                    search\n                                </app-icon>\n                                <input\n                                    matInput\n                                    formControlName=\"timezone\"\n                                    placeholder=\"Timezone\"\n                                    [matAutocomplete]=\"auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let tz of filtered_timezones\"\n                                    [value]=\"tz\"\n                                >\n                                    {{ tz }}\n                                </mat-option>\n                                <mat-option\n                                    *ngIf=\"!timezones.length\"\n                                    [disabled]=\"true\"\n                                >\n                                    No matching timezones\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                    </ng-container>\n                    <!-- END DATE TIME -->\n                    <div class=\"w-full h-px bg-base-200\"></div>\n                    <h3 class=\"py-4 text-2xl font-medium\">Location</h3>\n                    <ng-container>\n                        <div class=\"flex items-center space-x-2 pb-2\">\n                            <button\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [class.inverse]=\"false\"\n                                [class.inverse]=\"\n                                    form.value.attendance_type !== 'ONSITE'\n                                \"\n                                (click)=\"\n                                    form.patchValue({\n                                        attendance_type: 'ONSITE',\n                                    })\n                                \"\n                            >\n                                <app-icon class=\"text-2xl\">domain</app-icon>\n                                <div class=\"mx-2\">On Premise</div>\n                            </button>\n                            <button\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [class.inverse]=\"\n                                    form.value.attendance_type !== 'ONLINE'\n                                \"\n                                (click)=\"\n                                    form.patchValue({\n                                        attendance_type: 'ONLINE',\n                                    })\n                                \"\n                            >\n                                <app-icon class=\"text-2xl\">laptop_mac</app-icon>\n                                <div class=\"mx-2\">Online Only</div>\n                            </button>\n                            <button\n                                btn\n                                matRipple\n                                class=\"flex-1\"\n                                [class.inverse]=\"\n                                    form.value.attendance_type !== 'ANY'\n                                \"\n                                (click)=\"\n                                    form.patchValue({ attendance_type: 'ANY' })\n                                \"\n                            >\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div class=\"mx-2\">Both</div>\n                            </button>\n                        </div>\n                        <ng-container\n                            *ngIf=\"form.value.attendance_type !== 'ONLINE'\"\n                        >\n                            <label for=\"location\">Building Location</label>\n                            <mat-form-field appearance=\"outline\">\n                                <mat-select\n                                    [ngModel]=\"building_zone\"\n                                    [ngModelOptions]=\"{ standalone: true }\"\n                                    (ngModelChange)=\"setBuilding($event)\"\n                                    placeholder=\"Select Building\"\n                                >\n                                    <mat-option\n                                        *ngFor=\"\n                                            let building of building_list\n                                                | async\n                                        \"\n                                        [value]=\"building\"\n                                    >\n                                        {{\n                                            building.display_name ||\n                                                building.name\n                                        }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <div class=\"flex space-x-2\">\n                                <div class=\"flex flex-col flex-[2]\">\n                                    <label for=\"level\">Level</label>\n                                    <mat-form-field appearance=\"outline\">\n                                        <mat-select\n                                            [ngModel]=\"level_zone\"\n                                            [ngModelOptions]=\"{\n                                                standalone: true,\n                                            }\"\n                                            (ngModelChange)=\"setLevel($event)\"\n                                            placeholder=\"Select Level\"\n                                        >\n                                            <mat-option\n                                                *ngFor=\"\n                                                    let level of active_levels\n                                                        | async\n                                                \"\n                                                [value]=\"level\"\n                                            >\n                                                {{\n                                                    level.display_name ||\n                                                        level.name\n                                                }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"flex flex-col flex-[3]\">\n                                    <label for=\"level\">Room</label>\n                                    <mat-form-field appearance=\"outline\">\n                                        <mat-select\n                                            [(ngModel)]=\"resource\"\n                                            [ngModelOptions]=\"{\n                                                standalone: true,\n                                            }\"\n                                            [disabled]=\"\n                                                (available_spaces | async)\n                                                    ?.length === 0\n                                            \"\n                                            placeholder=\"Select Room\"\n                                        >\n                                            <mat-option><i>None</i></mat-option>\n                                            <mat-option\n                                                *ngFor=\"\n                                                    let room of available_spaces\n                                                        | async\n                                                \"\n                                                [value]=\"room.email\"\n                                            >\n                                                {{\n                                                    room.display_name ||\n                                                        room.name\n                                                }}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                    <!-- END LOCATION -->\n                    <div class=\"w-full h-px bg-base-200\"></div>\n                    <h3 class=\"py-4 text-2xl font-medium\">Event Information</h3>\n                    <ng-container>\n                        <label for=\"title\">Event Description</label>\n                        <rich-text-input\n                            formControlName=\"body\"\n                        ></rich-text-input>\n                        <label for=\"tags\">Images</label>\n                        <image-list-field\n                            formControlName=\"images\"\n                        ></image-list-field>\n                    </ng-container>\n                </section>\n                <div\n                    class=\"flex justify-end space-x-2 sticky bottom-0 w-full bg-base-100 py-4\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        class=\"inverse w-32\"\n                        [routerLink]=\"['/entertainment', 'events']\"\n                    >\n                        Cancel\n                    </a>\n                    <button btn matRipple class=\"w-32\" (click)=\"save()\">\n                        Save\n                    </button>\n                </div>\n            </form>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-4\"\n            >\n                <mat-spinner diameter=\"48\"></mat-spinner>\n                <p>Saving event...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class EventManageComponent extends AsyncHandler {\n    public loading = false;\n    public timezones: string[] = [];\n    public resource: string;\n    public filtered_timezones: string[] = [];\n\n    public readonly form = this._form_state.form;\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n    public readonly building_list = this._org.building_list;\n    public readonly active_levels = this._org.active_levels;\n    public readonly available_spaces = this._form_state.available_spaces;\n\n    public get tag_list() {\n        return this.form.getRawValue().tags || EMPTY;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get building_zone() {\n        const level = this.level_zone;\n        const building = this._org.buildings.find(\n            (b) => b.id === level?.parent_id,\n        );\n        return building || this._org.building;\n    }\n\n    public get level_zone() {\n        const zones = this._form_state.options_value.zone_ids || [];\n        const level = this._org.levelWithID(zones);\n        return level;\n    }\n\n    public readonly duration_info = (time: number) => {\n        const date = this.form.getRawValue().date;\n        if (format(date, 'yyyy-MM-dd') !== format(time, 'yyyy-MM-dd'))\n            return '';\n        const diff = differenceInMinutes(time, date);\n        return ` (${formatDuration({\n            hours: Math.floor(diff / 60),\n            minutes: diff % 60,\n        })})`;\n    };\n\n    constructor(\n        private _form_state: EventFormService,\n        private _state: EventStateService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.form.patchValue({\n            location:\n                this._org.building.address || this._org.building.display_name,\n            organiser: currentUser(),\n            attendance_type: 'ONSITE',\n            shared_event: true,\n        });\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe(async (params) => {\n                if (params.has('id')) {\n                    const booking = await showEvent(params.get('id'), {\n                        calendar: this._state.calendar,\n                    }).toPromise();\n                    if (!booking)\n                        return this._router.navigate([\n                            '/entertainment',\n                            'events',\n                        ]);\n                    this._form_state.newForm(booking);\n                    console.log('Event:', booking.extension_data?.tags);\n                    this.resource = booking.resources.find(\n                        (_) => _.email !== this._state.calendar,\n                    )?.email;\n                    console.log('Resource:', this.resource);\n                    this.form.patchValue({\n                        tags: booking.extension_data?.tags || [],\n                        organiser: new StaffUser({\n                            id: booking.organiser?.id,\n                            email: booking.host,\n                            name: booking.organiser?.name,\n                        }),\n                        resources: booking.resources.filter(\n                            (_) => _.email !== this._state.calendar,\n                        ),\n                    });\n                }\n            }),\n        );\n        this._updateTimezoneList();\n        this.subscription(\n            'tz-change',\n            this.form.valueChanges.subscribe(() => this._updateTimezoneList()),\n        );\n    }\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public setLevel(level: BuildingLevel) {\n        const new_zones = unique([\n            this._org.organisation.id,\n            this._org.building.parent_id,\n            this._org.building.id,\n            level.id,\n        ]);\n        this._form_state.setOptions({ zone_ids: [level.id] });\n    }\n\n    /**\n     * Add a feature to the list of features for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const input = event.chipInput.inputElement;\n        const value = event.value;\n        const feature_list = this.tag_list;\n        if ((value || '').trim()) {\n            feature_list.push(value);\n            this.form.controls.tags.setValue(feature_list);\n        }\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Feature to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(this.form)}]`,\n            );\n        }\n        this.loading = true;\n        let resources = this.form.getRawValue().resources;\n        const space = await new SpacePipe().transform(this._state.calendar);\n        resources.push(\n            space ||\n                new Space({\n                    id: this._state.calendar,\n                    email: this._state.calendar,\n                }),\n        );\n        if (this.resource) {\n            const resource = await new SpacePipe().transform(this.resource);\n            resources.push(resource);\n        }\n        console.log('Resources:', resources);\n        resources = unique(resources, 'email');\n        this.form.patchValue({ resources });\n        const date = this.form.getRawValue().date;\n        const res = await this._form_state\n            .postForm(false, [this._state.calendar], true)\n            .catch((e) => notifyError(e));\n        this._state.changed();\n        this.loading = false;\n        if (res) {\n            this._router.navigate(['/entertainment', 'events'], {\n                queryParams: { range: startOfDay(date).valueOf() },\n            });\n        }\n    }\n\n    private _updateTimezoneList() {\n        const timezone = this.form?.value?.timezone || '';\n        this.timezones = TIMEZONES_IANA;\n        this.filtered_timezones = this.timezones.filter((_) =>\n            _.toLowerCase().includes(timezone.toLowerCase()),\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { EventStateService } from './event-state.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport {\n    format,\n    addDays,\n    isSameDay,\n    isSameMonth,\n    startOfDay,\n    startOfMonth,\n    startOfWeek,\n} from 'date-fns';\nimport { map, shareReplay, startWith } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'event-month-view',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto\">\n            <div\n                class=\"grid grid-cols-7 min-w-full w-[80rem] min-h-full h-[56rem] m-2 border-b border-base-200 \"\n            >\n                <div\n                    weekday\n                    *ngFor=\"let weekday of weekdays\"\n                    class=\"relative flex items-center justify-center text-sm opacity-60 p-2 h-12\"\n                >\n                    {{ weekday | date: 'EEEE' }}\n                </div>\n                <div\n                    monthday\n                    *ngFor=\"let day of month_days\"\n                    class=\"relative border border-base-200 flex flex-col space-y-1\"\n                >\n                    <div\n                        class=\"rounded-full w-8 h-8 flex items-center justify-center mt-1 ml-1\"\n                        [class.opacity-30]=\"!day.is_month\"\n                        [class.bg-secondary]=\"day.is_today\"\n                        [class.text-secondary-content]=\"day.is_today\"\n                    >\n                        {{ day.id | date: 'd' }}\n                    </div>\n                    <button\n                        matRipple\n                        *ngFor=\"\n                            let event of (event_day_map | async)[\n                                dateString(day.id)\n                            ] || [] | slice: 0:3\n                        \"\n                        (click)=\"viewEvent(event)\"\n                        class=\"relative w-[calc(100%-0.5rem)] h-7 bg-base-100 rounded border border-base-200 hover:border-info shadow pl-3 pr-2 py-1 overflow-hidden mx-1\"\n                    >\n                        <div\n                            class=\"absolute left-0 inset-y-0 bg-info w-1.5\"\n                        ></div>\n                        <div\n                            class=\"text-sm opacity-60 h-full text-left truncate\"\n                        >\n                            {{ event.date | date: 'shortTime' }} &mdash;\n                            {{ event.title }}\n                        </div>\n                        <div\n                            class=\"absolute inset-0\"\n                            customTooltip\n                            [content]=\"event_card\"\n                            xPosition=\"center\"\n                            yPosition=\"bottom\"\n                            [hover]=\"true\"\n                        ></div>\n                        <ng-template #event_card>\n                            <div class=\"p-2 pointer-events-none\">\n                                <group-event-card\n                                    [event]=\"event\"\n                                ></group-event-card>\n                            </div>\n                        </ng-template>\n                    </button>\n                    <button\n                        matRipple\n                        *ngIf=\"\n                            ((event_day_map | async)[dateString(day.id)] || [])\n                                .length > 3\n                        \"\n                        matTooltip=\"More events\"\n                        class=\"relative w-[calc(100%-0.5rem)] h-7 rounded pl-3 pr-2 py-1 overflow-hidden mx-1 underline text-sm\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        {{\n                            ((event_day_map | async)[dateString(day.id)] || [])\n                                .length - 3\n                        }}\n                        more event(s)\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button\n                            mat-menu-item\n                            *ngFor=\"\n                                let event of (event_day_map | async)[\n                                    dateString(day.id)\n                                ] || [] | slice: 3\n                            \"\n                            (click)=\"viewEvent(event)\"\n                        >\n                            <div class=\"flex items-center space-x-4\">\n                                <div class=\"flex-1\">{{ event.title }}</div>\n                                <div\n                                    class=\"text-xs opacity-60 py-1 px-2 rounded bg-base-200 text-base-content\"\n                                >\n                                    {{ event.date | date: 'shortTime' }}\n                                </div>\n                            </div>\n                        </button>\n                    </mat-menu>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            .grid {\n                grid-template-rows: 3rem repeat(6, minmax(0, 1fr));\n            }\n        `,\n    ],\n})\nexport class EventMonthViewComponent extends AsyncHandler {\n    public month = startOfDay(Date.now()).valueOf();\n    public weekdays = [];\n\n    public month_days = [];\n    public readonly event_list = this._state.event_list;\n    public readonly event_day_map = this.event_list.pipe(\n        map((list) => {\n            const map = {};\n            for (const event of list) {\n                const date = format(event.date, 'yyyy-MM-dd');\n                if (!map[date]) map[date] = [];\n                const start = new Date(event.date);\n                map[date].push({\n                    ...event,\n                    offset:\n                        (start.getHours() * 60 + start.getMinutes()) /\n                        (24 * 60),\n                    length: event.duration / (24 * 60),\n                });\n            }\n            return map;\n        }),\n        startWith({}),\n        shareReplay(1)\n    );\n\n    public readonly viewEvent = (event: any) => this._state.viewEvent(event);\n\n    public dateString(date: number) {\n        if (!date) return '';\n        return format(date, 'yyyy-MM-dd');\n    }\n\n    public get offset_weekday() {\n        return this._settings.get('app.week_start') || 0;\n    }\n\n    constructor(\n        private _state: EventStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'date',\n            this._state.options.subscribe(({ date }) => {\n                this.month = date;\n                this._setMonthDays();\n                this._setWeekdays();\n            })\n        );\n        this._setMonthDays();\n        this._setWeekdays();\n    }\n\n    private _setMonthDays() {\n        const start = startOfWeek(startOfMonth(this.month), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.month_days = Array.from(Array(7 * 6).keys()).map((i) => {\n            const date = addDays(start, i).valueOf();\n            return {\n                id: date,\n                is_today: isSameDay(date, Date.now()),\n                is_month: isSameMonth(date, this.month),\n            };\n        });\n    }\n\n    private _setWeekdays() {\n        const start = startOfWeek(Date.now(), {\n            weekStartsOn: this.offset_weekday as any,\n        });\n        this.weekdays = Array.from(Array(7).keys()).map((i) =>\n            addDays(start, i)\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    GroupEventDetailsModalComponent,\n    queryEvents,\n    removeEvent,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\nexport interface GroupEventOptions {\n    period: 'week' | 'month';\n    date?: number;\n    end?: number;\n    zone_ids?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class EventStateService extends AsyncHandler {\n    private _options = new BehaviorSubject<GroupEventOptions>({\n        period: 'week',\n    });\n    private _loading = new BehaviorSubject<string>('');\n    private _poll = new BehaviorSubject(0);\n    private _changed = new BehaviorSubject(0);\n\n    public readonly event_list = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._changed,\n        this._poll,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        debounceTime(310),\n        switchMap(([_, options]) => {\n            this._loading.next('Loading event list...');\n            return queryEvents({\n                period_start: getUnixTime(startOfDay(options.date)),\n                period_end: getUnixTime(\n                    endOfDay(options.end || options.date || Date.now())\n                ),\n                calendars: this.calendar,\n            });\n        }),\n        map((list) =>\n            list\n                .filter((_) => _.extension_data?.shared_event)\n                .sort((a, b) => a.date - b.date)\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    public changed() {\n        this.timeout('changed', () => this._changed.next(Date.now()), 100);\n    }\n\n    public get period() {\n        return this._options.getValue()?.period;\n    }\n\n    public get calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval(\n            'poll',\n            () => (document.hasFocus() ? this._poll.next(Date.now()) : ''),\n            delay\n        );\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: Partial<GroupEventOptions>) {\n        this._options.next({ ...this._options.value, ...options });\n    }\n\n    public viewEvent(event: CalendarEvent) {\n        const ref = this._dialog.open(GroupEventDetailsModalComponent, {\n            data: { event, concierge: true },\n        });\n        this.subscription(\n            `edit:${event.id}`,\n            ref.componentInstance.edit.subscribe(() => {\n                this._router.navigate([\n                    '/entertainment',\n                    'events',\n                    'manage',\n                    event.id,\n                ]);\n            })\n        );\n        this.subscription(\n            `remove:${event.id}`,\n            ref.componentInstance.remove.subscribe(async () => {\n                await this.removeEvent(event);\n                ref.close();\n            })\n        );\n    }\n\n    public async removeEvent(event: CalendarEvent) {\n        const result = await openConfirmModal(\n            {\n                title: 'Delete Event',\n                content: `Are you sure you want to delete the event \"${event.title}\"?`,\n                icon: { content: 'delete' },\n                confirm_text: 'Delete',\n            },\n            this._dialog\n        );\n        if (result.reason !== 'done') return;\n        result.loading('Deleting event...');\n        await removeEvent(event.id, {\n            calendar: this.calendar,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(e);\n                result.close();\n                throw e;\n            });\n        result.close();\n        notifySuccess('Successfully deleted event.');\n        this._changed.next(Date.now());\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { addDays, format, startOfMinute } from 'date-fns';\nimport { map, shareReplay, startWith } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\n\nimport { EventStateService } from './event-state.service';\n\n@Component({\n    selector: 'event-week-view',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto flex\">\n            <div\n                class=\"sticky left-0 w-24 min-h-full flex flex-col items-end z-20 bg-base-100\"\n            >\n                <div\n                    header\n                    class=\"sticky top-0 h-16 min-h-16 flex justify-end z-10\"\n                >\n                    <div class=\"bg-base-100 pt-6 h-10\">\n                        <div class=\"opacity-30 text-xs px-2\">\n                            {{ now | date: 'zzzz' }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    *ngFor=\"let hour of hours; let i = index\"\n                    class=\"relative min-h-10 w-full flex-1 bg-base-100\"\n                >\n                    <div\n                        hour\n                        class=\"absolute top-0 right-1 -translate-y-1/2 whitespace-nowrap text-xs opacity-60\"\n                    >\n                        {{ hour }} {{ i >= 12 ? 'PM' : 'AM' }}\n                    </div>\n                </div>\n            </div>\n            <div class=\"relative min-w-[84rem] min-h-full z-10\">\n                <div\n                    header\n                    class=\"sticky flex top-0 h-16 min-h-16 border-b border-base-200 bg-base-100 z-10\"\n                >\n                    <div\n                        *ngFor=\"let date of days\"\n                        date\n                        class=\"flex flex-col items-center justify-center p-4 min-w-48 flex-1 border-r border-base-200\"\n                    >\n                        <div class=\"text-sm opacity-60\">\n                            {{ date | date: 'EEEE' }}\n                        </div>\n                        <div>{{ date | date: 'd' }}</div>\n                    </div>\n                </div>\n                <div\n                    *ngFor=\"let hour of hours; let i = index\"\n                    class=\"relative flex min-h-10 min-w-[84rem] flex-1 border-x border-b border-base-200 pointer-events-none\"\n                ></div>\n                <div\n                    *ngFor=\"let date of days; let i = index\"\n                    date\n                    class=\"absolute top-16 left-0 w-[calc(100%/7)] h-[60rem] flex-1 border-r border-base-200 pointer-events-none\"\n                    [style.transform]=\"'translateX(' + i * 100 + '%)'\"\n                >\n                    <button\n                        *ngFor=\"\n                            let event of (event_day_map | async)[\n                                dateString(date)\n                            ] || []\n                        \"\n                        matRipple\n                        class=\"absolute inset-x-1 bg-base-100 rounded border border-base-200 hover:border-info shadow pl-3 pr-2 py-1 overflow-hidden pointer-events-auto\"\n                        [style.top]=\"event.offset * 100 + '%'\"\n                        [style.height]=\"event.length * 100 + '%'\"\n                        (click)=\"viewEvent(event)\"\n                    >\n                        <div\n                            class=\"absolute left-0 inset-y-0 bg-info w-1.5\"\n                        ></div>\n                        <div class=\"text-sm opacity-60 h-full text-left\">\n                            {{ event.date | date: 'shortTime' }} &mdash;\n                            {{ event.title }}\n                        </div>\n                        <div\n                            class=\"absolute inset-0\"\n                            customTooltip\n                            [content]=\"event_card\"\n                            xPosition=\"center\"\n                            yPosition=\"bottom\"\n                            [hover]=\"true\"\n                        ></div>\n                        <ng-template #event_card>\n                            <div class=\"p-2 pointer-events-none\">\n                                <group-event-card\n                                    [event]=\"event\"\n                                ></group-event-card>\n                            </div>\n                        </ng-template>\n                    </button>\n                    <div\n                        now\n                        *ngIf=\"isCurrentDay(date)\"\n                        class=\"absolute inset-x-0 h-0 border-y-2 border-base-content\"\n                        [style.top]=\"now_offset * 100 + '%'\"\n                    >\n                        <div\n                            class=\"absolute left-0 top-0 -translate-x-1/2 -translate-y-1/2 h-4 w-4 rounded-full bg-base-content\"\n                        ></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class EventWeekViewComponent extends AsyncHandler {\n    public days = new Array(7).fill(0).map((_, idx) => idx + 1);\n    public readonly hours = new Array(24)\n        .fill(0)\n        .map((_, idx) => (idx % 12 ? idx % 12 : 12));\n    public readonly event_list = this._state.event_list;\n    public readonly event_day_map = this.event_list.pipe(\n        map((list) => {\n            const map = {};\n            for (const event of list) {\n                const date = format(event.date, 'yyyy-MM-dd');\n                if (!map[date]) map[date] = [];\n                const start = new Date(event.date);\n                map[date].push({\n                    ...event,\n                    offset:\n                        (start.getHours() * 60 + start.getMinutes()) /\n                        (24 * 60),\n                    length: event.duration / (24 * 60),\n                });\n            }\n            return map;\n        }),\n        startWith({}),\n        shareReplay(1)\n    );\n\n    public readonly viewEvent = (event: any) => this._state.viewEvent(event);\n\n    public dateString(date: number) {\n        if (!date) return '';\n        return format(date, 'yyyy-MM-dd');\n    }\n\n    public isCurrentDay(date: number) {\n        if (!date) return false;\n        return format(Date.now(), 'yyyy-MM-dd') === format(date, 'yyyy-MM-dd');\n    }\n\n    public get now() {\n        return startOfMinute(Date.now()).valueOf();\n    }\n\n    public get now_offset() {\n        const now = new Date(this.now);\n        return (now.getHours() * 60 + now.getMinutes()) / (24 * 60);\n    }\n\n    constructor(\n        private _state: EventStateService,\n        private _dialog: MatDialog,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'date',\n            this._state.options.subscribe(({ date }) => {\n                if (!date) return;\n                this.days = this.days.map((_, idx) =>\n                    addDays(date, idx).valueOf()\n                );\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { EventStateService } from './event-state.service';\nimport {\n    addDays,\n    addMonths,\n    endOfDay,\n    startOfMonth,\n    startOfWeek,\n    format,\n    addWeeks,\n    subMonths,\n} from 'date-fns';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-event-list',\n    template: `\n        <div class=\"absolute inset-0 flex flex-col\">\n            <div class=\"flex items-center justify-between p-8\">\n                <h2 class=\"text-2xl font-medium\">Events</h2>\n                <a\n                    btn\n                    matRipple\n                    [routerLink]=\"['/entertainment', 'events', 'manage']\"\n                >\n                    <div class=\"ml-2\">Create Event</div>\n                    <app-icon class=\"text-2xl\">chevron_right</app-icon>\n                </a>\n            </div>\n            <div filters class=\"flex items-center px-8 space-x-2 pb-4\">\n                <button\n                    btn\n                    matRipple\n                    class=\"rounded-3xl\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"setView('list')\"\n                >\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-xl\">list</app-icon>\n                        <div class=\"pr-2\">List</div>\n                    </div>\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"rounded-3xl\"\n                    [class.inverse]=\"view !== 'calendar'\"\n                    (click)=\"setView('calendar')\"\n                >\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-xl\">event</app-icon>\n                        <div class=\"pr-2\">Calendar</div>\n                    </div>\n                </button>\n                <div class=\"h-full px-2\">\n                    <div class=\"w-px h-full bg-base-300\"></div>\n                </div>\n                <mat-form-field appearance=\"outline\" class=\"w-32 no-subscript\">\n                    <mat-select\n                        [ngModel]=\"period | async\"\n                        (ngModelChange)=\"setPeriodType($event)\"\n                    >\n                        <mat-option value=\"week\">Week</mat-option>\n                        <mat-option value=\"month\">Month</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"w-64 no-subscript\">\n                    <mat-select\n                        [(ngModel)]=\"selected_range\"\n                        (ngModelChange)=\"setPeriod($event)\"\n                    >\n                        <mat-option\n                            [value]=\"range.id\"\n                            *ngFor=\"let range of period_list\"\n                        >\n                            {{ range.display }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"h-1/2 flex-1 w-full px-8 overflow-y-auto relative\">\n                <div\n                    class=\"w-full min-h-full overflow-x-auto\"\n                    *ngIf=\"view === 'list'\"\n                >\n                    <event-listing class=\"block\"></event-listing>\n                </div>\n                <event-calendar\n                    *ngIf=\"view === 'calendar'\"\n                    [period]=\"period | async\"\n                ></event-calendar>\n            </div>\n        </div>\n        <div\n            *ngIf=\"!has_calendar\"\n            class=\"absolute inset-0 flex items-center justify-center z-50\"\n        >\n            <div class=\"absolute inset-0 bg-base-100 opacity-80\"></div>\n            <p class=\"opacity-60 text-lg max-w-[32rem]\">\n                A shared calendar is required to view and manage group events.\n            </p>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                flex: 1;\n            }\n        `,\n    ],\n})\nexport class EventsListComponent extends AsyncHandler {\n    public readonly period = this._state.options.pipe(\n        map((_) => _.period),\n        distinctUntilChanged()\n    );\n\n    public view: 'list' | 'calendar' = 'list';\n    public period_list = [];\n    public selected_range: number;\n\n    public get has_calendar() {\n        return this._settings.get('app.group_events_calendar');\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: EventStateService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription('poll_events', this._state.startPolling());\n        this.subscription(\n            'period',\n            this.period.subscribe(() => {\n                this._generatePeriods();\n                this._initPeriod();\n            })\n        );\n        this._generatePeriods();\n        this._initPeriod();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((q) => {\n                if (q.has('view')) {\n                    this.view = q.get('view') as 'list' | 'calendar';\n                }\n                if (q.has('period') && q.get('period') !== this._state.period) {\n                    this.setPeriodType(\n                        q.get('period') as 'week' | 'month',\n                        false\n                    );\n                }\n                this._generatePeriods();\n\n                if (q.has('range')) {\n                    this.timeout('update', () => {\n                        const id = parseInt(q.get('range'), 10);\n                        const item = this.period_list.find(\n                            (_) => id >= _.start && id < _.end\n                        ) ||\n                            this.period_list[0] || {\n                                start: id,\n                                end:\n                                    this._state.period === 'week'\n                                        ? addWeeks(id, 1).valueOf()\n                                        : addMonths(id, 1).valueOf(),\n                            };\n                        this.selected_range = item.id || id;\n                        this._state.setOptions({\n                            date: item.start,\n                            end: item.end,\n                        });\n                        this.setPeriod(this.selected_range);\n                    });\n                }\n            })\n        );\n    }\n\n    public setView(view: 'list' | 'calendar') {\n        this.view = view;\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { view: view },\n            queryParamsHandling: 'merge',\n        });\n    }\n\n    public setPeriodType(type: 'week' | 'month', set_route = true) {\n        this._state.setOptions({ period: type });\n        if (set_route) {\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { period: type },\n                queryParamsHandling: 'merge',\n            });\n        }\n    }\n\n    public setPeriod(id: number) {\n        this.timeout('set_period', () => {\n            const item =\n                this.period_list.find((_) => id >= _.start && id < _.end) ||\n                this.period_list[0];\n            if (!item) return;\n            this.selected_range = item.id;\n            const { start, end } = item;\n            this._state.setOptions({ date: start, end });\n            this._router.navigate([], {\n                relativeTo: this._route,\n                queryParams: { range: id },\n                queryParamsHandling: 'merge',\n            });\n        });\n    }\n\n    private _generatePeriods() {\n        this.timeout('generate_periods', async () => {\n            const periods = [];\n            const period_type = await this.period.pipe(take(1)).toPromise();\n            let date = subMonths(Date.now(), 6).valueOf();\n            const end_date = addMonths(Date.now(), 6).valueOf();\n            const week_offset = this._settings.get('app.week_start') || 0;\n            if (period_type === 'month') {\n                date = startOfMonth(date).valueOf();\n            } else if (period_type === 'week') {\n                date = startOfWeek(date, {\n                    weekStartsOn: week_offset,\n                }).valueOf();\n            }\n            while (date < end_date) {\n                if (period_type === 'week') {\n                    const end = endOfDay(addDays(date, 6)).valueOf();\n                    periods.push({\n                        id: date,\n                        start: date,\n                        end,\n                        display: `${format(date, 'EEE, do MMM')} – ${format(\n                            end,\n                            'do MMM'\n                        )}`,\n                    });\n                    date = addDays(date, 7).valueOf();\n                } else if (period_type === 'month') {\n                    const end = addDays(addMonths(date, 1), -1).valueOf();\n                    periods.push({\n                        id: date,\n                        start: date,\n                        end,\n                        display: `${format(date, 'MMMM yyyy')}`,\n                    });\n                    date = addMonths(date, 1).valueOf();\n                } else break;\n            }\n            this.period_list = periods;\n        });\n    }\n\n    private _initPeriod() {\n        this.timeout(\n            'update',\n            () => {\n                if (this.period_list.length) {\n                    let index = this.period_list.findIndex(\n                        (_) => _.start <= Date.now() && _.end >= Date.now()\n                    );\n                    if (index < 0) index = 0;\n                    this.setPeriod(this.period_list[index].id);\n                    this.selected_range = this.period_list[index].id;\n                }\n            },\n            350\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-events]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"relative flex flex-col flex-1 w-1/2 h-full\">\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class EventsComponent {}\n","import { NgModule } from '@angular/core';\nimport { EventsComponent } from './events.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { EventsListComponent } from './events-list.component';\nimport { EventManageComponent } from './event-manage.component';\nimport { SharedSpacesModule } from '@placeos/spaces';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { EventListingComponent } from './event-listing.component';\nimport { EventWeekViewComponent } from './event-week-view.component';\nimport { EventMonthViewComponent } from './event-month-view.component';\nimport { EventCalendarComponent } from './event-calendar.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedEventsModule } from '@placeos/events';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: EventsComponent,\n        children: [{ path: '', component: EventsListComponent }],\n    },\n    { path: 'manage', component: EventManageComponent },\n    { path: 'manage/:id', component: EventManageComponent },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [\n        EventsComponent,\n        EventsListComponent,\n        EventManageComponent,\n        EventListingComponent,\n        EventCalendarComponent,\n        EventWeekViewComponent,\n        EventMonthViewComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedBookingsModule,\n        SharedEventsModule,\n        FormFieldsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class EventsModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n\nexport * from './lib/parking.service';\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount) {\n  return addMonths(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n"],"names":["SettingsService","EventStateService","map","shareReplay","take","addMonths","addWeeks","format","ActivatedRoute","Router","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ctx_r1","period","ɵɵelement","EventCalendarComponent","time_format","_settings","constructor","_state","_router","_route","options","pipe","_","is_today","date","Date","now","end","event_list","event_day_map","list","event","push","setPeriod","setOptions","navigate","relativeTo","queryParams","queryParamsHandling","nextPeriod","_this","_asyncToGenerator","toPromise","range","valueOf","previousPeriod","_this2","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","decls","vars","consts","template","EventCalendarComponent_Template","rf","ctx","ɵɵtemplate","EventCalendarComponent_span_2_Template","ɵɵlistener","EventCalendarComponent_Template_button_click_9_listener","ɵɵrestoreView","_r1","ɵɵresetView","EventCalendarComponent_Template_button_click_12_listener","EventCalendarComponent_Template_button_click_16_listener","EventCalendarComponent_Template_button_click_19_listener","EventCalendarComponent_event_week_view_24_Template","EventCalendarComponent_ng_template_26_Template","ɵɵtemplateRefExtractor","ɵɵproperty","ɵɵtextInterpolate1","ɵɵpipeBind2","tmp_2_0","ɵɵclassProp","month_calendar_r3","tap","item_r1","images","EventListingComponent_ng_template_4_img_9_Template","length","title","ɵɵtextInterpolate2","duration","tmp_15_0","linked_event","system_id","zones","address","EventListingComponent_ng_template_6_span_5_Template","tmp_10_0","room","item_r3","email","display_name","tmp_11_0","EventListingComponent_ng_template_8_span_4_Template","item_r4","item_r5","attendees","user_email","EventListingComponent_ng_template_10_ng_template_2_Template","view_attendees_r6","checkedInList","item_r7","EventListingComponent_ng_template_12_ng_template_2_Template","view_attendees_r8","checkedInCount","EventListingComponent_ng_template_14_div_0_Template","data_r9","item_r10","state","EventListingComponent_ng_template_18_Template_button_click_11_listener","row_r12","_r11","row","ɵɵnextContext","viewEvent","EventListingComponent_ng_template_18_Template_button_click_29_listener","removeEvent","menu_r13","ɵɵpureFunction1","_c9","id","EventListingComponent","item","resources","find","calendar","loading","console","log","filter","user","checked_in","EventListingComponent_Template","EventListingComponent_ng_template_4_Template","EventListingComponent_ng_template_6_Template","EventListingComponent_ng_template_8_Template","EventListingComponent_ng_template_10_Template","EventListingComponent_ng_template_12_Template","EventListingComponent_ng_template_14_Template","EventListingComponent_ng_template_16_Template","EventListingComponent_ng_template_18_Template","ɵɵpureFunction8","_c8","_c0","event_template_r14","_c1","level_template_r15","_c2","room_template_r16","_c3","interested_template_r17","_c4","attending_template_r18","_c5","status_template_r20","_c6","published_template_r19","_c7","actions_template_r21","COMMA","ENTER","SPACE","AsyncHandler","TIMEZONES_IANA","currentUser","getInvalidFields","notifyError","unique","OrganisationService","first","differenceInMinutes","formatDuration","startOfDay","EventFormService","showEvent","StaffUser","Space","SpacePipe","EventManageComponent_div_0_mat_chip_row_28_Template_mat_chip_row_removed_0_listener","tag_r3","_r2","$implicit","ctx_r3","removeTag","EventManageComponent_div_0_div_58_Template_a_time_field_ngModelChange_7_listener","$event","_r5","form","patchValue","EventManageComponent_div_0_div_58_Template_a_time_field_ngModelChange_14_listener","date_end","getRawValue","controls","disabled","ɵɵpureFunction0","use_24hr","value","tmp_13_0","duration_info","tz_r6","building_r8","name","level_r9","room_r10","ɵɵelementContainerStart","EventManageComponent_div_0_ng_container_90_Template_mat_select_ngModelChange_4_listener","_r7","setBuilding","EventManageComponent_div_0_ng_container_90_mat_option_5_Template","EventManageComponent_div_0_ng_container_90_Template_mat_select_ngModelChange_12_listener","setLevel","EventManageComponent_div_0_ng_container_90_mat_option_13_Template","ɵɵtwoWayListener","EventManageComponent_div_0_ng_container_90_Template_mat_select_ngModelChange_19_listener","ɵɵtwoWayBindingSet","resource","EventManageComponent_div_0_ng_container_90_mat_option_24_Template","building_zone","building_list","level_zone","active_levels","ɵɵtwoWayProperty","available_spaces","EventManageComponent_div_0_mat_chip_row_28_Template","EventManageComponent_div_0_Template_input_matChipInputTokenEnd_29_listener","addTag","EventManageComponent_div_0_Template_mat_checkbox_ngModelChange_33_listener","view_access","EventManageComponent_div_0_div_58_Template","ɵɵi18n","EventManageComponent_div_0_mat_option_68_Template","EventManageComponent_div_0_mat_option_69_Template","EventManageComponent_div_0_Template_button_click_75_listener","attendance_type","EventManageComponent_div_0_Template_button_click_80_listener","EventManageComponent_div_0_Template_button_click_85_listener","EventManageComponent_div_0_ng_container_90_Template","EventManageComponent_div_0_Template_button_click_104_listener","save","tag_list","chipList_r11","separators","end_date","start_date","all_day","auto_r12","filtered_timezones","timezones","EMPTY","EventManageComponent","tags","max_duration","get","level","building","_org","buildings","b","parent_id","_form_state","options_value","zone_ids","levelWithID","time","diff","hours","Math","floor","minutes","ngOnInit","initialised","location","organiser","shared_event","subscription","paramMap","subscribe","_ref","params","has","booking","newForm","extension_data","host","_x","apply","arguments","_updateTimezoneList","valueChanges","bld","new_zones","organisation","input","chipInput","inputElement","feature_list","trim","setValue","existing_tag","index","indexOf","splice","markAllAsTouched","valid","space","transform","res","postForm","catch","e","changed","timezone","toLowerCase","includes","i4","i5","features","ɵɵInheritDefinitionFeature","i18n_0","ngI18nClosureMode","$localize","EventManageComponent_div_0_Template","EventManageComponent_ng_template_1_Template","load_state_r13","addDays","isSameDay","isSameMonth","startOfMonth","startOfWeek","startWith","MatDialog","weekday_r1","event_r3","EventMonthViewComponent_div_3_button_4_Template_button_click_0_listener","EventMonthViewComponent_div_3_button_4_ng_template_6_Template","event_card_r5","menu_r7","dateString","day_r6","EventMonthViewComponent_div_3_button_11_Template_button_click_0_listener","event_r9","_r8","EventMonthViewComponent_div_3_button_4_Template","EventMonthViewComponent_div_3_button_7_Template","EventMonthViewComponent_div_3_button_11_Template","is_month","ɵɵpipeBind3","EventMonthViewComponent","offset_weekday","_dialog","month","weekdays","month_days","start","offset","getHours","getMinutes","_setMonthDays","_setWeekdays","weekStartsOn","Array","from","keys","i","EventMonthViewComponent_Template","EventMonthViewComponent_div_2_Template","EventMonthViewComponent_div_3_Template","notifySuccess","openConfirmModal","GroupEventDetailsModalComponent","queryEvents","endOfDay","getUnixTime","BehaviorSubject","combineLatest","debounceTime","switchMap","timeout","_changed","next","_options","getValue","_loading","_poll","active_building","period_start","period_end","calendars","sort","a","asObservable","startPolling","delay","interval","document","hasFocus","stopPolling","clearInterval","ref","open","data","concierge","componentInstance","edit","remove","close","result","content","icon","confirm_text","reason","ɵɵinject","factory","ɵfac","providedIn","startOfMinute","hour_r1","i_r2","date_r3","event_r5","EventWeekViewComponent_div_12_button_1_Template_button_click_0_listener","_r4","ctx_r5","EventWeekViewComponent_div_12_button_1_ng_template_6_Template","ɵɵstyleProp","event_card_r7","now_offset","EventWeekViewComponent_div_12_button_1_Template","EventWeekViewComponent_div_12_div_3_Template","i_r9","date_r8","isCurrentDay","EventWeekViewComponent","days","fill","idx","EventWeekViewComponent_Template","EventWeekViewComponent_div_7_Template","EventWeekViewComponent_div_10_Template","EventWeekViewComponent_div_11_Template","EventWeekViewComponent_div_12_Template","subMonths","distinctUntilChanged","range_r1","display","EventsListComponent","has_calendar","view","period_list","_generatePeriods","_initPeriod","queryParamMap","q","setPeriodType","parseInt","selected_range","setView","type","set_route","periods","period_type","week_offset","findIndex","EventsListComponent_Template","EventsListComponent_Template_button_click_10_listener","EventsListComponent_Template_button_click_16_listener","EventsListComponent_Template_mat_select_ngModelChange_25_listener","EventsListComponent_Template_mat_select_ngModelChange_32_listener","EventsListComponent_mat_option_33_Template","EventsListComponent_div_35_Template","EventsListComponent_event_calendar_36_Template","EventsListComponent_div_37_Template","EventsComponent","attrs","EventsComponent_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedSpacesModule","FormFieldsModule","SharedBookingsModule","SharedEventsModule","ROUTES","path","component","children","redirectTo","EventsModule","_3","forChild","declarations","imports","queryBookings","saveBooking","DeskConfirmModalComponent","DeskQuestionsModalComponent","DesksService","can_set_date","error_on_host","bookDesk","desks","zone","success","Promise","race","afterClosed","bookings","desk_list","d","users","all","desk","makeDeskBooking","for_user","booking_data","booking_start","user_id","user_name","booking_end","asset_id","asset_name","description","booking_type","map_id","groups","MapLocation","_data","position","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from","amount"],"sourceRoot":"webpack:///","x_google_ignoreList":[13]}