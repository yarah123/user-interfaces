{"version":3,"file":"apps_concierge_src_app_poi-manager_poi-manager_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/poi-manager/poi-list.component.ts","./apps/concierge/src/app/poi-manager/poi-management.service.ts","./apps/concierge/src/app/poi-manager/poi-manager.component.ts","./apps/concierge/src/app/poi-manager/poi-manager.module.ts","./apps/concierge/src/app/poi-manager/poi-modal.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n    POIManagementService,\n    PointOfInterest,\n} from './poi-management.service';\nimport { SettingsService } from '@placeos/common';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\n@Component({\n    selector: 'poi-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-4\">\n            <custom-table\n                class=\"block min-w-[32rem] w-full h-full\"\n                [dataSource]=\"features\"\n                [columns]=\"['name', 'level', 'location', 'actions']\"\n                [display_column]=\"['Name', 'Level', 'Location', ' ']\"\n                [column_size]=\"['flex', '10r', '10r', '9r']\"\n                [template]=\"{\n                    level: level_template,\n                    actions: action_template\n                }\"\n                empty=\"No Points of Interest found.\"\n            ></custom-table>\n        </div>\n        <ng-template #level_template let-row=\"row\">\n            {{ (row.level_id | level)?.display_name || 'Unknown' }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <div matTooltip=\"Private QR Code\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [content]=\"qr_menu\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                </div>\n                <div matTooltip=\"Public QR Code\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [disabled]=\"!row.short_link_id\"\n                        [content]=\"qr_menu\"\n                        (click)=\"loadPublicQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                </div>\n                <ng-template #qr_menu>\n                    <div class=\"bg-base-100 py-2 shadow rounded\">\n                        <div class=\"\" printable>\n                            <a\n                                [href]=\"row.qr_link | safe: 'url'\"\n                                target=\"_blank\"\n                                ref=\"noopener noreferrer\"\n                                class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                            >\n                                <img class=\"w-48\" [src]=\"row.qr_code\" />\n                            </a>\n                            <div\n                                class=\"w-[calc(100%-2rem)] text-center mt-2 font-mono text-sm bg-base-200 rounded p-2 mx-4\"\n                            >\n                                {{ row.name || row.id }}\n                            </div>\n                        </div>\n                        <button\n                            btn\n                            matRipple\n                            class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                            (click)=\"print()\"\n                        >\n                            Print QR Code\n                        </button>\n                    </div>\n                </ng-template>\n                <button btn icon matRipple [matMenuTriggerFor]=\"menu\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"edit(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon>edit</app-icon>\n                            <span>Edit Point of Interest</span>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"remove(row)\">\n                        <div class=\"flex items-center space-x-2 text-red-500\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <span>Delete Point of Interest</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class POIListComponent {\n    public readonly features = this._manager.filtered_features;\n\n    public readonly edit = (region) =>\n        this._manager.editPointOfInterest(region);\n    public readonly remove = (region) =>\n        this._manager.removePointOfInterest(region);\n\n    public get kiosk_url() {\n        const path = this._settings.get('app.kiosk_url_path') || '/map-kiosk';\n        return `${window.location.origin}${path}`;\n    }\n\n    constructor(\n        private _manager: POIManagementService,\n        private _settings: SettingsService\n    ) {}\n\n    public loadQrCode(item: PointOfInterest) {\n        const location =\n            typeof item.location === 'string'\n                ? item.location\n                : item.location.join(',');\n        const link = `${this.kiosk_url}/#/explore?level=${encodeURIComponent(\n            item.level_id\n        )}&locate=${encodeURIComponent(location)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public loadPublicQrCode(item: PointOfInterest) {\n        const link = `${location.origin}/r/${item.short_link_id.split('-')[1]}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public print() {\n        window.print();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { POIModalComponent } from './poi-modal.component';\nimport { notifyError, notifySuccess, openConfirmModal } from '@placeos/common';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\n\nexport interface POIListOptions {\n    search?: string;\n}\n\nexport interface PointOfInterest {\n    id: string;\n    name: string;\n    level_id: string;\n    location: string | [number, number];\n    short_link_id: string;\n    qr_code?: string;\n    qr_link?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class POIManagementService {\n    private _options = new BehaviorSubject<POIListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    private _features = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        switchMap(([bld]) => showMetadata(bld.id, 'map_features', {})),\n        map((_) => _.details || {}),\n        shareReplay(1)\n    );\n\n    public readonly filtered_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        map(([features, options]) => {\n            let list = Object.values(features).reduce(\n                (acc, _) => [...acc, ..._],\n                []\n            );\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<POIListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editPointOfInterest(poi?: PointOfInterest) {\n        const ref = this._dialog.open(POIModalComponent, {\n            data: poi,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async removePointOfInterest(poi: PointOfInterest) {\n        const ref = await openConfirmModal(\n            {\n                title: 'Remove Point of Interest',\n                content: `Are you sure you want to remove the point of interest \"${poi.name}\"?`,\n                icon: { content: 'delete_forever' },\n                confirm_text: 'Remove',\n            },\n            this._dialog\n        );\n        if (ref.reason !== 'done') return ref.close();\n        ref.loading('Removing point of interest...');\n        const old_metadata = await showMetadata(\n            this._org.building.id,\n            'map_features',\n            {}\n        ).toPromise();\n        const metadata = old_metadata.details || {};\n        if (metadata[poi.level_id]) {\n            metadata[poi.level_id] = metadata[poi.level_id].filter(\n                (_) => _.id !== poi.id\n            );\n        }\n        await updateMetadata(this._org.building.id, {\n            name: 'map_features',\n            details: metadata,\n            description: '',\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(e);\n                ref.close();\n                throw e;\n            });\n        notifySuccess('Successfully removed point of interest.');\n        ref.close();\n        this._change.next(Date.now());\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { POIManagementService } from './poi-management.service';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-poi-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header\n                    class=\"flex items-center justify-between px-4 py-8\"\n                    [class.mb-2]=\"\n                        !use_region || (buildings | async)?.length <= 1\n                    \"\n                >\n                    <h2 class=\"text-2xl font-medium\">\n                        Point of Interest Management\n                    </h2>\n                    <button btn matRipple (click)=\"new()\">\n                        Add Point of Interest\n                    </button>\n                </header>\n                <div\n                    class=\"flex items-center justify-between mb-2 px-4\"\n                    *ngIf=\"use_region && (buildings | async)?.length > 1\"\n                >\n                    <mat-form-field appearance=\"outline\" class=\"w-64\">\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building\"\n                            (ngModelChange)=\"building = $event\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                building?.display_name || building?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <poi-list class=\"block w-full relative flex-1 h-1/2\"></poi-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class POIManagerComponent {\n    public readonly new = () => this._state.editPointOfInterest();\n\n    public readonly buildings = this._org.active_buildings;\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public set building(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: POIManagementService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { POIManagerComponent } from './poi-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { POIListComponent } from './poi-list.component';\nimport { POIModalComponent } from './poi-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: POIManagerComponent },\n    { path: 'new', component: POIManagerComponent },\n];\n\n@NgModule({\n    declarations: [POIManagerComponent, POIListComponent, POIModalComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class POIManagerModule {}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    createShortURL,\n    getInvalidFields,\n    notifyError,\n    randomString,\n    updateShortURL,\n} from '@placeos/common';\nimport { OrganisationService, Building } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { PointOfInterest } from './poi-management.service';\nimport { take } from 'rxjs/operators';\n\n@Component({\n    selector: 'poi-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Point Of Interest</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[28rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            i18n-placeholder=\"@@namePlaceholder\"\n                            formControlName=\"name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col\"\n                    *ngIf=\"(building_list | async)?.length > 1\"\n                >\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Building<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            [(ngModel)]=\"building\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Select Building\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of building_list | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.level_id\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Level<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"level_id\"\n                            placeholder=\"Select Level\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of level_list | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"name\" i18n=\"@@nameLabel\">\n                        Location<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            [(ngModel)]=\"location_type\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Location Type\"\n                        >\n                            <mat-option value=\"map_id\">Map ID</mat-option>\n                            <mat-option value=\"coordinates\"\n                                >Coordinates</mat-option\n                            >\n                        </mat-select>\n                    </mat-form-field>\n                    <ng-container *ngIf=\"location_type === 'map_id'\">\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"location\"\n                                placeholder=\"Location\"\n                                i18n-placeholder=\"@@locationPlaceholder\"\n                                formControlName=\"location\"\n                            />\n                        </mat-form-field>\n                    </ng-container>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngIf=\"location_type === 'coordinates'\"\n                    >\n                        <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                            <input\n                                matInput\n                                name=\"latitude\"\n                                [ngModel]=\"form.value.location[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({\n                                        location: [\n                                            $event,\n                                            form.value.location[1]\n                                        ]\n                                    })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            />\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                            <input\n                                matInput\n                                name=\"longitude\"\n                                [ngModel]=\"form.value.location[1]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({\n                                        location: [\n                                            form.value.location[0],\n                                            $event\n                                        ]\n                                    })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving Point Of Interest...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class POIModalComponent extends AsyncHandler {\n    public loading = false;\n    public location_type =\n        this._data?.location instanceof Array ? 'coordinates' : 'map_id';\n    public readonly building_list = this._org.building_list;\n    public readonly level_list = this._org.active_levels;\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public set building(value: Building) {\n        this._org.building = value;\n    }\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this._data?.id || ''),\n        name: new FormControl(this._data?.name || '', [Validators.required]),\n        level_id: new FormControl(this._data?.level_id || '', [\n            Validators.required,\n        ]),\n        location: new FormControl(this._data?.location || '', [\n            Validators.required,\n        ]),\n    });\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: PointOfInterest | undefined,\n        private _dialog_ref: MatDialogRef<POIModalComponent>,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        if (!this.form.value.level_id) {\n            const levels = await this.level_list.pipe(take(1)).toPromise();\n            if (levels.length) this.form.patchValue({ level_id: levels[0].id });\n        }\n    }\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        const data: any = this.form.getRawValue();\n        if (!data.id) data.id = `POI-${randomString(8)}`;\n        data.short_link_id = this._data?.short_link_id;\n        const path = this._settings.get('app.kiosk_url_path') || '/map-kiosk';\n        const public_key = this._settings.get('app.short_url_public_key');\n        const location =\n            typeof data.location === 'string'\n                ? data.location\n                : data.location.join(',');\n        let uri = `${path}/#/explore?level=${data.level_id}&locate=${location}&public=true`;\n        if (public_key) uri += `&x-api-key=${public_key}`;\n        if (!data.short_link_id) {\n            const { id } = await createShortURL({\n                name: data.name,\n                description: `Point of Interest: ${data.name}`,\n                uri: `${\n                    window.location.origin\n                }/auth/login?continue=${encodeURIComponent(uri)}`,\n            } as any).toPromise();\n            data.short_link_id = id;\n        } else {\n            await updateShortURL(data.short_link_id, {\n                id: data.short_link_id,\n                name: data.name,\n                description: `Point of Interest: ${data.name}`,\n                uri: `${\n                    window.location.origin\n                }/auth/login?continue=${encodeURIComponent(uri)}`,\n            } as any).toPromise();\n        }\n        this.loading = true;\n        const old_metadata = await showMetadata(\n            this._org.building.id,\n            'map_features',\n            {}\n        ).toPromise();\n        const metadata = old_metadata.details || {};\n        if (!metadata[data.level_id]) metadata[data.level_id] = [];\n        metadata[data.level_id] = [\n            ...metadata[data.level_id].filter((_) => _.id !== data.id),\n            data,\n        ].sort((a, b) => a.name.localeCompare(b.name));\n        const resp = await updateMetadata(this._org.building.id, {\n            name: 'map_features',\n            details: metadata,\n            description: '',\n        })\n            .toPromise()\n            .catch((e) => notifyError(e));\n        if ((resp as any).id) this._dialog_ref.close(resp);\n        this.loading = false;\n    }\n}\n"],"names":["POIManagementService","SettingsService","generateQRCode","i0","ɵɵtext","ɵɵtextInterpolate1","tmp_0_0","ɵɵpipeBind1","row_r4","level_id","display_name","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","POIListComponent_ng_template_4_ng_template_9_Template_button_click_7_listener","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","print","ɵɵadvance","ɵɵproperty","ɵɵpipeBind2","row_r5","qr_link","ɵɵsanitizeUrl","qr_code","name","id","POIListComponent_ng_template_4_Template_button_click_2_listener","restoredCtx","_r13","row","ctx_r12","loadQrCode","POIListComponent_ng_template_4_Template_button_click_6_listener","ctx_r14","loadPublicQrCode","ɵɵtemplate","POIListComponent_ng_template_4_ng_template_9_Template","ɵɵtemplateRefExtractor","POIListComponent_ng_template_4_Template_button_click_16_listener","ctx_r15","edit","POIListComponent_ng_template_4_Template_button_click_22_listener","ctx_r16","remove","_r7","short_link_id","_r8","POIListComponent","kiosk_url","path","_settings","get","window","location","origin","constructor","_manager","features","filtered_features","region","editPointOfInterest","removePointOfInterest","item","join","link","encodeURIComponent","split","_","ɵɵdirectiveInject","i1","i2","_2","selectors","decls","vars","consts","template","POIListComponent_Template","rf","ctx","POIListComponent_ng_template_2_Template","POIListComponent_ng_template_4_Template","ɵɵpureFunction0","_c0","_c1","_c2","ɵɵpureFunction2","_c3","_r1","_r3","MatDialog","OrganisationService","BehaviorSubject","combineLatest","map","shareReplay","switchMap","POIModalComponent","notifyError","notifySuccess","openConfirmModal","showMetadata","updateMetadata","_org","_dialog","_options","_change","options","asObservable","_features","active_building","pipe","bld","details","list","Object","values","reduce","acc","search","filter","toLowerCase","includes","setFilters","next","getValue","setSearchString","poi","ref","open","data","afterClosed","subscribe","Date","now","_this","_asyncToGenerator","title","content","icon","confirm_text","reason","close","loading","old_metadata","building","toPromise","metadata","description","catch","e","ɵɵinject","factory","ɵfac","providedIn","bld_r2","POIManagerComponent_div_10_Template_mat_select_ngModelChange_2_listener","$event","_r4","ctx_r3","POIManagerComponent_div_10_mat_option_3_Template","ctx_r0","buildings","POIManagerComponent","use_region","_state","new","active_buildings","i3","attrs","POIManagerComponent_Template","POIManagerComponent_Template_button_click_8_listener","POIManagerComponent_div_10_Template","ɵɵclassProp","length","tmp_1_0","CommonModule","FormsModule","RouterModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","ROUTES","component","POIManagerModule","_3","forChild","declarations","imports","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","MatDialogRef","AsyncHandler","createShortURL","getInvalidFields","randomString","updateShortURL","take","ɵɵi18nStart","ɵɵi18nEnd","bld_r12","POIModalComponent_main_4_form_1_div_2_Template_mat_select_ngModelChange_5_listener","_r14","ctx_r13","POIModalComponent_main_4_form_1_div_2_mat_option_6_Template","ctx_r7","building_list","level_r16","POIModalComponent_main_4_form_1_div_4_mat_option_6_Template","ctx_r8","level_list","ɵɵelementContainerStart","ɵɵelementContainerEnd","POIModalComponent_main_4_form_1_div_16_Template_input_ngModelChange_2_listener","_r18","ctx_r17","form","patchValue","value","POIModalComponent_main_4_form_1_div_16_Template_input_ngModelChange_4_listener","ctx_r19","ctx_r10","POIModalComponent_main_4_form_1_div_1_Template","POIModalComponent_main_4_form_1_div_2_Template","POIModalComponent_main_4_form_1_div_4_Template","POIModalComponent_main_4_form_1_Template_mat_select_ngModelChange_10_listener","_r21","ctx_r20","location_type","POIModalComponent_main_4_form_1_ng_container_15_Template","POIModalComponent_main_4_form_1_div_16_Template","ctx_r5","controls","tmp_2_0","POIModalComponent_main_4_form_1_Template","ctx_r1","POIModalComponent_footer_5_Template_button_click_1_listener","_r23","ctx_r22","save","_data","_dialog_ref","Array","active_levels","required","ngOnInit","levels","_this2","valid","getRawValue","public_key","uri","sort","a","b","localeCompare","resp","ɵɵInheritDefinitionFeature","i18n_0","ngI18nClosureMode","$localize","POIModalComponent_button_3_Template","POIModalComponent_main_4_Template","POIModalComponent_footer_5_Template","POIModalComponent_ng_template_6_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}