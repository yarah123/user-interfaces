{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMuB;AAC8B;AACJ;AACc;AACU;AACpC;AAEK;AACuC;AACV;AACc;AAClC;AAC2D;;;;;;;;;;;;;;;;IAMlGiB,4DAAA,cAA2B;IAAAA,oDAAA,GAAgB;IAAAA,0DAAA,EAAO;;;;IAAvBA,uDAAA,EAAgB;IAAhBA,gEAAA,KAAAM,MAAA,CAAAC,GAAA,YAAgB;;;;;IAD/CP,4DAAA,YAAmD;IAC/CA,wDAAA,IAAAS,yCAAA,kBAA2B;IAC3BT,oDAAA,GACA;;IAAAA,4DAAA,cAA2B;IAAAA,oDAAA,GAAiC;;IAChEA,0DADgE,EAAO,EAClE;;;;IAHMA,uDAAA,EAAc;IAAdA,wDAAA,SAAAM,MAAA,CAAAK,QAAA,CAAc;IACrBX,uDAAA,EACA;IADAA,gEAAA,MAAAA,yDAAA,OAAAM,MAAA,CAAAO,OAAA,kBAAAP,MAAA,CAAAO,OAAA,CAAAC,IAAA,EAAAR,MAAA,CAAAS,WAAA,OACA;IAA2Bf,uDAAA,GAAiC;IAAjCA,gEAAA,MAAAA,yDAAA,OAAAM,MAAA,CAAAO,OAAA,kBAAAP,MAAA,CAAAO,OAAA,CAAAC,IAAA,YAAiC;;;;;IAqBhDd,4DAAA,eAAkD;IAAAA,oDAAA,GAEhD;IAAAA,0DAAA,EAAW;;;;IAFqCA,uDAAA,EAEhD;IAFgDA,+DAAA,CAAAM,MAAA,CAAAW,IAAA,CAEhD;;;;;IAMFjB,4DADJ,cAAqD,eACvC;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;IAC1BA,4DAAA,cAA2B;IAAAA,oDAAA,GAAc;IAC7CA,0DAD6C,EAAM,EAC7C;;;;IADyBA,uDAAA,GAAc;IAAdA,+DAAA,CAAAM,MAAA,CAAAY,QAAA,CAAc;;;;;IAQjDlB,4DAAA,cAMC;IACGA,oDAAA,kBACJ;IAAAA,0DAAA,EAAM;;;;;IACNA,4DAAA,cAGC;IACGA,oDAAA,cACJ;IAAAA,0DAAA,EAAM;;;;;IACNA,4DAAA,cAGC;IACGA,oDAAA,GAGJ;IAAAA,0DAAA,EAAM;;;;IAHFA,uDAAA,EAGJ;IAHIA,gEAAA,MAAAM,MAAA,CAAAO,OAAA,CAAAM,MAAA,gDAGJ;;;;;;IA1DRnB,4DAAA,WAOC;IAFGA,wDAAA,mBAAAqB,qDAAA;MAAArB,2DAAA,CAAAuB,GAAA;MAAA,MAAAjB,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAAoB,WAAA,EAAa;IAAA,EAAC;IAMnB1B,4DAHJ,aAEC,YAC4B;IAAAA,oDAAA,GAAoB;IAAAA,0DAAA,EAAK;IAE9CA,4DADJ,cAA4B,sBACO;IAAAA,oDAAA,GAAY;IAC/CA,0DAD+C,EAAc,EACvD;IAIFA,4DAHJ,cAEC,cACmD;IAC5CA,wDAAA,IAAA2B,4CAAA,uBAAkD;IAGlD3B,4DAAA,eAAwC;IACpCA,oDAAA,IACJ;IACJA,0DADI,EAAM,EACJ;IACNA,wDAAA,KAAA4B,wCAAA,kBAAqD;IAIzD5B,0DAAA,EAAM;IACNA,4DAAA,oBAEC;IACGA,oDAAA,uBACJ;IAAAA,0DAAA,EAAW;IAgBXA,wDAfA,KAAA6B,wCAAA,kBAMC,KAAAC,wCAAA,kBAMA,KAAAC,wCAAA,kBAMA;;IAMT/B,0DADI,EAAM,EACN;;;;;IAxDAA,wDADA,eAAAA,6DAAA,KAAAiC,GAAA,EAAqB,gBAAAjC,6DAAA,KAAAmC,GAAA,EAAA7B,MAAA,CAAAO,OAAA,kBAAAP,MAAA,CAAAO,OAAA,CAAAuB,EAAA,EACmB;IAOXpC,uDAAA,GAAoB;IAApBA,+DAAA,CAAAM,MAAA,CAAAO,OAAA,kBAAAP,MAAA,CAAAO,OAAA,CAAAwB,KAAA,CAAoB;IAE5BrC,uDAAA,GAAiB;IAAjBA,wDAAA,WAAAM,MAAA,CAAAa,MAAA,CAAiB;IAACnB,uDAAA,EAAY;IAAZA,+DAAA,CAAAM,MAAA,CAAAgC,MAAA,CAAY;IAM5BtC,uDAAA,GAAuB;IAAAA,wDAAvB,SAAAM,MAAA,CAAAW,IAAA,YAAuB,aAAAsB,YAAA,CAAc;IAI5CvC,uDAAA,GACJ;IADIA,gEAAA,MAAAM,MAAA,CAAAkC,eAAA,KAAAlC,MAAA,CAAAO,OAAA,kBAAAP,MAAA,CAAAO,OAAA,CAAA4B,QAAA,OACJ;IAEiCzC,uDAAA,EAAc;IAAdA,wDAAA,SAAAM,MAAA,CAAAY,QAAA,CAAc;IAYlDlB,uDAAA,GAInB;IAJmBA,wDAAA,UAAAM,MAAA,CAAAoC,gBAAA,KAAApC,MAAA,CAAAO,OAAA,kBAAAP,MAAA,CAAAO,OAAA,CAAA8B,YAAA,oBAInB;IAKmB3C,uDAAA,EAA6C;IAA7CA,wDAAA,UAAAM,MAAA,CAAAO,OAAA,kBAAAP,MAAA,CAAAO,OAAA,CAAA8B,YAAA,oBAA6C;IAM7C3C,uDAAA,EAAuC;IAAvCA,wDAAA,SAAAA,yDAAA,SAAAM,MAAA,CAAAuC,yBAAA,EAAuC;;;;;IAShD7C,uDAAA,cAA2D;;;AAajE,MAAO+C,oBAAqB,SAAQnD,iFAAY;EAmBlD,IAAW8C,gBAAgBA,CAAA;IACvB,OACI,IAAI,CAAC7B,OAAO,EAAEmC,UAAU,CAACC,WAAW,EAAE,KACtC7D,4DAAW,EAAE,EAAE8D,KAAK,CAACD,WAAW,EAAE;EAE1C;EAEA,IAAWlC,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACoC,SAAS,CAACpC,WAAW;EACrC;EAEA,IAAWI,MAAMA,CAAA;IACb,IAAI,IAAI,CAACN,OAAO,EAAEuC,OAAO,EAAE,OAAO,SAAS;IAC3C,IAAI,IAAI,CAACvC,OAAO,EAAEM,MAAM,KAAK,UAAU,EAAE,OAAO,SAAS;IACzD,IAAI,IAAI,CAACN,OAAO,EAAEM,MAAM,KAAK,UAAU,EAAE,OAAO,OAAO;IACvD,IAAI,IAAI,CAACN,OAAO,EAAEM,MAAM,KAAK,WAAW,EAAE,OAAO,OAAO;IACxD,IAAI,IAAI,CAACN,OAAO,EAAEM,MAAM,KAAK,WAAW,EAAE,OAAO,SAAS;IAC1D,OAAO,SAAS;EACpB;EAEAkC,YACYC,OAAkB,EAClBC,MAAsB,EACtBC,IAAyB,EACzBL,SAA0B,EAC1BM,QAAwB;IAEhC,KAAK,EAAE;IANC,KAAAH,OAAO,GAAPA,OAAO;IACP,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAL,SAAS,GAATA,SAAS;IACT,KAAAM,QAAQ,GAARA,QAAQ;IA1CJ,KAAA9C,QAAQ,GAAY,KAAK;IACxB,KAAA+C,IAAI,GAAG,IAAI3E,uDAAY,EAAE;IACzB,KAAA4E,MAAM,GAAG,IAAI5E,uDAAY,EAAE;IAC3B,KAAA6E,GAAG,GAAG,IAAI7E,uDAAY,EAAE;IAElC,KAAAyD,eAAe,GAAG,EAAE;IAEX,KAAAK,yBAAyB,GACrC,IAAI,CAACY,QAAQ,CAACI,cAAc,CAACC,IAAI,CAC7BrE,oDAAG,CACEsE,KAAK,IACF,IAAI,CAAClD,OAAO,CAAC8B,YAAY,KAAK,SAAS,IACvCoB,KAAK,IACL,IAAI,CAAClD,OAAO,CAAC4B,QAAQ,KAAKsB,KAAK,CAAC3B,EAAE,CACzC,CACJ;EA8BL;EAEO4B,QAAQA,CAAA;IACX,IAAI,CAACC,YAAY,CACb,aAAa,EACb,IAAI,CAACV,MAAM,CAACW,aAAa,CAACC,SAAS,CAAEC,MAAM,IACvCA,MAAM,CAACC,GAAG,CAAC,SAAS,CAAC,IACrB,IAAI,CAACxD,OAAO,EAAEuB,EAAE,KAAKgC,MAAM,CAACE,GAAG,CAAC,OAAO,CAAC,GAClC,IAAI,CAAC5C,WAAW,EAAE,GAClB,EAAE,CACX,CACJ;EACL;EAEO6C,WAAWA,CAACC,OAAsB;IACrC,IAAIA,OAAO,CAAC3D,OAAO,EAAE;MACjB,IAAI,CAAC2B,eAAe,GAAG,IAAI,CAACiC,cAAc,CACtC,IAAI,CAAC5D,OAAO,EAAE6D,WAAW,CAC5B;IACL;EACJ;EAEA,IAAWzD,IAAIA,CAAA;IACX,IAAI,IAAI,CAACJ,OAAO,EAAEI,IAAI,KAAK,MAAM,EAAE,OAAO,MAAM;IAChD,IAAI,IAAI,CAACJ,OAAO,EAAEI,IAAI,KAAK,SAAS,EAAE,OAAO,WAAW;IACxD,OAAO,MAAM;EACjB;EAEA,IAAWV,GAAGA,CAAA;IACV,MAAMO,IAAI,GAAG,IAAI,CAACD,OAAO,EAAEC,IAAI,IAAI6D,IAAI,CAACC,GAAG,EAAE;IAC7C,MAAMC,QAAQ,GAAGrF,oDAAS,CAACmF,IAAI,CAACC,GAAG,EAAE,EAAE9D,IAAI,CAAC;IAC5C,OAAO,GAAG+D,QAAQ,GAAG,OAAO,GAAGvF,iDAAM,CAACwB,IAAI,EAAE,MAAM,CAAC,EAAE;EACzD;EAEA,IAAWI,QAAQA,CAAA;IACf,MAAM4D,KAAK,GAAG,IAAI,CAACtB,IAAI,CAACuB,WAAW,CAAC,IAAI,CAAClE,OAAO,EAAEmE,KAAK,IAAI,EAAE,CAAC;IAC9D,OAAO,GAAGF,KAAK,EAAEG,YAAY,IAAIH,KAAK,EAAEI,IAAI,IAAI,EAAE,EAAE;EACxD;EAEA,IAAW5C,MAAMA,CAAA;IACb,IAAI,IAAI,CAACzB,OAAO,EAAEsE,UAAU,EAAE,OAAO,SAAS;IAC9C,MAAMC,KAAK,GAAG,IAAI,CAACvE,OAAO,EAAEC,IAAI,IAAI6D,IAAI,CAACC,GAAG,EAAE;IAC9C,MAAMS,QAAQ,GAAG,IAAI,CAACxE,OAAO,EAAEwE,QAAQ,IAAI,EAAE;IAC7C,MAAMzB,GAAG,GAAGvE,qDAAU,CAAC+F,KAAK,EAAEC,QAAQ,CAAC;IACvC,MAAMC,GAAG,GAAG/F,yDAAc,CAAC;MACvBgG,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACJ,QAAQ,GAAG,EAAE,CAAC;MAChCK,OAAO,EAAEL,QAAQ,GAAG;KACvB,CAAC,CACGM,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CACtBA,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC;IAC9B,OAAO,GAAGrG,iDAAM,CAAC8F,KAAK,EAAE,IAAI,CAACrE,WAAW,CAAC,MAAMzB,iDAAM,CACjDsE,GAAG,EACH,IAAI,CAAC7C,WAAW,CACnB,KAAKuE,GAAG,GAAG;EAChB;EAEOb,cAAcA,CAACmB,IAAY;IAC9B,MAAMC,GAAG,GAAG,IAAIC,SAAS,EAAE,CAACC,eAAe,CAACH,IAAI,EAAE,WAAW,CAAC;IAC9D,OAAOC,GAAG,CAACG,IAAI,CAACC,WAAW,IAAI,EAAE;EACrC;EAEOvE,WAAWA,CAAA;IACd,IAAI,CAAC,IAAI,CAACb,OAAO,EAAE;IACnB,IAAI,CAACqF,OAAO,CAAC,MAAM,EAAE,MAAK;MACtB,MAAMC,cAAc,GAChB,IAAI,CAACtF,OAAO,CAAC8B,YAAY,KAAK,aAAa,GACrC5C,gHAA+B,GAC/BJ,0FAA4B;MACtC,MAAMyG,IAAI,GACN,IAAI,CAACvF,OAAO,CAAC8B,YAAY,KAAK,aAAa,GACrC;QAAE9B,OAAO,EAAE,IAAI,CAACA,OAAO;QAAEwF,SAAS,EAAE;MAAK,CAAE,GAC3C,IAAI,CAACxF,OAAO;MACtB,MAAMyF,GAAG,GAAQ,IAAI,CAAChD,OAAO,CAACiD,IAAI,CAACJ,cAAc,EAAE;QAAEC;MAAI,CAAE,CAAC;MAC5D,IAAI,CAACnC,YAAY,CACb,MAAM,EACNqC,GAAG,CAACE,iBAAiB,CAAC9C,IAAI,EAAES,SAAS,CAAC,MAAM,IAAI,CAACT,IAAI,CAAC+C,IAAI,EAAE,CAAC,CAChE;MACD,IAAI,CAACxC,YAAY,CACb,QAAQ,EACRqC,GAAG,CAACE,iBAAiB,CAAC7C,MAAM,EAAEQ,SAAS,CAAC,MACpC,IAAI,CAACR,MAAM,CAAC8C,IAAI,EAAE,CACrB,CACJ;MACD,IAAI,CAACxC,YAAY,CACb,KAAK,EACLqC,GAAG,CAACE,iBAAiB,CAAC5C,GAAG,EAAEO,SAAS,CAAC,MAAM,IAAI,CAACP,GAAG,CAAC6C,IAAI,EAAE,CAAC,CAC9D;IACL,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA;qBAvIQ3D,oBAAoB,EAAA/C,+DAAA,CAAA4G,gEAAA,GAAA5G,+DAAA,CAAA6G,4DAAA,GAAA7G,+DAAA,CAAA8G,+FAAA,GAAA9G,+DAAA,CAAA+G,4DAAA,GAAA/G,+DAAA,CAAAgH,4DAAA;EAAA;EAAA,QAAAC,EAAA;UAApBlE,oBAAoB;IAAAmE,SAAA;IAAAC,MAAA;MAAAtG,OAAA;MAAAF,QAAA;IAAA;IAAAyG,OAAA;MAAA1D,IAAA;MAAAC,MAAA;MAAAC,GAAA;IAAA;IAAAyD,QAAA,GAAArH,wEAAA,EAAAA,kEAAA;IAAAwH,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAdzB7H,wDAlEA,IAAA+H,kCAAA,gBAAmD,IAAAC,iCAAA,iBAYlD,IAAAC,2CAAA,gCAAAjI,oEAAA,CAsDuB;;;QAlEYA,wDAAA,SAAA8H,GAAA,CAAAjH,OAAA,CAAa;QAW5Cb,uDAAA,EAAa;QAAbA,wDAAA,SAAA8H,GAAA,CAAAjH,OAAA,CAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClC8C;AACF;AACQ;AAChB;AAE+B;AACjB;AACS;AAC3C;AACK;AAE8B;;;;;;;;;;;;;;;;;;;;;IAW7Db,wDAAA,cAGO;;;;;IACPA,6DAAA,cAGC;IACGA,wDAAA,yBAGkB;IACtBA,2DAAA,EAAM;;;;IAHEA,wDAAA,EAA0C;IAA1CA,yDAAA,WAAA0I,MAAA,CAAA7H,OAAA,kBAAA6H,MAAA,CAAA7H,OAAA,CAAA8H,cAAA,kBAAAD,MAAA,CAAA7H,OAAA,CAAA8H,cAAA,CAAAC,MAAA,CAA0C;;;;;IAyClC5I,6DAJJ,cAGC,eACa;IAAAA,qDAAA,GAER;IAAAA,2DAAA,EAAW;IACbA,6DAAA,cAAkB;IACdA,qDAAA,GAKJ;IACJA,2DADI,EAAM,EACJ;;;;IAVQA,wDAAA,GAER;IAFQA,gEAAA,CAAA0I,MAAA,CAAA7H,OAAA,CAAAgI,UAAA,yBAER;IAEE7I,wDAAA,GAKJ;IALIA,iEAAA,MAAA0I,MAAA,CAAA7H,OAAA,CAAAgI,UAAA,kCAKJ;;;;;IAGA7I,wDAAA,sBAGe;;;IADXA,yDAAA,gBAAe;;;;;;IAjC3BA,6DAAA,iBAcC;IADGA,yDAAA,mBAAA8I,8EAAA;MAAA9I,4DAAA,CAAA+I,GAAA;MAAA,MAAAL,MAAA,GAAA1I,4DAAA;MAAA,OAAAA,0DAAA,CAAS0I,MAAA,CAAAM,eAAA,EAAiB;IAAA,EAAC;IAiB3BhJ,yDAfA,IAAAiJ,2DAAA,kBAGC,IAAAC,mEAAA,gCAAAlJ,qEAAA,CAY2B;IAMhCA,2DAAA,EAAS;;;;;IAhCLA,0DAAA,eAAA0I,MAAA,CAAA7H,OAAA,CAAAgI,UAAA,CAAuC;IACvC7I,yDAAA,aAAA0I,MAAA,CAAAU,WAAA,CAAwB;IAYnBpJ,wDAAA,EAAoB;IAAAA,yDAApB,UAAA0I,MAAA,CAAAU,WAAA,CAAoB,aAAAC,gBAAA,CAAkB;;;;;IAtBnDrJ,6DAAA,cAIC;IACGA,yDAAA,IAAAsJ,qDAAA,qBAcC;IA6BGtJ,6DANJ,iBAKC,eACa;IAAAA,qDAAA,iBAAU;IAE5BA,2DAF4B,EAAW,EAC1B,EACP;;;;;IAvCGA,wDAAA,EAO3B;IAP2BA,yDAAA,UAAA0I,MAAA,CAAA7H,OAAA,CAAA0I,cAAA,KAAAb,MAAA,CAAAc,WAAA,KAAAd,MAAA,CAAAe,YAAA,KAAAf,MAAA,CAAA7H,OAAA,CAAA6I,KAAA,mBAAAhB,MAAA,CAAA7H,OAAA,CAAA6I,KAAA,oBAO3B;IA2B0B1J,wDAAA,EAA0B;IAA1BA,yDAAA,sBAAA2J,OAAA,CAA0B;;;;;IAsIV3J,6DALR,cAGC,cACyC,eACZ;IAAAA,qDAAA,GAEpB;IACNA,2DADM,EAAO,EACP;IACNA,6DAAA,cAEC;IACGA,qDAAA,GACJ;IACJA,2DADI,EAAM,EACJ;;;;IATwBA,wDAAA,GAEpB;IAFoBA,gEAAA,CAAA4J,OAAA,CAAA1E,IAAA,WAEpB;IAKFlF,wDAAA,GACJ;IADIA,iEAAA,OAAA4J,OAAA,CAAAC,QAAA,MACJ;;;;;;IAzFR7J,6DALJ,cAIC,iBAQI;IAJGA,yDAAA,mBAAA8J,oFAAA;MAAA,MAAAC,UAAA,GAAA/J,4DAAA,CAAAgK,GAAA,EAAAC,SAAA;MAAA,MAAAvB,MAAA,GAAA1I,4DAAA;MAAA,OAAAA,0DAAA,CAAA0I,MAAA,CAAAwB,YAAA,CAAAH,UAAA,CAAA3H,EAAA,KAAAsG,MAAA,CAAAwB,YAAA,CAAAH,UAAA,CAAA3H,EAAA;IAAA,EAGC;IAGGpC,6DADJ,cAA8B,cACL;IACjBA,qDAAA,GAOJ;;IACJA,2DADI,EAAM,EACJ;IA2BFA,6DA1BJ,cAyBC,eACa;IACNA,qDAAA,GAQJ;IACJA,2DADI,EAAW,EACT;IAIFA,6DAHJ,cAEC,oBAC8B;IACvBA,qDAAA,IAKJ;IAERA,2DAFQ,EAAW,EACT,EACD;IACTA,6DAAA,eAOC;IACGA,yDAAA,KAAAmK,kEAAA,kBAGC;IAaTnK,2DADI,EAAM,EACJ;;;;;IAlFUA,wDAAA,GAOJ;IAPIA,iEAAA,oBAAAA,0DAAA,QAAA+J,UAAA,CAAAK,UAAA,cAAA1B,MAAA,CAAA3H,WAAA,OAOJ;IAIAf,wDAAA,GAEC;IAeDA,0DAjBA,eAAA+J,UAAA,CAAAL,KAAA,gBAEC,yBAAAK,UAAA,CAAAL,KAAA,gBAGA,eAAAK,UAAA,CAAAL,KAAA,mBAAAK,UAAA,CAAAL,KAAA,gBAIA,yBAAAK,UAAA,CAAAL,KAAA,mBAAAK,UAAA,CAAAL,KAAA,gBAIA,aAAAK,UAAA,CAAAL,KAAA,gBAGA,uBAAAK,UAAA,CAAAL,KAAA,gBAGA;IACD1J,yDAAA,eAAA+J,UAAA,CAAAL,KAAA,gBAEC;IAGG1J,wDAAA,GAQJ;IARIA,iEAAA,MAAA+J,UAAA,CAAAL,KAAA,2BAAAK,UAAA,CAAAL,KAAA,4CAQJ;IAMI1J,wDAAA,GAKJ;IALIA,iEAAA,MAAA0I,MAAA,CAAAwB,YAAA,CAAAH,UAAA,CAAA3H,EAAA,uCAKJ;IAKJpC,wDAAA,EAIC;IAJDA,yDAAA,UAAA0I,MAAA,CAAAwB,YAAA,CAAAH,UAAA,CAAA3H,EAAA,oBAIC;IAIoBpC,wDAAA,EAAgB;IAAhBA,yDAAA,YAAA+J,UAAA,CAAAM,KAAA,CAAgB;;;;;IA3FzDrK,sEAAA,GAAiC;IAIzBA,6DAHJ,cAEC,aACkD;IAA/CA,qDAAA,MAA+C;IAE/CA,2DAAA,EAAK;IACLA,6DAAA,cAAqC;IACjCA,yDAAA,IAAAwK,2DAAA,oBAIC;IA+FTxK,2DADI,EAAM,EACJ;;;;;IAtGEA,wDAAA,GACJ;IADIA,wDAAA,EAAA0I,MAAA,CAAA7H,OAAA,CAAA6J,YAAA,kBAAAhC,MAAA,CAAA7H,OAAA,CAAA6J,YAAA,CAAAC,MAAA,OACJ;;IAI4B3K,wDAAA,GAAuB;IAAvBA,yDAAA,YAAA0I,MAAA,CAAA7H,OAAA,CAAA6J,YAAA,CAAuB;;;;;IAwGvD1K,sEAAA,GAAgC;IAC5BA,wDAAA,0BAQmB;;;;;IANfA,wDAAA,EAAqB;IAErBA,yDAFA,QAAA0I,MAAA,CAAA5D,KAAA,kBAAA4D,MAAA,CAAA5D,KAAA,CAAA8F,MAAA,CAAqB,aAAAlC,MAAA,CAAArB,QAAA,CACA,YAAArH,8DAAA,IAAAiC,GAAA,EAInB;;;;;;IAelBjC,6DAAA,iBAKC;IADGA,yDAAA,mBAAA6K,wEAAA;MAAA7K,4DAAA,CAAA8K,GAAA;MAAA,MAAApC,MAAA,GAAA1I,4DAAA;MAAA,OAAAA,0DAAA,CAAS0I,MAAA,CAAAhF,IAAA,CAAA+C,IAAA,EAAW;IAAA,EAAC;IAGjBzG,6DADJ,cAAmD,eACrC;IAAAA,qDAAA,WAAI;IAAAA,2DAAA,EAAW;IACzBA,6DAAA,UAAU;IAAVA,qDAAA,MAAU;IAElBA,2DAF8B,EAAM,EAC1B,EACD;;;;;;IACTA,6DAAA,iBAIC;IADGA,yDAAA,mBAAA+K,wEAAA;MAAA/K,4DAAA,CAAAgL,IAAA;MAAA,MAAAtC,MAAA,GAAA1I,4DAAA;MAAA,OAAAA,0DAAA,CAAS0I,MAAA,CAAAuC,aAAA,EAAe;IAAA,EAAC;IAGrBjL,6DADJ,cAAmD,mBACA;IAC3CA,qDAAA,eACJ;IAAAA,2DAAA,EAAW;IACXA,6DAAA,UAAU;IAAVA,qDAAA,MAAU;IAElBA,2DAFiC,EAAM,EAC7B,EACD;;;;;;IACTA,6DAAA,iBAIC;IADGA,yDAAA,mBAAAkL,wEAAA;MAAAlL,4DAAA,CAAAmL,IAAA;MAAA,MAAAzC,MAAA,GAAA1I,4DAAA;MAAA,OAAAA,0DAAA,CAAS0I,MAAA,CAAA/E,MAAA,CAAA8C,IAAA,EAAa;IAAA,EAAC;IAGnBzG,6DADJ,cAAmD,mBAClB;IAAAA,qDAAA,aAAM;IAAAA,2DAAA,EAAW;IAC9CA,6DAAA,UAAU;IAAVA,qDAAA,MAAU;IAElBA,2DAFgC,EAAM,EAC5B,EACD;;;;;;IACTA,6DAAA,iBAAkE;IAArBA,yDAAA,mBAAAoL,wEAAA;MAAApL,4DAAA,CAAAqL,IAAA;MAAA,MAAA3C,MAAA,GAAA1I,4DAAA;MAAA,OAAAA,0DAAA,CAAS0I,MAAA,CAAA9E,GAAA,CAAA6C,IAAA,EAAU;IAAA,EAAC;IAEzDzG,6DADJ,cAAmD,mBAClB;IAAAA,qDAAA,aAAM;IAAAA,2DAAA,EAAW;IAC9CA,6DAAA,UAAU;IAAVA,qDAAA,MAAU;IAElBA,2DAF6B,EAAM,EACzB,EACD;;;AAKf,MAAOL,4BAA4B;EAkBrC,IAAWmF,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACtB,IAAI,CAACuB,WAAW,CAAC,IAAI,CAAClE,OAAO,EAAEmE,KAAK,IAAI,EAAE,CAAC;EAC3D;EAEA,IAAWsG,QAAQA,CAAA;IACf,IAAI,IAAI,CAACnI,SAAS,CAACmB,GAAG,CAAC,gBAAgB,CAAC,EAAE;MACtC,MAAMiH,MAAM,GAAG,IAAI,CAAC/H,IAAI,CAACgI,OAAO,CAACC,IAAI,CAAEF,MAAM,IACzC,CAAC,IAAI,CAAC1K,OAAO,EAAEmE,KAAK,IAAI,EAAE,EAAE0G,QAAQ,CAACH,MAAM,CAACnJ,EAAE,CAAC,CAClD;MACD,IAAImJ,MAAM,EAAE,OAAOA,MAAM;IAC7B;IACA,OAAO,IAAI,CAAC/H,IAAI,CAACmI,SAAS,CAACF,IAAI,CAAEG,GAAG,IAChC,CAAC,IAAI,CAAC/K,OAAO,EAAEmE,KAAK,IAAI,EAAE,EAAE0G,QAAQ,CAACE,GAAG,CAACxJ,EAAE,CAAC,CAC/C;EACL;EAEA,IAAWyJ,QAAQA,CAAA;IACf,OAAO,IAAI,CAAChL,OAAO,CAAC8B,YAAY,KAAK,SAAS;EAClD;EAEA,IAAW8G,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACtG,SAAS,CAACmB,GAAG,CACrB,OAAO,IAAI,CAACzD,OAAO,EAAEI,IAAI,IAAI,UAAU,eAAe,CACzD;EACL;EAEA,IAAW6K,aAAaA,CAAA;IACpB,OAAO,IAAI,CAACjL,OAAO,CAACgI,UAAU;EAClC;EAEA,IAAWkD,mBAAmBA,CAAA;IAC1B,OACI,IAAI,CAAClL,OAAO,EAAEI,IAAI,KAAK,MAAM,IAC7B,IAAI,CAACkC,SAAS,CAACmB,GAAG,CAAC,0BAA0B,CAAC;EAEtD;EAEA,IAAW0H,cAAcA,CAAA;IACrB,MAAMC,EAAE,GAAGtH,IAAI,CAACC,GAAG,EAAE;IACrB,MAAMQ,KAAK,GAAG,IAAI,CAACvE,OAAO,EAAEqL,aAAa,GAAG,IAAI;IAChD,MAAMtI,GAAG,GAAG,IAAI,CAAC/C,OAAO,EAAEsL,WAAW,GAAG,IAAI;IAC5C,IAAI,IAAI,CAACtL,OAAO,EAAEuL,OAAO,EAAE,OAAOhH,KAAK,IAAI6G,EAAE;IAC7C,OAAO7G,KAAK,IAAI6G,EAAE,IAAIA,EAAE,IAAIrI,GAAG;EACnC;EAEA,IAAW7C,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACoC,SAAS,CAACpC,WAAW;EACrC;EAEA,IAAWsL,cAAcA,CAAA;IACrB,IAAI,IAAI,CAACxL,OAAO,EAAEuC,OAAO,EAAE,OAAO,SAAS;IAC3C,IAAI,IAAI,CAACvC,OAAO,EAAEM,MAAM,KAAK,UAAU,EAAE,OAAO,SAAS;IACzD,IAAI,IAAI,CAACN,OAAO,EAAEM,MAAM,KAAK,UAAU,EAAE,OAAO,OAAO;IACvD,IAAI,IAAI,CAACN,OAAO,EAAEM,MAAM,KAAK,WAAW,EAAE,OAAO,SAAS;IAC1D,OAAO,SAAS;EACpB;EAEAkC,YACqCiJ,QAAiB,EAC1CnJ,SAA0B,EAC1BK,IAAyB,EACzBF,OAAkB;IAHO,KAAAgJ,QAAQ,GAARA,QAAQ;IACjC,KAAAnJ,SAAS,GAATA,SAAS;IACT,KAAAK,IAAI,GAAJA,IAAI;IACJ,KAAAF,OAAO,GAAPA,OAAO;IA9EF,KAAAI,IAAI,GAAG,IAAI3E,wDAAY,EAAE;IACzB,KAAA4E,MAAM,GAAG,IAAI5E,wDAAY,EAAE;IAC3B,KAAA6E,GAAG,GAAG,IAAI7E,wDAAY,EAAE;IACzB,KAAA8B,OAAO,GAAG,IAAI,CAACyL,QAAQ;IAChC,KAAAC,QAAQ,GAAG,KAAK;IAChB,KAAA/C,WAAW,GAAG,KAAK;IACnB,KAAAJ,WAAW,GAAG,KAAK;IACV,KAAA/B,QAAQ,GAAG,CACvB;MACInG,QAAQ,EAAE,IAAI,CAACL,OAAO,EAAE4B,QAAQ;MAChC+J,OAAO,EAAEjE,sFAAeA;KAC3B,CACJ;IACe,KAAAkE,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC5L,OAAO,EAAE6L,eAAe,EAAEjB,IAAI,CAC7D/E,CAAC,IAAKA,CAAC,CAAC/D,YAAY,KAAK,eAAe,CAC5C;EAgEE;EAEH,IAAWL,MAAMA,CAAA;IACb,IAAI,IAAI,CAACzB,OAAO,EAAEsE,UAAU,EAAE,OAAO,SAAS;IAC9C,MAAMC,KAAK,GAAG,IAAI,CAACvE,OAAO,EAAEC,IAAI,IAAI6D,IAAI,CAACC,GAAG,EAAE;IAC9C,MAAMS,QAAQ,GAAG,IAAI,CAACxE,OAAO,EAAEwE,QAAQ,IAAI,EAAE;IAC7C,MAAMzB,GAAG,GAAGvE,qDAAU,CAAC+F,KAAK,EAAEC,QAAQ,CAAC;IACvC,MAAMC,GAAG,GAAG/F,yDAAc,CAAC;MACvBgG,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACJ,QAAQ,GAAG,EAAE,CAAC;MAChCK,OAAO,EAAEL,QAAQ,GAAG;KACvB,CAAC,CACGM,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CACtBA,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC;IAC9B,OAAO,GAAGrG,iDAAM,CAAC8F,KAAK,EAAE,IAAI,CAACrE,WAAW,CAAC,MAAMzB,iDAAM,CACjDsE,GAAG,EACH,IAAI,CAAC7C,WAAW,CACnB,KAAKuE,GAAG,GAAG;EAChB;EAEa0D,eAAeA,CAAA;IAAA,IAAA2D,KAAA;IAAA,OAAAC,wJAAA;MACxBD,KAAI,CAACvD,WAAW,GAAG,IAAI;MACvB,MAAMZ,4DAAc,CAACmE,KAAI,CAAC9L,OAAO,CAACuB,EAAE,EAAE,CAACuK,KAAI,CAAC9L,OAAO,CAACgI,UAAU,CAAC,CAC1DgE,SAAS,EAAE,CACXC,KAAK,CAAEpG,CAAC,IAAI;QACT0B,4DAAW,CAAC,2BAA2B,CAAC;QACxCuE,KAAI,CAACvD,WAAW,GAAG,KAAK;QACxB,MAAM1C,CAAC;MACX,CAAC,CAAC;MACLiG,KAAI,CAAC9L,OAAe,CAACgI,UAAU,GAAG,CAAC8D,KAAI,CAAC9L,OAAO,CAACgI,UAAU;MAC3D8D,KAAI,CAACnD,WAAW,GAAG,CAACmD,KAAI,CAAC9L,OAAO,CAACgI,UAAU;MAC3CR,8DAAa,CACT,gBACIsE,KAAI,CAAC9L,OAAO,CAACgI,UAAU,GAAG,YAAY,GAAG,eAC7C,EAAE,CACL;MACD8D,KAAI,CAACvD,WAAW,GAAG,KAAK;IAAC;EAC7B;EAEOjI,MAAMA,CAACiB,EAAU;IACpB,MAAMvB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC6L,eAAe,CAACjB,IAAI,CAC5C/E,CAAC,IAAKA,CAAC,CAACjE,QAAQ,KAAKL,EAAE,CAC3B;IACD,IAAIvB,OAAO,CAACM,MAAM,EAAE,OAAON,OAAO,CAACM,MAAM;IACzC,OAAON,OAAO,GACRA,OAAO,CAACkM,QAAQ,GACZ,UAAU,GACVlM,OAAO,CAACmM,QAAQ,GAChB,UAAU,GACV,SAAS,GACb,SAAS;EACnB;EAEOC,YAAYA,CAAA;IACf,IAAI,CAACV,QAAQ,GAAG,IAAI;IACpB,MAAMjG,GAAG,GAAG,IAAI,CAAChD,OAAO,CAACiD,IAAI,CAAC+B,uGAAuB,EAAE;MACnD4E,QAAQ,EAAE,MAAM;MAChBC,SAAS,EAAE,MAAM;MACjB/G,IAAI,EAAE;QACFgH,IAAI,EAAE;UACFhL,EAAE,EAAE,IAAI,CAACkK,QAAQ,CAAC7J,QAAQ;UAC1ByC,IAAI,EAAE,IAAI,CAACoH,QAAQ,CAACe,UAAU;UAC9BzC,MAAM,EACF,IAAI,CAAC0B,QAAQ,CAAC3D,cAAc,CAACiC,MAAM,IACnC,IAAI,CAAC/J,OAAO,CAAC4B,QAAQ;UACzBqC,KAAK,EAAE,IAAI,CAACA;;;KAGvB,CAAC;IACFwB,GAAG,CAACgH,WAAW,EAAE,CAACnJ,SAAS,CAAC,MAAO,IAAI,CAACoI,QAAQ,GAAG,KAAM,CAAC;EAC9D;EAEOtB,aAAaA,CAAA;IAChB,IAAI,CAAC3H,OAAO,CAACiD,IAAI,CAACkC,sFAA0B,EAAE;MAC1CrC,IAAI,EAAE;QAAEhE,EAAE,EAAE,IAAI,CAACvB,OAAO,CAAC0M,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC1M,OAAO,CAAC4B;MAAQ;KACjE,CAAC;EACN;EAAC,QAAAiE,CAAA;qBA3JQ/G,4BAA4B,EAAAK,gEAAA,CA4EzBmI,sEAAe,GAAAnI,gEAAA,CAAA4G,4DAAA,GAAA5G,gEAAA,CAAA6G,+FAAA,GAAA7G,gEAAA,CAAA8G,gEAAA;EAAA;EAAA,QAAAG,EAAA;UA5ElBtH,4BAA4B;IAAAuH,SAAA;IAAAE,OAAA;MAAA1D,IAAA;MAAAC,MAAA;MAAAC,GAAA;IAAA;IAAA4D,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAhN+BC,SAAA,0EAEpD;;;;;;;;;;;;;;;;iBA8BmDA,SAAA,yEACnC,eAAuC,mBACnD;;;;;;;;;;iBA2IMA,SAAA,6EAAY;;;;;;;;;;iBAYZA,SAAA,gFAAe;;;;;;;;;;iBAUfA,SAAA,+EAAc;;;;;;;;;;iBAMdA,SAAA,2EAAW;;;;;;;QA/R7B1N,6DAHJ,aAEC,aAGI;QAKGA,yDAJA,IAAA2N,2CAAA,kBAGC,IAAAC,2CAAA,kBAIA;QAMD5N,6DAAA,aAIC;QACGA,qDAAA,GACJ;QAAAA,2DAAA,EAAK;QAGGA,6DAFR,cAAyD,cAC/B,sBACqB;QACnCA,qDAAA,GACJ;QACJA,2DADI,EAAc,EACZ;QACNA,yDAAA,KAAA6N,4CAAA,kBAIC;QAgDT7N,2DADI,EAAM,EACJ;QAKEA,6DAJR,eAAwC,eAGnC,cACuD;QAApDA,qDAAA,OAAoD;QAEpDA,2DAAA,EAAK;QAEDA,6DADJ,eAA8C,gBAChC;QAAAA,qDAAA,aAAK;QAAAA,2DAAA,EAAW;QAC1BA,6DAAA,WAAK;QAAAA,qDAAA,IAA4C;;QACrDA,2DADqD,EAAM,EACrD;QAEFA,6DADJ,eAA8C,gBAChC;QAAAA,qDAAA,gBAAQ;QAAAA,2DAAA,EAAW;QAC7BA,6DAAA,WAAK;QAAAA,qDAAA,IAAY;QACrBA,2DADqB,EAAM,EACrB;QAEFA,6DADJ,eAA8C,gBAChC;QAAAA,qDAAA,WAAG;QAAAA,2DAAA,EAAW;QACxBA,6DAAA,WAAK;QACDA,qDAAA,IAEJ;QACJA,2DADI,EAAM,EACJ;QAEFA,6DADJ,eAA8C,gBAChC;QAAAA,qDAAA,aAAK;QAAAA,2DAAA,EAAW;QAC1BA,6DAAA,WAAK;QACDA,qDAAA,IAIJ;QAERA,2DAFQ,EAAM,EACJ,EACJ;QACNA,yDAAA,KAAA8N,qDAAA,2BAAiC;QA6GjC9N,6DAAA,kBAIC;QADGA,yDAAA,mBAAA+N,+DAAA;UAAA/N,4DAAA,CAAAgO,GAAA;UAAA,OAAAhO,0DAAA,CAAS8H,GAAA,CAAAmF,YAAA,EAAc;QAAA,EAAC;QAExBjN,yDAAA,KAAAiO,qDAAA,2BAAgC;QAYxCjO,2DADI,EAAS,EACP;QAOFA,6DANJ,kBAKC,gBACa;QAAAA,qDAAA,aAAK;QAEvBA,2DAFuB,EAAW,EACrB,EACP;QACNA,6DAAA,uBAA6C;QAkCzCA,yDAjCA,KAAAkO,+CAAA,qBAKC,KAAAC,+CAAA,qBAUA,KAAAC,+CAAA,qBAYA,KAAAC,+CAAA,qBAMiE;QAMtErO,2DAAA,EAAW;;;QA7REA,wDAAA,GAA8C;QAA9CA,yDAAA,WAAA8H,GAAA,CAAAjH,OAAA,kBAAAiH,GAAA,CAAAjH,OAAA,CAAA8H,cAAA,kBAAAb,GAAA,CAAAjH,OAAA,CAAA8H,cAAA,CAAAC,MAAA,kBAAAd,GAAA,CAAAjH,OAAA,CAAA8H,cAAA,CAAAC,MAAA,CAAA+B,MAAA,EAA8C;QAI9C3K,wDAAA,EAA6C;QAA7CA,yDAAA,SAAA8H,GAAA,CAAAjH,OAAA,kBAAAiH,GAAA,CAAAjH,OAAA,CAAA8H,cAAA,kBAAAb,GAAA,CAAAjH,OAAA,CAAA8H,cAAA,CAAAC,MAAA,kBAAAd,GAAA,CAAAjH,OAAA,CAAA8H,cAAA,CAAAC,MAAA,CAAA+B,MAAA,CAA6C;QAU9C3K,wDAAA,EAA+C;QAA/CA,0DAAA,WAAA8H,GAAA,CAAAjH,OAAA,kBAAAiH,GAAA,CAAAjH,OAAA,CAAA8H,cAAA,kBAAAb,GAAA,CAAAjH,OAAA,CAAA8H,cAAA,CAAAC,MAAA,EAA+C;QAE/C5I,wDAAA,EACJ;QADIA,iEAAA,MAAA8H,GAAA,CAAAjH,OAAA,CAAAwB,KAAA,MACJ;QAGqBrC,wDAAA,GAAyB;QAAzBA,yDAAA,WAAA8H,GAAA,CAAAuE,cAAA,CAAyB;QAClCrM,wDAAA,EACJ;QADIA,iEAAA,MAAA8H,GAAA,CAAAxF,MAAA,MACJ;QAKCtC,wDAAA,EAAsB;QAAtBA,yDAAA,UAAA8H,GAAA,CAAAjH,OAAA,CAAAuC,OAAA,CAAsB;QA2DlBpD,wDAAA,GAA4C;QAA5CA,gEAAA,CAAAA,0DAAA,SAAA8H,GAAA,CAAAjH,OAAA,CAAAC,IAAA,qBAA4C;QAI5Cd,wDAAA,GAAY;QAAZA,gEAAA,CAAA8H,GAAA,CAAAxF,MAAA,CAAY;QAKbtC,wDAAA,GAEJ;QAFIA,iEAAA,OAAA8H,GAAA,CAAAhD,KAAA,kBAAAgD,GAAA,CAAAhD,KAAA,CAAAG,YAAA,MAAA6C,GAAA,CAAAhD,KAAA,kBAAAgD,GAAA,CAAAhD,KAAA,CAAAI,IAAA,SAAA4C,GAAA,CAAAjH,OAAA,CAAAwM,UAAA,IAAAvF,GAAA,CAAAjH,OAAA,CAAA4B,QAAA,MAEJ;QAKIzC,wDAAA,GAIJ;QAJIA,iEAAA,OAAA8H,GAAA,CAAAwD,QAAA,kBAAAxD,GAAA,CAAAwD,QAAA,CAAArG,YAAA,MAAA6C,GAAA,CAAAwD,QAAA,kBAAAxD,GAAA,CAAAwD,QAAA,CAAApG,IAAA,SAAA4C,GAAA,CAAAwD,QAAA,kBAAAxD,GAAA,CAAAwD,QAAA,CAAAiD,OAAA,WAAAzG,GAAA,CAAAwD,QAAA,CAAAiD,OAAA,WAIJ;QAGOvO,wDAAA,EAAgB;QAAhBA,yDAAA,SAAA8H,GAAA,CAAA2E,UAAA,CAAgB;QAkHZzM,wDAAA,GAAe;QAAfA,yDAAA,UAAA8H,GAAA,CAAAyE,QAAA,CAAe;QA0BjCvM,wDAAA,GAAc;QAAdA,yDAAA,SAAA8H,GAAA,CAAA+D,QAAA,CAAc;QAUd7L,wDAAA,EAA0C;QAA1CA,yDAAA,SAAA8H,GAAA,CAAAgE,aAAA,IAAAhE,GAAA,CAAAiE,mBAAA,CAA0C;QAY1C/L,wDAAA,EAAqB;QAArBA,yDAAA,UAAA8H,GAAA,CAAAkE,cAAA,CAAqB;QAQHhM,wDAAA,EAAoB;QAApBA,yDAAA,SAAA8H,GAAA,CAAAkE,cAAA,CAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9SF;AACU;AAatC;AAMG;AAC2C;AASzD;AAYU;AAE6D;AAE9B;AACG;AACqB;AACA;AACvB;AACiB;AACE;AACM;AACL;;;;;;;;AAI5E,MAAM8E,aAAa,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC;AAqCzD,MAAOC,kBAAmB,SAAQnR,yDAAY;EAsMhD,IAAWoR,IAAIA,CAAA;IACX,OAAO,IAAI,CAACC,KAAK,CAACC,QAAQ,EAAE;EAChC;EAEA,IAAWrQ,OAAOA,CAAA;IACd,OAAO,IAAI,CAACyL,QAAQ,CAAC4E,QAAQ,EAAE;EACnC;EAEOC,gBAAgBA,CAAC/O,EAAU;IAC9B,OAAO,IAAI,CAACgP,aAAa,CAAChP,EAAE,CAAC;EACjC;EAEOiP,OAAOA,CACVxQ,OAAA,GAAmB,IAAInB,mDAAO,CAAC;IAC3B0M,OAAO,EAAE,IAAI,CAACjJ,SAAS,CAACmB,GAAG,CAAC,8BAA8B;GAC7D,CAAC;IAEF,IAAI,CAACgN,IAAI,CAACC,KAAK,EAAE;IACjB,IAAI,CAACD,IAAI,CAACE,UAAU,CAChBxC,+DAAW,CACP;MACI,GAAGnO,OAAO;MACV,GAAGA,OAAO,CAAC8H;KACd,EACD,CAAC,IAAI,EAAE8I,SAAS,EAAE,EAAE,CAAC,CACxB,CACJ;IACD,IAAI,CAACxN,YAAY,CACb,aAAa,EACb,IAAI,CAACqN,IAAI,CAACI,YAAY,CAACvN,SAAS,CAAC,MAAK;MAClC,MAAM;QAAErD,IAAI;QAAEuE;MAAQ,CAAE,GAAG,IAAI,CAACiM,IAAI,CAACK,WAAW,EAAE;MAClD,IAAI,CAACC,OAAO,CAACC,UAAU,CAAC;QAAE/Q,IAAI;QAAEuE;MAAQ,CAAE,CAAC;MAC3C,IAAI,CAACyM,SAAS,EAAE;IACpB,CAAC,CAAC,CACL;IACD,IAAI,CAAC5L,OAAO,CAAC,MAAM,EAAE,MAAK;MACtB,IAAI,CAACoL,IAAI,CAACE,UAAU,CAAC;QACjB1Q,IAAI,EAAED,OAAO,CAACC,IAAI;QAClBuE,QAAQ,EAAExE,OAAO,CAACwE;OACrB,CAAC;IACN,CAAC,CAAC;IACF,IAAI,CAACiH,QAAQ,CAACyF,IAAI,CAAC,IAAIrS,mDAAO,CAACmB,OAAO,CAAC,CAAC;IACxC,IAAI,CAACmR,QAAQ,CAACD,IAAI,CAAC;MAAE9Q,IAAI,EAAE,IAAI,CAAC+Q,QAAQ,CAACd,QAAQ,EAAE,CAACjQ;IAAI,CAAE,CAAC;EAC/D;EAEAoC,YACY4O,OAAe,EACf9O,SAA0B,EAC1BK,IAAyB,EACzBF,OAAkB,EAClB4O,SAA0B,EAC1BN,OAA0B;IAElC,KAAK,EAAE;IAPC,KAAAK,OAAO,GAAPA,OAAO;IACP,KAAA9O,SAAS,GAATA,SAAS;IACT,KAAAK,IAAI,GAAJA,IAAI;IACJ,KAAAF,OAAO,GAAPA,OAAO;IACP,KAAA4O,SAAS,GAATA,SAAS;IACT,KAAAN,OAAO,GAAPA,OAAO;IAxPX,KAAAX,KAAK,GAAG,IAAI5B,kDAAe,CAAkB,MAAM,CAAC;IACpD,KAAA2C,QAAQ,GAAG,IAAI3C,kDAAe,CAAqB;MACvDpO,IAAI,EAAE;KACT,CAAC;IACM,KAAAqL,QAAQ,GAAG,IAAI+C,kDAAe,CAAU,IAAI,CAAC;IAC7C,KAAA+B,aAAa,GAA2B,EAAE;IAC1C,KAAAe,QAAQ,GAAG,IAAI9C,kDAAe,CAAS,EAAE,CAAC;IAE3C,KAAA+C,YAAY,GAAY,IAAI1S,mDAAO,CACtC2S,IAAI,CAACC,KAAK,CACNC,cAAc,CAACC,OAAO,CAAC,6BAA6B,CAAC,IAAI,IAAI,CAChE,CACJ;IACe,KAAAC,OAAO,GAAG,IAAI,CAACN,QAAQ,CAACO,YAAY,EAAE;IACtC,KAAAC,OAAO,GAAG,IAAI,CAACX,QAAQ,CAAClO,IAAI,CAACkM,4DAAW,CAAC,CAAC,CAAC,CAAC;IAC5C,KAAAsB,IAAI,GAAGlB,uEAAmB,EAAE;IAE5B,KAAAwC,SAAS,GAA+BtD,oDAAa,CAAC,CAClE,IAAI,CAAC9L,IAAI,CAACqP,eAAe,EACzB,IAAI,CAACF,OAAO,CAAC7O,IAAI,CAAC+L,wEAAuB,CAAC,MAAM,CAAC,CAAC,CACrD,CAAC,CAAC/L,IAAI,CACH8L,6DAAY,CAAC,GAAG,CAAC,EACjBK,0DAAS,CAAC,CAAC,CAACrE,GAAG,EAAE;MAAE3K;IAAI,CAAE,CAAC,KAAI;MAC1B,IAAI,CAAC2K,GAAG,EAAE,OAAO6D,yCAAE,CAAC,EAAE,CAAC;MACvB,QAAQxO,IAAI;QACR,KAAK,MAAM;UACP,IAAI,CAACkR,QAAQ,CAACJ,IAAI,CAAC,kBAAkB,CAAC;UACtC,OAAO,IAAI,CAACe,gBAAgB,CAAC,OAAc,CAAC;QAChD,KAAK,SAAS;UACV,IAAI,CAACX,QAAQ,CAACJ,IAAI,CAAC,2BAA2B,CAAC;UAC/C,OAAO,IAAI,CAACe,gBAAgB,CAAC,gBAAuB,CAAC;QACzD,KAAK,QAAQ;UACT,IAAI,CAACX,QAAQ,CAACJ,IAAI,CAAC,oBAAoB,CAAC;UACxC,OAAO,IAAI,CAACe,gBAAgB,CAAC,SAAgB,CAAC;MACtD;MACA,OAAOrD,yCAAE,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,EACFU,oDAAG,CAAC,MAAM,IAAI,CAACgC,QAAQ,CAACJ,IAAI,CAAC,EAAE,CAAC,CAAC,EACjC/B,4DAAW,CAAC,CAAC,CAAC,CACjB;IAEe,KAAA3I,QAAQ,GAAyB,IAAI,CAACuL,SAAS,CAAC9O,IAAI,CAChErE,oDAAG,CAAEsT,QAAQ,IAAI;MACb,MAAMC,IAAI,GAAa,EAAE;MACzB,KAAK,MAAM;QAAE3L;MAAQ,CAAE,IAAI0L,QAAQ,EAAE;QACjC1L,QAAQ,YAAY4L,KAAK,GACnB5L,QAAQ,CAAC6L,OAAO,CAAExM,CAAC,IAAKsM,IAAI,CAACG,IAAI,CAACzM,CAAC,CAAC,CAAC,GACrC,IAAI;MACd;MACA,OAAOqI,uDAAM,CAACiE,IAAI,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,EACFtD,4DAAW,CAAC,CAAC,CAAC,CACjB;IAEe,KAAAwD,aAAa,GAEzBlE,oDAAa,CAAC,CAAC,IAAI,CAAC9L,IAAI,CAACiQ,aAAa,EAAE,IAAI,CAACzB,QAAQ,CAAC,CAAC,CAAClO,IAAI,CAC5DmM,0DAAS,CAAC,CAAC,CAAC+C,IAAI,EAAE;MAAE/R;IAAI,CAAE,CAAC,KACvByS,OAAO,CAACC,GAAG,CACPX,IAAI,CAACvT,GAAG,CAAEmM,GAAG,IACTsD,gEAAY,CAACtD,GAAG,CAACxJ,EAAE,EAAE,GAAGnB,IAAI,gBAAgB,CAAC,CAAC4L,SAAS,EAAE,CAC5D,CACJ,CACJ,EACDpN,oDAAG,CAAEmU,cAAc,IAAI;MACnB,MAAMC,OAAO,GAAG,EAAE;MAClB,KAAK,MAAMC,KAAK,IAAIF,cAAc,EAAE;QAChCC,OAAO,CAACC,KAAK,CAAC1R,EAAE,CAAC,GACb0R,KAAK,CAACC,OAAO,YAAYd,KAAK,GAAGa,KAAK,CAACC,OAAO,GAAG,EAAE;MAC3D;MACA,OAAOF,OAAO;IAClB,CAAC,CAAC,EACF7D,4DAAW,CAAC,CAAC,CAAC,CACjB;IAEe,KAAAgE,mBAAmB,GAAG1E,oDAAa,CAAC,CAChD,IAAI,CAACqD,OAAO,EACZ,IAAI,CAACC,SAAS,EACd,IAAI,CAACY,aAAa,EAClBhE,4CAAK,CAAC,IAAI,CAAC8B,IAAI,CAAChN,GAAG,CAAC,MAAM,CAAC,CAACoN,YAAY,EAAEhC,4CAAK,CAAC,IAAI,CAAC,CAAC,EACtDF,4CAAK,CAAC,IAAI,CAAC8B,IAAI,CAAChN,GAAG,CAAC,UAAU,CAAC,CAACoN,YAAY,EAAEhC,4CAAK,CAAC,IAAI,CAAC,CAAC,CAC7D,CAAC,CAAC5L,IAAI,CACHgM,uDAAM,CACF,MACI,IAAI,CAACwB,IAAI,CAACK,WAAW,EAAE,CAAC7Q,IAAI,GAAG,CAAC,IAChC,IAAI,CAACwQ,IAAI,CAACK,WAAW,EAAE,CAACtM,QAAQ,GAAG,CAAC,CAC3C,EACDuK,6DAAY,CAAC,GAAG,CAAC,EACjBO,oDAAG,CAAC,CAAC,CAAC;MAAElP;IAAI,CAAE,CAAC,KACX,IAAI,CAACkR,QAAQ,CAACJ,IAAI,CAAC,YAAY9Q,IAAI,kBAAkB,CAAC,CACzD,EACDgP,0DAAS,CAAC,CAAC,CAAC0C,OAAO,EAAEC,SAAS,EAAEqB,YAAY,CAAC,KAAI;MAC7C,IAAI;QAAE7H,OAAO;QAAEtL,IAAI;QAAEuE,QAAQ;QAAE6O;MAAI,CAAE,GAAG,IAAI,CAAC5C,IAAI,CAACK,WAAW,EAAE;MAC/D,IAAIvF,OAAO,EAAE;QACTtL,IAAI,GAAGsO,qDAAU,CAACtO,IAAI,CAAC,CAACqT,OAAO,EAAE;QACjC9O,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC1B;MACA,OAAOgL,gEAAkB,CAAC;QACtB+D,YAAY,EAAEjF,sDAAW,CAACrO,IAAI,CAAC;QAC/BuT,UAAU,EAAElF,sDAAW,CAAC9P,qDAAU,CAACyB,IAAI,EAAEuE,QAAQ,CAAC,CAAC;QACnDpE,IAAI,EAAE0R,OAAO,CAAC1R,IAAI;QAClB+D,KAAK,EACD2N,OAAO,CAAC2B,OAAO,IACf,IAAI,CAAC9Q,IAAI,CAAC8H,QAAQ,EAAElJ,EAAE,IACtB,IAAI,CAACoB,IAAI,CAAC+Q,YAAY,CAACnS;OAC9B,CAAC,CAAC0B,IAAI,CACHrE,oDAAG,CACE+U,UAAU,IAAI;QACX,MAAMpP,KAAK,GAAG,IAAI,CAACkM,IAAI,CAACK,WAAW,EAAE,CAAC7Q,IAAI;QAC1C,MAAM8C,GAAG,GAAGvE,qDAAU,CAClB+F,KAAK,EACL,IAAI,CAACkM,IAAI,CAACK,WAAW,EAAE,CAACtM,QAAQ,CACnC,CAAC8O,OAAO,EAAE;QACX,IAAI,CAAC/C,aAAa,GAAG,EAAE;QACvB,KAAK,MAAMhP,EAAE,IAAIoS,UAAU,EAAE;UACzB,IAAI,CAACpD,aAAa,CAAChP,EAAE,CAAC,GAAG,GAAG;QAChC;QACAqS,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,UAAU,CAAC;QAClC,MAAMG,SAAS,GAAG/B,SAAS,CAAC9C,MAAM,CAAE8E,KAAK,IAAI;UACzC,MAAMC,aAAa,GAAG/F,iEAAgB,CAClC;YACIhO,IAAI;YACJuE,QAAQ;YACR0N,QAAQ,EAAE6B,KAAK;YACfE,IAAI,EAAEZ,IAAI,IAAI9U,4DAAW;WAC5B,EACD6U,YAAY,CAACW,KAAK,CAACG,IAAI,EAAE3S,EAAE,CAAC,IACxB6R,YAAY,CAACW,KAAK,CAACG,IAAI,EAAEC,SAAS,CAAC,IACnCf,YAAY,CAAC,IAAI,CAACzQ,IAAI,CAAC8H,QAAQ,CAAClJ,EAAE,CAAC,IACnC,EAAE,CACT,CAAC6S,MAAM;UACRR,OAAO,CAACC,GAAG,CACP,SAAS,EACTE,KAAK,CAACxS,EAAE,EACRoS,UAAU,CAAC9I,QAAQ,CAACkJ,KAAK,CAACxS,EAAE,CAAC,CAChC;UACD,OACI,CAACyS,aAAa,KACb,CAACD,KAAK,CAACM,MAAM,EAAEvK,MAAM,IAClBiK,KAAK,CAACM,MAAM,CAACC,IAAI,CAAEC,GAAG,IAClBhW,4DAAW,EAAE,CAAC8V,MAAM,CAACxJ,QAAQ,CAAC0J,GAAG,CAAC,CACrC,CAAC,IACNR,KAAK,CAACS,QAAQ,KAAK,KAAK,KACvB,CAAC1C,OAAO,CAACtL,QAAQ,IACdsL,OAAO,CAACtL,QAAQ,EAAEiO,KAAK,CAAE5O,CAAC,IACtBkO,KAAK,CAACvN,QAAQ,CAACqE,QAAQ,CAAChF,CAAC,CAAC,CAC7B,CAAC,KACL,CAACiM,OAAO,CAAC2B,OAAO,IACb3B,OAAO,CAAC2B,OAAO,KAAKM,KAAK,CAACG,IAAI,EAAE3S,EAAE,IAClCuQ,OAAO,CAAC2B,OAAO,KACXM,KAAK,CAACG,IAAI,EAAEC,SAAS,CAAC,IAC9B,CAACR,UAAU,CAAC9I,QAAQ,CAACkJ,KAAK,CAACxS,EAAE,CAAC,IAC9B,CAACwS,KAAK,CAACW,WAAW;QAE1B,CAAC,CAAC;QACF,OAAOZ,SAAS;MACpB,CAAC,EACDhF,2DAAU,CAAEjJ,CAAC,IAAK+I,yCAAE,CAAC,EAAE,CAAC,CAAC,CAC5B,CACJ;IACL,CAAC,CAAC,EACFU,oDAAG,CAAEzJ,CAAC,IAAK,IAAI,CAACyL,QAAQ,CAACJ,IAAI,CAAC,EAAE,CAAC,CAAC,EAClC/B,4DAAW,CAAC,CAAC,CAAC,CACjB;IAEe,KAAAwF,oBAAoB,GAAGlG,oDAAa,CAAC,CACjD,IAAI,CAACqD,OAAO,EACZ,IAAI,CAACqB,mBAAmB,CAC3B,CAAC,CAAClQ,IAAI,CACHrE,oDAAG,CAAC,CAAC,CAACkT,OAAO,EAAEI,QAAQ,CAAC,KAAI;MACxB,MAAMmC,MAAM,GAAG,EAAE;MACjB,MAAMO,UAAU,GAAG,CAAC,GAAG1C,QAAQ,CAAC,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACvCD,CAAC,CAAC0B,IAAI,EAAE3S,EAAE,EAAEmR,aAAa,CAACD,CAAC,CAACyB,IAAI,EAAE3S,EAAE,CAAC,CACxC;MACD,MAAMsT,OAAO,GAAG/C,OAAO,CAAC+C,OAAO,EAAE/K,MAAM,GACjCgI,OAAO,CAAC+C,OAAO,GACf,CAACtW,4DAAW,EAAE,CAAC;MACrB,OAAOqW,UAAU,CAAC9K,MAAM,EAAE;QACtB,MAAMgL,KAAK,GAAG,EAAE;QAChB,IAAIf,KAAK,GAAGa,UAAU,CAACG,GAAG,EAAE;QAC5B,OAAOD,KAAK,CAAChL,MAAM,GAAG+K,OAAO,CAAC/K,MAAM,EAAE;UAClC,IACIgL,KAAK,CAAChL,MAAM,IACZ,CAACgL,KAAK,CAAClK,IAAI,CAAE/E,CAAC,IAAKA,CAAC,CAACqO,IAAI,EAAE3S,EAAE,KAAKwS,KAAK,CAACG,IAAI,EAAE3S,EAAE,CAAC,EACnD;YACE;UACJ;UACAuT,KAAK,CAACxC,IAAI,CAACyB,KAAK,CAAC;UACjBA,KAAK,GAAGa,UAAU,CAACG,GAAG,EAAE;QAC5B;QACA,IAAID,KAAK,CAAChL,MAAM,GAAG+K,OAAO,CAAC/K,MAAM,EAAE;QACnCuK,MAAM,CAAC/B,IAAI,CAACwC,KAAK,CAAC;MACtB;MACA,OAAOT,MAAM;IACjB,CAAC,CAAC,CACL;IAwDG,IAAI,CAACjR,YAAY,CACb,iBAAiB,EACjB,IAAI,CAACgO,OAAO,CAAC4D,MAAM,CAAC1R,SAAS,CAAEtD,OAAc,IAAI;MAC7C,IACIA,OAAO,YAAY2N,2DAAa,IAChC,CAAC3N,OAAO,CAACiV,GAAG,CAACpK,QAAQ,CAAC,MAAM,CAAC,IAC7B,CAACoF,aAAa,CAACrF,IAAI,CAAE/E,CAAC,IAAK7F,OAAO,CAACiV,GAAG,CAACpK,QAAQ,CAAChF,CAAC,CAAC,CAAC,EACrD;QACE,IAAI,CAACqP,SAAS,EAAE;MACpB;IACJ,CAAC,CAAC,CACL;IACD,IAAI,CAACvS,IAAI,CAACwS,WAAW,CAChBlS,IAAI,CAACiM,sDAAK,CAAErJ,CAAC,IAAKA,CAAC,CAAC,CAAC,CACrBvC,SAAS,CAAC,MAAM,IAAI,CAAC0N,UAAU,CAAC,EAAE,CAAC,CAAC;EAC7C;EAEOoE,OAAOA,CAACC,KAAsB;IACjC,IAAI,CAACjF,KAAK,CAACc,IAAI,CAACmE,KAAK,CAAC;EAC1B;EAEOrE,UAAUA,CAACqE,KAAkC;IAChD,IAAI,CAAClE,QAAQ,CAACD,IAAI,CAAC;MAAE,GAAG,IAAI,CAACC,QAAQ,CAACd,QAAQ,EAAE;MAAE,GAAGgF;IAAK,CAAE,CAAC;EACjE;EAEOC,UAAUA,CAACC,OAAe,EAAEC,MAAe;IAC9C,IAAI,CAACD,OAAO,EAAEzL,MAAM,EAAE;IACtB,MAAMtD,QAAQ,GAAG,IAAI,CAAC2K,QAAQ,CAACd,QAAQ,EAAE,EAAE7J,QAAQ,IAAI,EAAE;IACzD,IAAIgP,MAAM,IAAI,CAAChP,QAAQ,CAACqE,QAAQ,CAAC0K,OAAO,CAAC,EAAE/O,QAAQ,CAAC8L,IAAI,CAACiD,OAAO,CAAC;IACjE,IAAI,CAACC,MAAM,IAAIhP,QAAQ,CAACqE,QAAQ,CAAC0K,OAAO,CAAC,EACrC/O,QAAQ,CAACiP,MAAM,CACXjP,QAAQ,CAACkP,SAAS,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,OAAO,CAAC,EACxC,CAAC,CACJ;IACL,IAAI,CAACvE,UAAU,CAAC;MAAExK;IAAQ,CAAE,CAAC;EACjC;EAEOoP,SAASA,CAAA;IACZ,IAAI,CAAClE,cAAc,CAACC,OAAO,CAAC,sBAAsB,CAAC,EAAE;MACjD,OAAO,IAAI,CAACnB,OAAO,EAAE;IACzB;IACA,MAAMxQ,OAAO,GAAG,IAAI,CAACyL,QAAQ,CAAC4E,QAAQ,EAAE;IACxC,IAAI,CAACI,IAAI,CAACC,KAAK,CAAC;MAAE2C,IAAI,EAAE9U,4DAAW,EAAE;MAAEsX,SAAS,EAAEtX,4DAAW;IAAE,CAAE,CAAC;IAClE,IAAI,CAACkS,IAAI,CAACE,UAAU,CAChBxC,+DAAW,CACP;MACI,IAAInO,OAAO,IAAI,EAAE,CAAC;MAClB,IAAIA,OAAO,EAAE8H,cAAc,IAAI,EAAE;KACpC,EACD,CAAC,IAAI,EAAE8I,SAAS,EAAE,EAAE,CAAC,CACxB,CACJ;IACD,IAAI,CAACO,QAAQ,CAACD,IAAI,CAAC;MAAE9Q,IAAI,EAAE,IAAI,CAAC+Q,QAAQ,CAACd,QAAQ,EAAE,CAACjQ;IAAI,CAAE,CAAC;EAC/D;EAEO8U,SAASA,CAAA;IACZxD,cAAc,CAACoE,UAAU,CAAC,sBAAsB,CAAC;IACjDpE,cAAc,CAACoE,UAAU,CAAC,8BAA8B,CAAC;IACzD,IAAI,CAACtF,OAAO,EAAE;EAClB;EAEOS,SAASA,CAAA;IACZS,cAAc,CAACqE,OAAO,CAClB,sBAAsB,EACtBvE,IAAI,CAACwE,SAAS,CAAC;MACX,GAAG,IAAI,CAACvK,QAAQ,CAAC4E,QAAQ,EAAE;MAC3B,GAAGlC,+DAAW,CAAC,IAAI,CAACsC,IAAI,CAACK,WAAW,EAAE,IAAI,EAAE,EAAE,CAC1C,IAAI,EACJF,SAAS,EACT,EAAE,CACL;KACJ,CAAC,CACL;IACDc,cAAc,CAACqE,OAAO,CAClB,8BAA8B,EAC9BvE,IAAI,CAACwE,SAAS,CAAC,IAAI,CAAC7E,QAAQ,CAACd,QAAQ,EAAE,IAAI,EAAE,CAAC,CACjD;EACL;EAEO4F,QAAQA,CAAA;IACX,IAAI,CAACxF,IAAI,CAACC,KAAK,CAAC;MAAE2C,IAAI,EAAE9U,4DAAW,EAAE;MAAEsX,SAAS,EAAEtX,4DAAW;IAAE,CAAE,CAAC;IAClE,MAAMgH,IAAI,GAAGiM,IAAI,CAACC,KAAK,CACnBC,cAAc,CAACC,OAAO,CAAC,sBAAsB,CAAC,IAAI,IAAI,CACzD;IACD,MAAM3R,OAAO,GAAG,IAAInB,mDAAO,CAAC0G,IAAI,CAAC;IACjC,IAAI,CAACkG,QAAQ,CAACyF,IAAI,CAAClR,OAAO,CAAC;IAC3B,MAAMkW,YAAY,GAAG/H,+DAAW,CAC5B;MACI,GAAG5I,IAAI;MACP,IAAIvF,OAAO,IAAI,EAAE,CAAC;MAClB,IAAIA,OAAO,EAAE8H,cAAc,IAAI,EAAE;KACpC,EACD,CAAC,IAAI,EAAE8I,SAAS,EAAE,EAAE,CAAC,CACxB;IACD,IAAI,CAACH,IAAI,CAACE,UAAU,CAACuF,YAAY,CAAC;IAClC,IAAI,CAAClF,UAAU,CAAC;MACZ,GAAGQ,IAAI,CAACC,KAAK,CACTC,cAAc,CAACC,OAAO,CAAC,8BAA8B,CAAC,IAAI,IAAI;KAErE,CAAC;EACN;EAEOwE,aAAaA,CAAA;IAChBzE,cAAc,CAACoE,UAAU,CAAC,6BAA6B,CAAC;IACxD,IAAI,CAACvE,YAAY,GAAG,IAAI1S,mDAAO,EAAE;EACrC;EAEOuX,oBAAoBA,CAACC,KAAA,GAAiB,KAAK;IAC9C,IAAI,CAAC5F,IAAI,CAAC6F,gBAAgB,EAAE;IAC5B,IAAI,CAAC,IAAI,CAAC7F,IAAI,CAAC8F,KAAK,IAAI,CAACF,KAAK,EAAE;IAChC,MAAMG,KAAK,GAAG,IAAI3X,mDAAO,CAAC;MACtB,GAAG,IAAI,CAACmB,OAAO;MACf,GAAG,IAAI,CAACyQ,IAAI,CAACK,WAAW;KAC3B,CAAC;IACF,IAAI,CAACrO,OAAO,CAACiD,IAAI,CAACoK,oFAAyB,EAAE;MAAEvK,IAAI,EAAEiR;IAAK,CAAE,CAAC;EACjE;EAEaC,WAAWA,CAAA;IAAA,IAAA3K,KAAA;IAAA,OAAAC,wJAAA;MACpB,MAAMD,KAAI,CAAC4K,cAAc,EAAE;MAC3B,MAAM5E,OAAO,GAAGhG,KAAI,CAACqF,QAAQ,CAACd,QAAQ,EAAE;MACxC,MAAMgF,KAAK,GAAGvJ,KAAI,CAAC2E,IAAI,CAACK,WAAW,EAAE;MACrC,IAAInF,OAAO,GAAG,8BAA8BmG,OAAO,CAAC1R,IAAI,IACpDiV,KAAK,CAAC7I,UACV,QAAQ/N,iDAAM,CAAC4W,KAAK,CAACpV,IAAI,EAAE,aAAa,CAAC,GACrCoV,KAAK,CAAC7Q,QAAQ,GAAG,EAAE,GAAG,EAAE,GAClB,MAAM,GAAG/F,iDAAM,CAAC4W,KAAK,CAACpV,IAAI,EAAE,QAAQ,CAAC,GACrC,EACV,EAAE;MACF,IAAI6R,OAAO,CAACgD,KAAK,EAAE;QACfnJ,OAAO,GAAG,GAAGA,OAAO,0EAA0E;MAClG;MACA,MAAMuH,OAAO,SAASlF,iEAAgB,CAClC;QACIxM,KAAK,EAAE,QAAQsQ,OAAO,CAAC1R,IAAI,EAAE;QAC7BuL,OAAO;QACPgL,IAAI,EAAE;UAAEhL,OAAO,EAAE;QAAiB;OACrC,EACDG,KAAI,CAACrJ,OAAO,CACf;MACD,IAAIyQ,OAAO,EAAE0D,MAAM,KAAK,MAAM,EAAE,MAAM,gBAAgB;MACtD1D,OAAO,CAACtB,OAAO,CAAC,+BAA+B,CAAC;MAChD,IAAIE,OAAO,CAACgD,KAAK,EAAE;QACf,MAAMhJ,KAAI,CAAC+K,gBAAgB,EAAE,CAAC5K,KAAK,CAAEpG,CAAC,IAAI;UACtC0B,4DAAW,CAACiK,IAAI,CAACwE,SAAS,CAACnQ,CAAC,CAAC,CAAC;UAC9BqN,OAAO,CAAC4D,KAAK,EAAE;UACf,MAAMjR,CAAC;QACX,CAAC,CAAC;MACN,CAAC,MACG,MAAMiG,KAAI,CAACiL,QAAQ,EAAE,CAAC9K,KAAK,CAAEpG,CAAC,IAAI;QAC9B0B,4DAAW,CAACiK,IAAI,CAACwE,SAAS,CAACnQ,CAAC,CAAC,CAAC;QAC9BqN,OAAO,CAAC4D,KAAK,EAAE;QACf,MAAMjR,CAAC;MACX,CAAC,CAAC;MACNqN,OAAO,CAAC4D,KAAK,EAAE;IAAC;EACpB;EAEaC,QAAQA,CAACC,YAAY,GAAG,KAAK;IAAA,IAAAC,MAAA;IAAA,OAAAlL,wJAAA;MACtC,IAAI,CAACkL,MAAI,CAACxG,IAAI,EAAE,MAAM,qBAAqB;MAC3C,IAAI,CAACwG,MAAI,CAACxG,IAAI,CAAC8F,KAAK,EAChB,MAAM,kCAAkCzI,iEAAgB,CACpDmJ,MAAI,CAACxG,IAAI,CACZ,CAACyG,IAAI,CAAC,IAAI,CAAC,GAAG;MACnBD,MAAI,CAACxG,IAAI,CAACE,UAAU,CAAC;QACjB7O,YAAY,EACRmV,MAAI,CAACxG,IAAI,CAACK,WAAW,EAAE,CAAChP,YAAY,IACpCmV,MAAI,CAAC9F,QAAQ,CAACd,QAAQ,EAAE,CAACjQ;OAChC,CAAC;MACF,IAAIiV,KAAK,GAAG4B,MAAI,CAACxG,IAAI,CAACK,WAAW,EAAE;MACnC,IAAI9Q,OAAO,GAAGiX,MAAI,CAACxL,QAAQ,CAAC4E,QAAQ,EAAE,IAAI,IAAIxR,mDAAO,EAAE;MACvD,IAAI,CAACmY,YAAY,EAAE;QACf,MAAMC,MAAI,CAACE,sBAAsB,CAC7B;UAAE,GAAGnX,OAAO;UAAE,GAAGqV;QAAK,CAAE,EACxB4B,MAAI,CAAC9F,QAAQ,CAACd,QAAQ,EAAE,CAACjQ,IAAI,CAChC;MACL;MACA,IAAI6W,MAAI,CAAC5F,SAAS,CAAC+F,cAAc,EAAE;QAC/B,MAAMC,OAAO,SAASJ,MAAI,CAAC5F,SAAS,CAACiG,WAAW,CAAC;UAC7ClX,IAAI,EAAE6W,MAAI,CAAC9F,QAAQ,CAACd,QAAQ,EAAE,CAACjQ,IAAI;UACnCmX,aAAa,EAAElC,KAAK,CAAC7I,UAAU;UAC/BvM,IAAI,EAAEoV,KAAK,CAACpV,IAAI;UAChBuE,QAAQ,EAAE6Q,KAAK,CAAC7Q,QAAQ;UACxB+G,OAAO,EAAE8J,KAAK,CAAC9J;SAClB,CAAC;QACF,IAAI,CAAC8L,OAAO,EAAEG,OAAO,EAAE;QACtBnC,KAAa,CAACvN,cAAc,GAAG;UAC5B2P,OAAO,EAAEJ,OAAO;UAChBK,UAAU,EAAEL,OAAO,CAACK;SACvB;MACL;MACA,IAAI,CAACrC,KAAK,CAAClR,KAAK,EAAE2F,MAAM,IAAImN,MAAI,CAACxL,QAAQ,CAAC4E,QAAQ,EAAE,CAAClM,KAAK,EAAE2F,MAAM,EAAE;QAChEuL,KAAK,CAAClR,KAAK,GAAG8S,MAAI,CAACxL,QAAQ,CAAC4E,QAAQ,EAAE,CAAClM,KAAK;MAChD;MACA8S,MAAI,CAAC3F,QAAQ,CAACJ,IAAI,CAAC,gBAAgB,CAAC;MACpC,OAAOmE,KAAK,CAACsC,aAAa;MAC1B,IAAItC,KAAK,CAAC9J,OAAO,EAAE;QACf8J,KAAK,CAACpV,IAAI,GAAGsO,qDAAU,CAAC8G,KAAK,CAACpV,IAAI,CAAC,CAACqT,OAAO,EAAE;QAC7C+B,KAAK,CAAC7Q,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAChC;MACA,MAAM;QAAEoT,QAAQ;QAAEzD;MAAS,CAAE,GAAGkB,KAAK;MACrC,OAAOA,KAAK,CAACuC,QAAQ;MACrB,OAAOvC,KAAK,CAAClB,SAAS;MACtB,MAAM0D,MAAM,SAASnI,yDAAW,CAC5B,IAAI7Q,mDAAO,CAAC;QACR,GAAGoY,MAAI,CAAC9F,QAAQ,CAACd,QAAQ,EAAE;QAC3B,GAAGgF,KAAK;QACRxR,WAAW,EAAEwR,KAAK,CAAC7I,UAAU,IAAI6I,KAAK,CAACxR,WAAW;QAClDiU,SAAS,EAAEzC,KAAK,CAAChC,IAAI,EAAEhP,IAAI;QAC3B0T,OAAO,EACH,CAAC,CAAC1C,KAAK,CAAChC,IAAI,EAAE9R,EAAE,EAAEsJ,QAAQ,CAAC,GAAG,CAAC,GAAGwK,KAAK,EAAEhC,IAAI,EAAE9R,EAAE,GAAG,EAAE,KACtDhD,4DAAW,EAAE,EAAEgD,EAAE;QACrBuG,cAAc,EAAE;UACZ,IAAKuN,KAAa,CAACvN,cAAc,IAAI,EAAE,CAAC;UACxCgN,KAAK,EAAEO,KAAK,CAACP,KAAK;UAClBkD,KAAK,EAAE3C,KAAK,CAAC2C,KAAK;UAClBC,UAAU,EACN5C,KAAK,CAAChC,IAAI,EAAE4E,UAAU,IAAI1Z,4DAAW,EAAE,EAAE0Z;SAChD;QACD/L,QAAQ,EAAE,CAAC+K,MAAI,CAAC3U,SAAS,CAACmB,GAAG,CAAC,0BAA0B;OAC3D,CAAC,EACFmU,QAAQ,GACF;QAAEM,QAAQ,EAAE7C,KAAK,CAAC6C,QAAQ;QAAEN,QAAQ,EAAEA;MAAQ,CAAE,GAChDzD,SAAS,GACT;QAAEgE,UAAU,EAAEhE;MAAS,CAAE,GACzB,EAAE,CACX,CACInI,SAAS,EAAE,CACXC,KAAK,CAAE0J,CAAC,IAAI;QACTsB,MAAI,CAAC3F,QAAQ,CAACJ,IAAI,CAAC,EAAE,CAAC;QACtB,MAAMyE,CAAC,EAAEyC,KAAK,IAAIzC,CAAC;MACvB,CAAC,CAAC;MACN,IAAIN,KAAK,CAACgD,MAAM,EAAEvO,MAAM,IAAI9J,OAAO,CAAC8H,cAAc,CAACuQ,MAAM,EAAEvO,MAAM,EAAE;QAC/D,MAAMwO,QAAQ,SAASvI,gGAAgC,CACnD;UAAE,GAAG8H,MAAM;UAAEU,YAAY,EAAE;QAAI,CAAE,EACjC;UACItY,IAAI,EAAEoV,KAAK,CAACpV,IAAI;UAChBuE,QAAQ,EAAE6Q,KAAK,CAAC7Q,QAAQ;UACxB+G,OAAO,EAAE8J,KAAK,CAAC9J,OAAO;UACtB0I,IAAI,EAAEoB,KAAK,CAACmD,eAAe;UAC3BrU,KAAK,EAAE,CAAC8S,MAAI,CAACtU,IAAI,CAAC8H,QAAQ,EAAElJ,EAAE;SACjC,EACD8T,KAAK,CAACgD,MAAM,CACf,CAACpM,KAAK,CAAE0J,CAAC,IAAI;UACV/B,OAAO,CAACwE,KAAK,CAAC,gCAAgC,EAAEzC,CAAC,CAAC;UAClD,IAAIA,CAAC,EAAErV,MAAM,KAAK,GAAG,EAAE;YACnBiH,4DAAW,CACP,sDAAsD,CACzD;UACL;UACA0P,MAAI,CAAC3F,QAAQ,CAACJ,IAAI,CAAC,EAAE,CAAC;UACtB,MAAMyE,CAAC,EAAEyC,KAAK,IAAIzC,CAAC;QACvB,CAAC,CAAC;QACF,IAAI,CAAC2C,QAAQ,EAAE,MAAM,mCAAmC;QACxD,MAAMA,QAAQ,EAAE;MACpB;MACArB,MAAI,CAAC3F,QAAQ,CAACJ,IAAI,CAAC,EAAE,CAAC;MACtB,MAAM;QAAEpP;MAAY,CAAE,GAAGuT,KAAK;MAC9B4B,MAAI,CAAC/B,SAAS,EAAE;MAChB+B,MAAI,CAACxG,IAAI,EAAEE,UAAU,CAAC;QAAE7O;MAAY,CAAE,CAAC;MACvCmV,MAAI,CAAC1F,YAAY,GAAGsG,MAAM;MAC1BnG,cAAc,CAACqE,OAAO,CAClB,6BAA6B,EAC7BvE,IAAI,CAACwE,SAAS,CAAC6B,MAAM,CAAC,CACzB;MACDZ,MAAI,CAAC7B,OAAO,CAAC,SAAS,CAAC;MACvB,OAAOyC,MAAM;IAAC;EAClB;EAEahB,gBAAgBA,CAAA;IAAA,IAAA4B,MAAA;IAAA,OAAA1M,wJAAA;MACzB,MAAM;QAAE8I,OAAO;QAAEC,KAAK;QAAE1U;MAAI,CAAE,GAAGqY,MAAI,CAACtH,QAAQ,CAACd,QAAQ,EAAE;MACzD,IAAI,CAACyE,KAAK,EAAE,MAAM,gCAAgC;MAClD,MAAM4D,aAAa,GAAG7D,OAAO,CAAC5F,MAAM,CAC/BpJ,CAAC,IAAKA,CAAC,CAACxD,KAAK,KAAK9D,4DAAW,EAAE,CAAC8D,KAAK,CACzC;MACD,IAAIqW,aAAa,CAAC5O,MAAM,IAAI,CAAC,EACzB,MAAM,uCAAuC;MACjD,MAAM2G,IAAI,GAAGgI,MAAI,CAAChI,IAAI,CAACK,WAAW,EAAE;MACpC,MAAM8D,UAAU,SAAS6D,MAAI,CAACtF,mBAAmB,CAC5ClQ,IAAI,CAACoM,qDAAI,CAAC,CAAC,CAAC,CAAC,CACbrD,SAAS,EAAE;MAChB,MAAM2M,eAAe,GAAG/D,UAAU,CAAChK,IAAI,CAClC/E,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAKkP,IAAI,CAAC7O,QAAQ,IAAIiE,CAAC,CAACkE,MAAM,KAAK0G,IAAI,CAAC7O,QAAQ,CAC9D;MACD,MAAMqC,KAAK,GAAGwU,MAAI,CAAC9V,IAAI,CAACuB,WAAW,CAAC,CAACyU,eAAe,CAACzE,IAAI,EAAE3S,EAAE,CAAC,CAAC;MAC/D,MAAMwQ,SAAS,GAAG,CACd4G,eAAe,EACf,UAAUF,MAAI,CAACG,mBAAmB,CAC9B3U,KAAK,CAAC8F,MAAM,EACZ0G,IAAI,CAAC7O,QAAQ,EACbgT,UAAU,EACV8D,aAAa,CAAC5O,MAAM,CACvB,CAAC,CACL;MACD,MAAM+O,aAAa,GAAG3K,uDAAM,CACxB,CAAC3P,4DAAW,EAAE,EAAE,GAAGma,aAAa,CAAC,EACjC,OAAO,CACV;MACD,MAAM5E,SAAS,SAASjB,OAAO,CAACC,GAAG,CAC/B+F,aAAa,CAACja,GAAG,CAAC,CAACiH,CAAC,EAAEiT,GAAG,KACrBL,MAAI,CAACtB,sBAAsB,CACvB;QACI,GAAG1G,IAAI;QACP7O,QAAQ,EAAEmQ,SAAS,CAAC+G,GAAG,CAAC,CAAC/O,MAAM,IAAIgI,SAAS,CAAC+G,GAAG,CAAC,CAACvX,EAAE;QACpDY,UAAU,EAAE0D,CAAC,CAACxD;OACjB,EACDjC,IAAI,CACP,CACJ,CACJ;MACD,MAAM2Y,WAAW,GAAGF,aAAa,CAAC5J,MAAM,CAAC,CAACpJ,CAAC,EAAEiT,GAAG,KAAK,CAAChF,SAAS,CAACgF,GAAG,CAAC,CAAC;MACrE,MAAME,UAAU,GAAG,GAAGza,4DAAW,EAAE,CAAC8D,KAAK,IAAI5D,iDAAM,CAC/CqF,IAAI,CAACC,GAAG,EAAE,EACV,YAAY,CACf,GAAG;MACJ,IAAIxC,EAAE,GAAG,EAAE;MACX,KAAK,IAAI0X,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,aAAa,CAAC/O,MAAM,EAAEmP,CAAC,EAAE,EAAE;QAC3C,IAAI,CAACnF,SAAS,CAACmF,CAAC,CAAC,EAAE;QACnB,MAAM5F,IAAI,GAAGwF,aAAa,CAACI,CAAC,CAAC;QAC7B,MAAMlF,KAAK,GAAGhC,SAAS,CAACkH,CAAC,CAAC;QAC1BR,MAAI,CAAChI,IAAI,CAACE,UAAU,CAAC;UACjB,GAAGF,IAAI;UACP0D,SAAS,EAAE5S,EAAE;UACb8R,IAAI,EAAEA,IAAW;UACjBlR,UAAU,EAAEkR,IAAI,CAAChR,KAAK;UACtB0V,OAAO,EAAE1E,IAAI,CAAC9R,EAAE;UAChBK,QAAQ,EAAEmS,KAAK,EAAExS,EAAE;UACnBiL,UAAU,EAAEuH,KAAK,CAAC1P,IAAI;UACtBR,WAAW,EAAEkQ,KAAK,CAAC1P,IAAI;UACvB0F,MAAM,EAAEgK,KAAK,EAAEhK,MAAM,IAAIgK,KAAK,EAAExS,EAAE;UAClCuT,KAAK,EAAEkE,UAAU;UACjB7U,KAAK,EAAE4P,KAAK,CAACG,IAAI,GACXhG,uDAAM,CAAC,CACHuK,MAAI,CAAC9V,IAAI,CAAC+Q,YAAY,CAACnS,EAAE,EACzBwS,KAAK,CAACG,IAAI,EAAEC,SAAS,EACrBJ,KAAK,CAACG,IAAI,EAAE3S,EAAE,CACjB,CAAC,GACF,CAACkX,MAAI,CAAC9V,IAAI,CAAC+Q,YAAY,CAACnS,EAAE;SACnC,CAAC;QACF,MAAM2X,GAAG,SAAST,MAAI,CAAC1B,QAAQ,CAAC,IAAI,CAAC;QACrC,IAAImC,GAAG,CAAC3X,EAAE,IAAI,CAACA,EAAE,EAAEA,EAAE,GAAG2X,GAAG,CAAC3X,EAAE;MAClC;MACA,IAAIwX,WAAW,CAACjP,MAAM,EAAE;QACpBiE,2DAAU,CACN,4DAA4DgL,WAAW,CAClEna,GAAG,CAAEiH,CAAC,IAAKA,CAAC,CAACxB,IAAI,IAAIwB,CAAC,CAACxD,KAAK,CAAC,EAC5B6U,IAAI,CAAC,IAAI,CAAC,GAAG,CACtB;MACL;IAAC;EACL;EAEcR,cAAcA,CAAA;IAAA,IAAAyC,MAAA;IAAA,OAAApN,wJAAA;MACxB,IAAIoN,MAAI,CAAC7W,SAAS,CAACmB,GAAG,CAAC,4BAA4B,CAAC,KAAK,KAAK,EAAE;MAChE,MAAMgC,GAAG,GAAG0T,MAAI,CAAC1W,OAAO,CAACiD,IAAI,CAACiK,wFAA2B,CAAC;MAC1D,MAAMkI,MAAM,SAAShF,OAAO,CAACuG,IAAI,CAAC,CAC9B3T,GAAG,CAACE,iBAAiB,CAAC6Q,KAAK,CACtBvT,IAAI,CAACiM,sDAAK,CAAErJ,CAAC,IAAKA,CAAC,CAAC+Q,MAAM,KAAK,MAAM,CAAC,CAAC,CACvC5K,SAAS,EAAE,EAChBvG,GAAG,CAACgH,WAAW,EAAE,CAACT,SAAS,EAAE,CAChC,CAAC;MACF,IAAI6L,MAAM,EAAEjB,MAAM,KAAK,MAAM,EAAE,MAAM,gBAAgB;MACrD,MAAMnG,IAAI,GAAGhL,GAAG,CAACE,iBAAiB,CAAC8K,IAAI,CAACK,WAAW,EAAE;MACrD,KAAK,MAAMuI,GAAG,IAAI5I,IAAI,EAAE;QACpB,IAAIA,IAAI,CAAC4I,GAAG,CAAC,EAAE,MAAM,0BAA0B;MACnD;MACA5T,GAAG,CAACqR,KAAK,EAAE;IAAC;EAChB;EAEA;EACcK,sBAAsBA,CAChC;IAAE5V,EAAE;IAAEK,QAAQ;IAAE3B,IAAI;IAAEuE,QAAQ;IAAErC;EAAU,CAAoB,EAC9D/B,IAAiB;IAAA,IAAAkZ,MAAA;IAAA,OAAAvN,wJAAA;MAEjB,IAAI,CAAC5J,UAAU,EAAE,MAAM,kCAAkC;MACzD,IAAI/B,IAAI,KAAK,aAAa,EAAE,OAAO,IAAI;MACvC,MAAMmZ,QAAQ,SAAS9J,2DAAa,CAAC;QACjC8D,YAAY,EAAEjF,sDAAW,CAACrO,IAAI,CAAC;QAC/BuT,UAAU,EAAElF,sDAAW,CAACrO,IAAI,GAAGuE,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC;QACpDpE,IAAI;QACJiC,KAAK,EAAEF,UAAU;QACjBqX,KAAK,EAAE;OACV,CAAC,CAACxN,SAAS,EAAE;MACd,IAAIyN,eAAe,GAAGF,QAAQ,CAACtK,MAAM,CAChCpJ,CAAC,IACEA,CAAC,CAACvF,MAAM,KAAK,UAAU,IACvBuF,CAAC,CAACvF,MAAM,KAAK,WAAW,IACxB,CAACuF,CAAC,CAACsG,QAAQ,CAClB;MACD,IACIsN,eAAe,CAAC7O,IAAI,CAAE/E,CAAC,IAAKA,CAAC,CAACjE,QAAQ,KAAKA,QAAQ,IAAIL,EAAE,KAAKsE,CAAC,CAACtE,EAAE,CAAC,EACrE;QACE,IAAIK,QAAQ,CAACiJ,QAAQ,CAAC,GAAG,CAAC,EAAE;UACxB,MAAM,GAAGjJ,QAAQ,8CAA8C;QACnE,CAAC,MAAM;UACH,MAAM,GAAGA,QAAQ,wCAAwC;QAC7D;MACJ;MACA,MAAM8X,gBAAgB,GAClBJ,MAAI,CAAChX,SAAS,CAACmB,GAAG,CAAC,8BAA8BrD,IAAI,QAAQ,CAAC,IAAI,CAAC;MACvE,IACIsZ,gBAAgB,GAAG,CAAC,IACpBD,eAAe,CAACxK,MAAM,CACjBpJ,CAAC,IACEA,CAAC,CAAC1D,UAAU,CAACC,WAAW,EAAE,KACtB,CAACD,UAAU,IAAI5D,4DAAW,EAAE,EAAE8D,KAAK,EAAED,WAAW,EAAE,IACtDyD,CAAC,CAACtE,EAAE,KAAKA,EAAE,CAClB,CAACuI,MAAM,IAAI4P,gBAAgB,EAC9B;QACE,MAAMC,OAAO,GAAGxX,UAAU,KAAK5D,4DAAW,EAAE,EAAE8D,KAAK;QACnD,MAAM,GAAGsX,OAAO,GAAG,KAAK,GAAGxX,UAAU,YACjCwX,OAAO,GAAG,MAAM,GAAG,KACvB,iCAAiC;MACrC;MACA,OAAO,IAAI;IAAC;EAChB;EAEO1H,gBAAgBA,CAAC7R,IAAiB;IACrC,MAAMwZ,UAAU,GAAG,IAAI,CAACtX,SAAS,CAACmB,GAAG,CAAC,gBAAgB,CAAC;IACvD,MAAMoW,YAAY,GAAIhU,CAAC,IACnB,CAACA,CAAC,EAAEiU,QAAQ,CAAC1Z,IAAI,CAAC,EAAE8S,OAAO,YAAYd,KAAK,GACtCvM,CAAC,CAACiU,QAAQ,CAAC1Z,IAAI,CAAC,EAAE8S,OAAO,GACzB,EAAE,EACNtU,GAAG,CAAEmb,CAAC,IACH3Z,IAAY,KAAK,SAAS,GACrB;MACI,GAAG2Z,CAAC;MACJxY,EAAE,EAAEwY,CAAC,CAACxY,EAAE,IAAIwY,CAAC,CAAChQ,MAAM;MACpBmK,IAAI,EAAErO,CAAC,CAACqO;KACX,GACD6F,CAAC,CAACC,OAAO,EAAEpb,GAAG,CAAEiH,CAAC,KAAM;MACnB,GAAGA,CAAC;MACJoU,OAAO,EAAEF,CAAC,CAACxY,EAAE;MACb2S,IAAI,EAAErO,CAAC,CAACqO;KACX,CAAC,CAAC,IAAI,EAAE,CAClB;IACL,MAAM3S,EAAE,GAAGqY,UAAU,GACf,IAAI,CAACjX,IAAI,CAAC8H,QAAQ,CAAC0J,SAAS,GAC5B,IAAI,CAACxR,IAAI,CAAC8H,QAAQ,CAAClJ,EAAE;IAC3B,IAAIqY,UAAU,EAAE;MACZ,MAAMrY,EAAE,GAAG,IAAI,CAACoB,IAAI,CAAC8H,QAAQ,CAAC0J,SAAS;MACvC,MAAMrJ,SAAS,GAAG,IAAI,CAACnI,IAAI,CAACmI,SAAS,CAACmE,MAAM,CACvCpJ,CAAC,IAAKA,CAAC,CAACsO,SAAS,KAAK5S,EAAE,CAC5B;MACD,OAAOmN,+CAAQ,CACX5D,SAAS,CAAClM,GAAG,CAAEiH,CAAC,IACZuI,qEAAiB,CAACvI,CAAC,CAACtE,EAAE,EAAE;QAAE8C,IAAI,EAAEjE;MAAI,CAAE,CAAC,CAAC6C,IAAI,CACxCrE,oDAAG,CAAE2G,IAAI,IAAKsI,wDAAO,CAACtI,IAAI,CAAC3G,GAAG,CAACib,YAAY,CAAC,CAAC,CAAC,CACjD,CACJ,CACJ,CAAC5W,IAAI,CAACrE,oDAAG,CAAEiH,CAAC,IAAKgI,wDAAO,CAAChI,CAAC,CAAC,CAAC,CAAC;IAClC;IACA,OAAOuI,qEAAiB,CAAC7M,EAAE,EAAE;MACzB8C,IAAI,EAAEjE;KACT,CAAC,CAAC6C,IAAI,CAACrE,oDAAG,CAAE2G,IAAI,IAAKsI,wDAAO,CAACtI,IAAI,CAAC3G,GAAG,CAACib,YAAY,CAAC,CAAC,CAAC,CAAC;EAC3D;EAEcjB,mBAAmBA,CAC7BsB,OAAe,EACf3Y,EAAU,EACVwQ,SAAyB,EACzBoI,KAAa;IAAA,OAAApO,wJAAA;MAEb,MAAMqO,gBAAgB,GAAG,EAAE;MAC3B,IAAIxF,UAAU,GAAG7C,SAAS,CAAC9C,MAAM,CAC5BpJ,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAKA,EAAE,IAAIsE,CAAC,CAACkE,MAAM,KAAKxI,EAAE,CACxC;MACD,KAAK,IAAI0X,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkB,KAAK,EAAElB,CAAC,EAAE,EAAE;QAC5B,MAAM1M,IAAI,SAASqD,qEAAiB,CAChCsK,OAAO,EACP3Y,EAAE,EACFqT,UAAU,CAAChW,GAAG,CAAEiH,CAAC,IAAKA,CAAC,CAACkE,MAAM,IAAIlE,CAAC,CAACtE,EAAE,CAAC,CAC1C;QACD,IAAIgL,IAAI,EAAE;UACN6N,gBAAgB,CAAC9H,IAAI,CACjBP,SAAS,CAACnH,IAAI,CAAE/E,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAKgL,IAAI,IAAI1G,CAAC,CAACkE,MAAM,KAAKwC,IAAI,CAAC,CAC5D;UACDqI,UAAU,GAAGA,UAAU,CAAC3F,MAAM,CACzBpJ,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAKgL,IAAI,IAAI1G,CAAC,CAACkE,MAAM,KAAKwC,IAAI,CAC5C;QACL;MACJ;MACA,OAAO6N,gBAAgB;IAAC;EAC5B;EAAC,QAAAvU,CAAA;qBA5tBQqK,kBAAkB,EAAA/Q,uDAAA,CAAA4G,oDAAA,GAAA5G,uDAAA,CAAA6G,4DAAA,GAAA7G,uDAAA,CAAA8G,+FAAA,GAAA9G,uDAAA,CAAA+G,gEAAA,GAAA/G,uDAAA,CAAAgH,mFAAA,GAAAhH,uDAAA,CAAAmb,uFAAA;EAAA;EAAA,QAAAlU,EAAA;WAAlB8J,kBAAkB;IAAAqK,OAAA,EAAlBrK,kBAAkB,CAAAsK,IAAA;IAAAC,UAAA,EAFf;EAAM;;;;;;;;;;;;;;;;;;;;;;;;AC7FqC;AACY;AAK3B;AACF;;;;;;;;;AAqDpC,MAAO3K,yBAAyB;EASlCtN,YACqCqY,MAAe,EACxCvY,SAA0B;IADD,KAAAuY,MAAM,GAANA,MAAM;IAC/B,KAAAvY,SAAS,GAATA,SAAS;IAVL,KAAAwY,YAAY,GAAGF,iGAA6B,CACxD,IAAI,CAACC,MAAa,CACrB;IACe,KAAAE,WAAW,GAAGJ,8FAA0B,CACpD,IAAI,CAACE,MAAa,CACrB;IACe,KAAAG,SAAS,GAAGN,4FAAwB,CAAC,IAAI,CAACG,MAAa,CAAC;EAKrE;EAAC,QAAAhV,CAAA;qBAZKiK,yBAAyB,EAAA3Q,+DAAA,CAUtBmI,qEAAe,GAAAnI,+DAAA,CAAA4G,iFAAA;EAAA;EAAA,QAAAK,EAAA;UAVlB0J,yBAAyB;IAAAzJ,SAAA;IAAAM,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBArCXC,SAAA,kFAAiB;;;;;;;;;;iBAWjBA,SAAA,0FAAyB;;;;;;;;;;iBAWzBA,SAAA,mFAAkB;;;;;;QAjCrC1N,4DAAA,aAA6B;QAAAA,oDAAA,iCAA0B;QAAAA,0DAAA,EAAM;QAEzDA,4DADJ,aAA+D,WAQ1D;;QACGA,uDAAA,aAAkD;QAClDA,4DAAA,WAAW;QAAXA,oDAAA,MAAW;QACfA,0DADgC,EAAO,EACnC;QACJA,4DAAA,WAOC;;QACGA,uDAAA,cAA+C;QAC/CA,4DAAA,YAAW;QAAXA,oDAAA,OAAW;QACfA,0DADwC,EAAO,EAC3C;QACJA,4DAAA,YAOC;;QACGA,4DAAA,mBAA0B;QAAAA,oDAAA,gBAAQ;QAAAA,0DAAA,EAAW;QAC7CA,4DAAA,YAAW;QAAXA,oDAAA,OAAW;QAEnBA,0DAFqC,EAAO,EACpC,EACF;QAEFA,4DADJ,iBAA6D,gBAC/C;QAAAA,oDAAA,aAAK;QACnBA,0DADmB,EAAW,EACrB;;;QAhCDA,uDAAA,GAAuC;QAAvCA,wDAAA,SAAAA,yDAAA,OAAA8H,GAAA,CAAA6T,YAAA,UAAA3b,2DAAA,CAAuC;QAWvCA,uDAAA,GAAsC;QAAtCA,wDAAA,SAAAA,yDAAA,OAAA8H,GAAA,CAAA8T,WAAA,UAAA5b,2DAAA,CAAsC;QAWtCA,uDAAA,GAAgC;QAAhCA,wDAAA,SAAAA,yDAAA,QAAA8H,GAAA,CAAA+T,SAAA,UAAA7b,2DAAA,CAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCD;AAEmB;AACP;AACI;AAEI;AACR;AACO;AACT;AACqB;AACrB;AAEoB;AACE;AACR;AACA;AACH;AAEJ;AACiB;AAEN;AACI;AACG;AACe;AACf;AACN;AACF;AACiB;AACd;AACmB;AACe;AACf;AACN;AACe;AACX;AACW;AACnB;AACjB;AACM;AACJ;AACd;AACK;AACD;AACoC;AACxB;AACe;AACe;AACZ;AACX;AACH;;AAE7E,MAAM0e,UAAU,GAAG,CACflO,wFAA2B,EAC3BuM,oFAAyB,EACzBO,uFAA0B,EAC1B3d,0FAA4B,EAC5BoD,yEAAoB,EACpB4N,qFAAyB,EAEzBkN,mHAAgC,EAChCJ,0GAA4B,EAC5BD,yHAAmC,EACnCE,oGAAyB,EACzBC,mHAAgC,EAChCC,wGAA8B,EAC9BL,0GAA4B,EAC5BO,gGAA8B,EAE9BT,qGAAwB,EACxBL,2FAAoB,EACpBE,4FAAoB,EACpBD,2GAA2B,EAC3BE,sFAAiB,EACjBC,oFAAgB,EAChBW,+EAAsB,EACtBtV,uFAA0B,EAE1ByV,wEAAmB,EACnBG,mFAAwB,EACxBD,2GAA0B,EAC1BE,kGAAsB,EACtBC,iHAA6B,EAC7BC,qGAAuB,EACvBC,0FAAkB,CACrB;AA2BK,MAAOE,oBAAoB;EAAA,QAAAjY,CAAA;qBAApBiY,oBAAoB;EAAA;EAAA,QAAA1X,EAAA;UAApB0X;EAAoB;EAAA,QAAAC,EAAA;eAHlB,CAAC3C,gEAAmB,CAAC;IAAA4C,OAAA,GApB5B9C,0DAAY,EACZC,wDAAW,EACXC,gEAAmB,EACnBQ,oEAAc,EACdF,oEAAc,EACdD,6EAAkB,EAClBF,8EAAmB,EACnBF,sEAAe,EACfG,sEAAe,EACfG,yFAAwB,EACxBL,0EAAiB,EACjB6B,kFAAqB,EACrBrB,yFAAgB,EAChBD,uFAAgB,EAChBuB,oEAAe,EACfE,wEAAgB,EAChBtB,iFAAkB,EAClBD,iFAAkB,EAClBE,8EAAiB;EAAA;;;uHAKZ6B,oBAAoB;IAAAG,YAAA,GA3D7BtO,wFAA2B,EAC3BuM,oFAAyB,EACzBO,uFAA0B,EAC1B3d,0FAA4B,EAC5BoD,yEAAoB,EACpB4N,qFAAyB,EAEzBkN,mHAAgC,EAChCJ,0GAA4B,EAC5BD,yHAAmC,EACnCE,oGAAyB,EACzBC,mHAAgC,EAChCC,wGAA8B,EAC9BL,0GAA4B,EAC5BO,gGAA8B,EAE9BT,qGAAwB,EACxBL,2FAAoB,EACpBE,4FAAoB,EACpBD,2GAA2B,EAC3BE,sFAAiB,EACjBC,oFAAgB,EAChBW,+EAAsB,EACtBtV,uFAA0B,EAE1ByV,wEAAmB,EACnBG,mFAAwB,EACxBD,2GAA0B,EAC1BE,kGAAsB,EACtBC,iHAA6B,EAC7BC,qGAAuB,EACvBC,0FAAkB;IAAAI,OAAA,GAKd9C,0DAAY,EACZC,wDAAW,EACXC,gEAAmB,EACnBQ,oEAAc,EACdF,oEAAc,EACdD,6EAAkB,EAClBF,8EAAmB,EACnBF,sEAAe,EACfG,sEAAe,EACfG,yFAAwB,EACxBL,0EAAiB,EACjB6B,kFAAqB,EACrBrB,yFAAgB,EAChBD,uFAAgB,EAChBuB,oEAAe,EACfE,wEAAgB,EAChBtB,iFAAkB,EAClBD,iFAAkB,EAClBE,8EAAiB;IAAAiC,OAAA,GAtDrBvO,wFAA2B,EAC3BuM,oFAAyB,EACzBO,uFAA0B,EAC1B3d,0FAA4B,EAC5BoD,yEAAoB,EACpB4N,qFAAyB,EAEzBkN,mHAAgC,EAChCJ,0GAA4B,EAC5BD,yHAAmC,EACnCE,oGAAyB,EACzBC,mHAAgC,EAChCC,wGAA8B,EAC9BL,0GAA4B,EAC5BO,gGAA8B,EAE9BT,qGAAwB,EACxBL,2FAAoB,EACpBE,4FAAoB,EACpBD,2GAA2B,EAC3BE,sFAAiB,EACjBC,oFAAgB,EAChBW,+EAAsB,EACtBtV,uFAA0B,EAE1ByV,wEAAmB,EACnBG,mFAAwB,EACxBD,2GAA0B,EAC1BE,kGAAsB,EACtBC,iHAA6B,EAC7BC,qGAAuB,EACvBC,0FAAkB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACrFkD;AACb;AAEI;;;;;;;;;;;;;;IAsB/Cze,4DADJ,iBAA+C,YACjB;IAAAA,oDAAA,YAAK;IACnCA,0DADmC,EAAI,EAC9B;;;;;;IAKDA,4DADJ,cAAqD,YACrC;IAAZA,oDAAA,MAAY;IAAIA,0DAAA,EAAQ;IACxBA,4DAAA,8BAGC;IAFGA,8DAAA,2BAAAif,qGAAAC,MAAA;MAAAlf,2DAAA,CAAAuB,GAAA;MAAA,MAAA4d,MAAA,GAAAnf,2DAAA;MAAAA,gEAAA,CAAAmf,MAAA,CAAArK,IAAA,EAAAoK,MAAA,MAAAC,MAAA,CAAArK,IAAA,GAAAoK,MAAA;MAAA,OAAAlf,yDAAA,CAAAkf,MAAA;IAAA,EAAkB;IAG1Blf,0DADK,EAAsB,EACrB;;;;IAHEA,uDAAA,GAAkB;IAAlBA,8DAAA,YAAAmf,MAAA,CAAArK,IAAA,CAAkB;;;;;IAMtB9U,4DAAA,UAA2B;IACvBA,oDAAA,GACJ;;IAAAA,0DAAA,EAAM;;;;IADFA,uDAAA,EACJ;IADIA,gEAAA,MAAAA,yDAAA,OAAAmf,MAAA,CAAAre,IAAA,qBACJ;;;;;;IACAd,4DAAA,uBAGC;IADGA,8DAAA,2BAAAsf,uGAAAJ,MAAA;MAAAlf,2DAAA,CAAAuf,GAAA;MAAA,MAAAJ,MAAA,GAAAnf,2DAAA;MAAAA,gEAAA,CAAAmf,MAAA,CAAAre,IAAA,EAAAoe,MAAA,MAAAC,MAAA,CAAAre,IAAA,GAAAoe,MAAA;MAAA,OAAAlf,yDAAA,CAAAkf,MAAA;IAAA,EAAkB;IACrBlf,0DAAA,EAAe;;;;IADZA,8DAAA,YAAAmf,MAAA,CAAAre,IAAA,CAAkB;;;;;;IAItBd,4DADJ,cAA4D,YAC5C;IAAZA,oDAAA,MAAY;IAAMA,0DAAA,EAAQ;IAEtBA,4DADJ,yBAAqC,gBAK/B;IAFEA,8DAAA,2BAAAwf,uFAAAN,MAAA;MAAAlf,2DAAA,CAAAyf,GAAA;MAAA,MAAAN,MAAA,GAAAnf,2DAAA;MAAAA,gEAAA,CAAAmf,MAAA,CAAA1H,MAAA,EAAAyH,MAAA,MAAAC,MAAA,CAAA1H,MAAA,GAAAyH,MAAA;MAAA,OAAAlf,yDAAA,CAAAkf,MAAA;IAAA,EAAoB;IAIhClf,0DANQ,EAIE,EACW,EACf;;;;IAJMA,uDAAA,GAAoB;IAApBA,8DAAA,YAAAmf,MAAA,CAAA1H,MAAA,CAAoB;;;;;;IAxBxCzX,qEAAA,GAAgD;IAC5CA,4DAAA,eAAkB;IACdA,wDAAA,IAAA0f,uDAAA,kBAAqD;IAQjD1f,4DADJ,cAAuB,YACP;IAAZA,oDAAA,MAAY;IAAIA,0DAAA,EAAQ;IAIxBA,wDAHA,IAAA2f,uDAAA,kBAA2B,IAAAC,gEAAA,2BAM1B;IACL5f,0DAAA,EAAM;IACNA,wDAAA,IAAA6f,uDAAA,kBAA4D;IAU5D7f,4DAAA,QAAQ;IAARA,oDAAA,OAAQ;IAKZA,0DADI,EAAI,EACD;IAEHA,4DADJ,kBAAqD,kBACF;IAAzBA,wDAAA,mBAAA8f,2EAAA;MAAA9f,2DAAA,CAAAgO,GAAA;MAAA,MAAAmR,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAAY,OAAA,EAAS;IAAA,EAAC;IAAzC/f,oDAAA,OAA+C;IACnDA,0DAD0D,EAAS,EAC1D;;;;;IAnC4BA,uDAAA,GAAkB;IAAlBA,wDAAA,SAAAmf,MAAA,CAAAa,YAAA,CAAkB;IASzChgB,uDAAA,GAAmB;IAAnBA,wDAAA,UAAAmf,MAAA,CAAAc,YAAA,CAAmB;IAIpBjgB,uDAAA,EAAkB;IAAlBA,wDAAA,SAAAmf,MAAA,CAAAc,YAAA,CAAkB;IAIajgB,uDAAA,EAAkB;IAAlBA,wDAAA,UAAAmf,MAAA,CAAAe,WAAA,CAAkB;IAWtDlgB,uDAAA,GAGJ;IAHIA,uDAAA,CAAAmf,MAAA,CAAAgB,KAAA,CAAAxV,MAAA,kBAGJ,CAAAwU,MAAA,CAAAiB,SAAA,GAAAjB,MAAA,CAAAra,KAAA,kBAAAqa,MAAA,CAAAra,KAAA,CAAAG,YAAA,MAAAka,MAAA,CAAAra,KAAA,kBAAAqa,MAAA,CAAAra,KAAA,CAAAI,IAAA;;;;;;IAOJlF,4DAAA,eAAkE;IAC9DA,uDAAA,sBAAwD;IACxDA,4DAAA,QAAG;IAAAA,oDAAA,GAAa;IACpBA,0DADoB,EAAI,EACjB;;;;IAFUA,uDAAA,EAAe;IAAfA,wDAAA,gBAAe;IACzBA,uDAAA,GAAa;IAAbA,+DAAA,CAAAmf,MAAA,CAAA1M,OAAA,CAAa;;;AAa1B,MAAOsK,yBAAyB;EAgBlC,IAAWqD,SAASA,CAAA;IAChB,OAAO,IAAI,CAACD,KAAK,CAAC1gB,GAAG,CAAEiH,CAAC,IAAKA,CAAC,CAACxB,IAAI,CAAC,CAAC6S,IAAI,CAAC,IAAI,CAAC;EACnD;EAEA,IAAWmI,WAAWA,CAAA;IAClB,OAAO,CAAC,CAAC,IAAI,CAAC/c,SAAS,CAACmB,GAAG,CAAC,uBAAuB,CAAC;EACxD;EAEA,IAAW0b,YAAYA,CAAA;IACnB,OAAO,CAAC,CAAC,IAAI,CAAC7c,SAAS,CAACmB,GAAG,CAAC,+BAA+B,CAAC;EAChE;EAEAjB,YACqCgd,KAA2B,EACpDld,SAA0B;IADD,KAAAkd,KAAK,GAALA,KAAK;IAC9B,KAAAld,SAAS,GAATA,SAAS;IA7BJ,KAAAkU,KAAK,GAAG,IAAItY,uDAAY,EAAe;IAExC,KAAAohB,KAAK,GAAG,IAAI,CAACE,KAAK,CAACF,KAAK,IAAI,EAAE;IAEvC,KAAArf,IAAI,GAAG,IAAI,CAACuf,KAAK,CAACvf,IAAI;IACtB,KAAAgU,IAAI,GAAG,IAAI,CAACuL,KAAK,CAACvL,IAAI;IAEb,KAAAmL,YAAY,GAAG,IAAI,CAACI,KAAK,CAACJ,YAAY;IAE/C,KAAAxI,MAAM,GAAG,IAAI,CAAC4I,KAAK,CAAC5I,MAAM;IAEjB,KAAA3S,KAAK,GAAG,IAAI,CAACub,KAAK,CAACvb,KAAK;EAmBrC;EAEIib,OAAOA,CAAA;IACV,IAAI,CAACtN,OAAO,GAAG,4BAA4B;IAC3C,IAAI,CAAC4E,KAAK,CAAC5Q,IAAI,CAAC;MAAEgR,MAAM,EAAE;IAAM,CAAE,CAAC;EACvC;EAAC,QAAA/Q,CAAA;qBApCQqW,yBAAyB,EAAA/c,+DAAA,CA6BtBmI,qEAAe,GAAAnI,+DAAA,CAAA4G,4DAAA;EAAA;EAAA,QAAAK,EAAA;UA7BlB8V,yBAAyB;IAAA7V,SAAA;IAAAE,OAAA;MAAAiQ,KAAA;IAAA;IAAA7P,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBA7DjBC,SAAA,gFAAe;;;;;;;;;;iBAgBJA,SAAA,qEAAI;;;;;;;;;;;;;;;;;;;;iBAmBZA,SAAA,4EACK,eAAmC,2BAC5C,eAAe,wBACf,eAAwC,oBAC5C;;;;;;;;;;iBAG+CA,SAAA,wEAAO;;;;;;;;;;iBAjCtCA,SAAA,qEAAI;;;;;;;;;;iBAiBJA,SAAA,uEAAM;;;;;;QA1B1B1N,4DADJ,aAAQ,SACK;QAATA,oDAAA,MAAS;QAAeA,0DAAA,EAAK;QAC7BA,uDAAA,aAA0B;QAC1BA,wDAAA,IAAAsgB,2CAAA,oBAA+C;QAGnDtgB,0DAAA,EAAS;QAwCTA,wDAvCA,IAAAugB,iDAAA,2BAAgD,IAAAC,gDAAA,gCAAAxgB,oEAAA,CAuCvB;;;;QA3CUA,uDAAA,GAAc;QAAdA,wDAAA,UAAA8H,GAAA,CAAA2K,OAAA,CAAc;QAIlCzS,uDAAA,EAAgB;QAAAA,wDAAhB,UAAA8H,GAAA,CAAA2K,OAAA,CAAgB,aAAAgO,aAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BO;AACY;AACpB;AAEkB;AAKd;;;;;;;;;;;;;;;;;IAgBjCzgB,4DAAA,uBAKC;IAFGA,wDAAA,2BAAA6gB,iGAAA3B,MAAA;MAAA,MAAA4B,MAAA,GAAA9gB,2DAAA,CAAAuB,GAAA,EAAA0I,SAAA;MAAA,MAAA8W,MAAA,GAAA/gB,2DAAA;MAAA,OAAAA,yDAAA,CAAiB+gB,MAAA,CAAA5K,UAAA,CAAA2K,MAAA,EAAA5B,MAAA,CAAuB;IAAA,EAAC;IAGzClf,oDAAA,GACJ;IAAAA,0DAAA,EAAe;;;;;IAHXA,wDAFA,aAAA+gB,MAAA,CAAAC,iBAAA,IAAAhhB,6DAAA,IAAAiC,GAAA,GAAAyJ,QAAA,CAAAoV,MAAA,EAAmD,mBAAA9gB,6DAAA,IAAAmC,GAAA,EAEZ;IAEvCnC,uDAAA,EACJ;IADIA,gEAAA,MAAA8gB,MAAA,MACJ;;;;;IATJ9gB,4DADJ,cAAoD,gBAC7B;IAAAA,oDAAA,WAAI;IAAAA,0DAAA,EAAQ;IAC/BA,4DAAA,cAA4D;IACxDA,wDAAA,IAAAihB,0DAAA,2BAKC;IAITjhB,0DADI,EAAM,EACJ;;;;IARsBA,uDAAA,GAAW;IAAXA,wDAAA,YAAA+gB,MAAA,CAAA1Z,QAAA,CAAW;;;;;IAYnCrH,uDAAA,cAKE;;;;IAFEA,wDAAA,WAAAkhB,OAAA,CAAAtY,MAAA,IAAyB;;;;;IAIzB5I,uDAAA,cAGE;;;;;;IA/BdA,4DAAA,cAIC;IACGA,wDAAA,IAAAmhB,2CAAA,kBAAoD;IAapDnhB,4DAAA,cAEC;IAOGA,wDANA,IAAAohB,2CAAA,kBAKE,IAAAC,mDAAA,gCAAArhB,oEAAA,CACwB;IAM9BA,0DAAA,EAAM;IAEFA,4DADJ,cAA4B,cACC;IACrBA,oDAAA,GACJ;IAAAA,0DAAA,EAAM;IAEFA,4DADJ,cAAiD,oBACb;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAW;IAChDA,4DAAA,SAAG;IAAAA,oDAAA,IAAgD;IACvDA,0DADuD,EAAI,EACrD;IAIFA,4DAHJ,eAEC,kBAOI;IADGA,wDAAA,mBAAAshB,+DAAA;MAAA,MAAAJ,OAAA,GAAAlhB,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAA8W,MAAA,GAAA/gB,2DAAA;MAAA,OAAAA,yDAAA,CAAS+gB,MAAA,CAAAQ,eAAA,CAAAL,OAAA,CAAqB;IAAA,EAAC;IAE/BlhB,4DAAA,eAA8C;IAA9CA,yDAAA,OAA8C;IAC1CA,uDAAA,gBAAyB;IAE7BA,uDAAA,EAAM;IACVA,0DADI,EAAM,EACD;IACTA,4DAAA,kBAMC;IADGA,wDAAA,mBAAA0hB,+DAAA;MAAA,MAAAR,OAAA,GAAAlhB,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAA8W,MAAA,GAAA/gB,2DAAA;MAAA,OAAAA,yDAAA,CAAS+gB,MAAA,CAAAY,cAAA,CAAAT,OAAA,CAAoB;IAAA,EAAC;IAE9BlhB,4DAAA,eAA8C;IAA9CA,yDAAA,OAA8C;IAC1CA,uDAAA,gBAA0B;IAE9BA,uDAAA,EAAM;IAGlBA,0DAHY,EAAM,EACD,EACP,EACJ;IACNA,4DAAA,kBAOC;IADGA,wDAAA,mBAAA4hB,+DAAA;MAAA,MAAAV,OAAA,GAAAlhB,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAA8W,MAAA,GAAA/gB,2DAAA;MAAA,OAAAA,yDAAA,CAAS+gB,MAAA,CAAAc,eAAA,CAAAX,OAAA,CAAqB;IAAA,EAAC;IAE/BlhB,4DAAA,gBAAU;IAAAA,oDAAA,IAIR;IAEVA,0DAFU,EAAW,EACR,EACP;;;;;;IAhFIA,uDAAA,EAAsB;IAAtBA,wDAAA,SAAA+gB,MAAA,CAAA1Z,QAAA,kBAAA0Z,MAAA,CAAA1Z,QAAA,CAAAsD,MAAA,CAAsB;IAkBnB3K,uDAAA,GAA2B;IAAAA,wDAA3B,SAAAkhB,OAAA,CAAAtY,MAAA,kBAAAsY,OAAA,CAAAtY,MAAA,CAAA+B,MAAA,CAA2B,aAAAmX,cAAA,CAAgB;IAa5C9hB,uDAAA,GACJ;IADIA,gEAAA,MAAAkhB,OAAA,CAAAhc,IAAA,IAAAgc,OAAA,CAAA9e,EAAA,IAAA8e,OAAA,CAAAtW,MAAA,gBACJ;IAGO5K,uDAAA,GAAgD;IAAhDA,+DAAA,EAAAkhB,OAAA,CAAAnM,IAAA,kBAAAmM,OAAA,CAAAnM,IAAA,CAAA9P,YAAA,MAAAic,OAAA,CAAAnM,IAAA,kBAAAmM,OAAA,CAAAnM,IAAA,CAAA7P,IAAA,EAAgD;IAoCvDlF,uDAAA,IAAoD;IAApDA,yDAAA,kBAAA+gB,MAAA,CAAAgB,SAAA,CAAArW,QAAA,CAAAwV,OAAA,kBAAAA,OAAA,CAAA9e,EAAA,EAAoD;IAG1CpC,uDAAA,GAIR;IAJQA,+DAAA,CAAA+gB,MAAA,CAAAgB,SAAA,CAAArW,QAAA,CAAAwV,OAAA,kBAAAA,OAAA,CAAA9e,EAAA,mCAIR;;;AAzFtB,MAAM4f,UAAU,GAAa,EAAE;AAsHzB,MAAOjE,sBAAsB;EAU/B,IAAWgE,SAASA,CAAA;IAChB,OAAO,IAAI,CAAC5e,SAAS,CAACmB,GAAG,CAAWsc,wFAAY,CAAC,IAAIoB,UAAU;EACnE;EAEA3e,YACYF,SAA0B,EAC1BG,OAAkB;IADlB,KAAAH,SAAS,GAATA,SAAS;IACT,KAAAG,OAAO,GAAPA,OAAO;IAfH,KAAA+D,QAAQ,GAAa,EAAE;IAChC,KAAA4a,SAAS,GAAG,CAAC;IACb,KAAA5X,KAAK,GAAmB,EAAE;IAC1B,KAAA6X,QAAQ,GAAG,KAAK;IAChB,KAAAlB,iBAAiB,GAAa,EAAE;IAmDvC;IACgB,KAAAmB,gBAAgB,GAAIC,EAA+B,IAC9D,IAAI,CAACC,SAAS,GAAGD,EAAG;IACzB;IACgB,KAAAE,iBAAiB,GAAIF,EAA+B,IAC/D,IAAI,CAACG,QAAQ,GAAGH,EAAG;IACR,KAAAI,gBAAgB,GAAIC,CAAU,IAAM,IAAI,CAACP,QAAQ,GAAGO,CAAE;EA7CnE;EAEH;EACOlB,eAAeA,CAAA;IAClB,MAAMjb,GAAG,GAAG,IAAI,CAAChD,OAAO,CAACiD,IAAI,CAAC8W,oGAAwB,EAAE;MACpDjX,IAAI,EAAE;QACFiE,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBsI,OAAO,EAAE;UAAE+P,QAAQ,EAAE,IAAI,CAACT;QAAS;;KAE1C,CAAC;IACF3b,GAAG,CAACgH,WAAW,EAAE,CAACnJ,SAAS,CAAEkG,KAAsB,IAAI;MACnD,IAAI,CAACA,KAAK,EAAEA,KAAK,GAAG/D,GAAG,CAACE,iBAAiB,CAACmc,QAAQ;MAClD,IAAI,CAACC,QAAQ,CAACvY,KAAK,CAAC;IACxB,CAAC,CAAC;EACN;EAEA;EACOsX,cAAcA,CAAC5d,KAAmB;IACrC,IAAI,CAAC6e,QAAQ,CAAC,IAAI,CAACvY,KAAK,CAACyF,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAK2B,KAAK,CAAC3B,EAAE,CAAC,CAAC;EAC9D;EAEA;;;;EAIOwgB,QAAQA,CAACC,SAAyB;IACrC,IAAI,CAACxY,KAAK,GAAGwY,SAAS;IACtB,IAAI,IAAI,CAACR,SAAS,EAAE,IAAI,CAACA,SAAS,CAAC,IAAI,CAAChY,KAAK,CAAC;EAClD;EAEA;EACA;;;;EAIOyY,UAAUA,CAAC5M,KAAqB;IACnC,IAAI,CAAC7L,KAAK,GAAG6L,KAAK,IAAI,EAAE;EAC5B;EAUO2L,eAAeA,CAAC9d,KAAmB;IACtC,IAAI,CAACA,KAAK,EAAE3B,EAAE,EAAE;IAChB,MAAM2gB,QAAQ,GAAG,IAAI,CAAChB,SAAS;IAC/B,MAAMiB,SAAS,GAAG,CAACD,QAAQ,CAACrX,QAAQ,CAAC3H,KAAK,CAAC3B,EAAE,CAAC;IAC9C,IAAI4gB,SAAS,EAAE;MACX,IAAI,CAAC7f,SAAS,CAAC8f,eAAe,CAACrC,wFAAY,EAAE,CACzC,GAAGmC,QAAQ,EACXhf,KAAK,CAAC3B,EAAE,CACX,CAAC;IACN,CAAC,MAAM;MACH,IAAI,CAACe,SAAS,CAAC8f,eAAe,CAC1BrC,wFAAY,EACZmC,QAAQ,CAACjT,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,KAAK3C,KAAK,CAAC3B,EAAE,CAAC,CACzC;IACL;EACJ;EAAC,QAAAsE,CAAA;qBA/EQqX,sBAAsB,EAAA/d,+DAAA,CAAA4G,iFAAA,GAAA5G,+DAAA,CAAA6G,+DAAA;EAAA;EAAA,QAAAI,EAAA;UAAtB8W,sBAAsB;IAAA7W,SAAA;IAAAC,MAAA;MAAAE,QAAA;IAAA;IAAAA,QAAA,GAAArH,gEAAA,CARpB,CACP;MACImjB,OAAO,EAAExC,6DAAiB;MAC1ByC,WAAW,EAAE1C,yDAAU,CAAC,MAAM3C,sBAAsB,CAAC;MACrDsF,KAAK,EAAE;KACV,CACJ;IAAA7b,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAdsBC,SAAA,yEAAQ;;;;;;;;;;;;;;;;;;iBA3CHA,SAAA,kFAAU,2BAAI,kBAAW,8BAE7B;;;;;;;;;;;;;;;;;;iBAUIA,SAAA,mFAAU,4BAAK,kBAAW,8BAE9B;;;;;;QApEpB1N,4DAAA,aAA4B;QACxBA,wDAAA,IAAAsjB,qCAAA,kBAIC;QAkFLtjB,0DAAA,EAAM;QACNA,4DAAA,gBAMC;QADGA,wDAAA,mBAAAujB,wDAAA;UAAA,OAASzb,GAAA,CAAAyZ,eAAA,EAAiB;QAAA,EAAC;QAGvBvhB,4DADJ,aAAwD,eAC1C;QAAAA,oDAAA,aAAM;QAAAA,0DAAA,EAAW;QAC3BA,4DAAA,WAAW;QAAXA,oDAAA,MAAW;QAEnBA,0DAF2B,EAAO,EACxB,EACD;QACTA,4DAAA,aAA2D;QACvDA,uDAAA,aAAkD;QACtDA,0DAAA,EAAM;;;QAlGmBA,uDAAA,EAAQ;QAARA,wDAAA,YAAA8H,GAAA,CAAAuC,KAAA,CAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB+B;AACJ;AACT;;;;;;;;;;IAM/CrK,4DADJ,aAAwD,YACvB;IAA7BA,oDAAA,MAA6B;IAAsBA,0DAAA,EAAK;IAGhDA,4DAFR,eAAqC,cACD,YAChB;IAAZA,yDAAA,MAAY;IAEHA,uDAAA,WAAc;IACvBA,uDAAA,EAAQ;IAARA,0DAAA,EAAQ;IAKJA,4DAJJ,0BAGC,2BACoC;IAAAA,oDAAA,WAAG;IAAAA,0DAAA,EAAmB;IACvDA,4DAAA,4BAAkC;IAAAA,oDAAA,UAAE;IAE5CA,0DAF4C,EAAmB,EACzC,EAChB;IAEFA,4DADJ,eAAgC,aAChB;IAAZA,yDAAA,OAAY;IAECA,uDAAA,YAAc;IAC3BA,uDAAA,EAAQ;IAARA,0DAAA,EAAQ;IAEJA,4DADJ,2BAA4D,4BACvB;IAAAA,oDAAA,WAAG;IAAAA,0DAAA,EAAmB;IACvDA,4DAAA,4BAAkC;IAAAA,oDAAA,UAAE;IAE5CA,0DAF4C,EAAmB,EACzC,EAChB;IAEFA,4DADJ,eAA2B,aACX;IAAZA,yDAAA,OAAY;IAECA,uDAAA,YAAc;IAC3BA,uDAAA,EAAQ;IAARA,0DAAA,EAAQ;IAKJA,4DAJJ,2BAGC,4BACoC;IAAAA,oDAAA,WAAG;IAAAA,0DAAA,EAAmB;IACvDA,4DAAA,4BAAkC;IAAAA,oDAAA,UAAE;IAGhDA,0DAHgD,EAAmB,EACzC,EAChB,EACH;IAEHA,4DADJ,kBAAqD,kBACH;IAAxBA,wDAAA,mBAAA2jB,oEAAA;MAAA3jB,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAkb,MAAA,EAAQ;IAAA,EAAC;IAAxC5jB,oDAAA,OAA8C;IAClDA,0DADwD,EAAS,EACxD;IAELA,4DADJ,kBAA8C,aAChB;IAAAA,oDAAA,aAAK;IAEvCA,0DAFuC,EAAI,EAC9B,EACP;;;;IA5CgBA,uDAAA,GAAkB;IAAlBA,wDAAA,cAAA0I,MAAA,CAAA4I,IAAA,CAAkB;IAUNtR,uDAAA,GAAc;IAAdA,wDAAA,eAAc;IACdA,uDAAA,GAAe;IAAfA,wDAAA,gBAAe;IASfA,uDAAA,GAAc;IAAdA,wDAAA,eAAc;IACdA,uDAAA,GAAe;IAAfA,wDAAA,gBAAe;IAYfA,uDAAA,GAAc;IAAdA,wDAAA,eAAc;IACdA,uDAAA,GAAe;IAAfA,wDAAA,gBAAe;;;;;IAazCA,4DADJ,eAAoC,YACZ;IAApBA,oDAAA,MAAoB;IAKpBA,0DAAA,EAAI;IAEAA,4DADJ,iBAA8C,YAChB;IAAAA,oDAAA,YAAK;IAEvCA,0DAFuC,EAAI,EAC9B,EACN;;;AAkBb,MAAOwQ,2BAA2B;EA/ExCnN,YAAA;IAgFqB,KAAAgU,KAAK,GAAG,IAAItY,uDAAY,EAAe;IAEjD,KAAAuS,IAAI,GAAG,IAAImS,qDAAS,CAAC;MACxBI,SAAS,EAAE,IAAIL,uDAAW,CAAC,KAAK,CAAC;MACjCM,MAAM,EAAE,IAAIN,uDAAW,CAAC,KAAK,CAAC;MAC9BO,OAAO,EAAE,IAAIP,uDAAW,CAAC,KAAK;KACjC,CAAC;;EAGKI,MAAMA,CAAA;IACT,IAAI,CAACtS,IAAI,CAAC6F,gBAAgB,EAAE;IAC5B,IACI6M,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC3S,IAAI,CAAC4E,KAAK,CAAC,CAACzK,IAAI,CAC5ByO,GAAG,IACA,IAAI,CAAC5I,IAAI,CAAC4E,KAAK,CAACgE,GAAG,CAAC,KAAK,IAAI,IAC7B,IAAI,CAAC5I,IAAI,CAAC4E,KAAK,CAACgE,GAAG,CAAC,KAAK,MAAM,CACtC,EACH;MACE,IAAI,CAACgK,OAAO,GAAG,IAAI;MACnB;IACJ;IACA,IAAI,CAAC7M,KAAK,CAAC5Q,IAAI,CAAC;MAAEgR,MAAM,EAAE;IAAM,CAAE,CAAC;EACvC;EAAC,QAAA/Q,CAAA;qBAvBQ8J,2BAA2B;EAAA;EAAA,QAAAvJ,EAAA;UAA3BuJ,2BAA2B;IAAAtJ,SAAA;IAAAE,OAAA;MAAAiQ,KAAA;IAAA;IAAA7P,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBA3ECC,SAAA,sFAAsB;;;;;;;;;;;;;;;;;;iBAG/BA,SAAA,uHAEH,gBAAM,oBAAC,iBAAO;;;;;;;;;;;;;;;;;;iBAWXA,SAAA,gIAEC,iBAAM,oBAAC,kBAAO;;;;;;;;;;;;;;;;;;iBAQfA,SAAA,2HAEC,iBAAM,oBAAC,kBAAO;;;;;;;;;;iBAYeA,SAAA,sEAAM;;;;;;;;;;iBAQhCA,SAAA,6SAKpB;;;;;;QAPR1N,wDA/CA,IAAAmkB,0CAAA,kBAAwD,IAAAC,kDAAA,gCAAApkB,oEAAA,CA+C/B;;;;QA/CHA,wDAAhB,UAAA8H,GAAA,CAAAoc,OAAA,CAAgB,aAAAG,aAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDtB;AAGqD;;;;;;;;;;;;;;IA6B5DrkB,uDAAA,yBAIkB;;;;IAHdA,wDAAA,WAAA0I,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,CAAsB;;;;;IA8DlB5I,4DAJJ,cAGC,cACwC;IAAAA,oDAAA,GAAU;IACnDA,0DADmD,EAAM,EACnD;;;;IADmCA,uDAAA,GAAU;IAAVA,+DAAA,CAAAukB,OAAA,CAAU;;;;;IALnDvkB,4DALJ,kBAIC,aACwC;IAArCA,oDAAA,MAAqC;IAAUA,0DAAA,EAAK;IACpDA,wDAAA,IAAAwkB,6DAAA,kBAGC;IAGLxkB,0DAAA,EAAU;;;;IALeA,uDAAA,GAAsB;IAAtBA,wDAAA,YAAA0I,MAAA,CAAA4b,IAAA,CAAAjd,QAAA,IAAArH,6DAAA,IAAAiC,GAAA,EAAsB;;;;;IAM/CjC,4DAAA,kBAIC;IACGA,uDAAA,0BAMmB;IACvBA,0DAAA,EAAU;;;;IALFA,uDAAA,EAAe;IAGfA,wDAHA,QAAA0I,MAAA,CAAAqS,OAAA,CAAe,UAAArS,MAAA,CAAA4b,IAAA,CAAA1Z,MAAA,IAAAlC,MAAA,CAAA4b,IAAA,CAAAliB,EAAA,CACiB,aAAAsG,MAAA,CAAArB,QAAA,CACX,YAAArH,6DAAA,IAAAmC,GAAA,EACgC;;;;;;IAtFrEnC,qEAAA,GAA4C;IACxCA,4DAAA,iBAQC;IACGA,wDAAA,IAAAykB,6DAAA,4BAIC;IACDzkB,4DAAA,gBAMC;IAFGA,wDAAA,mBAAA0kB,qEAAA;MAAA1kB,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAiP,KAAA,CAAAlR,IAAA,EAAY;IAAA,EAAC;IAGtBzG,4DAAA,eAAU;IAAAA,oDAAA,iBAAU;IACxBA,0DADwB,EAAW,EAC1B;IACTA,4DAAA,gBAQC;IAFGA,wDAAA,mBAAA2kB,qEAAA;MAAA3kB,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAkc,SAAA,CAAAne,IAAA,EAAgB;IAAA,EAAC;IAG1BzG,4DAAA,eAAU;IAAAA,oDAAA,GAER;IAEVA,0DAFU,EAAW,EACR,EACH;IAKFA,4DAJR,cAEC,mBAC8C,cACG;IACtCA,oDAAA,IACJ;IACJA,0DADI,EAAK,EACC;IAENA,4DADJ,mBAAiD,cACb;IAAAA,oDAAA,eAAO;IAAAA,0DAAA,EAAK;IAExCA,4DADJ,eAAyC,gBAC3B;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAW;IAC3BA,4DAAA,SAAQ;IAARA,oDAAA,OAAQ;IACZA,0DADuB,EAAI,EACrB;IAEFA,4DADJ,eAAyC,gBAC3B;IAAAA,oDAAA,YAAI;IAAAA,0DAAA,EAAW;IACzBA,4DAAA,SAAG;IACCA,oDAAA,IACJ;IACJA,0DADI,EAAI,EACF;IAEFA,4DADJ,eAAyC,gBAC3B;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAW;IAC1BA,4DAAA,SAAG;IAAAA,oDAAA,IAAgD;IAE3DA,0DAF2D,EAAI,EACrD,EACA;IAcVA,wDAbA,KAAA6kB,uDAAA,sBAIC,KAAAC,uDAAA,sBAaA;IASL9kB,0DAAA,EAAM;IAIFA,4DAHJ,eAEC,kBAQI;IADGA,wDAAA,mBAAA+kB,sEAAA;MAAA/kB,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA0I,MAAA,CAAAsc,MAAA,IAAAtc,MAAA,CAAAsc,MAAA;MAAA,OAAAhlB,yDAAA,CAA2B0I,MAAA,CAAAuc,YAAA,CAAAxe,IAAA,CAAAiC,MAAA,CAAAsc,MAAA,CAAyB;IAAA,EAAC;IAGjDhlB,4DADJ,eAA8C,oBACf;IAAAA,oDAAA,IAEzB;IAAAA,0DAAA,EAAW;IACbA,4DAAA,SAAQ;IAARA,oDAAA,OAAQ;IAMpBA,0DAHY,EAAI,EACF,EACD,EACP;;;;;IA3GFA,uDAAA,EAAqC;IAIrCA,yDAJA,YAAA0I,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,kBAAAF,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,CAAA+B,MAAA,CAAqC,SAAAjC,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,kBAAAF,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,CAAA+B,MAAA,CACH,aAAAjC,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,kBAAAF,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,CAAA+B,MAAA,EACG,WAAAjC,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,kBAAAF,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,CAAA+B,MAAA,EACF,sBAAAjC,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,kBAAAF,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,CAAA+B,MAAA,EACW;IAIzC3K,uDAAA,EAAyB;IAAzBA,wDAAA,SAAA0I,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,kBAAAF,MAAA,CAAA4b,IAAA,CAAA1b,MAAA,CAAA+B,MAAA,CAAyB;IAgB1B3K,uDAAA,GAA+B;IAC/BA,yDADA,sBAAA0I,MAAA,CAAAwc,GAAA,CAA+B,aAAAxc,MAAA,CAAAwc,GAAA,CACT;IAIZllB,uDAAA,GAER;IAFQA,+DAAA,CAAA0I,MAAA,CAAAwc,GAAA,kCAER;IAQEllB,uDAAA,GACJ;IADIA,gEAAA,MAAA0I,MAAA,CAAA4b,IAAA,CAAArf,YAAA,IAAAyD,MAAA,CAAA4b,IAAA,CAAApf,IAAA,IAAAwD,MAAA,CAAA4b,IAAA,CAAAliB,EAAA,MACJ;IAWQpC,uDAAA,IACJ;IADIA,gEAAA,MAAA0I,MAAA,CAAA4b,IAAA,CAAArf,YAAA,IAAAyD,MAAA,CAAA4b,IAAA,CAAApf,IAAA,IAAAwD,MAAA,CAAA4b,IAAA,CAAAliB,EAAA,MACJ;IAIGpC,uDAAA,GAAgD;IAAhDA,+DAAA,EAAA0I,MAAA,CAAA4b,IAAA,CAAAvP,IAAA,kBAAArM,MAAA,CAAA4b,IAAA,CAAAvP,IAAA,CAAA9P,YAAA,MAAAyD,MAAA,CAAA4b,IAAA,CAAAvP,IAAA,kBAAArM,MAAA,CAAA4b,IAAA,CAAAvP,IAAA,CAAA7P,IAAA,EAAgD;IAKtDlF,uDAAA,EAA2B;IAA3BA,wDAAA,SAAA0I,MAAA,CAAA4b,IAAA,CAAAjd,QAAA,kBAAAqB,MAAA,CAAA4b,IAAA,CAAAjd,QAAA,CAAAsD,MAAA,CAA2B;IAc3B3K,uDAAA,EAAe;IAAfA,wDAAA,UAAA0I,MAAA,CAAA6D,QAAA,CAAe;IAkBhBvM,uDAAA,GAAwB;IAAxBA,yDAAA,YAAA0I,MAAA,CAAAsc,MAAA,CAAwB;IAKOhlB,uDAAA,GAEzB;IAFyBA,+DAAA,CAAA0I,MAAA,CAAAsc,MAAA,oBAEzB;IAEIhlB,uDAAA,GAAM;IAANA,uDAAA,CAAA0I,MAAA,CAAAsc,MAAA,CAAM;;;;;;IAYpBhlB,4DAJJ,cAGC,YAC0C;IAAvCA,oDAAA,MAAuC;IAG3CA,0DADI,EAAI,EACF;;;AAIZ,MAAOgd,oBAAoB;EA7IjC3Z,YAAA;IA+IoB,KAAA6hB,GAAG,GAAY,KAAK;IACpB,KAAAF,MAAM,GAAY,KAAK;IACvB,KAAAzY,QAAQ,GAAY,KAAK;IAExB,KAAAoL,KAAK,GAAG,IAAI5Y,uDAAY,EAAQ;IAChC,KAAA6lB,SAAS,GAAG,IAAI7lB,uDAAY,EAAQ;IACpC,KAAAkmB,YAAY,GAAG,IAAIlmB,uDAAY,EAAQ;IAEjD,KAAAgc,OAAO,GAAG,EAAE;IACZ,KAAA1T,QAAQ,GAAoB,EAAE;;EAE9B9C,WAAWA,CAACC,OAAsB;IACrC,IAAIA,OAAO,CAAC8f,IAAI,IAAI,IAAI,CAACA,IAAI,EAAE;MAC3B,IAAI,CAACa,aAAa,EAAE;IACxB;EACJ;EAEQA,aAAaA,CAAA;IACjB,IAAI,CAACpK,OAAO,GAAG,IAAI,CAACuJ,IAAI,CAACvP,IAAI,CAACnK,MAAM;IACpC,IAAI,CAACvD,QAAQ,GAAG,CACZ;MACInG,QAAQ,EAAE,IAAI,CAACojB,IAAI,CAAC1Z,MAAM,IAAI,IAAI,CAAC0Z,IAAI,CAACliB,EAAE;MAC1CoK,OAAO,EAAEjE,sFAAeA;KAC3B,CACJ;EACL;EAAC,QAAA7B,CAAA;qBA3BQsW,oBAAoB;EAAA;EAAA,QAAA/V,EAAA;UAApB+V,oBAAoB;IAAA9V,SAAA;IAAAC,MAAA;MAAAmd,IAAA;MAAAY,GAAA;MAAAF,MAAA;MAAAzY,QAAA;IAAA;IAAAnF,OAAA;MAAAuQ,KAAA;MAAAiN,SAAA;MAAAK,YAAA;IAAA;IAAA5d,QAAA,GAAArH,kEAAA;IAAAwH,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBA3EDC,SAAA,4EAAW;;;;;;;;;;iBAwDfA,SAAA,0IACoB;;;;;;;;;;;;;;;;;;;iBAFhBA,SAAA,mEACJ0X,MACoB,QACxB;;;;;;;;;;iBAxCiC1X,SAAA,2EAAU;;;;;;;;;;iBAkDZA,SAAA,qGAEvC;;;;;;QAPR1N,wDAjHA,IAAAqlB,4CAAA,4BAA4C,IAAAC,2CAAA,gCAAAtlB,oEAAA,CAiHnB;;;;QAjHEA,wDAAZ,SAAA8H,GAAA,CAAAwc,IAAA,CAAY,aAAAiB,aAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BqB;AACP;AACA;AAEA;AACH;AACzB;;;;;;;;;;;IA0EpBvlB,qEAAA,GAA+B;IAC3BA,oDAAA,GAEJ;;;;;;;IAFIA,uDAAA,EAEJ;IAFIA,gEAAA,MAAAA,yDAAA,OAAAM,MAAA,CAAA8E,KAAA,EAAA9E,MAAA,CAAAS,WAAA,eAAAf,yDAAA,OAAAM,MAAA,CAAAsD,GAAA,EAAAtD,MAAA,CAAAS,WAAA,OAEJ;;;;;IACAf,qEAAA,GAA8B;IAAAA,oDAAA,cAAO;;;;;;;IAOrCA,4DALJ,cAIC,QACM;IAAAA,oDAAA,GAAU;IAAAA,0DAAA,EAAI;IACjBA,4DAAA,iBAMC;IADGA,wDAAA,mBAAA0lB,oEAAA;MAAA,MAAAnB,OAAA,GAAAvkB,2DAAA,CAAAuB,GAAA,EAAA0I,SAAA;MAAA,MAAA3J,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAA6V,UAAA,CAAAoO,OAAA,EAAiB,KAAK,CAAC;IAAA,EAAC;IAEjCvkB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAEvBA,0DAFuB,EAAW,EACrB,EACP;;;;IAVCA,uDAAA,GAAU;IAAVA,+DAAA,CAAAukB,OAAA,CAAU;;;;;;IAYbvkB,4DADJ,cAAqD,WACtC;IAAXA,oDAAA,MAAW;IAAeA,0DAAA,EAAO;IACjCA,4DAAA,iBAMC;IADGA,wDAAA,mBAAA2lB,oEAAA;MAAA3lB,2DAAA,CAAAuf,GAAA;MAAA,MAAAjf,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAAuR,UAAA,CAAW;QAAA+T,QAAA,EAAY;MAAK,CAAE,CAAC;IAAA,EAAC;IAEzC5lB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAEvBA,0DAFuB,EAAW,EACrB,EACP;;;AAIZ,MAAOid,2BAA4B,SAAQrd,yDAAY;EAOzD,IAAWwM,OAAOA,CAAA;IACd,OAAO,IAAI,CAACyZ,MAAM,CAACvU,IAAI,CAAC4E,KAAK,CAAC9J,OAAO;EACzC;EAEA,IAAWhH,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACygB,MAAM,CAACvU,IAAI,CAAC4E,KAAK,CAACpV,IAAI;EACtC;EAEA,IAAW8C,GAAGA,CAAA;IACV,MAAM;MAAE9C,IAAI;MAAEuE,QAAQ;MAAE+G;IAAO,CAAE,GAAG,IAAI,CAACyZ,MAAM,CAACvU,IAAI,CAAC4E,KAAK;IAC1D,IAAI9J,OAAO,EAAE,OAAOqZ,kDAAQ,CAAC3kB,IAAI,CAAC;IAClC,OAAOA,IAAI,GAAGuE,QAAQ,GAAG,EAAE,GAAG,IAAI;EACtC;EAEA,IAAWtE,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACoC,SAAS,CAACpC,WAAW;EACrC;EAIAsC,YACYyiB,OAAuB,EACvBD,MAA0B,EAC1B1iB,SAA0B;IAElC,KAAK,EAAE;IAJC,KAAA2iB,OAAO,GAAPA,OAAO;IACP,KAAAD,MAAM,GAANA,MAAM;IACN,KAAA1iB,SAAS,GAATA,SAAS;IA7BL,KAAA6N,IAAI,GAAmB,MAAM;IAC5B,KAAA+U,UAAU,GAAG,IAAIhnB,uDAAY,EAAkB;IAChD,KAAA4T,OAAO,GAAG,IAAI,CAACkT,MAAM,CAAClT,OAAO;IAC7B,KAAAd,UAAU,GAAImU,CAAC,IAAK,IAAI,CAACH,MAAM,CAAChU,UAAU,CAACmU,CAAC,CAAC;IAC7C,KAAA7P,UAAU,GAAG,CAAC8P,CAAC,EAAEzP,CAAC,KAAK,IAAI,CAACqP,MAAM,CAAC1P,UAAU,CAAC8P,CAAC,EAAEzP,CAAC,CAAC;IAoBnD,KAAA0P,UAAU,GAAG,MAAM,IAAI,CAACJ,OAAO,CAACvf,IAAI,CAAC2W,yEAAoB,CAAC;EAQ1E;EAAC,QAAAxW,CAAA;qBAjCQuW,2BAA2B,EAAAjd,+DAAA,CAAA4G,0EAAA,GAAA5G,+DAAA,CAAA6G,qEAAA,GAAA7G,+DAAA,CAAA8G,4DAAA;EAAA;EAAA,QAAAG,EAAA;UAA3BgW,2BAA2B;IAAA/V,SAAA;IAAAC,MAAA;MAAA6J,IAAA;IAAA;IAAA5J,OAAA;MAAA2e,UAAA;IAAA;IAAA1e,QAAA,GAAArH,wEAAA;IAAAwH,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAxE3BC,SAAA,0EAED;;;;;;;;;;iBAUKA,SAAA,sEAED;;;;;;;;;;iBASCA,SAAA,uEAED;;;;;;;;;;iBAiCWA,SAAA,gFAAe;;;;;;QAjE9B1N,4DAJJ,iBAGC,gBAQI;QAFGA,wDAAA,mBAAAmmB,6DAAA;UAAA,OAASre,GAAA,CAAAoe,UAAA,EAAY;QAAA,EAAC;QAL1BlmB,oDAAA,MAOC;QAEDA,0DAAA,EAAS;QAELA,4DADJ,aAA+B,gBAS1B;QAFGA,wDAAA,mBAAAomB,6DAAA;UAAAte,GAAA,CAAAkJ,IAAA,GAAgB,KAAK;UAAA,OAAElJ,GAAA,CAAAie,UAAA,CAAAtf,IAAA,CAAAqB,GAAA,CAAAkJ,IAAA,CAAqB;QAAA,EAAC;QANjDhR,oDAAA,MAQC;QAEDA,0DAAA,EAAS;QACTA,4DAAA,gBAQC;QAFGA,wDAAA,mBAAAqmB,6DAAA;UAAAve,GAAA,CAAAkJ,IAAA,GAAgB,MAAM;UAAA,OAAElJ,GAAA,CAAAie,UAAA,CAAAtf,IAAA,CAAAqB,GAAA,CAAAkJ,IAAA,CAAqB;QAAA,EAAC;QANlDhR,oDAAA,MAQC;QAITA,0DAFQ,EAAS,EACP,EACA;QAMNA,4DALJ,iBAGC,cAEyB;QAAAA,oDAAA,IAAgC;;QAAAA,0DAAA,EAAM;QAC5DA,4DAAA,eAAsB;QAKlBA,wDAJA,KAAAsmB,oDAAA,2BAA+B,KAAAC,oDAAA,2BAID;QAClCvmB,0DAAA,EAAM;QACNA,wDAAA,KAAAwmB,2CAAA,kBAIC;;QAYDxmB,wDAAA,KAAAymB,2CAAA,kBAAqD;;QAYzDzmB,0DAAA,EAAU;;;;;QA5DEA,uDAAA,GAAgC;QAAhCA,yDAAA,YAAA8H,GAAA,CAAAkJ,IAAA,WAAgC;QAWhChR,uDAAA,GAAiC;QAAjCA,yDAAA,YAAA8H,GAAA,CAAAkJ,IAAA,YAAiC;QAanBhR,uDAAA,GAAgC;QAAhCA,+DAAA,CAAAA,yDAAA,QAAA8H,GAAA,CAAA1C,KAAA,gBAAgC;QAEnCpF,uDAAA,GAAc;QAAdA,wDAAA,UAAA8H,GAAA,CAAAsE,OAAA,CAAc;QAIdpM,uDAAA,EAAa;QAAbA,wDAAA,SAAA8H,GAAA,CAAAsE,OAAA,CAAa;QAKXpM,uDAAA,EAAoC;QAApCA,wDAAA,cAAA0mB,OAAA,GAAA1mB,yDAAA,SAAA8H,GAAA,CAAA6K,OAAA,oBAAA+T,OAAA,CAAArf,QAAA,KAAArH,6DAAA,KAAAiC,GAAA,EAAoC;QAavCjC,uDAAA,GAAiC;QAAjCA,wDAAA,UAAA2mB,OAAA,GAAA3mB,yDAAA,SAAA8H,GAAA,CAAA6K,OAAA,oBAAAgU,OAAA,CAAAf,QAAA,CAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGI;AACjB;AACA;AAEmC;AACxB;AACxB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;IAmBrB5lB,4DAAA,iBAOC;IADGA,wDAAA,mBAAA8mB,+DAAA;MAAA9mB,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAiP,KAAA,EAAO;IAAA,EAAC;IAEjB3X,4DAAA,eAAU;IAAAA,oDAAA,0BAAmB;IACjCA,0DADiC,EAAW,EACnC;;;;;IA0BGA,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAA+mB,MAAA,CAAa;IAEb/mB,uDAAA,EACJ;IADIA,gEAAA,MAAA+mB,MAAA,CAAA9hB,YAAA,IAAA8hB,MAAA,CAAA7hB,IAAA,MACJ;;;;;;IAbJlF,4DALJ,yBAIC,qBAQI;IAJGA,wDAAA,2BAAAgnB,oFAAA9H,MAAA;MAAAlf,2DAAA,CAAA+I,GAAA;MAAA,MAAAL,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAAue,SAAA,CAAA/H,MAAA,CAAiB;IAAA,EAAC;IAKnClf,wDAAA,IAAAknB,4DAAA,yBAGC;;IAITlnB,0DADI,EAAa,EACA;;;;IAbTA,uDAAA,EAAkB;IAElBA,wDAFA,YAAA0I,MAAA,CAAA6C,MAAA,CAAkB,mBAAAvL,6DAAA,IAAAiC,GAAA,EAEqB;IAKnBjC,uDAAA,EAAkB;IAAlBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAA8C,OAAA,EAAkB;;;;;IAsBtCxL,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAAmnB,MAAA,CAAa;IAEbnnB,uDAAA,EACJ;IADIA,gEAAA,MAAAmnB,MAAA,CAAAliB,YAAA,IAAAkiB,MAAA,CAAAjiB,IAAA,MACJ;;;;;;IAfJlF,4DALJ,yBAIC,qBAUI;;;;IANGA,wDAAA,2BAAAonB,oFAAAlI,MAAA;MAAAlf,2DAAA,CAAAyf,GAAA;MAAA,MAAA/W,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAA2e,WAAA,CAAAnI,MAAA,CAAmB;IAAA,EAAC;IAOrClf,wDAAA,IAAAsnB,4DAAA,yBAGC;;IAITtnB,0DADI,EAAa,EACA;;;;;IAfTA,uDAAA,EAA4B;IAG5BA,wDAHA,YAAAA,yDAAA,OAAA0I,MAAA,CAAA4C,QAAA,EAA4B,mBAAAtL,6DAAA,KAAAiC,GAAA,EAEW,kBAAAslB,OAAA,GAAAvnB,yDAAA,OAAA0I,MAAA,CAAA4C,QAAA,oBAAAic,OAAA,CAAAtiB,YAAA,OAAAsiB,OAAA,GAAAvnB,yDAAA,OAAA0I,MAAA,CAAA4C,QAAA,oBAAAic,OAAA,CAAAriB,IAAA,EAItC;IAGmBlF,uDAAA,GAAoB;IAApBA,wDAAA,YAAAA,yDAAA,QAAA0I,MAAA,CAAAiD,SAAA,EAAoB;;;;;IAyBhC3L,4DAAA,cAGC;IACGA,oDAAA,GAIA;;IAAAA,4DAAA,eAAwB;IAACA,oDAAA,UAAE;IAC/BA,0DAD+B,EAAO,EAChC;;;;;IALFA,uDAAA,EAIA;IAJAA,gEAAA,OAAAwnB,OAAA,GAAAxnB,yDAAA,OAAAynB,MAAA,CAAAzS,SAAA,oBAAAwS,OAAA,CAAAviB,YAAA,MAIA;;;;;IATRjF,4DAJJ,qBAGC,cACsC;IAC/BA,wDAAA,IAAA0nB,kEAAA,kBAGC;IAOD1nB,4DAAA,UAAK;IACDA,oDAAA,GACJ;IAERA,0DAFQ,EAAM,EACJ,EACG;;;;;IAjBTA,wDAAA,UAAAynB,MAAA,CAAArlB,EAAA,CAAgB;IAKPpC,uDAAA,GAAgB;IAAhBA,wDAAA,SAAA0I,MAAA,CAAA+R,UAAA,CAAgB;IASjBza,uDAAA,GACJ;IADIA,gEAAA,MAAAynB,MAAA,CAAAxiB,YAAA,IAAAwiB,MAAA,CAAAviB,IAAA,MACJ;;;;;;IAzBZlF,4DALJ,yBAIC,qBAQI;;IAJGA,wDAAA,2BAAA2nB,oFAAAzI,MAAA;MAAAlf,2DAAA,CAAA4nB,GAAA;MAAA,MAAAlf,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAAmJ,UAAA,CAAW;QAAAyC,OAAA,EAAA4K;MAAA,CAAmB,CAAC;IAAA,EAAC;IAKjDlf,wDAAA,IAAA6nB,4DAAA,yBAGC;;IAkBT7nB,0DADI,EAAa,EACA;;;;;IA3BTA,uDAAA,EAAsC;IAEtCA,wDAFA,aAAA8nB,OAAA,GAAA9nB,yDAAA,OAAA0I,MAAA,CAAAiK,OAAA,oBAAAmV,OAAA,CAAAxT,OAAA,CAAsC,mBAAAtU,6DAAA,IAAAiC,GAAA,EAEC;IAKnBjC,uDAAA,GAAiB;IAAjBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAAqf,MAAA,EAAiB;;;;;IAoC7C/nB,4DADJ,cAA+D,uBACd;IAA7CA,oDAAA,MAA6C;IAGjDA,0DADI,EAAe,EACb;;;;;;IAOEA,4DALR,cAGC,cAC6B,YACV;IAAZA,oDAAA,MAAY;IAAUA,0DAAA,EAAQ;IAC9BA,4DAAA,uBAMC;IAHGA,wDAAA,2BAAAgoB,2EAAA9I,MAAA;MAAAlf,2DAAA,CAAA8K,GAAA;MAAA,MAAApC,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAA4I,IAAA,CAAAE,UAAA,CAAgB;QAAA1Q,IAAA,EAAAoe;MAAA,CAAgB,CAAC;IAAA,EAAC;IAI3Dlf,0DADK,EAAe,EACd;IAEFA,4DADJ,cAA0B,YACV;IAAZA,oDAAA,MAAY;IAAQA,0DAAA,EAAQ;IAC5BA,uDAAA,2BAQmB;IAE3BA,0DADI,EAAM,EACJ;;;;;IAlBMA,uDAAA,GAA2B;IAG3BA,wDAHA,YAAA0I,MAAA,CAAA4I,IAAA,CAAA4E,KAAA,CAAApV,IAAA,CAA2B,mBAAAd,6DAAA,IAAAiC,GAAA,EAEY,aAAAyG,MAAA,CAAAuf,QAAA,CAClB;IAOrBjoB,uDAAA,GAAgC;IAIhCA,wDAJA,UAAAwnB,OAAA,GAAA9e,MAAA,CAAA4I,IAAA,CAAAhN,GAAA,2BAAAkjB,OAAA,CAAAtR,KAAA,CAAgC,gBACjB,WACL,YACC,aAAAxN,MAAA,CAAAuf,QAAA,CACU;;;;;;IAiC7BjoB,4DAJJ,cAGC,cACwC;IAAAA,oDAAA,GAAU;IAAAA,0DAAA,EAAM;IACrDA,4DAAA,uBAMC;;IAFGA,wDAAA,2BAAAkoB,qFAAAhJ,MAAA;MAAA,MAAAiJ,QAAA,GAAAnoB,2DAAA,CAAAgL,IAAA,EAAAf,SAAA;MAAA,MAAAvB,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAAyN,UAAA,CAAAgS,QAAA,EAAAjJ,MAAA,CAAwB;IAAA,EAAC;IAGlDlf,0DADK,EAAe,EACd;;;;;;IARmCA,uDAAA,GAAU;IAAVA,+DAAA,CAAAmoB,QAAA,CAAU;IAE3CnoB,uDAAA,EAEC;IAEDA,wDAJA,eAAAwnB,OAAA,GAAAxnB,yDAAA,OAAA0I,MAAA,CAAAiK,OAAA,oBAAA6U,OAAA,CAAAngB,QAAA,KAAArH,6DAAA,IAAAmC,GAAA,GAAAuJ,QAAA,CAAAyc,QAAA,EAEC,mBAAAnoB,6DAAA,IAAAiC,GAAA,EAEsC;;;;;IAX/CjC,4DALJ,kBAIC,aACwC;IAArCA,oDAAA,MAAqC;IAAIA,0DAAA,EAAK;IAC9CA,wDAAA,IAAAooB,8CAAA,kBAGC;;IAULpoB,0DAAA,EAAU;;;;IAZeA,uDAAA,GAAmB;IAAnBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAArB,QAAA,EAAmB;;;;;;IAkB5CrH,4DAJJ,cAGC,iBAQI;IAFGA,wDAAA,mBAAAqoB,6DAAA;MAAAroB,2DAAA,CAAAqL,IAAA;MAAA,MAAA3C,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAiP,KAAA,EAAO;IAAA,EAAC;IALrB3X,oDAAA,OAOC;IAGLA,0DADI,EAAS,EACP;;;AAGR,MAAOkd,oBAAoB;EA6B7B,IAAW5R,QAAQA,CAAA;IACf,OAAO,IAAI,CAAC9H,IAAI,CAAC8H,QAAQ;EAC7B;EACA,IAAWA,QAAQA,CAACM,GAAG;IACnB,IAAI,CAACpI,IAAI,CAAC8H,QAAQ,GAAGM,GAAG;EAC5B;EAEA,IAAWL,MAAMA,CAAA;IACb,OAAO,IAAI,CAAC/H,IAAI,CAAC+H,MAAM;EAC3B;EACA,IAAWA,MAAMA,CAAC+c,GAAG;IACjB,IAAI,CAAC9kB,IAAI,CAAC+H,MAAM,GAAG+c,GAAG;EAC1B;EAOA,IAAWC,kBAAkBA,CAAA;IACzB,OAAO,CAAC,CAAC,IAAI,CAACplB,SAAS,CAACmB,GAAG,CAAC,8BAA8B,CAAC;EAC/D;EACA,IAAWkkB,aAAaA,CAAA;IACpB,OACI,IAAI,CAACD,kBAAkB,IACvB,CAAC,CAAC,IAAI,CAACplB,SAAS,CAACmB,GAAG,CAAC,yBAAyB,CAAC;EAEvD;EAEA,IAAWmkB,QAAQA,CAAA;IACf,OAAOhD,kDAAQ,CACXoB,kDAAO,CACHliB,IAAI,CAACC,GAAG,EAAE,EACV,IAAI,CAACzB,SAAS,CAACmB,GAAG,CAAC,4BAA4B,CAAC,IAAI,EAAE,CACzD,CACJ;EACL;EAEA,IAAW2jB,QAAQA,CAAA;IACf,OAAO,IAAI,CAAC9kB,SAAS,CAACmB,GAAG,CAAC,sBAAsB,CAAC;EACrD;EAEA,IAAWmW,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACtX,SAAS,CAACmB,GAAG,CAAC,gBAAgB,CAAC;EAC/C;EAEAjB,YAEYqlB,WAAoD,EACpD7C,MAA0B,EAC1BriB,IAAyB,EACzBL,SAA0B;IAH1B,KAAAulB,WAAW,GAAXA,WAAW;IACX,KAAA7C,MAAM,GAANA,MAAM;IACN,KAAAriB,IAAI,GAAJA,IAAI;IACJ,KAAAL,SAAS,GAATA,SAAS;IA7Ed,KAAAwlB,SAAS,GAAG,KAAK;IACR,KAAAhW,OAAO,GAAG,IAAI,CAACkT,MAAM,CAAClT,OAAO;IAC7B,KAAAtL,QAAQ,GAAG,IAAI,CAACwe,MAAM,CAACxe,QAAQ;IAC/B,KAAAsE,SAAS,GAAG,IAAI,CAACnI,IAAI,CAAColB,gBAAgB;IACtC,KAAAtX,IAAI,GAAG,IAAI,CAACuU,MAAM,CAACvU,IAAI;IACvB,KAAA9F,OAAO,GAAG,IAAI,CAAChI,IAAI,CAACqlB,WAAW;IAE/B,KAAAd,MAAM,GAAGzY,oDAAa,CAAC,CACnC,IAAI,CAAC9L,IAAI,CAACslB,aAAa,EACvB,IAAI,CAACtlB,IAAI,CAACqP,eAAe,CAC5B,CAAC,CAAC/O,IAAI,CACHrE,oDAAG,CAAC,CAAC,CAAC8L,MAAM,EAAEK,GAAG,CAAC,KAAI;MAClB,MAAMmd,UAAU,GAAG,IAAI,CAACtO,UAAU,GAC5B,IAAI,CAACjX,IAAI,CAACwlB,eAAe,CAACzd,MAAM,CAAC,GACjC,IAAI,CAAC/H,IAAI,CAACylB,iBAAiB,CAACrd,GAAG,CAAC;MACtC,MAAMsd,eAAe,GAAGH,UAAU,CAACjZ,MAAM,CACpCqZ,GAAG,IAAK,CAACA,GAAG,CAACC,IAAI,CAAC1d,QAAQ,CAAC,SAAS,CAAC,CACzC;MACD,OAAOwd,eAAe,CAAC9V,IAAI,CACvB,CAACC,CAAC,EAAEC,CAAC,KACDD,CAAC,CAAC2B,SAAS,CAACzB,aAAa,CAACD,CAAC,CAAC0B,SAAS,CAAC,IACtC,CAAC3B,CAAC,CAACpO,YAAY,IAAI,EAAE,EAAEsO,aAAa,CAACD,CAAC,CAACrO,YAAY,IAAI,EAAE,CAAC,CACjE;IACL,CAAC,CAAC,CACL;IAgBe,KAAA0S,KAAK,GAAG,MAAM,IAAI,CAAC+Q,WAAW,CAACW,OAAO,EAAE;IACxC,KAAAxX,UAAU,GAAImU,CAAC,IAAK,IAAI,CAACH,MAAM,CAAChU,UAAU,CAACmU,CAAC,CAAC;IAC7C,KAAA7P,UAAU,GAAG,CAAC8P,CAAC,EAAEzP,CAAC,KAAK,IAAI,CAACqP,MAAM,CAAC1P,UAAU,CAAC8P,CAAC,EAAEzP,CAAC,CAAC;IACnD,KAAA8S,QAAQ,GAAIC,CAAC,IAAI,CAAE,CAAC;IAoChC,IAAI,CAACZ,SAAS,GAAG,CAAC,CAAC,IAAI,CAACD,WAAW;EACvC;EAAC,QAAAhiB,CAAA;qBAnFQwW,oBAAoB,EAAAld,+DAAA,CAAA4G,8EAAA,MAAA5G,+DAAA,CAAA6G,qEAAA,GAAA7G,+DAAA,CAAA8G,+FAAA,GAAA9G,+DAAA,CAAA+G,4DAAA;EAAA;EAAA,QAAAE,EAAA;UAApBiW,oBAAoB;IAAAhW,SAAA;IAAAC,MAAA;MAAAqiB,WAAA;IAAA;IAAAhiB,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAjM2BC,SAAA,6EAAY;;;;;;;;;;iBAQdA,SAAA,wEAAO;;;;;;;;;;iBAElBA,SAAA,wEAAQ;;;;;;;;;;iBAoFvBA,SAAA,qEAAI;;;;;;;;;;;;;;;;iBA6CiBA,SAAA,mEACjC,eAAqC,kBACzC;;;;;;;;;;;;;;;;iBAE6CA,SAAA,mEACrC,eAAyC,kBAC7C;;;;;;;;;;iBA5HqBA,SAAA,2EAAU;;;;;;;;;;iBA4CVA,SAAA,0EAAS;;;;;;;;;;iBAwCeA,SAAA,yEAE7C;;;;;;;;;;iBAQgBA,SAAA,2EAAU;;;;;;;;;;kBAUVA,SAAA,yEAAQ;;;;;;;;;;kBAmCSA,SAAA,qEAAI;;;;;;;;;;kBA2B5CA,SAAA,gFAED;;;;;;QAzMA1N,4DAHJ,cAEC,cAC4B;QACrBA,wDAAA,IAAAypB,sCAAA,qBAOC;QAGLzpB,0DAAA,EAAM;QACNA,4DAAA,aAAgD;QAAhDA,oDAAA,MAAgD;QAAYA,0DAAA,EAAK;QACjEA,uDAAA,cAA0B;QAC9BA,0DAAA,EAAM;QAMEA,4DALR,eAGC,kBACoB,aAC6B;QAA1CA,oDAAA,MAA0C;QAAOA,0DAAA,EAAK;QAElDA,4DADJ,eAA+C,iBAChB;QAA3BA,oDAAA,OAA2B;QAAQA,0DAAA,EAAQ;QAC3CA,wDAAA,KAAA0pB,+CAAA,6BAIC;;QAiBD1pB,wDAAA,KAAA2pB,+CAAA,8BAIC;;QAmBD3pB,wDAAA,KAAA4pB,+CAAA,6BAIC;QA+BL5pB,0DAAA,EAAM;QAIFA,4DADJ,eAAkC,aAClB;QAAZA,oDAAA,OAAY;QAAIA,0DAAA,EAAQ;QACxBA,4DAAA,wBAIC;QACGA,oDAAA,IACJ;;QACJA,0DADI,EAAe,EACb;QAQNA,wDANA,KAAA6pB,oCAAA,kBAA+D,KAAAC,oCAAA,kBAS9D;QAwBL9pB,0DAAA,EAAU;QAENA,4DADJ,mBAAqC,cACI;QAArCA,oDAAA,OAAqC;;QAErCA,0DAAA,EAAK;QAEDA,4DADJ,eAA+B,eACc;QAAzCA,oDAAA,OAAyC;;QAEzCA,0DAAA,EAAM;QACNA,4DAAA,wBAKC;;QAFGA,wDAAA,2BAAA+pB,qEAAA7K,MAAA;UAAA,OAAiBpX,GAAA,CAAA+J,UAAA,CAAW;YAAA+T,QAAA,EAAA1G;UAAA,CAAoB,CAAC;QAAA,EAAC;QAK9Dlf,0DAFQ,EAAe,EACb,EACA;QACVA,wDAAA,KAAAgqB,wCAAA,sBAIC;;QAgBLhqB,0DAAA,EAAO;QACPA,wDAAA,KAAAiqB,oCAAA,kBAGC;;;;;;;QAzLYjqB,uDAAA,GAAe;QAAfA,wDAAA,SAAA8H,GAAA,CAAA6gB,SAAA,CAAe;QAWxB3oB,uDAAA,GAAkB;QAAlBA,wDAAA,cAAA8H,GAAA,CAAAwJ,IAAA,CAAkB;QASLtR,uDAAA,GAA6C;QAA7CA,wDAAA,SAAA8H,GAAA,CAAA2S,UAAA,MAAAyP,OAAA,GAAAlqB,yDAAA,SAAA8H,GAAA,CAAA0D,OAAA,oBAAA0e,OAAA,CAAAvf,MAAA,EAA6C;QAqB7C3K,uDAAA,GAAoD;QAApDA,wDAAA,UAAA8H,GAAA,CAAA2S,UAAA,MAAA8M,OAAA,GAAAvnB,yDAAA,SAAA8H,GAAA,CAAA6D,SAAA,oBAAA4b,OAAA,CAAA5c,MAAA,MAAoD;QAuBpD3K,uDAAA,GAAkB;QAAlBA,wDAAA,UAAA8H,GAAA,CAAA0hB,WAAA,CAAkB;QAwCnBxpB,uDAAA,GAAe;QAAfA,wDAAA,OAAA8H,GAAA,CAAA2gB,QAAA,CAAe;QAEfzoB,uDAAA,EACJ;QADIA,gEAAA,MAAAA,yDAAA,iCACJ;QAGEA,uDAAA,GAAmB;QAAnBA,wDAAA,SAAA8H,GAAA,CAAA0gB,aAAA,CAAmB;QAQpBxoB,uDAAA,EAAyB;QAAzBA,wDAAA,UAAA8H,GAAA,CAAAwJ,IAAA,CAAA4E,KAAA,CAAA9J,OAAA,CAAyB;QA4B1BpM,uDAAA,GACJ;QADIA,uDAAA,CAAAA,yDAAA,8BACJ;;QAGQA,uDAAA,GACJ;QADIA,uDAAA,CAAAA,yDAAA,kCACJ;;QAGIA,uDAAA,EAAuC;QAEvCA,wDAFA,aAAAmqB,QAAA,GAAAnqB,yDAAA,SAAA8H,GAAA,CAAA6K,OAAA,oBAAAwX,QAAA,CAAAvE,QAAA,CAAuC,mBAAA5lB,6DAAA,KAAAiC,GAAA,EAEA;QAQ9CjC,uDAAA,GAAgC;QAAhCA,wDAAA,UAAAoqB,QAAA,GAAApqB,yDAAA,SAAA8H,GAAA,CAAAT,QAAA,oBAAA+iB,QAAA,CAAAzf,MAAA,CAAgC;QAoBpC3K,uDAAA,GAAe;QAAfA,wDAAA,SAAA8H,GAAA,CAAA6gB,SAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxN2C;AAClC;AACA;AACsC;;;;;;;;;;IA4C3C3oB,4DAJJ,cAGC,eACa;IAAAA,oDAAA,WAAI;IAClBA,0DADkB,EAAW,EACvB;;;;;IACNA,uDAAA,cAKE;;;;IADEA,wDAAA,WAAAqqB,OAAA,CAAAzhB,MAAA,IAAyB;;;;;IAGzB5I,uDAAA,cAGE;;;;;;IAzBdA,4DANJ,aAKC,iBAMI;IADGA,wDAAA,mBAAAsqB,4EAAA;MAAA,MAAAD,OAAA,GAAArqB,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAAkV,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAAoL,UAAA,CAAAF,OAAA,CAAgB;IAAA,EAAC;IAE1BrqB,4DAAA,cAEC;IAaGA,wDAZA,IAAAwqB,yDAAA,kBAGC,IAAAC,yDAAA,kBAQC,IAAAC,iEAAA,gCAAA1qB,oEAAA,CACwB;IAM9BA,0DAAA,EAAM;IAEFA,4DADJ,cAA6C,eACf;IACtBA,oDAAA,GACJ;IAAAA,0DAAA,EAAO;IAEHA,4DADJ,eAAiD,oBACjB;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAW;IAC5CA,4DAAA,aAAmB;IACfA,oDAAA,IAKJ;IAGZA,0DAHY,EAAI,EACF,EACJ,EACD;IACTA,4DAAA,kBAOC;IADGA,wDAAA,mBAAA2qB,6EAAA;MAAA,MAAAN,OAAA,GAAArqB,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAAkV,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAAyF,SAAA,CAAAne,IAAA,CAAA4jB,OAAA,CAAoB;IAAA,EAAC;IAE9BrqB,4DAAA,gBAAU;IAAAA,oDAAA,IAIR;IAEVA,0DAFU,EAAW,EACR,EACR;;;;;;IA5DDA,yDAAA,iBAAAmf,MAAA,CAAA6F,MAAA,KAAAqF,OAAA,CAAAjoB,EAAA,CAAyC;IAa5BpC,uDAAA,GAAgC;IAAhCA,wDAAA,SAAAmf,MAAA,CAAAwD,QAAA,CAAAjX,QAAA,CAAA2e,OAAA,CAAAjoB,EAAA,EAAgC;IAMhCpC,uDAAA,EAA2B;IAAAA,wDAA3B,SAAAqqB,OAAA,CAAAzhB,MAAA,kBAAAyhB,OAAA,CAAAzhB,MAAA,CAAA+B,MAAA,CAA2B,aAAAigB,cAAA,CAAgB;IAa5C5qB,uDAAA,GACJ;IADIA,gEAAA,MAAAqqB,OAAA,CAAAnlB,IAAA,IAAAmlB,OAAA,CAAAjoB,EAAA,gBACJ;IAIQpC,uDAAA,GAKJ;IALIA,gEAAA,OAAAqqB,OAAA,CAAAtV,IAAA,kBAAAsV,OAAA,CAAAtV,IAAA,CAAA9P,YAAA,MAAAolB,OAAA,CAAAtV,IAAA,kBAAAsV,OAAA,CAAAtV,IAAA,CAAA7P,IAAA,uBAKJ;IASRlF,uDAAA,EAAwC;IAAxCA,yDAAA,cAAAmf,MAAA,CAAA0L,WAAA,CAAAR,OAAA,CAAAjoB,EAAA,EAAwC;IAG9BpC,uDAAA,GAIR;IAJQA,+DAAA,CAAAmf,MAAA,CAAA0L,WAAA,CAAAR,OAAA,CAAAjoB,EAAA,mCAIR;;;;;IAlEdpC,4DAAA,YAGC;IACGA,wDAAA,IAAA8qB,mDAAA,mBAKC;;IA4DL9qB,0DAAA,EAAK;;;;IA/DoBA,uDAAA,EAAgB;IAAhBA,wDAAA,YAAAA,yDAAA,OAAAmf,MAAA,CAAAgB,KAAA,EAAgB;;;;;IAP7CngB,qEAAA,GAAkE;IAC9DA,wDAAA,IAAA+qB,8CAAA,gBAGC;;;;;;;;IADI/qB,uDAAA,EAA+B;IAAAA,wDAA/B,UAAAunB,OAAA,GAAAvnB,yDAAA,OAAAmf,MAAA,CAAAgB,KAAA,oBAAAoH,OAAA,CAAA5c,MAAA,CAA+B,aAAAqgB,cAAA,CAAgB;;;;;IAsEpDhrB,4DAAA,cAGC;IACGA,uDAAA,sBAA2C;IAC3CA,4DAAA,YAAsB;IAAAA,oDAAA,iCAA0B;IACpDA,0DADoD,EAAI,EAClD;;;IAFWA,uDAAA,EAAe;IAAfA,wDAAA,gBAAe;;;;;IAS5BA,4DAJJ,cAGC,YACqC;IAC9BA,oDAAA,2DACJ;IACJA,0DADI,EAAI,EACF;;;AAIZ,MAAOmd,iBAAiB;EAiB1B9Z,YAAoBwiB,MAA0B;IAA1B,KAAAA,MAAM,GAANA,MAAM;IAhBV,KAAAb,MAAM,GAAW,EAAE;IACnB,KAAArC,QAAQ,GAAW,EAAE;IACrB,KAAAZ,SAAS,GAAa,EAAE;IACvB,KAAAkJ,QAAQ,GAAG,IAAIlsB,uDAAY,EAAgB;IAC3C,KAAA6lB,SAAS,GAAG,IAAI7lB,uDAAY,EAAgB;IAE7C,KAAAohB,KAAK,GAAG7Q,mDAAa,CAAC,CAClC,IAAI,CAACuW,MAAM,CAAClT,OAAO,EACnB,IAAI,CAACkT,MAAM,CAAC7R,mBAAmB,CAClC,CAAC,CAAClQ,IAAI,CACHrE,mDAAG,CAAC,CAAC,CAAC;MAAEmmB;IAAQ,CAAE,EAAElf,CAAC,CAAC,KAClBA,CAAC,CAACoJ,MAAM,CAAEgK,CAAC,IAAK,CAAC8L,QAAQ,IAAI,IAAI,CAACiF,WAAW,CAAC/Q,CAAC,CAAC1X,EAAE,CAAC,CAAC,CACvD,CACJ;IACe,KAAAqQ,OAAO,GAAG,IAAI,CAACoT,MAAM,CAACpT,OAAO;EAEI;EAE1CoY,WAAWA,CAACK,OAAe;IAC9B,OAAO,IAAI,CAACnJ,SAAS,CAACrW,QAAQ,CAACwf,OAAO,CAAC;EAC3C;EAEOX,UAAUA,CAACjG,IAAkB;IAChC,IAAI,CAAC2G,QAAQ,CAACxkB,IAAI,CAAC6d,IAAI,CAAC;EAC5B;EAAC,QAAA5d,CAAA;qBAzBQyW,iBAAiB,EAAAnd,+DAAA,CAAA4G,qEAAA;EAAA;EAAA,QAAAK,EAAA;UAAjBkW,iBAAiB;IAAAjW,SAAA;IAAAC,MAAA;MAAA6d,MAAA;MAAArC,QAAA;MAAAZ,SAAA;IAAA;IAAA3a,OAAA;MAAA6jB,QAAA;MAAArG,SAAA;IAAA;IAAApd,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAjGKC,SAAA,wEAAO;;;;;;;;;;;;;;;;iBACYA,SAAA,mEAC1C,eAAkC,kCACtC;;;;;;QAHA1N,4DAAA,YAA2B;QAA3BA,oDAAA,MAA2B;QAAOA,0DAAA,EAAK;QACvCA,4DAAA,WAA8C;QAA9CA,oDAAA,MAA8C;;QAE9CA,0DAAA,EAAI;QACJA,wDAAA,IAAAmrB,yCAAA,0BAAkE;;QAiFlEnrB,wDATA,IAAAorB,wCAAA,gCAAAprB,oEAAA,CAAyB,IAAAqrB,wCAAA,gCAAArrB,oEAAA,CASC;;;;;;QAnFtBA,uDAAA,GACJ;QADIA,uDAAA,GAAAkqB,OAAA,GAAAlqB,yDAAA,OAAA8H,GAAA,CAAAqY,KAAA,oBAAA+J,OAAA,CAAAvf,MAAA,OACJ;;QACe3K,uDAAA,EAAkC;QAAAA,wDAAlC,YAAAwnB,OAAA,GAAAxnB,yDAAA,OAAA8H,GAAA,CAAA2K,OAAA,oBAAA+U,OAAA,CAAA7c,MAAA,EAAkC,aAAA8V,aAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBjD;AACyC;AAC3B;AAEsC;AACrB;AACwB;AACc;AAEhC;;;;;;;;;;;;;;;;;;;;IAyBhCzgB,4DAAA,cAAmD;IAC/CA,oDAAA,GACA;;IAAAA,4DAAA,eAAwB;IAACA,oDAAA,UAAE;IAC/BA,0DAD+B,EAAO,EAChC;;;;;IAFFA,uDAAA,EACA;IADAA,gEAAA,OAAAwnB,OAAA,GAAAxnB,yDAAA,OAAAwrB,MAAA,CAAAxW,SAAA,oBAAAwS,OAAA,CAAAviB,YAAA,MACA;;;;;IAHRjF,4DAJJ,oBAGC,aACsC;IAC/BA,wDAAA,IAAAyrB,6DAAA,iBAAmD;IAInDzrB,4DAAA,UAAK;IACDA,oDAAA,GACJ;IAERA,0DAFQ,EAAM,EACJ,EACG;;;;;IAXTA,wDAAA,UAAAwrB,MAAA,CAAa;IAGwBxrB,uDAAA,GAAgB;IAAhBA,wDAAA,SAAA0I,MAAA,CAAA+R,UAAA,CAAgB;IAK7Cza,uDAAA,GACJ;IADIA,gEAAA,MAAAwrB,MAAA,CAAAvmB,YAAA,IAAAumB,MAAA,CAAAtmB,IAAA,MACJ;;;;;;IAnBZlF,4DANJ,wBAKC,oBAQI;IALGA,8DAAA,2BAAA0rB,+EAAAxM,MAAA;MAAAlf,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAAA,gEAAA,CAAA0I,MAAA,CAAA5D,KAAA,EAAAoa,MAAA,MAAAxW,MAAA,CAAA5D,KAAA,GAAAoa,MAAA;MAAA,OAAAlf,yDAAA,CAAAkf,MAAA;IAAA,EAAmB;IACnBlf,wDAAA,2BAAA0rB,+EAAAxM,MAAA;MAAAlf,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAAmJ,UAAA,CAAW;QAAA8Z,QAAA,GAAAzM,MAAA,CAAA9c,EAAA;MAAA,CAAyB,CAAC;IAAA,EAAC;IAKvDpC,wDAAA,IAAA4rB,uDAAA,wBAGC;;IAYT5rB,0DADI,EAAa,EACA;;;;IArBTA,uDAAA,EAAmB;IAAnBA,8DAAA,YAAA0I,MAAA,CAAA5D,KAAA,CAAmB;IAEnB9E,wDAAA,mBAAAA,6DAAA,IAAAmC,GAAA,EAAuC;IAKnBnC,uDAAA,EAAiB;IAAjBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAAqf,MAAA,EAAiB;;;AA2CnD,MAAO3K,gBAAiB,SAAQxd,yDAAY;EAoC9C,IAAWmb,OAAOA,CAAA;IACd,OAAO,IAAI,CAACjW,KAAK,EAAE8F,MAAM,IAAI,EAAE;EACnC;EAgEA,IAAW6P,UAAUA,CAAA;IACjB,OAAO,CAAC,CAAC,IAAI,CAACtX,SAAS,CAACmB,GAAG,CAAC,gBAAgB,CAAC;EACjD;EAEAjB,YACYwiB,MAA0B,EAC1B1iB,SAA0B,EAC1BK,IAAyB;IAEjC,KAAK,EAAE;IAJC,KAAAqiB,MAAM,GAANA,MAAM;IACN,KAAA1iB,SAAS,GAATA,SAAS;IACT,KAAAK,IAAI,GAAJA,IAAI;IA5GA,KAAAqoB,YAAY,GAAY,KAAK;IAC7B,KAAA7G,MAAM,GAAG,EAAE;IACV,KAAAiG,QAAQ,GAAG,IAAIlsB,uDAAY,EAAgB;IAE5C,KAAAohB,KAAK,GAAG,IAAI,CAAC0F,MAAM,CAAC7R,mBAAmB;IACvC,KAAAvB,OAAO,GAAG,IAAI,CAACoT,MAAM,CAACpT,OAAO;IAEtC,KAAAqZ,IAAI,GAAG,CAAC;IACR,KAAAC,MAAM,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAG,CAAE;IAE3B,KAAAC,WAAW,GAAGza,SAAS;IAEtB,KAAA0a,OAAO,GAAG,IAAI9c,iDAAe,CAAC,CAAC,CAAC;IAExB,KAAA0Y,MAAM,GAAGzY,mDAAa,CAAC,CACnC,IAAI,CAAC9L,IAAI,CAACslB,aAAa,EACvB,IAAI,CAACtlB,IAAI,CAACqP,eAAe,CAC5B,CAAC,CAAC/O,IAAI,CACHrE,oDAAG,CAAC,CAAC,CAAC8L,MAAM,EAAEK,GAAG,CAAC,KAAI;MAClB,MAAMmd,UAAU,GAAG,IAAI,CAACtO,UAAU,GAC5B,IAAI,CAACjX,IAAI,CAACwlB,eAAe,CAACzd,MAAM,CAAC,GACjC,IAAI,CAAC/H,IAAI,CAACylB,iBAAiB,CAACrd,GAAG,CAAC;MACtC,MAAMsd,eAAe,GAAGH,UAAU,CAACjZ,MAAM,CACpCqZ,GAAG,IAAK,CAACA,GAAG,CAACC,IAAI,CAAC1d,QAAQ,CAAC,SAAS,CAAC,CACzC;MACD,OAAOwd,eAAe,CAAC9V,IAAI,CACvB,CAACC,CAAC,EAAEC,CAAC,KACDD,CAAC,CAAC2B,SAAS,CAACzB,aAAa,CAACD,CAAC,CAAC0B,SAAS,CAAC,IACtC,CAAC3B,CAAC,CAACpO,YAAY,IAAI,EAAE,EAAEsO,aAAa,CAACD,CAAC,CAACrO,YAAY,IAAI,EAAE,CAAC,CACjE;IACL,CAAC,CAAC,CACL;IAEe,KAAA4M,UAAU,GAAImU,CAAC,IAAK,IAAI,CAACH,MAAM,CAAChU,UAAU,CAACmU,CAAC,CAAC;IAM7C,KAAAoG,OAAO,GAAG,IAAI,CAACvG,MAAM,CAAC7R,mBAAmB,CAAClQ,IAAI,CAC1DrE,oDAAG,CAAE0gB,KAAK,IACNA,KAAK,CAAC1gB,GAAG,CAAE6kB,IAAI,KAAM;MACjBliB,EAAE,EAAEkiB,IAAI,CAAC1Z,MAAM,IAAI0Z,IAAI,CAACliB,EAAE;MAC1BiqB,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;MAC/BC,QAAQ,EAAEA,CAAA,KAAM,IAAI,CAAC/B,UAAU,CAACjG,IAAW;KAC9C,CAAC,CAAC,CACN,CACJ;IAEe,KAAAjd,QAAQ,GAAGiI,mDAAa,CAAC,CACrC,IAAI,CAACuW,MAAM,CAACjT,SAAS,EACrB,IAAI,CAACiT,MAAM,CAAC7R,mBAAmB,CAClC,CAAC,CAAClQ,IAAI,CACHrE,oDAAG,CAAC,CAAC,CAAC0gB,KAAK,CAAC,KAAI;MACZ,OAAO,IAAI,CAAChd,SAAS,CAACmB,GAAG,CAAC,qBAAqB,CAAC,GAC1C,EAAE,GACF6b,KAAK,CAAC1gB,GAAG,CAAE6kB,IAAI,KAAM;QACjBpjB,QAAQ,EAAEojB,IAAI,CAACliB,EAAE;QACjBoK,OAAO,EAAE+e,sGAAwB;QACjCgB,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE,IAAI;QACdpmB,IAAI,EAAE;UACFhE,EAAE,EAAEkiB,IAAI,CAAC1Z,MAAM,IAAI0Z,IAAI,CAACliB,EAAE;UAC1BwI,MAAM,EAAE0Z,IAAI,CAACpf,IAAI;UACjBA,IAAI,EAAEof,IAAI,CAACpf,IAAI,IAAIof,IAAI,CAAC1Z,MAAM;UAC9BsJ,IAAI,EAAE,IAAI,CAAC2R,MAAM,CAAC1U,gBAAgB,CAACmT,IAAI,CAACliB,EAAE;SAC7C;QACDqqB,OAAO,EAAE;OACZ,CAAC,CAAC;IACb,CAAC,CAAC,CACL;IAEe,KAAAC,MAAM,GAAGpd,mDAAa,CAAC,CACnC,IAAI,CAACuW,MAAM,CAACjT,SAAS,EACrB,IAAI,CAACiT,MAAM,CAAC7R,mBAAmB,EAC/B,IAAI,CAACmY,OAAO,CACf,CAAC,CAACroB,IAAI,CACHrE,oDAAG,CAAC,CAAC,CAAC0gB,KAAK,EAAEwM,UAAU,CAAC,KACpBxM,KAAK,CAACyM,MAAM,CAAC,CAACF,MAAM,EAAEpI,IAAI,KAAI;MAC1B,MAAMuI,OAAO,GAAG,IAAI,CAAC1pB,SAAS,CAACmB,GAAG,CAAC,oBAAoB,CAAC,IAAI,EAAE;MAC9D,MAAMnD,MAAM,GACR,IAAI,CAAC6jB,MAAM,KAAKV,IAAI,CAACliB,EAAE,GACjB,QAAQ,GACRuqB,UAAU,CAAClhB,IAAI,CAAE/E,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAKkiB,IAAI,CAACliB,EAAE,CAAC,GACxC,MAAM,GACN,IAAI,CAACyjB,MAAM,CAAC1U,gBAAgB,CAACmT,IAAI,CAACliB,EAAE,CAAC,GACrC,MAAM,GACN,cAAc;MACxBsqB,MAAM,CAAC,IAAIpI,IAAI,CAAC1Z,MAAM,IAAI0Z,IAAI,CAACliB,EAAE,EAAE,CAAC,GAAG;QACnC0qB,IAAI,EACA3rB,MAAM,KAAK,QAAQ,GACb,SAAS,GACT0rB,OAAO,CAAC,QAAQ1rB,MAAM,EAAE,CAAC,IACzB0rB,OAAO,CAAC,GAAG1rB,MAAM,EAAE,CAAC,IACpBmqB,wFAAe,CAAC,GAAGnqB,MAAM,EAAE;OACxC;MACD,OAAOurB,MAAM;IACjB,CAAC,EAAE,EAAE,CAAC,CACT,CACJ;EAYD;EAEO1oB,QAAQA,CAAA;IACX,IAAI,CAACC,YAAY,CACb,eAAe,EACf,IAAI,CAAC4hB,MAAM,CAAClT,OAAO,CAACxO,SAAS,CAAC,CAAC;MAAEmQ;IAAO,CAAE,KAAI;MAC1C,MAAMxP,KAAK,GAAG,IAAI,CAACtB,IAAI,CAACuB,WAAW,CAAC,CAACuP,OAAO,CAAC,CAAC;MAC9C,IAAIxP,KAAK,EAAE,IAAI,CAACA,KAAK,GAAGA,KAAK;IACjC,CAAC,CAAC,CACL;EACL;EAEOP,WAAWA,CAACC,OAAsB;IACrC,IAAIA,OAAO,CAACwgB,MAAM,EAAE,IAAI,CAACmH,OAAO,CAACpa,IAAI,CAACpN,IAAI,CAACC,GAAG,EAAE,CAAC;EACrD;EAEO2lB,UAAUA,CAACjG,IAAkB;IAChC,IAAI,CAAC2G,QAAQ,CAACxkB,IAAI,CAAC6d,IAAI,CAAC;EAC5B;EAEOgF,QAAQA,CAACxkB,KAAoB;IAChC,IAAI,CAAC+M,UAAU,CAAC;MAAEyC,OAAO,EAAExP,KAAK,EAAE1C;IAAE,CAAE,CAAC;IACvC,MAAMwJ,GAAG,GAAG,IAAI,CAACpI,IAAI,CAACmI,SAAS,CAACF,IAAI,CAAE/E,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAK0C,KAAK,EAAEkQ,SAAS,CAAC;IACtE,IAAIpJ,GAAG,EAAE;MACL,MAAM,CAACmhB,QAAQ,EAAEC,SAAS,CAAC,GAAGphB,GAAG,CAAC1K,QAAQ,CACrC+rB,KAAK,CAAC,GAAG,CAAC,CACVxtB,GAAG,CAAEiH,CAAC,IAAKwmB,UAAU,CAACxmB,CAAC,CAAC,CAAC;MAC9B,IAAI,CAACwlB,WAAW,GAAG;QAAEa,QAAQ;QAAEC;MAAS,CAAE;IAC9C;IACA,IAAI,CAACloB,KAAK,GAAGA,KAAK;EACtB;EAEOqoB,OAAOA,CAACC,QAAgB;IAC3B,IAAI,CAACtB,IAAI,GAAGtmB,IAAI,CAAC6nB,GAAG,CAAC,GAAG,EAAE7nB,IAAI,CAAC8nB,GAAG,CAAC,EAAE,EAAEF,QAAQ,CAAC,CAAC;EACrD;EAEOG,QAAQA,CAAA;IACX,IAAI,CAACzB,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,MAAM,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAG,CAAE;EACpC;EAAC,QAAAvlB,CAAA;qBAvJQ0W,gBAAgB,EAAApd,+DAAA,CAAA4G,qEAAA,GAAA5G,+DAAA,CAAA6G,4DAAA,GAAA7G,+DAAA,CAAA8G,sEAAA;EAAA;EAAA,QAAAG,EAAA;UAAhBmW,gBAAgB;IAAAlW,SAAA;IAAAC,MAAA;MAAA0kB,YAAA;MAAA7G,MAAA;IAAA;IAAA5d,OAAA;MAAA6jB,QAAA;IAAA;IAAA5jB,QAAA,GAAArH,wEAAA,EAAAA,kEAAA;IAAAwH,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBA/CIC,SAAA,0EAAS;;;;;;QAZlC1N,4DAAA,aAA6D;QACzDA,wDAAA,IAAAwtB,0CAAA,4BAKC;;QAyBLxtB,0DAAA,EAAM;QAEFA,4DADJ,aAAoC,yBAS/B;;;;QALGA,8DADA,wBAAAytB,gEAAAvO,MAAA;UAAAlf,gEAAA,CAAA8H,GAAA,CAAAgkB,IAAA,EAAA5M,MAAA,MAAApX,GAAA,CAAAgkB,IAAA,GAAA5M,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAe,0BAAAwO,kEAAAxO,MAAA;UAAAlf,gEAAA,CAAA8H,GAAA,CAAAikB,MAAA,EAAA7M,MAAA,MAAApX,GAAA,CAAAikB,MAAA,GAAA7M,MAAA;UAAA,OAAAA,MAAA;QAAA,EACI;QAM3Blf,0DADK,EAAkB,EACjB;;;;QArCGA,uDAAA,EAA8B;QAA9BA,wDAAA,UAAA2tB,OAAA,GAAA3tB,yDAAA,OAAA8H,GAAA,CAAAigB,MAAA,oBAAA4F,OAAA,CAAAhjB,MAAA,CAA8B;QA6B/B3K,uDAAA,GAAe;QAAfA,wDAAA,QAAA8H,GAAA,CAAAiT,OAAA,CAAe;QAEf/a,8DADA,SAAA8H,GAAA,CAAAgkB,IAAA,CAAe,WAAAhkB,GAAA,CAAAikB,MAAA,CACI;QAInB/rB,wDAHA,WAAAA,yDAAA,QAAA8H,GAAA,CAAA4kB,MAAA,EAAyB,aAAA1sB,yDAAA,QAAA8H,GAAA,CAAAT,QAAA,EACI,YAAArH,yDAAA,QAAA8H,GAAA,CAAAskB,OAAA,EACF,YAAApsB,6DAAA,KAAAiC,GAAA,EACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5D2B;AACvB;AAKjB;;;;;;;;;;;;;;;;IAqDbjC,4DAAA,oBAQC;IAFGA,wDADA,uBAAA6tB,8EAAA3O,MAAA;MAAAlf,2DAAA,CAAAuB,GAAA;MAAA,MAAA4d,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAamf,MAAA,CAAA0C,eAAA,CAAA3C,MAAA,CAAuB;IAAA,EAAC,sBAAA4O,6EAAA5O,MAAA;MAAAlf,2DAAA,CAAAuB,GAAA;MAAA,MAAA4d,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAAmf,MAAA,CAAA4O,SAAA,GAAA7O,MAAA;IAAA,EACN;IAElClf,0DAAA,EAAY;;;;IAJTA,wDAFA,WAAAmf,MAAA,CAAA4O,SAAA,kBAAA5O,MAAA,CAAA4O,SAAA,CAAA3rB,EAAA,CAAwB,aAAA+c,MAAA,CAAA6O,YAAA,CACC,cAAA7O,MAAA,CAAA4C,SAAA,CACF;;;;;;IAsB/B/hB,4DAAA,iBAQC;IAFGA,wDAAA,mBAAAiuB,oEAAA;MAAAjuB,2DAAA,CAAAuf,GAAA;MAAA,MAAAJ,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAAmf,MAAA,CAAA4O,SAAA,GAAqB,IAAI;IAAA,EAAC;IAN9B/tB,oDAAA,MAQC;IAEDA,0DAAA,EAAS;;;;;;IAuDbA,4DAAA,mBAKC;IADGA,wDAAA,sBAAAkuB,8EAAAhP,MAAA;MAAAlf,2DAAA,CAAAyf,GAAA;MAAA,MAAAN,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAAmf,MAAA,CAAA4O,SAAA,GAAA7O,MAAA;IAAA,EAA+B;IAEnClf,0DAAA,EAAW;;;;IAHPA,wDADA,mBAAAmf,MAAA,CAAA4O,SAAA,CAA4B,WAAA5O,MAAA,CAAA4O,SAAA,kBAAA5O,MAAA,CAAA4O,SAAA,CAAA3rB,EAAA,CACJ;;;AAjJjC,MAAMwe,YAAY,GAAG,iBAAiB;AAwJvC,MAAOvD,wBAAwB;EAKjC,IAAW2Q,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACrL,QAAQ,CAACljB,GAAG,CAAEiH,CAAC,IAAKA,CAAC,CAACtE,EAAE,CAAC,CAAC2V,IAAI,CAAC,GAAG,CAAC;EACnD;EAEA,IAAWgK,SAASA,CAAA;IAChB,OAAO,IAAI,CAAC5e,SAAS,CAACmB,GAAG,CAAWsc,YAAY,CAAC,IAAI,EAAE;EAC3D;EAEAvd,YACY8qB,WAAmD,EACnDhrB,SAA0B,EAC1BirB,WAA+B,EAE/B/N,KAGP;IAPO,KAAA8N,WAAW,GAAXA,WAAW;IACX,KAAAhrB,SAAS,GAATA,SAAS;IACT,KAAAirB,WAAW,GAAXA,WAAW;IAEX,KAAA/N,KAAK,GAALA,KAAK;IAhBV,KAAAsC,QAAQ,GAAmB,EAAE;IAC7B,KAAA3R,IAAI,GAAG,MAAM;IAoBhB,IAAI,CAAC2R,QAAQ,GAAG,CAAC,IAAItC,KAAK,CAAChW,KAAK,IAAI,EAAE,CAAC,CAAC;IACxC,IAAI,CAAC+jB,WAAW,CAACvc,UAAU,CAACwO,KAAK,CAAC1N,OAAO,CAAC;EAC9C;EAEO0b,UAAUA,CAACjsB,EAAU;IACxB,OAAOA,EAAE,IAAI,IAAI,CAAC4rB,YAAY,CAACtiB,QAAQ,CAACtJ,EAAE,CAAC;EAC/C;EAEOksB,WAAWA,CAAClhB,IAAkB,EAAE1D,KAAc;IACjD,MAAMsJ,IAAI,GAAG,IAAI,CAAC2P,QAAQ,CAAC7S,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAKgL,IAAI,CAAChL,EAAE,CAAC;IAC1D,IAAIsH,KAAK,EAAEsJ,IAAI,CAACG,IAAI,CAAC/F,IAAI,CAAC;IAC1B,IAAI,CAACuV,QAAQ,GAAG3P,IAAI;IACpB,IAAI,CAAC,IAAI,CAACqN,KAAK,CAAC1N,OAAO,CAACgD,KAAK,IAAIjM,KAAK,EAAE,IAAI,CAACykB,WAAW,CAACxW,KAAK,CAAC,CAACvK,IAAI,CAAC,CAAC;EAC1E;EAEOyU,eAAeA,CAACzU,IAAkB;IACrC,MAAM2V,QAAQ,GAAG,IAAI,CAAChB,SAAS;IAC/B,MAAMiB,SAAS,GAAG,CAACD,QAAQ,CAACrX,QAAQ,CAAC0B,IAAI,CAAChL,EAAE,CAAC;IAC7C,IAAI4gB,SAAS,EAAE;MACX,IAAI,CAAC7f,SAAS,CAAC8f,eAAe,CAACrC,YAAY,EAAE,CACzC,GAAGmC,QAAQ,EACX3V,IAAI,CAAChL,EAAE,CACV,CAAC;IACN,CAAC,MAAM;MACH,IAAI,CAACe,SAAS,CAAC8f,eAAe,CAC1BrC,YAAY,EACZmC,QAAQ,CAACjT,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,KAAK0G,IAAI,CAAChL,EAAE,CAAC,CACxC;IACL;EACJ;EAAC,QAAAsE,CAAA;qBApDQ2W,wBAAwB,EAAArd,+DAAA,CAAA4G,kEAAA,GAAA5G,+DAAA,CAAA6G,4DAAA,GAAA7G,+DAAA,CAAA8G,qEAAA,GAAA9G,+DAAA,CAiBrBmI,qEAAe;EAAA;EAAA,QAAAlB,EAAA;UAjBlBoW,wBAAwB;IAAAnW,SAAA;IAAAM,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBA3IZC,SAAA,0EAAS;;;;;;;;;;iBAmFjBA,SAAA,4EAED;;;;;;;;;;iBAcyCA,SAAA,4EAAY;;;;;;;;;;;;;;;;iBAGlBA,SAAA,mEAC/B,eAAqB,gCACzB;;;;;;;;;;;;;;;;iBAa+BA,SAAA,mEACnB,eAIE,kBACN;;;;;;;;;;iBAnDPA,SAAA,sEAED;;;;;;;QA5EI1N,4DALZ,aAEC,gBACsD,gBACG,eACpC;QAAAA,oDAAA,YAAK;QACnBA,0DADmB,EAAW,EACrB;QACTA,4DAAA,SAAS;QAATA,oDAAA,MAAS;QAASA,0DAAA,EAAK;QAEnBA,4DADJ,cAA4D,iBAQvD;QADGA,wDAAA,mBAAAuuB,0DAAA;UAAAvuB,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAA8H,GAAA,CAAAkJ,IAAA,GAAgB,KAAK;QAAA,EAAC;QAEtBhR,oDAAA,YACJ;QAAAA,0DAAA,EAAS;QACTA,4DAAA,kBAOC;QADGA,wDAAA,mBAAAwuB,2DAAA;UAAAxuB,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAA8H,GAAA,CAAAkJ,IAAA,GAAgB,MAAM;QAAA,EAAC;QAEvBhR,oDAAA,cACJ;QAERA,0DAFQ,EAAS,EACP,EACD;QACTA,4DAAA,gBAEC;QACGA,uDAAA,wBAGgB;QAIZA,4DAHJ,eAEC,gCAII;QADGA,8DAAA,wBAAAyuB,8EAAAvP,MAAA;UAAAlf,2DAAA,CAAAgO,GAAA;UAAAhO,gEAAA,CAAA8H,GAAA,CAAAkJ,IAAA,EAAAkO,MAAA,MAAApX,GAAA,CAAAkJ,IAAA,GAAAkO,MAAA;UAAA,OAAAlf,yDAAA,CAAAkf,MAAA;QAAA,EAAe;QAClBlf,0DAAA,EAAuB;QACxBA,wDAAA,KAAA0uB,8CAAA,wBAQC;QACL1uB,0DAAA,EAAM;QACNA,4DAAA,wBAWC;QADGA,wDAHA,0BAAA2uB,wEAAAzP,MAAA;UAAAlf,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAgB8H,GAAA,CAAAwmB,WAAA,CAAAxmB,GAAA,CAAAimB,SAAA,EAAA7O,MAAA,CAA8B;QAAA,EAAC,uBAAA0P,qEAAA;UAAA5uB,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAElC8H,GAAA,CAAA+Z,eAAA,CAAA/Z,GAAA,CAAAimB,SAAA,CAA0B;QAAA,EAAC,mBAAAc,iEAAA;UAAA7uB,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAA8H,GAAA,CAAAimB,SAAA,GACnB,IAAI;QAAA,EAAC;QAElC/tB,0DADK,EAAe,EACb;QACPA,4DAAA,kBAEC;QACGA,wDAAA,KAAA8uB,2CAAA,qBAQC;QAGD9uB,4DAAA,kBAQC;QARDA,oDAAA,OAQC;QAGLA,0DADI,EAAS,EACJ;QAYGA,4DAXZ,kBAEC,kBAOI,eACkC,oBACD;QAAAA,oDAAA,kBAAU;QAAAA,0DAAA,EAAW;QAC/CA,4DAAA,eAAiC;QAAjCA,oDAAA,OAAiC;QAEzCA,0DAFqD,EAAM,EACjD,EACD;QACTA,4DAAA,aAAmC;QAAnCA,oDAAA,OAAmC;QAEnCA,0DAAA,EAAI;QACJA,4DAAA,kBAOC;QADGA,wDAAA,mBAAA+uB,2DAAA;UAAA/uB,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAS8H,GAAA,CAAAwmB,WAAA,CAAAxmB,GAAA,CAAAimB,SAAA,GAAwBjmB,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,CAAyB,CAAC;QAAA,EAAC;QAGxDpC,4DADJ,eAA+B,oBACD;QAAAA,oDAAA,IAExB;QAAAA,0DAAA,EAAW;QACbA,4DAAA,eAAuB;QAAvBA,oDAAA,OAAuB;QAUvCA,0DAJgB,EAAM,EACJ,EACD,EACJ,EACP;QACNA,wDAAA,KAAAgvB,gDAAA,gCAAAhvB,oEAAA,CAAuB;;;;QAzHPA,uDAAA,GAAgC;QAAhCA,yDAAA,YAAA8H,GAAA,CAAAkJ,IAAA,WAAgC;QAUhChR,uDAAA,GAAiC;QAAjCA,yDAAA,YAAA8H,GAAA,CAAAkJ,IAAA,YAAiC;QAYrChR,uDAAA,GAA+B;QAA/BA,wDAAA,gBAAA8H,GAAA,CAAAkJ,IAAA,YAA+B;QAO3BhR,uDAAA,GAAe;QAAfA,8DAAA,SAAA8H,GAAA,CAAAkJ,IAAA,CAAe;QAGdhR,uDAAA,EAAuB;QAAAA,wDAAvB,SAAA8H,GAAA,CAAAkJ,IAAA,YAAuB,aAAAie,WAAA,CAAa;QAYzCjvB,uDAAA,EAA2B;QAC3BA,yDADA,YAAA8H,GAAA,CAAAimB,SAAA,CAA2B,YAAAjmB,GAAA,CAAAimB,SAAA,CACA;QAI3B/tB,wDAPA,SAAA8H,GAAA,CAAAimB,SAAA,CAAkB,WAAAjmB,GAAA,CAAAkmB,YAAA,CAAAtiB,QAAA,CAAA5D,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,EAI6B,aAAA0F,GAAA,CAAAkJ,IAAA,WACpB,QAAAlJ,GAAA,CAAAimB,SAAA,IAAAjmB,GAAA,CAAAia,SAAA,CAAArW,QAAA,CAAA5D,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,EAEgC;QAa1DpC,uDAAA,GAAe;QAAfA,wDAAA,SAAA8H,GAAA,CAAAimB,SAAA,CAAe;QAWhB/tB,uDAAA,EAAwB;QAAxBA,yDAAA,SAAA8H,GAAA,CAAAimB,SAAA,CAAwB;QADxB/tB,wDAAA,qBAAA8H,GAAA,CAAA6a,QAAA,CAA6B;QAe7B3iB,uDAAA,GAA6B;QAA7BA,wDAAA,qBAAA8H,GAAA,CAAA6a,QAAA,CAA6B;QAS7B3iB,uDAAA,GACJ;QADIA,uDAAA,CAAA8H,GAAA,CAAA6a,QAAA,CAAAhY,MAAA,CACJ;;QAMI3K,uDAAA,EAA2C;QAA3CA,yDAAA,YAAA8H,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,EAA2C;QAD3CpC,wDAAA,cAAA8H,GAAA,CAAAimB,SAAA,CAAuB;QAKO/tB,uDAAA,GAExB;QAFwBA,+DAAA,CAAA8H,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,qBAExB;QAEEpC,uDAAA,GAKJ;QALIA,uDAAA,CAAA8H,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,6CAKJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChJiD;AACK;AAClB;AACb;;;;;;;;;;;;;;;;IASnCpC,4DAJJ,aAGC,aAC6B;IAA1BA,oDAAA,MAA0B;IAAWA,0DAAA,EAAM;IAC3CA,4DAAA,aAA0C;IAA1CA,oDAAA,MAA0C;IAE1CA,0DAAA,EAAM;IAEFA,4DADJ,aAAqC,YAC1B;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAQ;IAMdA,4DALR,aAA8C,wBAIzC,sBAKI;IAFGA,8DAAA,2BAAAmvB,+EAAAjQ,MAAA;MAAAlf,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAAA,gEAAA,CAAA0I,MAAA,CAAA0mB,MAAA,EAAAlQ,MAAA,MAAAxW,MAAA,CAAA0mB,MAAA,GAAAlQ,MAAA;MAAA,OAAAlf,yDAAA,CAAAkf,MAAA;IAAA,EAAoB;IACpBlf,wDAAA,2BAAAmvB,+EAAAjQ,MAAA;MAAAlf,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAA2mB,SAAA,CAAAnQ,MAAA,CAAiB;IAAA,EAAC;IAEnClf,4DAAA,sBAAqB;IAAAA,oDAAA,YAAI;IAAAA,0DAAA,EAAa;IACtCA,4DAAA,sBAA6B;IAAAA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAa;IAClDA,4DAAA,sBAA4B;IAAAA,oDAAA,cAAM;IAE1CA,0DAF0C,EAAa,EACtC,EACA;IACjBA,4DAAA,kBAKC;IAFGA,wDAAA,mBAAAsvB,mEAAA;MAAAtvB,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAA0I,MAAA,CAAA6mB,YAAA,GAAwB,IAAI;IAAA,EAAC;IAG7BvvB,4DAAA,gBAAU;IAAAA,oDAAA,YAAI;IAEtBA,0DAFsB,EAAW,EACpB,EACP;IACNA,4DAAA,aAAO;IAAAA,oDAAA,sBAAc;IAAAA,0DAAA,EAAQ;IAUrBA,4DATR,eAAyC,sBAQpC,iBAKK;IAFEA,8DAAA,2BAAAwvB,0EAAAtQ,MAAA;MAAAlf,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAAA,gEAAA,CAAA0I,MAAA,CAAA+mB,MAAA,EAAAvQ,MAAA,MAAAxW,MAAA,CAAA+mB,MAAA,GAAAvQ,MAAA;MAAA,OAAAlf,yDAAA,CAAAkf,MAAA;IAAA,EAAoB;IACpBlf,wDAAA,2BAAAwvB,0EAAA;MAAAxvB,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAAgnB,YAAA,CAAAhnB,MAAA,CAAA+mB,MAAA,CAAoB;IAAA,EAAC;IAE9CzvB,0DALI,EAIE,EACO;IACbA,4DAAA,eAAqC;IACjCA,oDAAA,IACJ;IAERA,0DAFQ,EAAM,EACJ,EACJ;IACNA,4DAAA,kBAA+D;IAAzCA,wDAAA,mBAAA2vB,mEAAA;MAAA3vB,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAuC,aAAA,EAAe;IAAA,EAAC;IAC3CjL,oDAAA,wBACJ;IAAAA,0DAAA,EAAS;IAOLA,4DANJ,kBAKC,gBACa;IAAAA,oDAAA,aAAK;IAEvBA,0DAFuB,EAAW,EACrB,EACP;;;;IAjDcA,uDAAA,IAAoB;IAApBA,8DAAA,YAAA0I,MAAA,CAAA0mB,MAAA,CAAoB;IAyBxBpvB,uDAAA,IAA2B;IAA3BA,wDAAA,gBAAA0I,MAAA,CAAAknB,WAAA,CAA2B;IAIvB5vB,uDAAA,EAAoB;IAApBA,8DAAA,YAAA0I,MAAA,CAAA+mB,MAAA,CAAoB;IAKxBzvB,uDAAA,GACJ;IADIA,gEAAA,MAAA0I,MAAA,CAAA+mB,MAAA,CAAAI,OAAA,WACJ;;;;;;IAgBR7vB,4DAAA,8BAGC;IADGA,wDAAA,mBAAA8vB,uFAAA;MAAA9vB,2DAAA,CAAA+I,GAAA;MAAA,MAAAL,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAA0I,MAAA,CAAA6mB,YAAA,GAAwB,KAAK;IAAA,EAAC;IACjCvvB,0DAAA,EAAsB;;;IAFnBA,wDAAA,oBAAmB;;;AAO7B,MAAOyI,0BAA0B;EAMnCpF,YACqCgd,KAAqB,EAC9C7c,IAAyB,EACzBL,SAA0B,EAC1BgrB,WAAqD;IAH5B,KAAA9N,KAAK,GAALA,KAAK;IAC9B,KAAA7c,IAAI,GAAJA,IAAI;IACJ,KAAAL,SAAS,GAATA,SAAS;IACT,KAAAgrB,WAAW,GAAXA,WAAW;IATP,KAAAjD,OAAO,GAAG,IAAI,CAAC7K,KAAK,CAACje,EAAE;IAChC,KAAAmtB,YAAY,GAAG,KAAK;IAEpB,KAAAE,MAAM,GAAG,EAAE;EAOf;EAEIzrB,QAAQA,CAAA;IACX,MAAM+rB,cAAc,GAAG,IAAI,CAAC5sB,SAAS,CAACmB,GAAG,CAAC,qBAAqB,CAAC;IAChE,MAAM0rB,eAAe,GAAG,IAAI,CAAC7sB,SAAS,CAACmB,GAAG,CAAC,sBAAsB,CAAC;IAClE,IAAI,CAACyrB,cAAc,IAAI,CAACC,eAAe,EAAE;MACrC,IAAI,CAACT,YAAY,GAAG,IAAI;IAC5B;IACA,MAAMU,WAAW,GAAGC,QAAQ,CACxBC,YAAY,CAAC3d,OAAO,CAAC,0BAA0B,CAAC,EAChD,EAAE,CACL;IACD,IAAI,CAACid,MAAM,GAAGQ,WAAW,IAAIF,cAAc,IAAI,EAAE;IACjD,IAAI,IAAI,CAACN,MAAM,KAAKM,cAAc,EAAE;MAChC,IAAI,CAACX,MAAM,GAAG,SAAS;IAC3B,CAAC,MAAM,IAAI,IAAI,CAACK,MAAM,KAAKO,eAAe,EAAE;MACxC,IAAI,CAACZ,MAAM,GAAG,UAAU;IAC5B;EACJ;EAEOM,YAAYA,CAACU,UAAkB;IAClC,MAAML,cAAc,GAAG,IAAI,CAAC5sB,SAAS,CAACmB,GAAG,CAAC,qBAAqB,CAAC,IAAI,EAAE;IACtE,MAAM0rB,eAAe,GACjB,IAAI,CAAC7sB,SAAS,CAACmB,GAAG,CAAC,sBAAsB,CAAC,IAAI,GAAG;IACrD,IAAI8rB,UAAU,KAAKL,cAAc,EAAE;MAC/B,IAAI,CAACX,MAAM,GAAG,SAAS;IAC3B,CAAC,MAAM,IAAIgB,UAAU,KAAKJ,eAAe,EAAE;MACvC,IAAI,CAACZ,MAAM,GAAG,UAAU;IAC5B,CAAC,MAAM;MACH,IAAI,CAACA,MAAM,GAAG,IAAI;IACtB;EACJ;EAEOC,SAASA,CAACnZ,KAAa;IAC1BzB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEwB,KAAK,CAAC;IACjC,QAAQA,KAAK;MACT,KAAK,UAAU;QACX,IAAI,CAACuZ,MAAM,GAAG,IAAI,CAACtsB,SAAS,CAACmB,GAAG,CAAC,sBAAsB,CAAC,IAAI,GAAG;QAC/D;MACJ,KAAK,SAAS;QACV,IAAI,CAACmrB,MAAM,GAAG,IAAI,CAACtsB,SAAS,CAACmB,GAAG,CAAC,qBAAqB,CAAC,IAAI,EAAE;QAC7D;MACJ;QACI,IAAI,CAACmrB,MAAM,GAAG,EAAE;QAChB;IACR;EACJ;EAEaxkB,aAAaA,CAAA;IAAA,IAAA0B,KAAA;IAAA,OAAAC,wJAAA;MACtB,MAAMyjB,MAAM,GAAG1jB,KAAI,CAACnJ,IAAI,CAAC8sB,OAAO,CAAC,OAAO,CAAC;MACzCH,YAAY,CAACvZ,OAAO,CAAC,0BAA0B,EAAE,GAAGjK,KAAI,CAAC8iB,MAAM,EAAE,CAAC;MAClE,IAAI,CAACY,MAAM,EAAE,OAAO1jB,KAAI,CAACwhB,WAAW,CAACxW,KAAK,EAAE;MAC5C,MAAM4Y,MAAM,GAAGrB,6DAAS,CAACmB,MAAM,EAAE,aAAa,CAAC;MAC/C,MAAME,MAAM,CACPC,OAAO,CAAC,iBAAiB,EAAE,CAAC7jB,KAAI,CAACue,OAAO,EAAEve,KAAI,CAAC8iB,MAAM,CAAC,CAAC,CACvD3iB,KAAK,CAAEpG,CAAC,IAAI;QACT0B,4DAAW,CAAC,4BAA4B,GAAG1B,CAAC,CAAC;QAC7C,MAAMA,CAAC;MACX,CAAC,CAAC;MACN2B,8DAAa,CAAC,8BAA8B,CAAC;MAC7CsE,KAAI,CAACwhB,WAAW,CAACxW,KAAK,EAAE;IAAC;EAC7B;EAEOiY,WAAWA,CAAC1Z,KAAa;IAC5B,OAAO,GAAGA,KAAK,CAAC2Z,OAAO,CAAC,CAAC,CAAC,IAAI;EAClC;EAAC,QAAAnpB,CAAA;qBA5EQ+B,0BAA0B,EAAAzI,+DAAA,CAOvBmI,qEAAe,GAAAnI,+DAAA,CAAA4G,sEAAA,GAAA5G,+DAAA,CAAA6G,4DAAA,GAAA7G,+DAAA,CAAA8G,kEAAA;EAAA;EAAA,QAAAG,EAAA;UAPlBwB,0BAA0B;IAAAvB,SAAA;IAAAM,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAxEDC,SAAA,4EAAW;;;;;;;;;;iBACKA,SAAA,+GAE1C;;;;;;QA4DJ1N,wDAnEA,IAAAywB,yCAAA,kBAGC,IAAAC,iDAAA,gCAAA1wB,oEAAA,CAgEiC;;;;QAjERA,wDAArB,UAAA8H,GAAA,CAAAynB,YAAA,CAAqB,aAAAoB,sBAAA,CAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXM;AACpB;AACL;AAEsC;AACb;AACa;AACQ;AACzB;AAEP;;;;;;;;;;;;;;;;;;;;;;IAiCrB3wB,6DAAA,qBAGC;IACGA,qDAAA,GACJ;IAAAA,2DAAA,EAAa;;;;IAHTA,yDAAA,UAAA+wB,MAAA,CAAA3uB,EAAA,CAAgB;IAEhBpC,wDAAA,EACJ;IADIA,iEAAA,MAAA+wB,MAAA,CAAA9rB,YAAA,IAAA8rB,MAAA,CAAA7rB,IAAA,MACJ;;;;;;IAnBRlF,6DADJ,cAAyD,gBAC1B;IAA3BA,0DAAA,OAA2B;IACfA,wDAAA,WAAc;IAC1BA,wDAAA,EAAQ;IAARA,2DAAA,EAAQ;IAEJA,6DADJ,yBAAqC,qBAUhC;IAPGA,yDAAA,2BAAAgxB,0GAAA9R,MAAA;MAAAlf,4DAAA,CAAA+I,GAAA;MAAA,MAAAgY,MAAA,GAAA/gB,4DAAA;MAAA,OAAAA,0DAAA,CAEhC+gB,MAAA,CAAAzP,IAAA,CAAAE,UAAA,CAAgB;QAAAxM,KAAA,GAAAka,MAAA;MAAA,CACf,CAAC;IAAA,EAD+B;IAMDlf,yDAAA,IAAAixB,kFAAA,yBAGC;;IAKbjxB,2DAFQ,EAAa,EACA,EACf;;;;IAjBMA,wDAAA,GAA+B;IAI/BA,yDAJA,YAAA+gB,MAAA,CAAAzP,IAAA,CAAA4E,KAAA,CAAAlR,KAAA,IAA+B,mBAAAhF,8DAAA,IAAAiC,GAAA,EAIQ;IAMnBjC,wDAAA,EAAoB;IAApBA,yDAAA,YAAAA,0DAAA,OAAA+gB,MAAA,CAAApV,SAAA,EAAoB;;;;;;IA6DxC3L,6DAAA,qBAIC;IADGA,yDAAA,mBAAAkxB,yHAAA;MAAA,MAAAtnB,OAAA,GAAA5J,4DAAA,CAAA4nB,GAAA,EAAA3d,SAAA;MAAA,MAAA8W,MAAA,GAAA/gB,4DAAA;MAAA,OAAAA,0DAAA,CAAS+gB,MAAA,CAAAoQ,UAAA,CAAAvnB,OAAA,CAAgB;IAAA,EAAC;IAGtB5J,6DADJ,cAAyC,UAChC;IAAAA,qDAAA,GAAe;IAAAA,2DAAA,EAAM;IAC1BA,6DAAA,cAAgC;IAC5BA,qDAAA,GAMJ;IAERA,2DAFQ,EAAM,EACJ,EACG;;;;IAdTA,yDAAA,UAAA4J,OAAA,CAAA1E,IAAA,CAAmB;IAIVlF,wDAAA,GAAe;IAAfA,gEAAA,CAAA4J,OAAA,CAAA1E,IAAA,CAAe;IAEhBlF,wDAAA,GAMJ;IANIA,iEAAA,MAAA4J,OAAA,CAAA1G,KAAA,OAAA0G,OAAA,CAAAwnB,OAAA,UAAAxnB,OAAA,CAAAwnB,OAAA,WAMJ;;;;;;IA0BRpxB,6DAAA,qBAIC;IADGA,yDAAA,mBAAAqxB,0HAAA;MAAA,MAAAC,QAAA,GAAAtxB,4DAAA,CAAA8K,GAAA,EAAAb,SAAA;MAAA,MAAA8W,MAAA,GAAA/gB,4DAAA;MAAA,OAAAA,0DAAA,CAAS+gB,MAAA,CAAAoQ,UAAA,CAAAG,QAAA,CAAgB;IAAA,EAAC;IAGtBtxB,6DADJ,cAAyC,UAChC;IAAAA,qDAAA,GAAe;IAAAA,2DAAA,EAAM;IAC1BA,6DAAA,cAAgC;IAC5BA,qDAAA,GAMJ;IAERA,2DAFQ,EAAM,EACJ,EACG;;;;IAdTA,yDAAA,UAAAsxB,QAAA,CAAApuB,KAAA,CAAoB;IAIXlD,wDAAA,GAAe;IAAfA,gEAAA,CAAAsxB,QAAA,CAAApsB,IAAA,CAAe;IAEhBlF,wDAAA,GAMJ;IANIA,iEAAA,MAAAsxB,QAAA,CAAApuB,KAAA,OAAAouB,QAAA,CAAAF,OAAA,UAAAE,QAAA,CAAAF,OAAA,WAMJ;;;;;;IAxEpBpxB,sEAAA,GAAkD;IAE1CA,6DADJ,cAA2B,gBAElB;IADLA,0DAAA,OACK;IAAYA,wDAAA,WAAc;IAAAA,wDAAA,EAC9B;IAD8BA,2DAAA,EAC9B;IAEGA,6DADJ,yBAAqC,gBAU/B;IAJEA,yDAAA,mBAAAuxB,uGAAA;MAAAvxB,4DAAA,CAAAgK,GAAA;MAAA,MAAA+W,MAAA,GAAA/gB,4DAAA;MAAA,OAAAA,0DAAA,CAEjC+gB,MAAA,CAAAyQ,cAAA,CAAAzQ,MAAA,CAAAzP,IAAA,CAAA4E,KAAA,CAAA7I,UAAA,CACD;IAAA,EADmC;IAGTrN,2DAVI,EASE,EACW;IACjBA,6DAAA,gCAA+C;IAC3CA,yDAAA,IAAAyxB,4FAAA,yBAIC;IAcTzxB,2DADI,EAAmB,EACjB;IAEFA,6DADJ,eAA2B,iBACS;IAAhCA,0DAAA,QAAgC;IACfA,wDAAA,YAAc;IAC/BA,wDAAA,EAAQ;IAARA,2DAAA,EAAQ;IAEJA,6DADJ,0BAAqC,iBAW/B;IAJEA,yDAAA,mBAAA0xB,wGAAA;MAAA1xB,4DAAA,CAAAgK,GAAA;MAAA,MAAA+W,MAAA,GAAA/gB,4DAAA;MAAA,OAAAA,0DAAA,CAE/B+gB,MAAA,CAAAyQ,cAAA,CAAAzQ,MAAA,CAAAzP,IAAA,CAAA4E,KAAA,CAAAzT,QAAA,CACH;IAAA,EADmC;IARLzC,2DAAA,EAUE;IACFA,6DAAA,iBAAgB;IAAhBA,qDAAA,QAAgB;IAGpBA,2DADI,EAAY,EACC;IACjBA,6DAAA,iCAAgD;IAC5CA,yDAAA,KAAA2xB,6FAAA,yBAIC;IAcT3xB,2DADI,EAAmB,EACjB;IAEFA,6DADJ,eAA2B,iBACQ;IAA/BA,qDAAA,QAA+B;IAAOA,2DAAA,EAAQ;IAC9CA,6DAAA,0BAAqC;IACjCA,wDAAA,iBAKE;IAEVA,2DADI,EAAiB,EACf;;;;;;;IAzEMA,wDAAA,GAA6B;IAA7BA,yDAAA,oBAAA4xB,aAAA,CAA6B;IAKZ5xB,wDAAA,GAAoB;IAApBA,yDAAA,YAAA+gB,MAAA,CAAA8Q,iBAAA,CAAoB;IAgCrC7xB,wDAAA,GAA8B;IAA9BA,yDAAA,oBAAA8xB,cAAA,CAA8B;IAQb9xB,wDAAA,GAAoB;IAApBA,yDAAA,YAAA+gB,MAAA,CAAA8Q,iBAAA,CAAoB;;;;;;IA3HzD7xB,6DAAA,eAIC;IACGA,yDAAA,IAAA+xB,qEAAA,kBAAyD;IAyBrD/xB,6DADJ,cAA2B,gBACA;IAAvBA,0DAAA,MAAuB;IAAIA,wDAAA,WAAc;IAAAA,wDAAA,EAAQ;IAARA,2DAAA,EAAQ;IACjDA,wDAAA,uBAGgB;IACpBA,2DAAA,EAAM;IAGEA,6DAFR,cAAyC,cACG,gBACP;IAA7BA,0DAAA,OAA6B;IACfA,wDAAA,YAAc;IAC5BA,wDAAA,EAAQ;IAARA,2DAAA,EAAQ;IACRA,6DAAA,wBASC;IANGA,yDAAA,2BAAAgyB,uGAAA9S,MAAA;MAAAlf,4DAAA,CAAAuB,GAAA;MAAA,MAAAwf,MAAA,GAAA/gB,4DAAA;MAAA,OAAAA,0DAAA,CAE7B+gB,MAAA,CAAAzP,IAAA,CAAAE,UAAA,CAAgB;QAAA1Q,IAAA,EAAAoe;MAAA,CAClB,CAAC;IAAA,EAD+B;IAKTlf,2DADK,EAAe,EACd;IAEFA,6DADJ,eAAwC,iBAE/B;IADLA,0DAAA,OACK;IAAQA,wDAAA,YAAc;IAAAA,wDAAA,EAC1B;IAD0BA,2DAAA,EAC1B;IACDA,wDAAA,4BAKoB;IAE5BA,2DADI,EAAM,EACJ;IACNA,yDAAA,KAAAiyB,+EAAA,4BAAkD;IA0F9CjyB,6DADJ,eAA2B,iBACE;IAAzBA,qDAAA,QAAyB;IAAgBA,2DAAA,EAAQ;IACjDA,6DAAA,0BAAqC;IACjCA,wDAAA,iBAKE;IAGdA,2DAFQ,EAAiB,EACf,EACH;;;;;IAlKHA,yDAAA,cAAA+gB,MAAA,CAAAzP,IAAA,CAAkB;IAGUtR,wDAAA,EAA2B;IAA3BA,yDAAA,UAAA+gB,MAAA,CAAApV,SAAA,kBAAAoV,MAAA,CAAApV,SAAA,CAAAhB,MAAA,MAA2B;IAsC3C3K,wDAAA,IAA2B;IAM3BA,yDANA,YAAA+gB,MAAA,CAAAzP,IAAA,CAAA4E,KAAA,CAAApV,IAAA,CAA2B,mBAAAd,8DAAA,KAAAiC,GAAA,EAIY,aAAA8e,MAAA,CAAAzP,IAAA,CAAA4E,KAAA,CAAA9J,OAAA,CACR,aAAA2U,MAAA,CAAAkH,QAAA,CACV;IAUrBjoB,wDAAA,GAAwB;IACxBA,yDADA,SAAA+gB,MAAA,CAAAzP,IAAA,CAAA4E,KAAA,CAAApV,IAAA,CAAwB,aAAAigB,MAAA,CAAAkH,QAAA,CACH;IAIlBjoB,wDAAA,EAAiB;IAAAA,yDAAjB,UAAA+gB,MAAA,CAAAmR,QAAA,CAAiB,aAAAC,eAAA,CAAgB;;;;;;IAlEhDnyB,6DALR,cAGC,cACmE,aACtB;IAAtCA,qDAAA,MAAsC;IAC1CA,2DADwD,EAAK,EACvD;IACNA,yDAAA,IAAAoyB,+DAAA,qBAIC;IAoKGpyB,6DAHJ,cAEC,iBAQI;IAFGA,yDAAA,mBAAAqyB,iFAAA;MAAAryB,4DAAA,CAAAgO,GAAA;MAAA,MAAA+S,MAAA,GAAA/gB,4DAAA;MAAA,OAAAA,0DAAA,CAAS+gB,MAAA,CAAAuR,UAAA,EAAY;IAAA,EAAC;IAL1BtyB,qDAAA,MAOC;IAITA,2DAFQ,EAAS,EACP,EACJ;;;;IAlLGA,wDAAA,GAAU;IAAVA,yDAAA,SAAA+gB,MAAA,CAAAzP,IAAA,CAAU;;;;;IATvBtR,sEAAA,GAA6C;IACzCA,yDAAA,IAAAuyB,wDAAA,kBAGC;;;;;;;IADIvyB,wDAAA,EAA2C;IAAAA,yDAA3C,UAAAA,0DAAA,OAAA+gB,MAAA,CAAAtO,OAAA,MAAAsO,MAAA,CAAAyR,YAAA,CAA2C,aAAAC,cAAA,CAAe;;;;;;IAkMnDzyB,iEAAA,GAKe;;;;;IAJXA,wDAAA,EAIJ;IAJIA,wDAAA,EAAA+gB,MAAA,CAAA3O,YAAA,kBAAA2O,MAAA,CAAA3O,YAAA,CAAA/E,UAAA,MAAA0T,MAAA,CAAA3O,YAAA,kBAAA2O,MAAA,CAAA3O,YAAA,CAAA3P,QAAA,EAIJ;;;;;;;IACAzC,iEAAA,GAIe;;;;;IAHXA,wDAAA,EAGJ;IAHIA,wDAAA,CAAA+gB,MAAA,CAAA4R,UAAA,CAGJ,CAAA5R,MAAA,CAAA4R,UAAA;;;;;;;IAMI3yB,iEAAA,GAKe;;;;;IAJXA,wDAAA,EAIJ;IAJIA,wDAAA,EAAA+gB,MAAA,CAAA3O,YAAA,kBAAA2O,MAAA,CAAA3O,YAAA,CAAA/E,UAAA,MAAA0T,MAAA,CAAA3O,YAAA,kBAAA2O,MAAA,CAAA3O,YAAA,CAAA3P,QAAA,EAIJ;;;;;;;IACAzC,iEAAA,GAIe;;;;;IAHXA,wDAAA,EAGJ;IAHIA,wDAAA,CAAA+gB,MAAA,CAAA4R,UAAA,CAGJ,CAAA5R,MAAA,CAAA4R,UAAA;;;;;;;IA5BR3yB,6DALR,cAGC,cACgE,aAC/B;IAA1BA,0DAAA,OAA0B;IAQtBA,yDANA,IAAA4yB,gEAAA,2BAAgC,IAAAC,gEAAA,2BAMD;IAKnC7yB,wDAAA,EAAK;IAALA,2DAAA,EAAK;IACLA,wDAAA,cAAmD;IACnDA,6DAAA,QAAQ;IAARA,0DAAA,OAAQ;IAEJA,6DAAA,QAAG;IAOCA,yDANA,KAAA8yB,iEAAA,2BAAgC,KAAAC,iEAAA,2BAMD;IAKnC/yB,2DAAA,EAAI;;;IAKRA,wDAAA,EAAI;IACRA,2DADI,EAAI,EACF;IAKEA,6DAJR,eAAiD,eAG5C,kBAOI;IAFGA,yDAAA,mBAAAgzB,2EAAA;MAAAhzB,4DAAA,CAAAizB,IAAA;MAAA,MAAAlS,MAAA,GAAA/gB,4DAAA;MAAA,OAAAA,0DAAA,CAAS+gB,MAAA,CAAAmS,MAAA,EAAQ;IAAA,EAAC;IAJtBlzB,qDAAA,QAMC;IAEDA,2DAAA,EAAS;IACTA,6DAAA,kBAMC;IAFGA,yDAAA,mBAAAmzB,2EAAA;MAAAnzB,4DAAA,CAAAizB,IAAA;MAAA,MAAAlS,MAAA,GAAA/gB,4DAAA;MAAA,OAAAA,0DAAA,CAAA+gB,MAAA,CAAAqS,IAAA,GAAgB,KAAK;IAAA,EAAC;IAJ1BpzB,qDAAA,QAMC;IAKbA,2DAHY,EAAS,EACP,EACJ,EACJ;;;;IA1DqBA,wDAAA,GAAe;IAAfA,yDAAA,UAAA+gB,MAAA,CAAAmR,QAAA,CAAe;IAMflyB,wDAAA,EAAc;IAAdA,yDAAA,SAAA+gB,MAAA,CAAAmR,QAAA,CAAc;IAUVlyB,wDAAA,GAAe;IAAfA,yDAAA,UAAA+gB,MAAA,CAAAmR,QAAA,CAAe;IAMflyB,wDAAA,EAAc;IAAdA,yDAAA,SAAA+gB,MAAA,CAAAmR,QAAA,CAAc;IAMjClyB,wDAAA,GAIJ;IAJIA,wDAAA,EAAA+gB,MAAA,CAAAzV,QAAA,kBAAAyV,MAAA,CAAAzV,QAAA,CAAArG,YAAA,MAAA8b,MAAA,CAAAzV,QAAA,kBAAAyV,MAAA,CAAAzV,QAAA,CAAApG,IAAA,EAIJ,CAAAlF,0DAAA,QAAA+gB,MAAA,CAAA3O,YAAA,kBAAA2O,MAAA,CAAA3O,YAAA,CAAAtR,IAAA,iBAAAd,0DAAA,SAAA+gB,MAAA,CAAA3O,YAAA,kBAAA2O,MAAA,CAAA3O,YAAA,CAAAtR,IAAA,EAAAigB,MAAA,CAAAhgB,WAAA;;;;;;IA6BRf,6DAAA,cAGC;IACGA,wDAAA,sBAA2C;IAC3CA,6DAAA,QAAQ;IAARA,qDAAA,OAAQ;IACZA,2DADiC,EAAI,EAC/B;;;IAFWA,wDAAA,EAAe;IAAfA,yDAAA,gBAAe;;;;;IAM5BA,6DADJ,cAA8C,gBACX;IAA/BA,0DAAA,OAA+B;IAAQA,wDAAA,WAAc;IAAAA,wDAAA,EAAQ;IAARA,2DAAA,EAAQ;IAC7DA,wDAAA,4BAGqB;IACzBA,2DAAA,EAAM;;;;IANqBA,yDAAA,cAAA+gB,MAAA,CAAAzP,IAAA,CAAkB;IAIrCtR,wDAAA,GAAoB;IAApBA,yDAAA,qBAAoB;;;AAOlC,MAAOsd,0BAA2B,SAAQ1d,yDAAY;EAaxD,IAAWsyB,QAAQA,CAAA;IACf,OAAO,IAAI,CAAC/uB,SAAS,CAACmB,GAAG,CAAC,gCAAgC,CAAC;EAC/D;EAEA,IAAWgH,QAAQA,CAAA;IACf,OAAO,IAAI,CAACnI,SAAS,CAACmB,GAAG,CAAC,gBAAgB,CAAC,GACrC,IAAI,CAACd,IAAI,CAAC+H,MAAM,GAChB,IAAI,CAAC/H,IAAI,CAAC8H,QAAQ;EAC5B;EAEA,IAAWgG,IAAIA,CAAA;IACX,OAAO,IAAI,CAAC+hB,QAAQ,CAAC/hB,IAAI;EAC7B;EAEA,IAAWvQ,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACoC,SAAS,CAACpC,WAAW;EACrC;EAEA,IAAWknB,QAAQA,CAAA;IACf,OAAO,IAAI,CAAC9kB,SAAS,CAACmB,GAAG,CAAC,sBAAsB,CAAC;EACrD;EAEAjB,YACYgwB,QAA4B,EAC5BlwB,SAA0B,EAC1BK,IAAyB;IAEjC,KAAK,EAAE;IAJC,KAAA6vB,QAAQ,GAARA,QAAQ;IACR,KAAAlwB,SAAS,GAATA,SAAS;IACT,KAAAK,IAAI,GAAJA,IAAI;IArCC,KAAA8vB,IAAI,GAAG,IAAIv0B,wDAAY,EAAQ;IAEzC,KAAAq0B,IAAI,GAAG,KAAK;IAEH,KAAA3gB,OAAO,GAAG,IAAI,CAAC4gB,QAAQ,CAAC5gB,OAAO;IACxC,KAAA+f,YAAY,GAAG,KAAK;IACX,KAAA7mB,SAAS,GAAG,IAAI,CAACnI,IAAI,CAAColB,gBAAgB;IAC/C,KAAAxW,YAAY,GAAG,IAAI,CAACihB,QAAQ,CAACjhB,YAAY;IACzC,KAAAugB,UAAU,GAAG,CAAC;IACd,KAAAY,QAAQ,GAAG,EAAE;IACb,KAAA1B,iBAAiB,GAAG,EAAE;EA8B7B;EAEa7tB,QAAQA,CAAA;IAAA,IAAA2I,KAAA;IAAA,OAAAC,wJAAA;MACjBD,KAAI,CAACymB,IAAI,GAAG,KAAK;MACjBzmB,KAAI,CAAC0mB,QAAQ,CAACrc,aAAa,EAAE;MAC7B,MAAMrK,KAAI,CAAC6mB,YAAY,EAAE;MACzB7mB,KAAI,CAAC2E,IAAI,CACJhN,GAAG,CAAC,UAAU,CAAC,CACfmvB,aAAa,CAAC,CAAC7C,uDAAU,CAAC8C,QAAQ,EAAE9C,uDAAU,CAAC1tB,KAAK,CAAC,CAAC;MAC3D,MAAMqwB,QAAQ,GAAG5mB,KAAI,CAACxJ,SAAS,CAACmB,GAAG,CAAC,kBAAkB,CAAC,IAAI,EAAE;MAC7D,KAAK,MAAM8I,IAAI,IAAImmB,QAAQ,EAAE;QACzB,MAAM,CAACrwB,KAAK,EAAEgC,IAAI,EAAEksB,OAAO,CAAC,GAAGhkB,IAAI,CAAC6f,KAAK,CAAC,GAAG,CAAC;QAC9CtgB,KAAI,CAAC4mB,QAAQ,CAACpgB,IAAI,CAAC;UAAEjQ,KAAK;UAAEgC,IAAI;UAAEksB;QAAO,CAAE,CAAC;MAChD;MACAzkB,KAAI,CAAC6kB,cAAc,CAAC,EAAE,CAAC;MACvB7kB,KAAI,CAAC1I,YAAY,CACb,OAAO,EACP0I,KAAI,CAAC2E,IAAI,CACJhN,GAAG,CAAC,UAAU,CAAC,CACfoN,YAAY,CAACvN,SAAS,CAAEuC,CAAC,IAAKiG,KAAI,CAAC6kB,cAAc,CAAC9qB,CAAC,CAAC,CAAC,CAC7D;MACDiG,KAAI,CAAC1I,YAAY,CACb,MAAM,EACN0I,KAAI,CAAC2E,IAAI,CACJhN,GAAG,CAAC,YAAY,CAAC,CACjBoN,YAAY,CAACvN,SAAS,CAAEuC,CAAC,IAAKiG,KAAI,CAAC6kB,cAAc,CAAC9qB,CAAC,CAAC,CAAC,CAC7D;MACD,IAAIiG,KAAI,CAACulB,QAAQ,EACbvlB,KAAI,CAAC2E,IAAI,CAACE,UAAU,CAAC;QAAE/O,QAAQ,EAAE;MAAqB,CAAE,CAAC;IAAC;EAClE;EAEO0uB,UAAUA,CAAC/jB,IAAI;IAClB,IAAI,CAACkE,IAAI,CAACE,UAAU,CAAC;MACjB/O,QAAQ,EAAE2K,IAAI,CAAClK,KAAK;MACpBmK,UAAU,EAAED,IAAI,CAAClI,IAAI;MACrBksB,OAAO,EAAEhkB,IAAI,CAACgkB,OAAO;MACrBvY,KAAK,EAAEzL,IAAI,CAACyL;KACf,CAAC;EACN;EAEO2Y,cAAcA,CAAC1hB,MAAc;IAChC,MAAM2S,CAAC,GAAG,CAAC3S,MAAM,IAAI,EAAE,EAAE7M,WAAW,EAAE;IACtC,IAAI,CAAC4uB,iBAAiB,GAAG,IAAI,CAAC0B,QAAQ,CAACzjB,MAAM,CACzC,CAAC;MAAE5M,KAAK;MAAEgC,IAAI;MAAEksB;IAAO,CAAE,KACrBluB,KAAK,CAACD,WAAW,EAAE,CAACyI,QAAQ,CAAC+W,CAAC,CAAC,IAC/Bvd,IAAI,CAACjC,WAAW,EAAE,CAACyI,QAAQ,CAAC+W,CAAC,CAAC,IAC9B2O,OAAO,CAACnuB,WAAW,EAAE,CAACyI,QAAQ,CAAC+W,CAAC,CAAC,CACxC;EACL;EAEOyQ,MAAMA,CAAA;IACT,IAAI,CAACI,IAAI,CAAC7sB,IAAI,EAAE;IAChB,IAAI,CAAC2sB,IAAI,GAAG,KAAK;EACrB;EAEad,UAAUA,CAAA;IAAA,IAAAxa,MAAA;IAAA,OAAAlL,wJAAA;MACnBkL,MAAI,CAACxG,IAAI,CAAC6F,gBAAgB,EAAE;MAC5B,IACI,CAACW,MAAI,CAACxG,IAAI,CAAC8F,KAAK,IACfU,MAAI,CAACoa,QAAQ,IAAI,CAACpa,MAAI,CAACxG,IAAI,CAAC4E,KAAK,CAACgD,MAAM,CAACvO,MAAO,EACnD;QACE,OAAOvC,8EAAW,CACd,6BACIuG,6EAAgB,CAACmJ,MAAI,CAACxG,IAAI,CAAC,CAACyG,IAAI,CAAC,IAAI,CAAC,IAAI,UAC9C,GAAG,CACN;MACL;MACA,MAAM;QAAEtV,QAAQ;QAAE4K,UAAU;QAAE+jB,OAAO;QAAElY;MAAM,CAAE,GAAGpB,MAAI,CAACxG,IAAI,CAAC4E,KAAK;MACjE,MAAMyd,eAAe,GAAG,GAAGlxB,QAAQ,IAAI4K,UAAU,IAAI+jB,OAAO,EAAE;MAC9D,MAAMwC,YAAY,GAAG9b,MAAI,CAAC3U,SAAS,CAACmB,GAAG,CAAC,kBAAkB,CAAC,IAAI,EAAE;MACjEwT,MAAI,CAAC3U,SAAS,CAAC8f,eAAe,CAAC,kBAAkB,EAAE,CAC/C,GAAG2Q,YAAY,CAAC9jB,MAAM,CAAEpJ,CAAC,IAAK,CAACA,CAAC,CAACgF,QAAQ,CAACjJ,QAAQ,CAAC,CAAC,EACpDkxB,eAAe,CAClB,CAAC;MACF,MAAO7b,MAAI,CAACoa,QAAQ,GAAGpa,MAAI,CAAC+b,YAAY,EAAE,GAAG/b,MAAI,CAACgc,WAAW,EAAE;MAC/Dhc,MAAI,CAAC1F,YAAY,GAAG0F,MAAI,CAACub,QAAQ,CAACjhB,YAAY;MAC9C,MAAM0F,MAAI,CAAC0b,YAAY,EAAE;MACzB1b,MAAI,CAACsb,IAAI,GAAG,IAAI;IAAC;EACrB;EAEcI,YAAYA,CAAA;IAAA,IAAAla,MAAA;IAAA,OAAA1M,wJAAA;MACtB,MAAM0M,MAAI,CAAC9V,IAAI,CAACwS,WAAW,CAAClS,IAAI,CAACiM,sDAAK,CAAErJ,CAAC,IAAKA,CAAC,CAAC,CAAC,CAACmG,SAAS,EAAE;MAC7DyM,MAAI,CAAC+Z,QAAQ,CAACxhB,UAAU,CAAC;QAAE5Q,IAAI,EAAE;MAAS,CAAE,CAAC;MAC7CqY,MAAI,CAAChI,IAAI,CAACE,UAAU,CAAC;QACjB7O,YAAY,EAAE,SAAS;QACvBqC,KAAK,EAAE,CAACsU,MAAI,CAAC9V,IAAI,CAAC8H,QAAQ,EAAElJ,EAAE;OACjC,CAAC;MACF,IAAIkX,MAAI,CAAC4Y,QAAQ,EACb5Y,MAAI,CAAChI,IAAI,CAACE,UAAU,CAAC;QAAE/O,QAAQ,EAAE;MAAqB,CAAE,CAAC;IAAC;EAClE;EAEcqxB,WAAWA,CAAA;IAAA,IAAA9Z,MAAA;IAAA,OAAApN,wJAAA;MACrB,MAAMsJ,KAAK,GAAG8D,MAAI,CAAC1I,IAAI,CAAC4E,KAAK;MAC7B8D,MAAI,CAAC1I,IAAI,CAACE,UAAU,CAAC;QACjBtM,IAAI,EAAEgR,KAAK,CAAC7I,UAAU;QACtB0mB,SAAS,EAAE,CACP,IAAIjD,+DAAI,CAAC;UACL5rB,IAAI,EAAEgR,KAAK,CAAC7I,UAAU;UACtBnK,KAAK,EAAEgT,KAAK,CAACzT,QAAQ;UACrB8R,YAAY,EAAE2B,KAAK,CAACkb,OAAO;UAC3BvY,KAAK,EAAE3C,KAAK,CAAC2C;SAChB,CAAC;OAET,CAAC;MACF,MAAMmB,MAAI,CAACqZ,QAAQ,CAACzb,QAAQ,EAAE,CAAC9K,KAAK,CAAE0J,CAAC,IAAI;QACvCpO,8EAAW,CAACoO,CAAC,CAAC;QACd,MAAMA,CAAC;MACX,CAAC,CAAC;IAAC;EACP;EAEcqd,YAAYA,CAAA;IAAA,IAAA1Z,MAAA;IAAA,OAAAvN,wJAAA;MACtBuN,MAAI,CAACqY,YAAY,GAAG,IAAI;MACxB,MAAM7c,KAAK,GAAG,OAAOkb,yEAAY,CAAC,CAAC,CAAC,EAAE;MACtC,MAAM3a,KAAK,GAAGiE,MAAI,CAAC7I,IAAI,CAAC4E,KAAK;MAC7B,MAAMgD,MAAM,GAAGhD,KAAK,CAACgD,MAAM;MAC3BiB,MAAI,CAACwY,UAAU,GAAGzZ,MAAM,CAACvO,MAAM;MAC/B,KAAK,MAAMuJ,IAAI,IAAIgF,MAAM,EAAE;QACvB,IAAI,CAAChF,IAAI,CAAChR,KAAK,EAAE;QACjBiX,MAAI,CAAC7I,IAAI,CAACE,UAAU,CAAC;UACjB,GAAG0E,KAAK;UACRvT,YAAY,EAAE,SAAS;UACvBF,QAAQ,EAAEyR,IAAI,CAAChR,KAAK;UACpBmK,UAAU,EAAE6G,IAAI,CAAChP,IAAI;UACrBgP,IAAI,EAAE9U,4DAAW,EAAE;UACnBsF,WAAW,EAAEiR,KAAK;UAClBzQ,IAAI,EAAEgP,IAAI,CAAChP,IAAI;UACfgU,MAAM,EAAE,EAAE;UACV6a,SAAS,EAAE,CACP,IAAIjD,+DAAI,CAAC;YACL5rB,IAAI,EAAEgP,IAAI,CAAChP,IAAI;YACfhC,KAAK,EAAEgR,IAAI,CAAChR,KAAK;YACjBqR,YAAY,EAAEL,IAAI,CAACkd,OAAO,IAAIld,IAAI,CAACK,YAAY;YAC/CsE,KAAK,EAAE3E,IAAI,CAAC2E;WACf,CAAC;SAET,CAAC;QACF,MAAMsB,MAAI,CAACkZ,QAAQ,CAACzb,QAAQ,EAAE,CAAC9K,KAAK,CAAE0J,CAAC,IAAI;UACvCpO,8EAAW,CAACoO,CAAC,CAAC;UACd2D,MAAI,CAACqY,YAAY,GAAG,KAAK;UACzB,MAAMhc,CAAC;QACX,CAAC,CAAC;MACN;MACA2D,MAAI,CAACqY,YAAY,GAAG,KAAK;IAAC;EAC9B;EAAC,QAAA9rB,CAAA;qBAxLQ4W,0BAA0B,EAAAtd,gEAAA,CAAA4G,qEAAA,GAAA5G,gEAAA,CAAA6G,4DAAA,GAAA7G,gEAAA,CAAA8G,+FAAA;EAAA;EAAA,QAAAG,EAAA;UAA1BqW,0BAA0B;IAAApW,SAAA;IAAAE,OAAA;MAAAksB,IAAA;IAAA;IAAAjsB,QAAA,GAAArH,yEAAA;IAAAwH,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAhRmBC,SAAA,+EAAc;;;;;;;;;;iBAiLnDA,SAAA,qFAED;;;;;;;;;;;;;;;;;;iBAnJ2BA,SAAA,sEAAI,gBAAM,oBAAC,iBAAO;;;;;;;;;;;;;;;;;;iBAQRA,SAAA,4EACf,iBAAM,oBAAC,kBAAO;;;;;;;;;;;;;;;;;;iBAevBA,SAAA,0EAAQ,iBAAM,oBAAC,kBAAO;;;;;;;;;;iBAoGNA,SAAA,gFAAgB;;;;;;;;;;iBAzIpBA,SAAA,gFAAe;;;;;;;;;;;;;;;;;;iBAXTA,SAAA,2EACf,gBAAM,oBAAC,iBAAO;;;;;;;;;;;;;;;;;;iBA4DjBA,SAAA,8EAAY,gBAAM,oBAAC,iBAAO;;;;;;;;;;;;;;;;;;iBAmCCA,SAAA,+EACf,iBAAM,oBAAC,kBAAO;;;;;;;;;;kBAcXA,SAAA,4FAEhB;;;;;;;;;;kBAuB2BA,SAAA,wEAAO;;;;;;;;;;;;;;;;;;;;;;;;;;kBA6CpBA,SAAA,0FAEtB,kCAAgC,4BAC5B,iBAGE,mBACN,yEAAe,2BACf,kCAA+B,8BAC3B,iBAAgB,4BAAQ,iBAEtB,qBACN,yEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAGXA,SAAA,0FAEJ,gBAAG,sBACC,mCAAgC,4BAC5B,iBAGE,mBACN,2EAAe,2BACf,mCAA+B,8BAC3B,iBAAgB,4BAAQ,iBAEtB,qBACN,2EAAe,2BACnB,iBAAI,iCAEJ,eAA8C,0BAC9C,eAA6C,wBAC7C,eAA4C,oBAChD;;;;;;;;;;;kBAYKA,SAAA,gFAED;;;;;;;;;;kBAOCA,SAAA,uFAED;;;;;;;;;;kBAWAA,SAAA,sFAAqB;;;;;;;;;;;;;;;;;;kBAKEA,SAAA,0EAAQ,gBAAM,oBAAC,iBAAO;;;;;;QAF7D1N,yDA1QA,IAAAg0B,kDAAA,2BAA6C,IAAAC,iDAAA,kCAAAj0B,qEAAA,CA6LpB,IAAAk0B,iDAAA,gCAAAl0B,qEAAA,CAoEA,IAAAm0B,iDAAA,gCAAAn0B,qEAAA,CASC;;;;QA1QEA,yDAAb,UAAA8H,GAAA,CAAAsrB,IAAA,CAAa,aAAAgB,cAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;ACfoB;AAErB;AAC4B;;;;;;;;;;IAalEp0B,4DAAA,gBAeC;IADGA,wDAAA,mBAAAq0B,8DAAA;MAAA,MAAAC,SAAA,GAAAt0B,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAAkV,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAAoV,OAAA,CAAA9tB,IAAA,CAAA6tB,SAAA,CAAoB;IAAA,EAAC;IAc9Bt0B,uDAZA,aAGO,aAIA,aAIA,aAIA;IACPA,4DAAA,aAEC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAM;IAENA,uDAAA,aAAqD;IACzDA,0DAAA,EAAS;;;;;IA5BLA,yDANA,sBAAAs0B,SAAA,CAAAG,QAAA,QAAkD,mBAAAH,SAAA,CAAAG,QAAA,QACH,oBAAAH,SAAA,CAAAG,QAAA,OAAAH,SAAA,CAAAI,IAAA,SAG9C,qBAAAvV,MAAA,CAAAhe,MAAA,CAAAmzB,SAAA,EACwC,iBAAAA,SAAA,CAAAG,QAAA,OAAAH,SAAA,CAAAI,IAAA,SACuB;IAPhE10B,yDAAA,eAAAmf,MAAA,CAAAwD,QAAA,IAAAxD,MAAA,CAAAwD,QAAA,KAAA2R,SAAA,CAAAlyB,EAAA,CAAuD;IASvDpC,wDADA,eAAAs0B,SAAA,CAAApvB,IAAA,CAA0B,aAAAovB,SAAA,CAAAjf,QAAA,WACY;IAsBlCrV,uDAAA,GACJ;IADIA,gEAAA,MAAAs0B,SAAA,CAAApvB,IAAA,MACJ;;;AAqBV,MAAOgZ,mBAAmB;EAS5B,IAAWyW,OAAOA,CAAA;IACd,IAAIA,OAAO,GAAG,CAAC;IACf,KAAK,MAAMC,MAAM,IAAI,IAAI,CAACC,IAAI,EAAEha,OAAO,IAAI,EAAE,EAAE;MAC3C,MAAMmR,CAAC,GAAG4I,MAAM,CAACH,QAAQ,CAAC,CAAC,CAAC,GAAGG,MAAM,CAACF,IAAI,CAAC,CAAC,CAAC;MAC7C,IAAI1I,CAAC,GAAG2I,OAAO,EAAEA,OAAO,GAAG3I,CAAC;IAChC;IACA,OAAO2I,OAAO;EAClB;EAEAtxB,YAAoBF,SAA0B;IAA1B,KAAAA,SAAS,GAATA,SAAS;IAhBb,KAAA2xB,WAAW,GAA2B;MAClD,IAAI,EAAE,MAAM;MACZ,GAAG,EAAE;KACR;IACe,KAAAnS,QAAQ,GAAG,EAAE;IACZ,KAAA4R,OAAO,GAAG,IAAIx1B,uDAAY,EAAU;EAWJ;EAE1CoC,MAAMA,CAACyzB,MAAc;IACxB,MAAM/H,OAAO,GAAG,IAAI,CAAC1pB,SAAS,CAACmB,GAAG,CAAC,oBAAoB,CAAC,IAAI,EAAE;IAC9D,MAAM4R,KAAK,GAAG,IAAI,CAAC4e,WAAW,CAACF,MAAM,CAACxyB,EAAE,CAAC,IAAI,MAAM;IACnD,OACIyqB,OAAO,CAAC,WAAW3W,KAAK,EAAE,CAAC,IAC3B2W,OAAO,CAAC,GAAG3W,KAAK,EAAE,CAAC,IACnBoV,wFAAe,CAAC,GAAGpV,KAAK,EAAE,CAAC;EAEnC;EAAC,QAAAxP,CAAA;qBA5BQwX,mBAAmB,EAAAle,+DAAA,CAAA4G,4DAAA;EAAA;EAAA,QAAAK,EAAA;UAAnBiX,mBAAmB;IAAAhX,SAAA;IAAAC,MAAA;MAAA0tB,IAAA;MAAAC,WAAA;MAAAnS,QAAA;IAAA;IAAAvb,OAAA;MAAAmtB,OAAA;IAAA;IAAA/sB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAotB,6BAAAltB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAjExB7H,4DAAA,aAAqC;QACjCA,oDAAA,GACJ;QAAAA,0DAAA,EAAM;QACNA,4DAAA,aAIC;QACGA,wDAAA,IAAAg1B,qCAAA,qBAeC;QAyBLh1B,0DAAA,EAAM;;;QA/CFA,uDAAA,EACJ;QADIA,gEAAA,MAAA8H,GAAA,CAAA+sB,IAAA,kBAAA/sB,GAAA,CAAA+sB,IAAA,CAAA3vB,IAAA,MACJ;QAGIlF,uDAAA,EAA8D;QAC9DA,yDADA,sCAAA8H,GAAA,CAAA6sB,OAAA,YAA8D,oCAAA7sB,GAAA,CAAA+sB,IAAA,kBAAA/sB,GAAA,CAAA+sB,IAAA,CAAApF,MAAA,aACE;QAGzCzvB,uDAAA,EAAsB;QAAtBA,wDAAA,aAAA8H,GAAA,CAAA+sB,IAAA,kBAAA/sB,GAAA,CAAA+sB,IAAA,CAAAha,OAAA,KAAA7a,6DAAA,IAAAiC,GAAA,EAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBI;AACY;AACpB;AAEkB;AAKV;;;;;;;;;;;;;;;;;IAgBrCjC,4DAAA,uBAKC;IAFGA,wDAAA,2BAAAk1B,mGAAAhW,MAAA;MAAA,MAAA4B,MAAA,GAAA9gB,2DAAA,CAAAuB,GAAA,EAAA0I,SAAA;MAAA,MAAA8W,MAAA,GAAA/gB,2DAAA;MAAA,OAAAA,yDAAA,CAAiB+gB,MAAA,CAAA5K,UAAA,CAAA2K,MAAA,EAAA5B,MAAA,CAAuB;IAAA,EAAC;IAGzClf,oDAAA,GACJ;IAAAA,0DAAA,EAAe;;;;;IAHXA,wDAFA,aAAA+gB,MAAA,CAAAC,iBAAA,IAAAhhB,6DAAA,IAAAiC,GAAA,GAAAyJ,QAAA,CAAAoV,MAAA,EAAmD,mBAAA9gB,6DAAA,IAAAmC,GAAA,EAEZ;IAEvCnC,uDAAA,EACJ;IADIA,gEAAA,MAAA8gB,MAAA,MACJ;;;;;IATJ9gB,4DADJ,cAAoD,gBAC7B;IAAAA,oDAAA,WAAI;IAAAA,0DAAA,EAAQ;IAC/BA,4DAAA,cAA4D;IACxDA,wDAAA,IAAAm1B,4DAAA,2BAKC;IAITn1B,0DADI,EAAM,EACJ;;;;IARsBA,uDAAA,GAAW;IAAXA,wDAAA,YAAA+gB,MAAA,CAAA1Z,QAAA,CAAW;;;;;IAYnCrH,uDAAA,cAKE;;;;IAFEA,wDAAA,WAAAkhB,OAAA,CAAAtY,MAAA,IAAyB;;;;;IAIzB5I,uDAAA,cAGE;;;;;IAiBFA,4DAJJ,cAGC,mBAEQ;IAAAA,oDAAA,iBAAU;IAAAA,0DAAA,EACd;IACDA,4DAAA,QAAG;IAAAA,oDAAA,4BAAqB;IAC5BA,0DAD4B,EAAI,EAC1B;;;;;;IApDdA,4DAAA,cAIC;IACGA,wDAAA,IAAAo1B,6CAAA,kBAAoD;IAapDp1B,4DAAA,cAEC;IAOGA,wDANA,IAAAq1B,6CAAA,kBAKE,IAAAC,qDAAA,gCAAAt1B,oEAAA,CACwB;IAM9BA,0DAAA,EAAM;IAEFA,4DADJ,cAA4B,cACC;IACrBA,oDAAA,GACJ;IAAAA,0DAAA,EAAM;IAEFA,4DADJ,cAAiD,oBAExC;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EACT;IACDA,4DAAA,SAAG;IAAAA,oDAAA,IAAgD;IACvDA,0DADuD,EAAI,EACrD;IACNA,wDAAA,KAAAu1B,8CAAA,kBAGC;IASGv1B,4DAHJ,eAEC,kBAOI;IADGA,wDAAA,mBAAAw1B,iEAAA;MAAA,MAAAtU,OAAA,GAAAlhB,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAA8W,MAAA,GAAA/gB,2DAAA;MAAA,OAAAA,yDAAA,CAAS+gB,MAAA,CAAAQ,eAAA,CAAAL,OAAA,CAAqB;IAAA,EAAC;IAE/BlhB,4DAAA,eAA8C;IAA9CA,yDAAA,OAA8C;IAC1CA,uDAAA,gBAAyB;IAE7BA,uDAAA,EAAM;IACVA,0DADI,EAAM,EACD;IACTA,4DAAA,kBAMC;IADGA,wDAAA,mBAAAy1B,iEAAA;MAAA,MAAAvU,OAAA,GAAAlhB,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAA8W,MAAA,GAAA/gB,2DAAA;MAAA,OAAAA,yDAAA,CAAS+gB,MAAA,CAAAY,cAAA,CAAAT,OAAA,CAAoB;IAAA,EAAC;IAE9BlhB,4DAAA,eAA8C;IAA9CA,yDAAA,OAA8C;IAC1CA,uDAAA,gBAA0B;IAE9BA,uDAAA,EAAM;IAGlBA,0DAHY,EAAM,EACD,EACP,EACJ;IACNA,4DAAA,kBAOC;IADGA,wDAAA,mBAAA01B,iEAAA;MAAA11B,2DAAA,CAAAgO,GAAA;MAAA,MAAA+S,MAAA,GAAA/gB,2DAAA;MAAA,OAAAA,yDAAA,CAAS+gB,MAAA,CAAAc,eAAA,CAAAd,MAAA,CAAAnM,KAAA,CAAsB;IAAA,EAAC;IAEhC5U,4DAAA,gBAAU;IAAAA,oDAAA,IAIR;IAEVA,0DAFU,EAAW,EACR,EACP;;;;;;IA3FIA,uDAAA,EAAsB;IAAtBA,wDAAA,SAAA+gB,MAAA,CAAA1Z,QAAA,kBAAA0Z,MAAA,CAAA1Z,QAAA,CAAAsD,MAAA,CAAsB;IAkBnB3K,uDAAA,GAA2B;IAAAA,wDAA3B,SAAAkhB,OAAA,CAAAtY,MAAA,kBAAAsY,OAAA,CAAAtY,MAAA,CAAA+B,MAAA,CAA2B,aAAAmX,cAAA,CAAgB;IAa5C9hB,uDAAA,GACJ;IADIA,gEAAA,MAAAkhB,OAAA,CAAAhc,IAAA,kBACJ;IAKOlF,uDAAA,GAAgD;IAAhDA,+DAAA,EAAAkhB,OAAA,CAAAnM,IAAA,kBAAAmM,OAAA,CAAAnM,IAAA,CAAA9P,YAAA,MAAAic,OAAA,CAAAnM,IAAA,kBAAAmM,OAAA,CAAAnM,IAAA,CAAA7P,IAAA,EAAgD;IAIlDlF,uDAAA,EAAqB;IAArBA,wDAAA,SAAAkhB,OAAA,CAAAyU,UAAA,CAAqB;IAyC1B31B,uDAAA,IAAqD;IAArDA,yDAAA,kBAAA+gB,MAAA,CAAAgB,SAAA,CAAArW,QAAA,CAAAqV,MAAA,CAAAnM,KAAA,kBAAAmM,MAAA,CAAAnM,KAAA,CAAAxS,EAAA,EAAqD;IAG3CpC,uDAAA,GAIR;IAJQA,+DAAA,CAAA+gB,MAAA,CAAAgB,SAAA,CAAArW,QAAA,CAAAqV,MAAA,CAAAnM,KAAA,kBAAAmM,MAAA,CAAAnM,KAAA,CAAAxS,EAAA,mCAIR;;;AApGtB,MAAM4f,UAAU,GAAa,EAAE;AAiIzB,MAAO3D,wBAAwB;EAUjC,IAAW0D,SAASA,CAAA;IAChB,OAAO,IAAI,CAAC5e,SAAS,CAACmB,GAAG,CAAW2wB,8FAAc,CAAC,IAAIjT,UAAU;EACrE;EAEA3e,YACYF,SAA0B,EAC1BG,OAAkB;IADlB,KAAAH,SAAS,GAATA,SAAS;IACT,KAAAG,OAAO,GAAPA,OAAO;IAfH,KAAA+D,QAAQ,GAAa,EAAE;IAChC,KAAA4a,SAAS,GAAG,CAAC;IACb,KAAA5X,KAAK,GAAmB,EAAE;IAC1B,KAAA6X,QAAQ,GAAG,KAAK;IAChB,KAAAlB,iBAAiB,GAAa,EAAE;IAmDvC;IACgB,KAAAmB,gBAAgB,GAAIC,EAA+B,IAC9D,IAAI,CAACC,SAAS,GAAGD,EAAG;IACzB;IACgB,KAAAE,iBAAiB,GAAIF,EAA+B,IAC/D,IAAI,CAACG,QAAQ,GAAGH,EAAG;IACR,KAAAI,gBAAgB,GAAIC,CAAU,IAAM,IAAI,CAACP,QAAQ,GAAGO,CAAE;EA7CnE;EAEH;EACOlB,eAAeA,CAAA;IAClB,MAAMjb,GAAG,GAAG,IAAI,CAAChD,OAAO,CAACiD,IAAI,CAAC6X,0GAA0B,EAAE;MACtDhY,IAAI,EAAE;QACFiE,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBsI,OAAO,EAAE;UAAE+P,QAAQ,EAAE,IAAI,CAACT;QAAS;;KAE1C,CAAC;IACF3b,GAAG,CAACgH,WAAW,EAAE,CAACnJ,SAAS,CAAEkG,KAAsB,IAAI;MACnD,IAAI,CAACA,KAAK,EAAEA,KAAK,GAAG/D,GAAG,CAACE,iBAAiB,CAACmc,QAAQ;MAClD,IAAI,CAACC,QAAQ,CAACvY,KAAK,CAAC;IACxB,CAAC,CAAC;EACN;EAEA;EACOsX,cAAcA,CAAC5d,KAAmB;IACrC,IAAI,CAAC6e,QAAQ,CAAC,IAAI,CAACvY,KAAK,CAACyF,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAK2B,KAAK,CAAC3B,EAAE,CAAC,CAAC;EAC9D;EAEA;;;;EAIOwgB,QAAQA,CAACC,SAAyB;IACrC,IAAI,CAACxY,KAAK,GAAGwY,SAAS;IACtB,IAAI,IAAI,CAACR,SAAS,EAAE,IAAI,CAACA,SAAS,CAAC,IAAI,CAAChY,KAAK,CAAC;EAClD;EAEA;EACA;;;;EAIOyY,UAAUA,CAAC5M,KAAqB;IACnC,IAAI,CAAC7L,KAAK,GAAG6L,KAAK,IAAI,EAAE;EAC5B;EAUO2L,eAAeA,CAAC9d,KAAmB;IACtC,MAAMgf,QAAQ,GAAG,IAAI,CAAChB,SAAS;IAC/B,MAAMiB,SAAS,GAAG,CAACD,QAAQ,CAACrX,QAAQ,CAAC3H,KAAK,CAAC3B,EAAE,CAAC;IAC9C,IAAI4gB,SAAS,EAAE;MACX,IAAI,CAAC7f,SAAS,CAAC8f,eAAe,CAACgS,8FAAc,EAAE,CAC3C,GAAGlS,QAAQ,EACXhf,KAAK,CAAC3B,EAAE,CACX,CAAC;IACN,CAAC,MAAM;MACH,IAAI,CAACe,SAAS,CAAC8f,eAAe,CAC1BgS,8FAAc,EACdlS,QAAQ,CAACjT,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,KAAK3C,KAAK,CAAC3B,EAAE,CAAC,CACzC;IACL;EACJ;EAAC,QAAAsE,CAAA;qBA9EQ2X,wBAAwB,EAAAre,+DAAA,CAAA4G,iFAAA,GAAA5G,+DAAA,CAAA6G,+DAAA;EAAA;EAAA,QAAAI,EAAA;UAAxBoX,wBAAwB;IAAAnX,SAAA;IAAAC,MAAA;MAAAE,QAAA;IAAA;IAAAA,QAAA,GAAArH,gEAAA,CARtB,CACP;MACImjB,OAAO,EAAExC,6DAAiB;MAC1ByC,WAAW,EAAE1C,yDAAU,CAAC,MAAMrC,wBAAwB,CAAC;MACvDgF,KAAK,EAAE;KACV,CACJ;IAAA7b,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAdsBC,SAAA,2EAAU;;;;;;;;;;;;;;;;;;iBA3CLA,SAAA,kFAAU,2BAAI,kBAAW,8BAE7B;;;;;;;;;;;;;;;;;;iBAUIA,SAAA,mFAAU,4BAAK,kBAAW,8BAE9B;;;;;;QA/EpB1N,4DAAA,aAA4B;QACxBA,wDAAA,IAAA41B,uCAAA,kBAIC;QA6FL51B,0DAAA,EAAM;QACNA,4DAAA,gBAMC;QADGA,wDAAA,mBAAA61B,0DAAA;UAAA,OAAS/tB,GAAA,CAAAyZ,eAAA,EAAiB;QAAA,EAAC;QAGvBvhB,4DADJ,aAAwD,eAC1C;QAAAA,oDAAA,aAAM;QAAAA,0DAAA,EAAW;QAC3BA,4DAAA,WAAW;QAAXA,oDAAA,MAAW;QAEnBA,0DAF6B,EAAO,EAC1B,EACD;QACTA,4DAAA,aAA2D;QACvDA,uDAAA,aAAkD;QACtDA,0DAAA,EAAM;;;QA7GmBA,uDAAA,EAAQ;QAARA,wDAAA,YAAA8H,GAAA,CAAAuC,KAAA,CAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB8B;AAClC;AACK;AACiC;AACvB;;;;;;;;;;;IA4CpBrK,4DAJJ,cAGC,eACa;IAAAA,oDAAA,WAAI;IAClBA,0DADkB,EAAW,EACvB;;;;;IACNA,uDAAA,cAQE;;;;IADEA,wDAAA,WAAA+1B,cAAA,CAAAntB,MAAA,IAAgC;;;;;IAGhC5I,uDAAA,cAGE;;;;;;IA5BdA,4DANJ,aAKC,iBAMI;IADGA,wDAAA,mBAAAg2B,kFAAA;MAAA,MAAAD,cAAA,GAAA/1B,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAAkV,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAA8W,gBAAA,CAAAF,cAAA,CAA6B;IAAA,EAAC;IAEvC/1B,4DAAA,cAEC;IAgBGA,wDAfA,IAAAk2B,+DAAA,kBAGC,IAAAC,+DAAA,kBAWC,IAAAC,uEAAA,gCAAAp2B,oEAAA,CACwB;IAM9BA,0DAAA,EAAM;IAEFA,4DADJ,cAA6C,eACf;IACtBA,oDAAA,GAKJ;IAAAA,0DAAA,EAAO;IAEHA,4DADJ,eAAiD,oBACb;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAW;IAChDA,4DAAA,aAAmB;IACfA,oDAAA,IAKJ;IACJA,0DADI,EAAI,EACF;IAEFA,4DADJ,eAAiD,oBAExC;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EACV;IACDA,4DAAA,aAAmB;IACfA,oDAAA,IAGJ;IAGZA,0DAHY,EAAI,EACF,EACJ,EACD;IACTA,4DAAA,kBAOC;IADGA,wDAAA,mBAAAq2B,mFAAA;MAAA,MAAAN,cAAA,GAAA/1B,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAAkV,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAAyF,SAAA,CAAAne,IAAA,CAAAsvB,cAAA,CAA2B;IAAA,EAAC;IAErC/1B,4DAAA,gBAAU;IAAAA,oDAAA,IAIR;IAEVA,0DAFU,EAAW,EACR,EACR;;;;;;IA7EDA,yDAAA,qBAAAmf,MAAA,CAAA6F,MAAA,KAAA+Q,cAAA,CAAA3zB,EAAA,CAAoD;IAavCpC,uDAAA,GAAuC;IAAvCA,wDAAA,SAAAmf,MAAA,CAAAwD,QAAA,CAAAjX,QAAA,CAAAqqB,cAAA,CAAA3zB,EAAA,EAAuC;IAMvCpC,uDAAA,EAGb;IAAAA,wDAHa,SAAA+1B,cAAA,CAAAntB,MAAA,kBAAAmtB,cAAA,CAAAntB,MAAA,CAAA+B,MAAA,CAGb,aAAAigB,cAAA,CAClB;IAY8B5qB,uDAAA,GAKJ;IALIA,gEAAA,MAAA+1B,cAAA,CAAA7wB,IAAA,IAAA6wB,cAAA,CAAA3zB,EAAA,uBAKJ;IAIQpC,uDAAA,GAKJ;IALIA,gEAAA,OAAA+1B,cAAA,CAAAhhB,IAAA,kBAAAghB,cAAA,CAAAhhB,IAAA,CAAA9P,YAAA,MAAA8wB,cAAA,CAAAhhB,IAAA,kBAAAghB,cAAA,CAAAhhB,IAAA,CAAA7P,IAAA,uBAKJ;IAOIlF,uDAAA,GAGJ;IAHIA,gEAAA,MAAA+1B,cAAA,CAAAphB,SAAA,cAAAohB,cAAA,CAAAlb,OAAA,CAAAlQ,MAAA,qBAGJ;IASR3K,uDAAA,EAAmD;IAAnDA,yDAAA,kBAAAmf,MAAA,CAAA0L,WAAA,CAAAkL,cAAA,CAAA3zB,EAAA,EAAmD;IAGzCpC,uDAAA,GAIR;IAJQA,+DAAA,CAAAmf,MAAA,CAAA0L,WAAA,CAAAkL,cAAA,CAAA3zB,EAAA,mCAIR;;;;;IAnFdpC,4DAAA,YAGC;IACGA,wDAAA,IAAAs2B,yDAAA,mBAKC;;IA6ELt2B,0DAAA,EAAK;;;;IAhF2BA,uDAAA,EAAuB;IAAvBA,wDAAA,YAAAA,yDAAA,OAAAmf,MAAA,CAAAoX,YAAA,EAAuB;;;;;IAP3Dv2B,qEAAA,GAAkE;IAC9DA,wDAAA,IAAAw2B,oDAAA,gBAGC;;;;;;;;IADIx2B,uDAAA,EAAsC;IAAAA,wDAAtC,UAAAunB,OAAA,GAAAvnB,yDAAA,OAAAmf,MAAA,CAAAoX,YAAA,oBAAAhP,OAAA,CAAA5c,MAAA,CAAsC,aAAAqgB,cAAA,CAAgB;;;;;IAuF3DhrB,4DAAA,cAGC;IACGA,uDAAA,sBAA2C;IAC3CA,4DAAA,YAAsB;IAAAA,oDAAA,wCAAiC;IAC3DA,0DAD2D,EAAI,EACzD;;;IAFWA,uDAAA,EAAe;IAAfA,wDAAA,gBAAe;;;;;IAS5BA,4DAJJ,cAGC,YACqC;IAC9BA,oDAAA,mEACJ;IACJA,0DADI,EAAI,EACF;;;AAIZ,MAAOwe,uBAAuB;EAiChCnb,YACYwiB,MAA0B,EAC1B4Q,QAAwB;IADxB,KAAA5Q,MAAM,GAANA,MAAM;IACN,KAAA4Q,QAAQ,GAARA,QAAQ;IAlCJ,KAAAzR,MAAM,GAAW,EAAE;IACnB,KAAArC,QAAQ,GAAW,EAAE;IACrB,KAAAZ,SAAS,GAAa,EAAE;IACvB,KAAAkJ,QAAQ,GAAG,IAAIlsB,uDAAY,EAAgB;IAC3C,KAAA6lB,SAAS,GAAG,IAAI7lB,uDAAY,EAAgB;IAE7C,KAAAw3B,YAAY,GAAGjnB,mDAAa,CAAC,CACzC,IAAI,CAACuW,MAAM,CAAClT,OAAO,EACnB,IAAI,CAACkT,MAAM,CAAC7R,mBAAmB,EAC/B,IAAI,CAACyiB,QAAQ,CAACC,cAAc,CAC/B,CAAC,CAAC5yB,IAAI,CACHrE,mDAAG,CAAC,CAAC,CAAC;MAAEmmB;IAAQ,CAAE,EAAEhT,SAAS,EAAE+jB,KAAK,CAAC,KAAI;MACrC,OAAOA,KAAK,CACP7mB,MAAM,CACFgK,CAAC,IACE,CAAC,CAAC8L,QAAQ,IAAI,IAAI,CAACiF,WAAW,CAAC/Q,CAAC,CAAC1X,EAAE,CAAC,KACpCwQ,SAAS,CAACnH,IAAI,CAAE/E,CAAM,IAAKA,CAAC,CAACoU,OAAO,KAAKhB,CAAC,CAAC1X,EAAE,CAAC,CACrD,CACA3C,GAAG,CAAEo1B,IAAI,KAAM;QACZ,GAAGA,IAAI;QACPlgB,SAAS,EAAE/B,SAAS,CAAC9C,MAAM,CACtBpJ,CAAM,IAAKA,CAAC,CAACoU,OAAO,KAAK+Z,IAAI,CAACzyB,EAAE,CACpC,CAACuI,MAAM;QACRkQ,OAAO,EAAEga,IAAI,CAACha,OAAO,CAACpb,GAAG,CAAEiH,CAAC,KAAM;UAC9B,GAAGA,CAAC;UACJqO,IAAI,EAAE8f,IAAI,CAAC9f;SACd,CAAC;OACL,CAAC,CAAC;IACX,CAAC,CAAC,CACL;IACe,KAAAtC,OAAO,GAAG,IAAI,CAACoT,MAAM,CAACpT,OAAO;EAK1C;EAEIoY,WAAWA,CAAC+L,cAAsB;IACrC,OAAO,IAAI,CAAC7U,SAAS,CAACrW,QAAQ,CAACkrB,cAAc,CAAC;EAClD;EAEOX,gBAAgBA,CAACY,WAAyB;IAC7C,IAAI,CAAC5L,QAAQ,CAACxkB,IAAI,CAACowB,WAAW,CAAC;EACnC;EAAC,QAAAnwB,CAAA;qBA5CQ8X,uBAAuB,EAAAxe,+DAAA,CAAA4G,qEAAA,GAAA5G,+DAAA,CAAA6G,4DAAA;EAAA;EAAA,QAAAI,EAAA;UAAvBuX,uBAAuB;IAAAtX,SAAA;IAAAC,MAAA;MAAA6d,MAAA;MAAArC,QAAA;MAAAZ,SAAA;IAAA;IAAA3a,OAAA;MAAA6jB,QAAA;MAAArG,SAAA;IAAA;IAAApd,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAlHDC,SAAA,wEAAO;;;;;;;;;;;;;;;;iBACYA,SAAA,mEAC1C,eAAyC,kCAC7C;;;;;;QAHA1N,4DAAA,YAA2B;QAA3BA,oDAAA,MAA2B;QAAOA,0DAAA,EAAK;QACvCA,4DAAA,WAA8C;QAA9CA,oDAAA,MAA8C;;QAE9CA,0DAAA,EAAI;QACJA,wDAAA,IAAA82B,+CAAA,0BAAkE;;QAkGlE92B,wDATA,IAAA+2B,8CAAA,gCAAA/2B,oEAAA,CAAyB,IAAAg3B,8CAAA,gCAAAh3B,oEAAA,CASC;;;;;;QApGtBA,uDAAA,GACJ;QADIA,uDAAA,GAAAkqB,OAAA,GAAAlqB,yDAAA,OAAA8H,GAAA,CAAAyuB,YAAA,oBAAArM,OAAA,CAAAvf,MAAA,OACJ;;QACe3K,uDAAA,EAAkC;QAAAA,wDAAlC,YAAAwnB,OAAA,GAAAxnB,yDAAA,OAAA8H,GAAA,CAAA2K,OAAA,oBAAA+U,OAAA,CAAA7c,MAAA,EAAkC,aAAA8V,aAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBD;AACP;AACA;AAEI;AACP;AACzB;;;;;;;;;;;;IAkFpBzgB,4DALJ,cAIC,QACM;IAAAA,oDAAA,GAAU;IAAAA,0DAAA,EAAI;IACjBA,4DAAA,iBAMC;IADGA,wDAAA,mBAAAi3B,sEAAA;MAAA,MAAAC,OAAA,GAAAl3B,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAAkV,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAAhJ,UAAA,CAAA+gB,OAAA,EAAiB,KAAK,CAAC;IAAA,EAAC;IAEjCl3B,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAEvBA,0DAFuB,EAAW,EACrB,EACP;;;;IAVCA,uDAAA,GAAU;IAAVA,+DAAA,CAAAk3B,OAAA,CAAU;;;;;;IAYbl3B,4DADJ,cAAqD,WACtC;IAAXA,oDAAA,MAAW;IAAeA,0DAAA,EAAO;IACjCA,4DAAA,iBAMC;IADGA,wDAAA,mBAAAm3B,sEAAA;MAAAn3B,2DAAA,CAAAuf,GAAA;MAAA,MAAAJ,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAAtN,UAAA,CAAW;QAAA+T,QAAA,EAAY;MAAK,CAAE,CAAC;IAAA,EAAC;IAEzC5lB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAEvBA,0DAFuB,EAAW,EACrB,EACP;;;AAIZ,MAAOue,6BAA8B,SAAQ3e,yDAAY;EAO3D,IAAWwF,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACygB,MAAM,CAACvU,IAAI,CAAC4E,KAAK,CAACpV,IAAI;EACtC;EAEA,IAAW8C,GAAGA,CAAA;IACV,MAAM;MAAE9C,IAAI;MAAEuE,QAAQ;MAAE+G;IAAO,CAAE,GAAG,IAAI,CAACyZ,MAAM,CAACvU,IAAI,CAAC4E,KAAK;IAC1D,IAAI9J,OAAO,EAAE,OAAOqZ,kDAAQ,CAAC3kB,IAAI,CAAC;IAClC,OAAOA,IAAI,GAAGuE,QAAQ,GAAG,EAAE,GAAG,IAAI;EACtC;EAKA,IAAWtE,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACoC,SAAS,CAACpC,WAAW;EACrC;EAEAsC,YACYyiB,OAAuB,EACvBD,MAA0B,EAC1B1iB,SAA0B;IAElC,KAAK,EAAE;IAJC,KAAA2iB,OAAO,GAAPA,OAAO;IACP,KAAAD,MAAM,GAANA,MAAM;IACN,KAAA1iB,SAAS,GAATA,SAAS;IA1BL,KAAA6N,IAAI,GAAmB,MAAM;IAC5B,KAAA+U,UAAU,GAAG,IAAIhnB,uDAAY,EAAkB;IAChD,KAAA4T,OAAO,GAAG,IAAI,CAACkT,MAAM,CAAClT,OAAO;IAC7B,KAAAd,UAAU,GAAImU,CAAC,IAAK,IAAI,CAACH,MAAM,CAAChU,UAAU,CAACmU,CAAC,CAAC;IAC7C,KAAA7P,UAAU,GAAG,CAAC8P,CAAC,EAAEzP,CAAC,KAAK,IAAI,CAACqP,MAAM,CAAC1P,UAAU,CAAC8P,CAAC,EAAEzP,CAAC,CAAC;IAYnD,KAAA0P,UAAU,GAAG,MACzB,IAAI,CAACJ,OAAO,CAACvf,IAAI,CAAC+X,6EAAsB,CAAC;EAY7C;EAAC,QAAA5X,CAAA;qBA9BQ6X,6BAA6B,EAAAve,+DAAA,CAAA4G,0EAAA,GAAA5G,+DAAA,CAAA6G,qEAAA,GAAA7G,+DAAA,CAAA8G,4DAAA;EAAA;EAAA,QAAAG,EAAA;UAA7BsX,6BAA6B;IAAArX,SAAA;IAAAC,MAAA;MAAA6J,IAAA;IAAA;IAAA5J,OAAA;MAAA2e,UAAA;IAAA;IAAA1e,QAAA,GAAArH,wEAAA;IAAAwH,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBArE7BC,SAAA,0EAED;;;;;;;;;;iBAUKA,SAAA,sEAED;;;;;;;;;;iBASCA,SAAA,uEAED;;;;;;;;;;iBA8BWA,SAAA,gFAAe;;;;;;QA9D9B1N,4DAJJ,iBAGC,gBAQI;QAFGA,wDAAA,mBAAAo3B,+DAAA;UAAA,OAAStvB,GAAA,CAAAoe,UAAA,EAAY;QAAA,EAAC;QAL1BlmB,oDAAA,MAOC;QAEDA,0DAAA,EAAS;QAELA,4DADJ,aAA+B,gBAS1B;QAFGA,wDAAA,mBAAAq3B,+DAAA;UAAAvvB,GAAA,CAAAkJ,IAAA,GAAgB,KAAK;UAAA,OAAElJ,GAAA,CAAAie,UAAA,CAAAtf,IAAA,CAAAqB,GAAA,CAAAkJ,IAAA,CAAqB;QAAA,EAAC;QANjDhR,oDAAA,MAQC;QAEDA,0DAAA,EAAS;QACTA,4DAAA,gBAQC;QAFGA,wDAAA,mBAAAs3B,+DAAA;UAAAxvB,GAAA,CAAAkJ,IAAA,GAAgB,MAAM;UAAA,OAAElJ,GAAA,CAAAie,UAAA,CAAAtf,IAAA,CAAAqB,GAAA,CAAAkJ,IAAA,CAAqB;QAAA,EAAC;QANlDhR,oDAAA,MAQC;QAITA,0DAFQ,EAAS,EACP,EACA;QAMNA,4DALJ,iBAGC,cAEyB;QAAAA,oDAAA,IAAgC;;QAAAA,0DAAA,EAAM;QAC5DA,4DAAA,eAAsB;QAClBA,oDAAA,IAEJ;;;QAAAA,0DAAA,EAAM;QACNA,wDAAA,KAAAu3B,6CAAA,kBAIC;;QAYDv3B,wDAAA,KAAAw3B,6CAAA,kBAAqD;;QAYzDx3B,0DAAA,EAAU;;;;;QAzDEA,uDAAA,GAAgC;QAAhCA,yDAAA,YAAA8H,GAAA,CAAAkJ,IAAA,WAAgC;QAWhChR,uDAAA,GAAiC;QAAjCA,yDAAA,YAAA8H,GAAA,CAAAkJ,IAAA,YAAiC;QAanBhR,uDAAA,GAAgC;QAAhCA,+DAAA,CAAAA,yDAAA,QAAA8H,GAAA,CAAA1C,KAAA,gBAAgC;QAElDpF,uDAAA,GAEJ;QAFIA,gEAAA,MAAAA,yDAAA,SAAA8H,GAAA,CAAA1C,KAAA,EAAA0C,GAAA,CAAA/G,WAAA,eAAAf,yDAAA,SAAA8H,GAAA,CAAAlE,GAAA,EAAAkE,GAAA,CAAA/G,WAAA,OAEJ;QAIqBf,uDAAA,GAAoC;QAApCA,wDAAA,cAAAwnB,OAAA,GAAAxnB,yDAAA,SAAA8H,GAAA,CAAA6K,OAAA,oBAAA6U,OAAA,CAAAngB,QAAA,KAAArH,6DAAA,KAAAiC,GAAA,EAAoC;QAavCjC,uDAAA,GAAiC;QAAjCA,wDAAA,UAAA0mB,OAAA,GAAA1mB,yDAAA,SAAA8H,GAAA,CAAA6K,OAAA,oBAAA+T,OAAA,CAAAd,QAAA,CAAiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGI;AACjB;AACL;AAEwC;AACxB;;;;;;;;;;;;;;;;;;;;;;;;IAmB7C5lB,4DAAA,iBAOC;IADGA,wDAAA,mBAAAy3B,iEAAA;MAAAz3B,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAiP,KAAA,EAAO;IAAA,EAAC;IAEjB3X,4DAAA,eAAU;IAAAA,oDAAA,0BAAmB;IACjCA,0DADiC,EAAW,EACnC;;;;;IA6BGA,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAA03B,MAAA,CAAa;IAEb13B,uDAAA,EACJ;IADIA,gEAAA,MAAA03B,MAAA,CAAAzyB,YAAA,IAAAyyB,MAAA,CAAAxyB,IAAA,MACJ;;;;;;IAlBRlF,4DAJJ,cAGC,YACe;IAAZA,oDAAA,MAAY;IAAQA,0DAAA,EAAQ;IAExBA,4DADJ,yBAAoD,qBAW/C;IAPGA,8DAAA,2BAAA23B,2EAAAzY,MAAA;MAAAlf,2DAAA,CAAA+I,GAAA;MAAA,MAAAL,MAAA,GAAA1I,2DAAA;MAAAA,gEAAA,CAAA0I,MAAA,CAAA4C,QAAA,EAAA4T,MAAA,MAAAxW,MAAA,CAAA4C,QAAA,GAAA4T,MAAA;MAAA,OAAAlf,yDAAA,CAAAkf,MAAA;IAAA,EAAsB;IACtBlf,wDAAA,2BAAA23B,2EAAAzY,MAAA;MAAAlf,2DAAA,CAAA+I,GAAA;MAAA,MAAAL,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAER0I,MAAA,CAAAmJ,UAAA,CAAW;QAAAyC,OAAA,EAAA4K,MAAA,kBAAAA,MAAA,CAAA9c;MAAA,CAG9B,CAAC;IAAA,EAD2B;IAGDpC,wDAAA,IAAA43B,mDAAA,yBAGC;;IAKb53B,0DAFQ,EAAa,EACA,EACf;;;;IAhBMA,uDAAA,GAAsB;IAAtBA,8DAAA,YAAA0I,MAAA,CAAA4C,QAAA,CAAsB;IAMtBtL,wDAAA,mBAAAA,6DAAA,IAAAiC,GAAA,EAAuC;IAGnBjC,uDAAA,EAAoB;IAApBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAAiD,SAAA,EAAoB;;;;;IA0BxC3L,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAA63B,MAAA,CAAAz1B,EAAA,CAAgB;IAEhBpC,uDAAA,EACJ;IADIA,gEAAA,MAAA63B,MAAA,CAAA5yB,YAAA,IAAA4yB,MAAA,CAAA3yB,IAAA,MACJ;;;;;;IAlBRlF,4DAJJ,cAGC,YACU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAQ;IAEhBA,4DADJ,yBAAqC,qBAWhC;IANGA,wDAAA,2BAAA83B,2EAAA5Y,MAAA;MAAAlf,2DAAA,CAAAyf,GAAA;MAAA,MAAA/W,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAER0I,MAAA,CAAAmJ,UAAA,CAAW;QAAAyC,OAAA,EAAA4K,MAAA,IAAAxW,MAAA,CAAA4C,QAAA,CAAAlJ;MAAA,CAG9B,CAAC;IAAA,EAD2B;IAGDpC,wDAAA,IAAA+3B,mDAAA,yBAGC;;IAKb/3B,0DAFQ,EAAa,EACA,EACf;;;;IAhBMA,uDAAA,GAAsB;IAMtBA,wDANA,cAAA0I,MAAA,CAAA4C,QAAA,CAAsB,mBAAAtL,6DAAA,IAAAiC,GAAA,EAMiB;IAGnBjC,uDAAA,EAAiB;IAAjBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAAqf,MAAA,EAAiB;;;;;;IAyE7C/nB,4DAJJ,cAGC,cACwC;IAAAA,oDAAA,GAAU;IAAAA,0DAAA,EAAM;IACrDA,4DAAA,uBAMC;;IAFGA,wDAAA,2BAAAg4B,uFAAA9Y,MAAA;MAAA,MAAA+Y,OAAA,GAAAj4B,2DAAA,CAAA4nB,GAAA,EAAA3d,SAAA;MAAA,MAAAvB,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAAyN,UAAA,CAAA8hB,OAAA,EAAA/Y,MAAA,CAAwB;IAAA,EAAC;IAGlDlf,0DADK,EAAe,EACd;;;;;;IARmCA,uDAAA,GAAU;IAAVA,+DAAA,CAAAi4B,OAAA,CAAU;IAE3Cj4B,uDAAA,EAEC;IAEDA,wDAJA,eAAAwnB,OAAA,GAAAxnB,yDAAA,OAAA0I,MAAA,CAAAiK,OAAA,oBAAA6U,OAAA,CAAAngB,QAAA,KAAArH,6DAAA,IAAAmC,GAAA,GAAAuJ,QAAA,CAAAusB,OAAA,EAEC,mBAAAj4B,6DAAA,IAAAiC,GAAA,EAEsC;;;;;IAX/CjC,4DALJ,kBAIC,aACwC;IAArCA,oDAAA,MAAqC;IAAIA,0DAAA,EAAK;IAC9CA,wDAAA,IAAAk4B,gDAAA,kBAGC;;IAULl4B,0DAAA,EAAU;;;;IAZeA,uDAAA,GAAmB;IAAnBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAArB,QAAA,EAAmB;;;;;;IAkB5CrH,4DAJJ,cAGC,iBAQI;IAFGA,wDAAA,mBAAAm4B,+DAAA;MAAAn4B,2DAAA,CAAA8K,GAAA;MAAA,MAAApC,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAiP,KAAA,EAAO;IAAA,EAAC;IALrB3X,oDAAA,MAOC;IAGLA,0DADI,EAAS,EACP;;;AAGR,MAAOse,sBAAsB;EAQ/B,IAAWhT,QAAQA,CAAA;IACf,OAAO,IAAI,CAAC9H,IAAI,CAAC8H,QAAQ;EAC7B;EACA,IAAWA,QAAQA,CAACM,GAAG;IACnB,IAAI,CAACpI,IAAI,CAAC8H,QAAQ,GAAGM,GAAG;EAC5B;EAOA,IAAW2c,kBAAkBA,CAAA;IACzB,OAAO,CAAC,CAAC,IAAI,CAACplB,SAAS,CAACmB,GAAG,CAAC,gCAAgC,CAAC;EACjE;EACA,IAAWkkB,aAAaA,CAAA;IACpB,OACI,IAAI,CAACD,kBAAkB,IACvB,CAAC,CAAC,IAAI,CAACplB,SAAS,CAACmB,GAAG,CAAC,2BAA2B,CAAC;EAEzD;EAEA,IAAWmkB,QAAQA,CAAA;IACf,OAAOhD,kDAAQ,CACXoB,iDAAO,CACHliB,IAAI,CAACC,GAAG,EAAE,EACV,IAAI,CAACzB,SAAS,CAACmB,GAAG,CAAC,8BAA8B,CAAC,IAAI,EAAE,CAC3D,CACJ;EACL;EAEA,IAAW2jB,QAAQA,CAAA;IACf,OAAO,IAAI,CAAC9kB,SAAS,CAACmB,GAAG,CAAC,sBAAsB,CAAC;EACrD;EAEAjB,YAEYqlB,WAAsD,EACtD7C,MAA0B,EAC1BriB,IAAyB,EACzBL,SAA0B;IAH1B,KAAAulB,WAAW,GAAXA,WAAW;IACX,KAAA7C,MAAM,GAANA,MAAM;IACN,KAAAriB,IAAI,GAAJA,IAAI;IACJ,KAAAL,SAAS,GAATA,SAAS;IA/Cd,KAAAwlB,SAAS,GAAG,KAAK;IACR,KAAAhW,OAAO,GAAG,IAAI,CAACkT,MAAM,CAAClT,OAAO;IAC7B,KAAAtL,QAAQ,GAAG,IAAI,CAACwe,MAAM,CAACxe,QAAQ;IAC/B,KAAAsE,SAAS,GAAG,IAAI,CAACnI,IAAI,CAAColB,gBAAgB;IACtC,KAAAb,MAAM,GAAG,IAAI,CAACvkB,IAAI,CAAC40B,aAAa;IAChC,KAAA9mB,IAAI,GAAG,IAAI,CAACuU,MAAM,CAACvU,IAAI;IASvB,KAAAqG,KAAK,GAAG,MAAM,IAAI,CAAC+Q,WAAW,CAACW,OAAO,EAAE;IACxC,KAAAxX,UAAU,GAAImU,CAAC,IAAK,IAAI,CAACH,MAAM,CAAChU,UAAU,CAACmU,CAAC,CAAC;IAC7C,KAAA7P,UAAU,GAAG,CAAC8P,CAAC,EAAEzP,CAAC,KAAK,IAAI,CAACqP,MAAM,CAAC1P,UAAU,CAAC8P,CAAC,EAAEzP,CAAC,CAAC;IACnD,KAAA8S,QAAQ,GAAIC,CAAC,IAAI,CAAE,CAAC;IAgChC,IAAI,CAACZ,SAAS,GAAG,CAAC,CAAC,IAAI,CAACD,WAAW;EACvC;EAAC,QAAAhiB,CAAA;qBAnDQ4X,sBAAsB,EAAAte,+DAAA,CAAA4G,8EAAA,MAAA5G,+DAAA,CAAA6G,qEAAA,GAAA7G,+DAAA,CAAA8G,+FAAA,GAAA9G,+DAAA,CAAA+G,4DAAA;EAAA;EAAA,QAAAE,EAAA;UAAtBqX,sBAAsB;IAAApX,SAAA;IAAAM,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBA5JyBC,SAAA,+EAAc;;;;;;;;;;iBAQrBA,SAAA,wEAAO;;;;;;;;;;iBA0D5BA,SAAA,qEAAI;;;;;;;;;;iBAYAA,SAAA,2EAAU;;;;;;;;;;iBAUVA,SAAA,yEAAQ;;;;;;;;;;;;;;;;iBAcSA,SAAA,mEACjC,eAAqC,kBACzC;;;;;;;;;;;;;;;;iBAE6CA,SAAA,mEACrC,eAA2C,kBAC/C;;;;;;;;;;iBA9FYA,SAAA,yEAAQ;;;;;;;;;;iBA6GaA,SAAA,qEAAI;;;;;;;;;;iBA2B5CA,SAAA,gFAED;;;;;;QApKA1N,4DAHJ,cAEC,cAC4B;QACrBA,wDAAA,IAAAq4B,wCAAA,qBAOC;QAGLr4B,0DAAA,EAAM;QACNA,4DAAA,aAAgD;QAAhDA,oDAAA,MAAgD;QAAcA,0DAAA,EAAK;QACnEA,uDAAA,cAA0B;QAC9BA,0DAAA,EAAM;QAMEA,4DALR,eAGC,kBACoB,aACwB;QAArCA,oDAAA,MAAqC;QAAOA,0DAAA,EAAK;QAEjDA,wDAAA,KAAAs4B,sCAAA,kBAGC;;QAwBDt4B,wDAAA,KAAAu4B,sCAAA,kBAGC;;QA0BGv4B,4DADJ,eAAkC,aAClB;QAAZA,oDAAA,OAAY;QAAIA,0DAAA,EAAQ;QACxBA,4DAAA,wBAIC;QACGA,oDAAA,IACJ;;QACJA,0DADI,EAAe,EACb;QAIEA,4DAFR,eAAyC,eACX,aACV;QAAZA,oDAAA,OAAY;QAAUA,0DAAA,EAAQ;QAC9BA,4DAAA,wBAMC;QAHGA,wDAAA,2BAAAw4B,uEAAAtZ,MAAA;UAAA,OAAiBpX,GAAA,CAAAwJ,IAAA,CAAAE,UAAA,CAAgB;YAAA1Q,IAAA,EAAAoe;UAAA,CAAgB,CAAC;QAAA,EAAC;QAI3Dlf,0DADK,EAAe,EACd;QAEFA,4DADJ,eAA0B,aACV;QAAZA,oDAAA,OAAY;QAAQA,0DAAA,EAAQ;QAC5BA,uDAAA,4BAQmB;QAG/BA,0DAFQ,EAAM,EACJ,EACA;QAENA,4DADJ,mBAAqC,cACI;QAArCA,oDAAA,OAAqC;;QAErCA,0DAAA,EAAK;QAEDA,4DADJ,eAA+B,eACc;QAAzCA,oDAAA,OAAyC;;QAEzCA,0DAAA,EAAM;QACNA,4DAAA,wBAKC;;QAFGA,wDAAA,2BAAAy4B,uEAAAvZ,MAAA;UAAA,OAAiBpX,GAAA,CAAA+J,UAAA,CAAW;YAAA+T,QAAA,EAAA1G;UAAA,CAAoB,CAAC;QAAA,EAAC;QAK9Dlf,0DAFQ,EAAe,EACb,EACA;QACVA,wDAAA,KAAA04B,0CAAA,sBAIC;;QAgBL14B,0DAAA,EAAO;QACPA,wDAAA,KAAA24B,sCAAA,kBAGC;;;;;;;;QApJY34B,uDAAA,GAAe;QAAfA,wDAAA,SAAA8H,GAAA,CAAA6gB,SAAA,CAAe;QAWxB3oB,uDAAA,GAAkB;QAAlBA,wDAAA,cAAA8H,GAAA,CAAAwJ,IAAA,CAAkB;QAMTtR,uDAAA,GAAiC;QAAjCA,wDAAA,UAAAkqB,OAAA,GAAAlqB,yDAAA,SAAA8H,GAAA,CAAA6D,SAAA,oBAAAue,OAAA,CAAAvf,MAAA,CAAiC;QA2BjC3K,uDAAA,GAAkC;QAAlCA,wDAAA,WAAAunB,OAAA,GAAAvnB,yDAAA,SAAA8H,GAAA,CAAAigB,MAAA,oBAAAR,OAAA,CAAA5c,MAAA,MAAkC;QAgC/B3K,uDAAA,GAAe;QAAfA,wDAAA,OAAA8H,GAAA,CAAA2gB,QAAA,CAAe;QAEfzoB,uDAAA,EACJ;QADIA,gEAAA,MAAAA,yDAAA,iCACJ;QAQQA,uDAAA,GAA2B;QAG3BA,wDAHA,YAAA8H,GAAA,CAAAwJ,IAAA,CAAA4E,KAAA,CAAApV,IAAA,CAA2B,mBAAAd,6DAAA,KAAAiC,GAAA,EAEY,aAAA6F,GAAA,CAAAmgB,QAAA,CAClB;QAOrBjoB,uDAAA,GAAgC;QAIhCA,wDAJA,UAAA44B,OAAA,GAAA9wB,GAAA,CAAAwJ,IAAA,CAAAhN,GAAA,2BAAAs0B,OAAA,CAAA1iB,KAAA,CAAgC,gBACjB,WACL,YACC,aAAApO,GAAA,CAAAmgB,QAAA,CACU;QAQ7BjoB,uDAAA,GACJ;QADIA,uDAAA,CAAAA,yDAAA,8BACJ;;QAGQA,uDAAA,GACJ;QADIA,uDAAA,CAAAA,yDAAA,oCACJ;;QAGIA,uDAAA,EAAuC;QAEvCA,wDAFA,aAAA64B,QAAA,GAAA74B,yDAAA,SAAA8H,GAAA,CAAA6K,OAAA,oBAAAkmB,QAAA,CAAAjT,QAAA,CAAuC,mBAAA5lB,6DAAA,KAAAiC,GAAA,EAEA;QAQ9CjC,uDAAA,GAAgC;QAAhCA,wDAAA,UAAA84B,QAAA,GAAA94B,yDAAA,SAAA8H,GAAA,CAAAT,QAAA,oBAAAyxB,QAAA,CAAAnuB,MAAA,CAAgC;QAoBpC3K,uDAAA,GAAe;QAAfA,wDAAA,SAAA8H,GAAA,CAAA6gB,SAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjLmD;AACP;AACnC;AAEsC;AACtC;AACyC;AAC2B;;;;;;;;;;;;;;;;IAsCrF3oB,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAAg5B,MAAA,CAAa;IAEbh5B,uDAAA,EACJ;IADIA,gEAAA,MAAAg5B,MAAA,CAAA/zB,YAAA,IAAA+zB,MAAA,CAAA9zB,IAAA,MACJ;;;AAsBd,MAAOuZ,kBAAmB,SAAQ7e,yDAAY;EAahD,IAAWmb,OAAOA,CAAA;IACd,OAAO,IAAI,CAACjW,KAAK,EAAE8F,MAAM,IAAI,EAAE;EACnC;EA8DAvH,YACYwiB,MAA0B,EAC1B1iB,SAA0B;IAElC,KAAK,EAAE;IAHC,KAAA0iB,MAAM,GAANA,MAAM;IACN,KAAA1iB,SAAS,GAATA,SAAS;IA9EL,KAAA0oB,YAAY,GAAY,KAAK;IAC5B,KAAAZ,QAAQ,GAAG,IAAIlsB,uDAAY,EAAgB;IAE5C,KAAA8b,OAAO,GAAG,IAAI,CAACgL,MAAM,CAAC7R,mBAAmB;IACzC,KAAAvB,OAAO,GAAG,IAAI,CAACoT,MAAM,CAACpT,OAAO;IAEtC,KAAAqZ,IAAI,GAAG,CAAC;IACR,KAAAC,MAAM,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAG,CAAE;IAGlB,KAAApa,UAAU,GAAImU,CAAC,IAAK,IAAI,CAACH,MAAM,CAAChU,UAAU,CAACmU,CAAC,CAAC;IAM7C,KAAA+B,MAAM,GAAG,IAAI,CAAClC,MAAM,CAAC7R,mBAAmB,CAAClQ,IAAI,CACzDrE,mDAAG,CAAEob,OAAO,IACR9L,uDAAM,CACF8L,OAAO,CAACpb,GAAG,CAAEm1B,MAAM,IAAKA,MAAM,CAAC7f,IAAI,CAAC,EACpC,IAAI,CACP,CACJ,CACJ;IAEe,KAAAqX,OAAO,GAAG,IAAI,CAACvG,MAAM,CAAC7R,mBAAmB,CAAClQ,IAAI,CAC1DrE,mDAAG,CAAEob,OAAO,IACRA,OAAO,CAACpb,GAAG,CAAEm1B,MAAM,KAAM;MACrBxyB,EAAE,EAAEwyB,MAAM,CAAChqB,MAAM,IAAIgqB,MAAM,CAACxyB,EAAE;MAC9BiqB,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;MAC/BC,QAAQ,EAAEA,CAAA,KAAM,IAAI,CAAC2M,YAAY,CAACrE,MAAa;KAClD,CAAC,CAAC,CACN,CACJ;IAEe,KAAAvtB,QAAQ,GAAG,IAAI,CAACwe,MAAM,CAACjT,SAAS,CAAC9O,IAAI,CACjDrE,mDAAG,CAAEob,OAAO,IAAI;MACZ,OAAO,IAAI,CAAC1X,SAAS,CAACmB,GAAG,CAAC,uBAAuB,CAAC,GAC5C,EAAE,GACFuW,OAAO,CAACpb,GAAG,CAAEm1B,MAAM,KAAM;QACrB1zB,QAAQ,EAAE0zB,MAAM,CAACxyB,EAAE;QACnBoK,OAAO,EAAEusB,mHAA8B;QACvCxM,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE,IAAI;QACdpmB,IAAI,EAAE;UACFhE,EAAE,EAAEwyB,MAAM,CAAChqB,MAAM,IAAIgqB,MAAM,CAACxyB,EAAE;UAC9BwI,MAAM,EAAEgqB,MAAM,CAAC1vB,IAAI;UACnBA,IAAI,EAAE0vB,MAAM,CAAC1vB,IAAI,IAAI0vB,MAAM,CAAChqB,MAAM;UAClCsJ,IAAI,EAAE,IAAI,CAAC2R,MAAM,CAAC1U,gBAAgB,CAACyjB,MAAM,CAACxyB,EAAE;SAC/C;QACDqqB,OAAO,EAAE;OACZ,CAAC,CAAC;IACb,CAAC,CAAC,CACL;IAEe,KAAAC,MAAM,GAAGpd,mDAAa,CAAC,CACnC,IAAI,CAACuW,MAAM,CAACjT,SAAS,EACrB,IAAI,CAACiT,MAAM,CAAC7R,mBAAmB,CAClC,CAAC,CAAClQ,IAAI,CACHrE,mDAAG,CAAC,CAAC,CAACob,OAAO,EAAEqe,YAAY,CAAC,KACxBre,OAAO,CAAC+R,MAAM,CAAC,CAACF,MAAM,EAAEkI,MAAM,KAAI;MAC9B,MAAM/H,OAAO,GAAG,IAAI,CAAC1pB,SAAS,CAACmB,GAAG,CAAC,oBAAoB,CAAC,IAAI,EAAE;MAC9D,MAAMnD,MAAM,GAAG+3B,YAAY,CAACztB,IAAI,CAAE/E,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAKwyB,MAAM,CAACxyB,EAAE,CAAC,GACrD,MAAM,GACN,MAAM;MACZsqB,MAAM,CAAC,IAAIkI,MAAM,CAAChqB,MAAM,IAAIgqB,MAAM,CAACxyB,EAAE,EAAE,CAAC,GAAG;QACvC0qB,IAAI,EACAD,OAAO,CAAC,UAAU1rB,MAAM,EAAE,CAAC,IAC3B0rB,OAAO,CAAC,GAAG1rB,MAAM,EAAE,CAAC,IACpBmqB,wFAAe,CAAC,GAAGnqB,MAAM,EAAE;OAClC;MACD,OAAOurB,MAAM;IACjB,CAAC,EAAE,EAAE,CAAC,CACT,CACJ;EAOD;EAEA1oB,QAAQA,CAAA;IACJ,IAAI,CAACC,YAAY,CACb,eAAe,EACf,IAAI,CAAC8jB,MAAM,CAAC5jB,SAAS,CAAE4jB,MAAM,IAAI;MAC7B,IAAI,CAACA,MAAM,CAACtc,IAAI,CAAE/E,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAK,IAAI,CAAC0C,KAAK,EAAE1C,EAAE,CAAC,EAAE;QAC9C,IAAI,CAAC0C,KAAK,GAAGijB,MAAM,CAAC,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC,CACL;EACL;EAEOkR,YAAYA,CAACrE,MAAoB;IACpC,IAAI,CAAC3J,QAAQ,CAACxkB,IAAI,CAACmuB,MAAM,CAAC;EAC9B;EAEOzH,OAAOA,CAACC,QAAgB;IAC3B,IAAI,CAACtB,IAAI,GAAGtmB,IAAI,CAAC6nB,GAAG,CAAC,GAAG,EAAE7nB,IAAI,CAAC8nB,GAAG,CAAC,EAAE,EAAEF,QAAQ,CAAC,CAAC;EACrD;EAEOG,QAAQA,CAAA;IACX,IAAI,CAACzB,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,MAAM,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAG,CAAE;EACpC;EAAC,QAAAvlB,CAAA;qBA1GQ+X,kBAAkB,EAAAze,+DAAA,CAAA4G,qEAAA,GAAA5G,+DAAA,CAAA6G,4DAAA;EAAA;EAAA,QAAAI,EAAA;UAAlBwX,kBAAkB;IAAAvX,SAAA;IAAAC,MAAA;MAAA0kB,YAAA;IAAA;IAAAzkB,OAAA;MAAA6jB,QAAA;IAAA;IAAA5jB,QAAA,GAAArH,wEAAA;IAAAwH,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAwxB,4BAAAtxB,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA/CvB7H,4DAAA,yBAOC;;;;QAJGA,8DADA,wBAAAo5B,kEAAAla,MAAA;UAAAlf,gEAAA,CAAA8H,GAAA,CAAAgkB,IAAA,EAAA5M,MAAA,MAAApX,GAAA,CAAAgkB,IAAA,GAAA5M,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAe,0BAAAma,oEAAAna,MAAA;UAAAlf,gEAAA,CAAA8H,GAAA,CAAAikB,MAAA,EAAA7M,MAAA,MAAApX,GAAA,CAAAikB,MAAA,GAAA7M,MAAA;UAAA,OAAAA,MAAA;QAAA,EACI;QAItBlf,0DAAA,EAAkB;QASXA,4DARR,aAEC,wBAKI,oBAII;QAFGA,8DAAA,2BAAAs5B,gEAAApa,MAAA;UAAAlf,gEAAA,CAAA8H,GAAA,CAAAhD,KAAA,EAAAoa,MAAA,MAAApX,GAAA,CAAAhD,KAAA,GAAAoa,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAmB;QAGnBlf,wDAAA,IAAAu5B,wCAAA,wBAGC;;QAKbv5B,0DAFQ,EAAa,EACA,EACf;QAKFA,4DAJJ,aAGC,iBACgE;QAA9BA,wDAAA,mBAAAw5B,qDAAA;UAAA,OAAS1xB,GAAA,CAAAqlB,OAAA,CAAArlB,GAAA,CAAAgkB,IAAA,GAAe,GAAG,CAAC;QAAA,EAAC;QACxD9rB,4DAAA,gBAAU;QAAAA,oDAAA,eAAO;QACrBA,0DADqB,EAAW,EACvB;QACTA,uDAAA,cAAmD;QACnDA,4DAAA,iBAAoE;QAApCA,wDAAA,mBAAAy5B,qDAAA;UAAA,OAAS3xB,GAAA,CAAAqlB,OAAA,CAAArlB,GAAA,CAAAgkB,IAAA,IAAgB,CAAC,GAAG,GAAG,EAAE;QAAA,EAAC;QAC/D9rB,4DAAA,gBAAU;QAAAA,oDAAA,gBAAQ;QACtBA,0DADsB,EAAW,EACxB;QACTA,uDAAA,cAAmD;QACnDA,4DAAA,iBAAkD;QAArBA,wDAAA,mBAAA05B,qDAAA;UAAA,OAAS5xB,GAAA,CAAAylB,QAAA,EAAU;QAAA,EAAC;QAC7CvtB,4DAAA,gBAAU;QAAAA,oDAAA,eAAO;QAEzBA,0DAFyB,EAAW,EACvB,EACP;;;QA3CFA,wDAAA,QAAA8H,GAAA,CAAAiT,OAAA,CAAe;QAEf/a,8DADA,SAAA8H,GAAA,CAAAgkB,IAAA,CAAe,WAAAhkB,GAAA,CAAAikB,MAAA,CACI;QAGnB/rB,wDAFA,aAAAA,yDAAA,OAAA8H,GAAA,CAAAT,QAAA,EAA6B,WAAArH,yDAAA,QAAA8H,GAAA,CAAA4kB,MAAA,EACJ,YAAA1sB,yDAAA,QAAA8H,GAAA,CAAAskB,OAAA,EACE;QAWnBpsB,uDAAA,GAAmB;QAAnBA,8DAAA,YAAA8H,GAAA,CAAAhD,KAAA,CAAmB;QACnB9E,wDAAA,mBAAAA,6DAAA,KAAAiC,GAAA,EAAuC;QAGnBjC,uDAAA,EAAiB;QAAjBA,wDAAA,YAAAA,yDAAA,QAAA8H,GAAA,CAAAigB,MAAA,EAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CgB;AACvB;AAKjB;;;;;;;;;;;;;;;;IAsDT/nB,4DAAA,2BAQC;IAFGA,wDADA,uBAAA25B,6GAAAza,MAAA;MAAAlf,2DAAA,CAAAuB,GAAA;MAAA,MAAA4d,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAamf,MAAA,CAAA0C,eAAA,CAAA3C,MAAA,CAAuB;IAAA,EAAC,sBAAA0a,4GAAA1a,MAAA;MAAAlf,2DAAA,CAAAuB,GAAA;MAAA,MAAA4d,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAAmf,MAAA,CAAA0V,IAAA,GAAA3V,MAAA;IAAA,EACX;IAE7Blf,0DAAA,EAAmB;;;;IAJhBA,wDAFA,WAAAmf,MAAA,CAAA4O,SAAA,kBAAA5O,MAAA,CAAA4O,SAAA,CAAA3rB,EAAA,CAAwB,aAAA+c,MAAA,CAAA6O,YAAA,CACC,cAAA7O,MAAA,CAAA4C,SAAA,CACF;;;;;IAL/B/hB,qEAAA,GAA4C;IACxCA,wDAAA,IAAA65B,sEAAA,+BAQC;;;;;;IAPI75B,uDAAA,EAAuB;IAAAA,wDAAvB,SAAAmf,MAAA,CAAAnO,IAAA,YAAuB,aAAA8oB,WAAA,CAAa;;;;;;IAcjD95B,4DAAA,iBAQC;IAFGA,wDAAA,mBAAA+5B,sEAAA;MAAA/5B,2DAAA,CAAAyf,GAAA;MAAA,MAAAN,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAAmf,MAAA,CAAA4O,SAAA,GAAqB,IAAI;IAAA,EAAC;IAN9B/tB,oDAAA,MAQC;IAEDA,0DAAA,EAAS;;;;;;IAgCLA,4DAAA,iBAOC;IADGA,wDAAA,mBAAAg6B,sEAAA;MAAAh6B,2DAAA,CAAAgK,GAAA;MAAA,MAAAmV,MAAA,GAAAnf,2DAAA;MAAAmf,MAAA,CAAA0V,IAAA,GAAgB,IAAI;MAAA,OAAA70B,yDAAA,CAAAmf,MAAA,CAAA4O,SAAA,GAAc,IAAI;IAAA,EAAC;IAEvC/tB,oDAAA,eACJ;IAAAA,0DAAA,EAAS;;;;;;IA4BjBA,4DAAA,qBAIC;IADGA,wDAAA,sBAAAi6B,kFAAA/a,MAAA;MAAAlf,2DAAA,CAAA4nB,GAAA;MAAA,MAAAzI,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAAmf,MAAA,CAAA4O,SAAA,GAAA7O,MAAA;IAAA,EAA+B;IAEnClf,0DAAA,EAAa;;;;IAHTA,wDAAA,mBAAAmf,MAAA,CAAA4O,SAAA,CAA4B;;;;;;IAMhC/tB,4DAAA,sBAKC;IADGA,wDAAA,qBAAAk6B,kFAAAhb,MAAA;MAAAlf,2DAAA,CAAAm6B,GAAA;MAAA,MAAAhb,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAAmf,MAAA,CAAA4O,SAAA,GAAA7O,MAAA;IAAA,EAA8B;IAElClf,0DAAA,EAAc;;;;IAHVA,wDADA,SAAAmf,MAAA,CAAA0V,IAAA,CAAa,aAAA1V,MAAA,CAAA4O,SAAA,kBAAA5O,MAAA,CAAA4O,SAAA,CAAA3rB,EAAA,CACa;;;AA5JnC,MAAM6yB,cAAc,GAAG,mBAAmB;AAmK3C,MAAO7W,0BAA0B;EAMnC,IAAW4P,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACrL,QAAQ,CAACljB,GAAG,CAAEiH,CAAC,IAAKA,CAAC,CAACtE,EAAE,CAAC,CAAC2V,IAAI,CAAC,GAAG,CAAC;EACnD;EAEA,IAAWgK,SAASA,CAAA;IAChB,OAAO,IAAI,CAAC5e,SAAS,CAACmB,GAAG,CAAW2wB,cAAc,CAAC,IAAI,EAAE;EAC7D;EAEA5xB,YACY8qB,WAAqD,EACrDhrB,SAA0B,EAC1BirB,WAA+B,EAE/B/N,KAGP;IAPO,KAAA8N,WAAW,GAAXA,WAAW;IACX,KAAAhrB,SAAS,GAATA,SAAS;IACT,KAAAirB,WAAW,GAAXA,WAAW;IAEX,KAAA/N,KAAK,GAALA,KAAK;IAjBV,KAAAsC,QAAQ,GAAmB,EAAE;IAC7B,KAAA3R,IAAI,GAAG,MAAM;IACb,KAAA6jB,IAAI,GAAgB,IAAI;IAoB3B,IAAI,CAAClS,QAAQ,GAAG,CAAC,IAAItC,KAAK,CAAChW,KAAK,IAAI,EAAE,CAAC,CAAC;IACxC,IAAI,CAAC+jB,WAAW,CAACvc,UAAU,CAACwO,KAAK,CAAC1N,OAAO,CAAC;EAC9C;EAEO0b,UAAUA,CAACjsB,EAAU;IACxB,OAAOA,EAAE,IAAI,IAAI,CAAC4rB,YAAY,CAACtiB,QAAQ,CAACtJ,EAAE,CAAC;EAC/C;EAEOksB,WAAWA,CAAClhB,IAAkB,EAAE1D,KAAc;IACjD,MAAMsJ,IAAI,GAAG,IAAI,CAAC2P,QAAQ,CAAC7S,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAKgL,IAAI,CAAChL,EAAE,CAAC;IAC1D,IAAIsH,KAAK,EAAEsJ,IAAI,CAACG,IAAI,CAAC/F,IAAI,CAAC;IAC1B,IAAI,CAACuV,QAAQ,GAAG3P,IAAI;IACpB,IAAI,CAAC,IAAI,CAACqN,KAAK,CAAC1N,OAAO,CAACgD,KAAK,IAAIjM,KAAK,EAAE,IAAI,CAACykB,WAAW,CAACxW,KAAK,CAAC,CAACvK,IAAI,CAAC,CAAC;EAC1E;EAEOyU,eAAeA,CAACzU,IAAkB;IACrC,MAAM2V,QAAQ,GAAG,IAAI,CAAChB,SAAS;IAC/B,MAAMiB,SAAS,GAAG,CAACD,QAAQ,CAACrX,QAAQ,CAAC0B,IAAI,CAAChL,EAAE,CAAC;IAC7C,IAAI4gB,SAAS,EAAE;MACX,IAAI,CAAC7f,SAAS,CAAC8f,eAAe,CAACgS,cAAc,EAAE,CAC3C,GAAGlS,QAAQ,EACX3V,IAAI,CAAChL,EAAE,CACV,CAAC;IACN,CAAC,MAAM;MACH,IAAI,CAACe,SAAS,CAAC8f,eAAe,CAC1BgS,cAAc,EACdlS,QAAQ,CAACjT,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,KAAK0G,IAAI,CAAChL,EAAE,CAAC,CACxC;IACL;EACJ;EAAC,QAAAsE,CAAA;qBArDQ0X,0BAA0B,EAAApe,+DAAA,CAAA4G,kEAAA,GAAA5G,+DAAA,CAAA6G,4DAAA,GAAA7G,+DAAA,CAAA8G,qEAAA,GAAA9G,+DAAA,CAkBvBmI,qEAAe;EAAA;EAAA,QAAAlB,EAAA;UAlBlBmX,0BAA0B;IAAAlX,SAAA;IAAAM,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAtJdC,SAAA,4EAAW;;;;;;;;;;iBAwEnBA,SAAA,4EAED;;;;;;;;;;iBAcyCA,SAAA,4EAAY;;;;;;;;;;;;;;;;iBAGNA,SAAA,mEAC3C,eAAqB,kCACzB;;;;;;;;;;;;;;;;iBA0BmCA,SAAA,mEACnB,eAIE,kBACN;;;;;;;;;;iBAhEXA,SAAA,sEAED;;;;;;;QAjEI1N,4DALZ,aAEC,gBACsD,iBACG,eACpC;QAAAA,oDAAA,YAAK;QACnBA,0DADmB,EAAW,EACrB;QACTA,4DAAA,SAAS;QAATA,oDAAA,MAAS;QAAWA,0DAAA,EAAK;QAErBA,4DADJ,cAA4D,iBAQvD;QADGA,wDAAA,mBAAAo6B,4DAAA;UAAAp6B,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAA8H,GAAA,CAAAkJ,IAAA,GAAgB,KAAK;QAAA,EAAC;QAEtBhR,oDAAA,YACJ;QAAAA,0DAAA,EAAS;QACTA,4DAAA,kBAOC;QADGA,wDAAA,mBAAAq6B,6DAAA;UAAAr6B,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAA8H,GAAA,CAAAkJ,IAAA,GAAgB,MAAM;QAAA,EAAC;QAEvBhR,oDAAA,cACJ;QAERA,0DAFQ,EAAS,EACP,EACD;QACTA,4DAAA,gBAEC;QACGA,uDAAA,0BAEkB;QAIdA,4DAHJ,eAEC,kCAII;QADGA,8DAAA,wBAAAs6B,kFAAApb,MAAA;UAAAlf,2DAAA,CAAAgO,GAAA;UAAAhO,gEAAA,CAAA8H,GAAA,CAAAkJ,IAAA,EAAAkO,MAAA,MAAApX,GAAA,CAAAkJ,IAAA,GAAAkO,MAAA;UAAA,OAAAlf,yDAAA,CAAAkf,MAAA;QAAA,EAAe;QAClBlf,0DAAA,EAAyB;QAC1BA,wDAAA,KAAAu6B,mDAAA,2BAA4C;QAYpDv6B,0DADI,EAAM,EACH;QACPA,4DAAA,kBAEC;QACGA,wDAAA,KAAAw6B,6CAAA,qBAQC;QAGDx6B,4DAAA,kBAQC;QARDA,oDAAA,OAQC;QAGLA,0DADI,EAAS,EACJ;QAYGA,4DAXZ,kBAEC,kBAOI,eACkC,oBACD;QAAAA,oDAAA,kBAAU;QAAAA,0DAAA,EAAW;QAC/CA,4DAAA,eAAiC;QAAjCA,oDAAA,OAAiC;QAEzCA,0DAFqD,EAAM,EACjD,EACD;QACTA,4DAAA,aAA+C;QAA/CA,oDAAA,OAA+C;QAE/CA,0DAAA,EAAI;QACJA,4DAAA,eAA+B;QAC3BA,wDAAA,KAAAy6B,6CAAA,qBAOC;QAGDz6B,4DAAA,kBASC;QAHGA,wDAAA,mBAAA06B,6DAAA;UAAA16B,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CACiC8H,GAAA,CAAAwmB,WAAA,CAAAxmB,GAAA,CAAAimB,SAAA,GACvDjmB,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,CACD,CAAC;QAAA,EADuB;QAGGpC,4DADJ,eAA+B,oBACD;QAAAA,oDAAA,IAExB;QAAAA,0DAAA,EAAW;QACbA,4DAAA,eAAuB;QAAvBA,oDAAA,OAAuB;QAW3CA,0DALoB,EAAM,EACJ,EACD,EACP,EACD,EACP;QASNA,wDARA,KAAA26B,kDAAA,gCAAA36B,oEAAA,CAAuB,KAAA46B,kDAAA,gCAAA56B,oEAAA,CAQC;;;;QApIRA,uDAAA,GAAgC;QAAhCA,yDAAA,YAAA8H,GAAA,CAAAkJ,IAAA,WAAgC;QAUhChR,uDAAA,GAAiC;QAAjCA,yDAAA,YAAA8H,GAAA,CAAAkJ,IAAA,YAAiC;QAkBjChR,uDAAA,GAAe;QAAfA,8DAAA,SAAA8H,GAAA,CAAAkJ,IAAA,CAAe;QAEJhR,uDAAA,EAAa;QAAAA,wDAAb,UAAA8H,GAAA,CAAA+sB,IAAA,CAAa,aAAAgG,YAAA,CAAc;QAqBzC76B,uDAAA,GAAe;QAAfA,wDAAA,SAAA8H,GAAA,CAAAimB,SAAA,CAAe;QAWhB/tB,uDAAA,EAAwB;QAAxBA,yDAAA,SAAA8H,GAAA,CAAAimB,SAAA,CAAwB;QADxB/tB,wDAAA,qBAAA8H,GAAA,CAAA6a,QAAA,CAA6B;QAe7B3iB,uDAAA,GAA6B;QAA7BA,wDAAA,qBAAA8H,GAAA,CAAA6a,QAAA,CAA6B;QAS7B3iB,uDAAA,GACJ;QADIA,uDAAA,CAAA8H,GAAA,CAAA6a,QAAA,CAAAhY,MAAA,CACJ;;QAMS3K,uDAAA,GAAU;QAAVA,wDAAA,SAAA8H,GAAA,CAAA+sB,IAAA,CAAU;QAWX70B,uDAAA,EAA2C;QAA3CA,yDAAA,YAAA8H,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,EAA2C;QAD3CpC,wDAAA,cAAA8H,GAAA,CAAAimB,SAAA,CAAuB;QAOO/tB,uDAAA,GAExB;QAFwBA,+DAAA,CAAA8H,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,qBAExB;QAEEpC,uDAAA,GAKJ;QALIA,uDAAA,CAAA8H,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,6CAKJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnJc;AAOd;AAC0C;AAO9C;AAE6D;;;AA2B/E,MAAO0zB,cAAc;EA2DhBxM,QAAQA,CAACxkB,KAAa;IACzB,IAAI,CAACk2B,MAAM,CAACjpB,IAAI,CAACjN,KAAK,CAAC;EAC3B;EAEAzB,YAAoBG,IAAyB;IAAzB,KAAAA,IAAI,GAAJA,IAAI;IA9DhB,KAAAw3B,MAAM,GAAG,IAAI3rB,iDAAe,CAAC,EAAE,CAAC;IAChC,KAAA8c,OAAO,GAAG,IAAI9c,iDAAe,CAAC,CAAC,CAAC;IACxB,KAAAqnB,cAAc,GAA6BpnB,mDAAa,CAAC,CACrE,IAAI,CAAC9L,IAAI,CAACqP,eAAe,EACzB,IAAI,CAACsZ,OAAO,CACf,CAAC,CAACroB,IAAI,CACHgM,sDAAM,CAAC,CAAC,CAAClE,GAAG,CAAC,KAAK,CAAC,CAACA,GAAG,CAAC,EACxBqE,yDAAS,CAAC,CAAC,CAACrE,GAAG,CAAC,KACZqD,qEAAiB,CAACrD,GAAG,CAACxJ,EAAE,EAAE;MAAE8C,IAAI,EAAE;IAAS,CAAE,CAAC,CAACpB,IAAI,CAC/C6L,0DAAU,CAAC,MAAMF,wCAAE,CAAC,IAAIqrB,6DAAa,EAAE,CAAC,CAAC,CAC5C,CACJ,EACDr7B,oDAAG,CAAEiH,CAAsB,IACvBgI,wDAAO,CACHhI,CAAC,CAACjH,GAAG,CAAEiH,CAAC,IACJA,CAAC,CAACiU,QAAQ,CAACE,OAAO,EAAE9G,OAAO,YAAYd,KAAK,GACtCvM,CAAC,CAACiU,QAAQ,CAACE,OAAO,EAAE9G,OAAO,CAACtU,GAAG,CAAEo1B,IAAI,KAAM;MACvC,GAAGA,IAAI;MACP9f,IAAI,EAAErO,CAAC,CAACqO;KACX,CAAC,CAAC,GACH,EAAE,CACX,CACJ,CACJ,EACD/E,4DAAW,CAAC,CAAC,CAAC,CACjB;IAEe,KAAAirB,QAAQ,GAAG,IAAI,CAACvE,cAAc,CAAC5yB,IAAI,CAC/CrE,oDAAG,CAAEy7B,SAAS,IAAI;MACd,MAAMrgB,OAAO,GAAa,EAAE;MAC5B,KAAK,MAAMga,IAAI,IAAIqG,SAAS,EAAE;QAC1BrgB,OAAO,CAAC1H,IAAI,CACR,GAAG0hB,IAAI,CAACha,OAAO,CAACpb,GAAG,CACdiH,CAAC,KACG;UACG,GAAGA,CAAC;UACJoU,OAAO,EAAE+Z,IAAI,CAACzyB,EAAE;UAChBwI,MAAM,EAAEiqB,IAAI,CAACjqB,MAAM;UACnBuwB,QAAQ,EAAEtG,IAAI,CAAC9f,IAAI,CAAC3S;SACZ,EACnB,CACJ;MACL;MACA,OAAOyY,OAAO;IAClB,CAAC,CAAC,CACL;IAEe,KAAAugB,iBAAiB,GAAG9rB,mDAAa,CAAC,CAC9C,IAAI,CAAC0rB,MAAM,EACX,IAAI,CAACC,QAAQ,CAChB,CAAC,CAACn3B,IAAI,CACHrE,oDAAG,CAAC,CAAC,CAACqF,KAAK,EAAE+V,OAAO,CAAC,KACjBA,OAAO,CAAC/K,MAAM,CACTpJ,CAAC,IAAK,CAAC,CAAC5B,KAAK,IAAI4B,CAAC,CAACy0B,QAAQ,KAAKr2B,KAAK,KAAK4B,CAAC,CAAC2O,QAAQ,CACxD,CACJ,CACJ;EAM+C;EAEnCgmB,WAAWA,CAACxgB,OAAqB;IAAA,IAAAlO,KAAA;IAAA,OAAAC,wJAAA;MAC1C,MAAMmuB,kEAAc,CAACpuB,KAAI,CAACnJ,IAAI,CAAC8H,QAAQ,CAAClJ,EAAE,EAAE;QACxC8C,IAAI,EAAE,SAAS;QACfR,WAAW,EAAE,EAAE;QACfqP,OAAO,EAAE8G;OACZ,CAAC;MACFlO,KAAI,CAACwf,OAAO,CAACpa,IAAI,CAACpN,IAAI,CAACC,GAAG,EAAE,CAAC;IAAC;EAClC;EAAC,QAAA8B,CAAA;qBAxEQovB,cAAc,EAAA91B,uDAAA,CAAA4G,+FAAA;EAAA;EAAA,QAAAK,EAAA;WAAd6uB,cAAc;IAAA1a,OAAA,EAAd0a,cAAc,CAAAza,IAAA;IAAAC,UAAA,EAFX;EAAM;;;;;;;;;;;;;;;;;;;;;;;ACrCC;AAC+B;AACM;;;;;;;;;;;;;;IAiB5Ctb,uDAAA,yBAIkB;;;;IAHdA,wDAAA,WAAA0I,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,CAAuB;;;;;;IAXnC5I,qEAAA,GAA8C;IAC1CA,4DAAA,iBAQC;IACGA,wDAAA,IAAAs7B,qEAAA,4BAIC;IACDt7B,4DAAA,gBAMC;IAFGA,wDAAA,mBAAAu7B,6EAAA;MAAAv7B,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAiP,KAAA,CAAAlR,IAAA,EAAY;IAAA,EAAC;IAGtBzG,4DAAA,eAAU;IAAAA,oDAAA,iBAAU;IACxBA,0DADwB,EAAW,EAC1B;IACTA,4DAAA,gBAQC;IAFGA,wDAAA,mBAAAw7B,6EAAA;MAAAx7B,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAkc,SAAA,CAAAne,IAAA,EAAgB;IAAA,EAAC;IAG1BzG,4DAAA,eAAU;IAAAA,oDAAA,GAER;IAEVA,0DAFU,EAAW,EACR,EACH;IAGFA,4DAFR,aAAsD,mBACrB,cACiB;IACtCA,oDAAA,IACJ;IACJA,0DADI,EAAK,EACC;IACVA,uDAAA,UAAM;IAEFA,4DADJ,mBAAmC,cACM;IAArCA,oDAAA,OAAqC;IAAOA,0DAAA,EAAK;IAE7CA,4DADJ,eAAyC,gBAC3B;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAW;IAC3BA,4DAAA,SAAQ;IAARA,oDAAA,OAAQ;IACZA,0DADuC,EAAI,EACrC;IAEFA,4DADJ,eAAyC,gBAC3B;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAW;IACjCA,4DAAA,SAAG;IACCA,oDAAA,IACJ;IACJA,0DADI,EAAI,EACF;IAEFA,4DADJ,eAAyC,gBAC3B;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAW;IAC1BA,4DAAA,SAAG;IACCA,oDAAA,IAKJ;IAERA,0DAFQ,EAAI,EACF,EACA;IACVA,uDAAA,UAAM;IACNA,4DAAA,mBAGC;IACGA,uDAAA,2BAMmB;IAE3BA,0DADI,EAAU,EACR;IAEFA,4DADJ,eAA2D,kBAOtD;IADGA,wDAAA,mBAAAy7B,8EAAA;MAAAz7B,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA0I,MAAA,CAAAsc,MAAA,IAAAtc,MAAA,CAAAsc,MAAA;MAAA,OAAAhlB,yDAAA,CAA2B0I,MAAA,CAAAuc,YAAA,CAAAxe,IAAA,CAAAiC,MAAA,CAAAsc,MAAA,CAAyB;IAAA,EAAC;IAGjDhlB,4DADJ,eAA8C,oBACf;IAAAA,oDAAA,IAEzB;IAAAA,0DAAA,EAAW;IACbA,4DAAA,SAAG;IACCA,oDAAA,IACJ;IAGZA,0DAHY,EAAI,EACF,EACD,EACP;;;;;IA/FFA,uDAAA,EAAsC;IAItCA,yDAJA,YAAA0I,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,kBAAAF,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,CAAA+B,MAAA,CAAsC,SAAAjC,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,kBAAAF,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,CAAA+B,MAAA,CACH,aAAAjC,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,kBAAAF,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,CAAA+B,MAAA,EACG,WAAAjC,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,kBAAAF,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,CAAA+B,MAAA,EACF,sBAAAjC,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,kBAAAF,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,CAAA+B,MAAA,EACW;IAI1C3K,uDAAA,EAA0B;IAA1BA,wDAAA,SAAA0I,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,kBAAAF,MAAA,CAAA3E,KAAA,CAAA6E,MAAA,CAAA+B,MAAA,CAA0B;IAgB3B3K,uDAAA,GAA+B;IAC/BA,yDADA,sBAAA0I,MAAA,CAAAwc,GAAA,CAA+B,aAAAxc,MAAA,CAAAwc,GAAA,CACT;IAIZllB,uDAAA,GAER;IAFQA,+DAAA,CAAA0I,MAAA,CAAAwc,GAAA,kCAER;IAMEllB,uDAAA,GACJ;IADIA,gEAAA,MAAA0I,MAAA,CAAA3E,KAAA,CAAAkB,YAAA,IAAAyD,MAAA,CAAA3E,KAAA,CAAAmB,IAAA,MACJ;IAOYlF,uDAAA,GAA2B;IAA3BA,uDAAA,CAAA0I,MAAA,CAAA3E,KAAA,CAAA2e,QAAA,CAA2B;;IAK/B1iB,uDAAA,GACJ;IADIA,gEAAA,OAAA0I,MAAA,CAAA5D,KAAA,kBAAA4D,MAAA,CAAA5D,KAAA,CAAAG,YAAA,MAAAyD,MAAA,CAAA5D,KAAA,kBAAA4D,MAAA,CAAA5D,KAAA,CAAAI,IAAA,OACJ;IAKIlF,uDAAA,GAKJ;IALIA,gEAAA,OAAA0I,MAAA,CAAA4C,QAAA,kBAAA5C,MAAA,CAAA4C,QAAA,CAAAiD,OAAA,MAAA7F,MAAA,CAAA4C,QAAA,kBAAA5C,MAAA,CAAA4C,QAAA,CAAArG,YAAA,MAAAyD,MAAA,CAAA4C,QAAA,kBAAA5C,MAAA,CAAA4C,QAAA,CAAApG,IAAA,OAKJ;IAUAlF,uDAAA,GAAe;IAGfA,wDAHA,QAAA0I,MAAA,CAAAqS,OAAA,CAAe,UAAArS,MAAA,CAAA3E,KAAA,CAAA6G,MAAA,CACO,aAAAlC,MAAA,CAAArB,QAAA,CACD,YAAArH,6DAAA,KAAAiC,GAAA,EACgC;IAQzDjC,uDAAA,GAAwB;IAAxBA,yDAAA,YAAA0I,MAAA,CAAAsc,MAAA,CAAwB;IAKOhlB,uDAAA,GAEzB;IAFyBA,+DAAA,CAAA0I,MAAA,CAAAsc,MAAA,oBAEzB;IAEEhlB,uDAAA,GACJ;IADIA,gEAAA,MAAA0I,MAAA,CAAAsc,MAAA,6CACJ;;;;;IAURhlB,4DAJJ,cAGC,YAC0C;IAAvCA,oDAAA,MAAuC;IAG3CA,0DADI,EAAI,EACF;;;AAgBZ,MAAOud,4BAA4B;EAYrC,IAAWzY,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACtB,IAAI,CAACuB,WAAW,CAAC,CAAC,IAAI,CAAChB,KAAK,EAAEgR,IAAI,CAAC3S,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC2B,KAAK,EAAEgR,IAAI;EAC3E;EAEA,IAAWzJ,QAAQA,CAAA;IACf,OAAO,IAAI,CAAC9H,IAAI,CAACmI,SAAS,CAACF,IAAI,CAC1B/E,CAAC,IACE,IAAI,CAAC3C,KAAK,EAAEgR,IAAI,CAAC3S,EAAE,KAAKsE,CAAC,CAACtE,EAAE,IAC5B,IAAI,CAAC2B,KAAK,EAAEgR,IAAI,CAACC,SAAS,KAAKtO,CAAC,CAACtE,EAAE,CAC1C;EACL;EAEAiB,YAAoBG,IAAyB;IAAzB,KAAAA,IAAI,GAAJA,IAAI;IAtBR,KAAA0hB,GAAG,GAAY,KAAK;IACpB,KAAAF,MAAM,GAAY,KAAK;IAEtB,KAAAC,YAAY,GAAG,IAAIlmB,uDAAY,EAAW;IAC1C,KAAA4Y,KAAK,GAAG,IAAI5Y,uDAAY,EAAQ;IAChC,KAAA6lB,SAAS,GAAG,IAAI7lB,uDAAY,EAAQ;IAE9C,KAAAgc,OAAO,GAAG,EAAE;IACZ,KAAA1T,QAAQ,GAAoB,EAAE;EAcW;EAEzC9C,WAAWA,CAACC,OAAsB;IACrC,IAAIA,OAAO,CAACT,KAAK,IAAI,IAAI,CAACA,KAAK,EAAE;MAC7B,IAAI,CAAC23B,cAAc,EAAE;IACzB;EACJ;EAEQA,cAAcA,CAAA;IAClB,IAAI,CAAC3gB,OAAO,GAAG,IAAI,CAACjW,KAAK,EAAE8F,MAAM;IACjC,IAAI,CAACvD,QAAQ,GAAG,CACZ;MACInG,QAAQ,EAAE,IAAI,CAAC6C,KAAK,EAAE6G,MAAM;MAC5B4B,OAAO,EAAEjE,gEAAeA;KAC3B,CACJ;EACL;EAAC,QAAA7B,CAAA;qBAxCQ6W,4BAA4B,EAAAvd,+DAAA,CAAA4G,sEAAA;EAAA;EAAA,QAAAK,EAAA;UAA5BsW,4BAA4B;IAAArW,SAAA;IAAAC,MAAA;MAAApD,KAAA;MAAAmhB,GAAA;MAAAF,MAAA;IAAA;IAAA5d,OAAA;MAAA6d,YAAA;MAAAtN,KAAA;MAAAiN,SAAA;IAAA;IAAAvd,QAAA,GAAArH,kEAAA;IAAAwH,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBA/EgBC,SAAA,wEAAO;;;;;;;;;;;;;;;;iBAGhCA,SAAA,iFAAoB,wBAAO;;;;;;;;;;iBAyDJA,SAAA,sGAEvC;;;;;;QAPR1N,wDArGA,IAAA27B,oDAAA,4BAA8C,IAAAC,mDAAA,gCAAA57B,oEAAA,CAqGpB;;;;QArGEA,wDAAb,SAAA8H,GAAA,CAAA/D,KAAA,CAAa,aAAA83B,cAAA,CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfmB;AACP;AACA;AACJ;AACtB;AACqC;AACd;;;;;;;;;;;IA0CjD77B,4DAAA,cAKC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAM;;;;IADFA,uDAAA,EACJ;IADIA,gEAAA,MAAAM,MAAA,CAAAY,QAAA,MACJ;;;;;;IAYIlB,4DADJ,cAAkE,QAC3D;IAAAA,oDAAA,GAAU;IAAAA,0DAAA,EAAI;IACjBA,4DAAA,iBAKC;IADGA,wDAAA,mBAAA87B,4EAAA;MAAA,MAAAvX,OAAA,GAAAvkB,2DAAA,CAAAuB,GAAA,EAAA0I,SAAA;MAAA,MAAA3J,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAAy7B,aAAA,CAAAxX,OAAA,CAAmB;IAAA,EAAC;IAE7BvkB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAEvBA,0DAFuB,EAAW,EACrB,EACP;;;;IATCA,uDAAA,GAAU;IAAVA,+DAAA,CAAAukB,OAAA,CAAU;;;AAoCvB,MAAO/G,mCAAoC,SAAQ5d,yDAAY;EAMjE,IAAWwF,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACgpB,WAAW,CAAC9c,IAAI,CAAC4E,KAAK,CAACpV,IAAI;EAC3C;EAEA,IAAW8C,GAAGA,CAAA;IACV,MAAM;MAAE9C,IAAI;MAAEuE;IAAQ,CAAE,GAAG,IAAI,CAAC+oB,WAAW,CAAC9c,IAAI,CAAC4E,KAAK;IACtD,OAAOpV,IAAI,GAAGuE,QAAQ,GAAG,EAAE,GAAG,IAAI;EACtC;EAKA,IAAWtE,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACoC,SAAS,CAACpC,WAAW;EACrC;EAEAsC,YACYyiB,OAAuB,EACvBsI,WAA+B,EAC/B5qB,IAAyB,EACzBL,SAA0B;IAElC,KAAK,EAAE;IALC,KAAA2iB,OAAO,GAAPA,OAAO;IACP,KAAAsI,WAAW,GAAXA,WAAW;IACX,KAAA5qB,IAAI,GAAJA,IAAI;IACJ,KAAAL,SAAS,GAATA,SAAS;IAzBL,KAAA6N,IAAI,GAAmB,MAAM;IAC5B,KAAA+U,UAAU,GAAG,IAAIhnB,uDAAY,EAAkB;IAChD,KAAA4T,OAAO,GAAG,IAAI,CAACyb,WAAW,CAACzb,OAAO;IAC3C,KAAAzR,QAAQ,GAAW,EAAE;IAWZ,KAAA86B,WAAW,GAAG,MAC1B,IAAI,CAAClW,OAAO,CAACvf,IAAI,CAACkX,oFAA4B,CAAC;EAanD;EAEOzZ,QAAQA,CAAA;IACX,IAAI,CAACC,YAAY,CACb,MAAM,EACN,IAAI,CAAC0O,OAAO,CAACxO,SAAS,CAAC,CAAC;MAAEmQ;IAAO,CAAE,KAC/B,IAAI,CAAC2nB,eAAe,CAAC,CAAC3nB,OAAO,CAAC,CAAC,CAClC,CACJ;EACL;EAEaynB,aAAaA,CAACG,IAAY;IAAA,IAAAvvB,KAAA;IAAA,OAAAC,wJAAA;MACnC,MAAMsJ,KAAK,SAASvJ,KAAI,CAACyhB,WAAW,CAACzb,OAAO,CAAC7O,IAAI,CAACoM,oDAAI,CAAC,CAAC,CAAC,CAAC,CAACrD,SAAS,EAAE;MACtEF,KAAI,CAACyhB,WAAW,CAACvc,UAAU,CAAC;QACxB,GAAGqE,KAAK;QACR7O,QAAQ,EAAE,CAAC6O,KAAK,CAAC7O,QAAQ,IAAI,EAAE,EAAEyI,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,KAAKw1B,IAAI;OAC5D,CAAC;IAAC;EACP;EAEQD,eAAeA,CAACtQ,QAAA,GAAqB,EAAE;IAC3C,MAAM7mB,KAAK,GAAG,IAAI,CAACtB,IAAI,CAACuB,WAAW,CAAC4mB,QAAQ,CAAC;IAC7C,MAAMve,IAAI,GAAGtI,KAAK,IAAI,IAAI,CAACtB,IAAI,CAAC8H,QAAQ;IACxC,IAAI,CAACpK,QAAQ,GAAGkM,IAAI,EAAEnI,YAAY,IAAImI,IAAI,EAAElI,IAAI,IAAI,EAAE;EAC1D;EAAC,QAAAwB,CAAA;qBApDQ8W,mCAAmC,EAAAxd,+DAAA,CAAA4G,0EAAA,GAAA5G,+DAAA,CAAA6G,qEAAA,GAAA7G,+DAAA,CAAA8G,sEAAA,GAAA9G,+DAAA,CAAA+G,4DAAA;EAAA;EAAA,QAAAE,EAAA;UAAnCuW,mCAAmC;IAAAtW,SAAA;IAAAC,MAAA;MAAA6J,IAAA;IAAA;IAAA5J,OAAA;MAAA2e,UAAA;IAAA;IAAA1e,QAAA,GAAArH,wEAAA;IAAAwH,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBArFnCC,SAAA,0EAED;;;;;;;;;;iBASKA,SAAA,sEAED;;;;;;;;;;iBAQCA,SAAA,uEAED;;;;;;;;;;;;;;;;iBAsByDA,SAAA,wEACpD,eAAsC,yBAC/C;;;;;;QArDA1N,4DADJ,iBAAmE,gBAO9D;QAFGA,wDAAA,mBAAAm8B,qEAAA;UAAA,OAASr0B,GAAA,CAAAk0B,WAAA,EAAa;QAAA,EAAC;QAJ3Bh8B,oDAAA,MAMC;QAEDA,0DAAA,EAAS;QAELA,4DADJ,aAA+B,gBAQ1B;QAFGA,wDAAA,mBAAAo8B,qEAAA;UAAAt0B,GAAA,CAAAkJ,IAAA,GAAgB,KAAK;UAAA,OAAElJ,GAAA,CAAAie,UAAA,CAAAtf,IAAA,CAAAqB,GAAA,CAAAkJ,IAAA,CAAqB;QAAA,EAAC;QALjDhR,oDAAA,MAOC;QAEDA,0DAAA,EAAS;QACTA,4DAAA,gBAOC;QAFGA,wDAAA,mBAAAq8B,qEAAA;UAAAv0B,GAAA,CAAAkJ,IAAA,GAAgB,MAAM;UAAA,OAAElJ,GAAA,CAAAie,UAAA,CAAAtf,IAAA,CAAAqB,GAAA,CAAAkJ,IAAA,CAAqB;QAAA,EAAC;QALlDhR,oDAAA,MAOC;QAITA,0DAFQ,EAAS,EACP,EACA;QACVA,4DAAA,iBAGC;QACGA,wDAAA,IAAAs8B,kDAAA,kBAKC;QAGDt8B,4DAAA,eAAuD;QACnDA,oDAAA,IACJ;;QAAAA,0DAAA,EAAM;QACNA,4DAAA,eAAuD;QACnDA,oDAAA,IAEJ;;;QAAAA,0DAAA,EAAM;QACNA,4DAAA,eAA6D;QAA7DA,oDAAA,OAA6D;;QAE7DA,0DAAA,EAAM;QACNA,wDAAA,KAAAu8B,mDAAA,kBAAkE;;QAWtEv8B,0DAAA,EAAU;;;;;QAnDEA,uDAAA,GAAgC;QAAhCA,yDAAA,YAAA8H,GAAA,CAAAkJ,IAAA,WAAgC;QAUhChR,uDAAA,GAAiC;QAAjCA,yDAAA,YAAA8H,GAAA,CAAAkJ,IAAA,YAAiC;QAgBpChR,uDAAA,GAAc;QAAdA,wDAAA,SAAA8H,GAAA,CAAA5G,QAAA,CAAc;QAKflB,uDAAA,GACJ;QADIA,gEAAA,MAAAA,yDAAA,SAAA8H,GAAA,CAAA1C,KAAA,qBACJ;QAEIpF,uDAAA,GAEJ;QAFIA,gEAAA,MAAAA,yDAAA,SAAA8H,GAAA,CAAA1C,KAAA,EAAA0C,GAAA,CAAA/G,WAAA,eAAAf,yDAAA,SAAA8H,GAAA,CAAAlE,GAAA,EAAAkE,GAAA,CAAA/G,WAAA,OAEJ;QAEIf,uDAAA,GACJ;QADIA,uDAAA,GAAA0mB,OAAA,GAAA1mB,yDAAA,SAAA8H,GAAA,CAAA6K,OAAA,oBAAA+T,OAAA,CAAA8V,QAAA,OACJ;;QACkCx8B,uDAAA,EAA8B;QAA9BA,wDAAA,aAAAy8B,OAAA,GAAAz8B,yDAAA,SAAA8H,GAAA,CAAA6K,OAAA,oBAAA8pB,OAAA,CAAAp1B,QAAA,CAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjET;AACjB;AACU;AACjB;AACkB;;;;;;;;;;;;;;;;;;;;;;IAO7CrH,4DAAA,iBAMC;IADGA,wDAAA,mBAAA08B,uEAAA;MAAA18B,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAiP,KAAA,EAAO;IAAA,EAAC;IAEjB3X,4DAAA,eAAU;IAAAA,oDAAA,0BAAmB;IACjCA,0DADiC,EAAW,EACnC;;;;;IA6BOA,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAA03B,MAAA,CAAa;IAEb13B,uDAAA,EACJ;IADIA,gEAAA,MAAA03B,MAAA,CAAAzyB,YAAA,IAAAyyB,MAAA,CAAAxyB,IAAA,MACJ;;;;;;IAfJlF,4DALJ,yBAIC,qBAUI;;;;IANGA,wDAAA,2BAAA28B,2GAAAzd,MAAA;MAAAlf,2DAAA,CAAA+I,GAAA;MAAA,MAAAL,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAA2e,WAAA,CAAAnI,MAAA,CAAmB;IAAA,EAAC;IAOrClf,wDAAA,IAAA48B,mFAAA,yBAGC;;IAIT58B,0DADI,EAAa,EACA;;;;;IAfTA,uDAAA,EAA4B;IAG5BA,wDAHA,YAAAA,yDAAA,OAAA0I,MAAA,CAAA4C,QAAA,EAA4B,mBAAAtL,6DAAA,KAAAiC,GAAA,EAEW,kBAAAulB,OAAA,GAAAxnB,yDAAA,OAAA0I,MAAA,CAAA4C,QAAA,oBAAAkc,OAAA,CAAAviB,YAAA,OAAAuiB,OAAA,GAAAxnB,yDAAA,OAAA0I,MAAA,CAAA4C,QAAA,oBAAAkc,OAAA,CAAAtiB,IAAA,EAItC;IAGmBlF,uDAAA,GAAoB;IAApBA,wDAAA,YAAAA,yDAAA,QAAA0I,MAAA,CAAAiD,SAAA,EAAoB;;;;;IAsBxC3L,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAA63B,MAAA,CAAAz1B,EAAA,CAAgB;IAEhBpC,uDAAA,EACJ;IADIA,gEAAA,MAAA63B,MAAA,CAAA5yB,YAAA,IAAA4yB,MAAA,CAAA3yB,IAAA,MACJ;;;;;;IAfJlF,4DALJ,yBAIC,qBAUI;;IANGA,wDAAA,2BAAA68B,2GAAA3d,MAAA;MAAAlf,2DAAA,CAAAyf,GAAA;MAAA,MAAA/W,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAE3B0I,MAAA,CAAAmJ,UAAA,CAAW;QAAAyC,OAAA,EAAA4K;MAAA,CACf,CAAC;IAAA,EAD+B;IAKDlf,wDAAA,IAAA88B,mFAAA,yBAGC;;IAIT98B,0DADI,EAAa,EACA;;;;;IAfTA,uDAAA,EAAsC;IAItCA,wDAJA,aAAAkqB,OAAA,GAAAlqB,yDAAA,OAAA0I,MAAA,CAAAiK,OAAA,oBAAAuX,OAAA,CAAA5V,OAAA,CAAsC,mBAAAtU,6DAAA,IAAAiC,GAAA,EAIC;IAKnBjC,uDAAA,GAAiB;IAAjBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAAqf,MAAA,EAAiB;;;;;IAxCjD/nB,qEAAA,GAAkC;IAC9BA,wDAAA,IAAA+8B,sEAAA,8BAIC;;IAmBD/8B,wDAAA,IAAAg9B,sEAAA,6BAIC;;;;;;IAxBIh9B,uDAAA,EAAqC;IAArCA,wDAAA,WAAA8nB,OAAA,GAAA9nB,yDAAA,OAAA0I,MAAA,CAAAiD,SAAA,oBAAAmc,OAAA,CAAAnd,MAAA,MAAqC;IAuBrC3K,uDAAA,GAAkB;IAAlBA,wDAAA,UAAA0I,MAAA,CAAA8gB,WAAA,CAAkB;;;;;IAmCfxpB,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAAi9B,MAAA,CAAa;IAEbj9B,uDAAA,EACJ;IADIA,gEAAA,MAAAi9B,MAAA,CAAAh4B,YAAA,IAAAg4B,MAAA,CAAA/3B,IAAA,MACJ;;;;;;IAbJlF,4DALJ,yBAIC,qBAQI;IAJGA,wDAAA,2BAAAk9B,2GAAAhe,MAAA;MAAAlf,2DAAA,CAAA4nB,GAAA;MAAA,MAAAlf,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAAue,SAAA,CAAA/H,MAAA,CAAiB;IAAA,EAAC;IAKnClf,wDAAA,IAAAm9B,mFAAA,yBAGC;;IAITn9B,0DADI,EAAa,EACA;;;;IAbTA,uDAAA,EAAkB;IAElBA,wDAFA,YAAA0I,MAAA,CAAA6C,MAAA,CAAkB,mBAAAvL,6DAAA,IAAAiC,GAAA,EAEqB;IAKnBjC,uDAAA,EAAkB;IAAlBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAA8C,OAAA,EAAkB;;;;;IA2BlCxL,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAJTA,wDAAA,UAAAo9B,SAAA,CAAAh7B,EAAA,CAAkB;IAGlBpC,uDAAA,EACJ;IADIA,gEAAA,MAAAo9B,SAAA,CAAAn4B,YAAA,IAAAm4B,SAAA,CAAAl4B,IAAA,MACJ;;;;;IATJlF,4DAAA,uBAGC;IACGA,wDAAA,IAAAq9B,kGAAA,yBAGC;IAGLr9B,0DAAA,EAAe;;;;IARXA,wDAAA,UAAAs9B,OAAA,CAAAp4B,IAAA,CAAkB;IAIIlF,uDAAA,EAAa;IAAbA,wDAAA,YAAAs9B,OAAA,CAAAvV,MAAA,CAAa;;;;;;IAjB3C/nB,4DALJ,yBAIC,qBAUI;;IANGA,wDAAA,2BAAAu9B,2GAAAre,MAAA;MAAAlf,2DAAA,CAAA8K,GAAA;MAAA,MAAApC,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAE3B0I,MAAA,CAAAmJ,UAAA,CAAW;QAAAyC,OAAA,EAAA4K;MAAA,CACf,CAAC;IAAA,EAD+B;IAKDlf,4DAAA,qBAAuB;IAAAA,oDAAA,gBAAS;IAAAA,0DAAA,EAAa;IAC7CA,wDAAA,IAAAw9B,qFAAA,2BAGC;;IASTx9B,0DADI,EAAa,EACA;;;;;IArBTA,uDAAA,EAAsC;IAItCA,wDAJA,aAAAkqB,OAAA,GAAAlqB,yDAAA,OAAA0I,MAAA,CAAAiK,OAAA,oBAAAuX,OAAA,CAAA5V,OAAA,CAAsC,mBAAAtU,6DAAA,IAAAiC,GAAA,EAIC;IAMnBjC,uDAAA,GAAwB;IAAxBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAA+0B,aAAA,EAAwB;;;;;IAvCxDz9B,qEAAA,GAAiC;IAC7BA,wDAAA,IAAA09B,sEAAA,6BAIC;;IAiBD19B,wDAAA,IAAA29B,sEAAA,6BAIC;;;;;;IAtBI39B,uDAAA,EAA+B;IAA/BA,wDAAA,UAAA8nB,OAAA,GAAA9nB,yDAAA,OAAA0I,MAAA,CAAA8C,OAAA,oBAAAsc,OAAA,CAAAnd,MAAA,CAA+B;IAqB/B3K,uDAAA,GAAkB;IAAlBA,wDAAA,UAAA0I,MAAA,CAAA8gB,WAAA,CAAkB;;;;;;IAoCvBxpB,4DAFR,cAAuD,cACzB,gBAEjB;IADLA,yDAAA,MACK;IAAUA,uDAAA,WAAc;IAAAA,uDAAA,EAC5B;IAD4BA,0DAAA,EAC5B;IACDA,4DAAA,uBAMC;IAHGA,wDAAA,2BAAA49B,mFAAA1e,MAAA;MAAAlf,2DAAA,CAAAqL,IAAA;MAAA,MAAA3C,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAA4I,IAAA,CAAAE,UAAA,CAAgB;QAAA1Q,IAAA,EAAAoe;MAAA,CAAgB,CAAC;IAAA,EAAC;IAI3Dlf,0DADK,EAAe,EACd;IAEFA,4DADJ,cAA0B,gBAEjB;IADLA,yDAAA,MACK;IAAQA,uDAAA,WAAc;IAAAA,uDAAA,EAC1B;IAD0BA,0DAAA,EAC1B;IACDA,uDAAA,4BAOmB;IAE3BA,0DADI,EAAM,EACJ;;;;IAnBMA,uDAAA,GAA2B;IAG3BA,wDAHA,YAAA0I,MAAA,CAAA4I,IAAA,CAAA4E,KAAA,CAAApV,IAAA,CAA2B,mBAAAd,6DAAA,IAAAiC,GAAA,EAEY,aAAAyG,MAAA,CAAAuf,QAAA,CAClB;IAUrBjoB,uDAAA,GAA0B;IAE1BA,wDAFA,SAAA0I,MAAA,CAAA4I,IAAA,kBAAA5I,MAAA,CAAA4I,IAAA,CAAA4E,KAAA,kBAAAxN,MAAA,CAAA4I,IAAA,CAAA4E,KAAA,CAAApV,IAAA,CAA0B,QAAA4H,MAAA,CAAAm1B,YAAA,CACN,aAAAn1B,MAAA,CAAAuf,QAAA,CACC;;;;;;IA+B7BjoB,4DAJJ,cAGC,cACwC;IAAAA,oDAAA,GAAU;IAAAA,0DAAA,EAAM;IACrDA,4DAAA,uBAKC;;IAFGA,wDAAA,2BAAA89B,6FAAA5e,MAAA;MAAA,MAAA6e,QAAA,GAAA/9B,2DAAA,CAAAg+B,IAAA,EAAA/zB,SAAA;MAAA,MAAAvB,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAiB0I,MAAA,CAAAu1B,aAAA,CAAAF,QAAA,EAAA7e,MAAA,CAA2B;IAAA,EAAC;IAGrDlf,0DADK,EAAe,EACd;;;;;;IAPmCA,uDAAA,GAAU;IAAVA,+DAAA,CAAA+9B,QAAA,CAAU;IAG3C/9B,uDAAA,EAAuD;IAEvDA,wDAFA,aAAAwnB,OAAA,GAAAxnB,yDAAA,OAAA0I,MAAA,CAAAiK,OAAA,oBAAA6U,OAAA,CAAAngB,QAAA,kBAAAmgB,OAAA,CAAAngB,QAAA,CAAAqE,QAAA,CAAAqyB,QAAA,EAAuD,mBAAA/9B,6DAAA,IAAAiC,GAAA,EAEhB;;;;;IAV/CjC,4DALJ,kBAIC,aACwC;IAArCA,oDAAA,MAAqC;IAAUA,0DAAA,EAAK;IACpDA,wDAAA,IAAAk+B,sDAAA,kBAGC;;IASLl+B,0DAAA,EAAU;;;;IAVeA,uDAAA,GAAmB;IAAnBA,wDAAA,YAAAA,yDAAA,OAAA0I,MAAA,CAAArB,QAAA,EAAmB;;;;;;IAgB5CrH,4DAJJ,cAGC,iBACqE;IAAvBA,wDAAA,mBAAAm+B,qEAAA;MAAAn+B,2DAAA,CAAAizB,IAAA;MAAA,MAAAvqB,MAAA,GAAA1I,2DAAA;MAAA,OAAAA,yDAAA,CAAS0I,MAAA,CAAAiP,KAAA,EAAO;IAAA,EAAC;IAA5D3X,oDAAA,OAAkE;IAGtEA,0DADI,EAAS,EACP;;;AAaR,MAAOyd,4BAA4B;EAuCrC,IAAW7R,GAAGA,CAAA;IACV,OAAO,IAAI,CAACpI,IAAI,CAAC8H,QAAQ;EAC7B;EAEA,IAAWgG,IAAIA,CAAA;IACX,OAAO,IAAI,CAAC8sB,KAAK,CAAC9sB,IAAI;EAC1B;EAEA,IAAWusB,YAAYA,CAAA;IACnB,OAAO,IAAI,CAAC16B,SAAS,CAACmB,GAAG,CAAC,yBAAyB,CAAC,IAAI,GAAG;EAC/D;EAEA,IAAW2jB,QAAQA,CAAA;IACf,OAAO,IAAI,CAAC9kB,SAAS,CAACmB,GAAG,CAAC,sBAAsB,CAAC;EACrD;EAEA,IAAWmW,UAAUA,CAAA;IACjB,OAAO,CAAC,CAAC,IAAI,CAACtX,SAAS,CAACmB,GAAG,CAAC,gBAAgB,CAAC;EACjD;EAEAjB,YAEYqlB,WAA4D,EAC5DvlB,SAA0B,EAC1Bi7B,KAAyB,EACzB56B,IAAyB;IAHzB,KAAAklB,WAAW,GAAXA,WAAW;IACX,KAAAvlB,SAAS,GAATA,SAAS;IACT,KAAAi7B,KAAK,GAALA,KAAK;IACL,KAAA56B,IAAI,GAAJA,IAAI;IA7DT,KAAAmlB,SAAS,GAAG,KAAK;IACR,KAAAhW,OAAO,GAAG,IAAI,CAACyrB,KAAK,CAACzrB,OAAO;IAE5B,KAAAoV,MAAM,GAAG,IAAI,CAACvkB,IAAI,CAAC40B,aAAa,CAACt0B,IAAI,CACjDrE,mDAAG,CAAE8pB,CAAC,IAAI;MACN,KAAK,MAAMJ,GAAG,IAAII,CAAC,EAAE;QACjB,MAAM3d,GAAG,GAAG,IAAI,CAACpI,IAAI,CAACmI,SAAS,CAACF,IAAI,CAC/B/E,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAK+mB,GAAG,CAACnU,SAAS,CAChC;QACAmU,GAAW,CAACvd,GAAG,GAAGA,GAAG,EAAE3G,YAAY,IAAI2G,GAAG,EAAE1G,IAAI,IAAI,EAAE;MAC3D;MACA,OAAOqkB,CAAC,CAACzZ,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,CAAC0iB,IAAI,CAAC1d,QAAQ,CAAC,SAAS,CAAC,CAAC;IACtD,CAAC,CAAC,CACL;IACe,KAAAC,SAAS,GAAG,IAAI,CAACnI,IAAI,CAAColB,gBAAgB;IACtC,KAAApd,OAAO,GAAG,IAAI,CAAChI,IAAI,CAACqlB,WAAW;IAC/B,KAAA4U,aAAa,GAAG,IAAI,CAACj6B,IAAI,CAACslB,aAAa,CAAChlB,IAAI,CACxDrE,mDAAG,CAAEiH,CAAC,IAAI;MACN,MAAM23B,gBAAgB,GAAG,IAAI,CAAC76B,IAAI,CAACmI,SAAS,CAACmE,MAAM,CAC9CwD,CAAC,IAAK,CAAC5M,CAAC,IAAI4M,CAAC,CAAC0B,SAAS,KAAKtO,CAAC,CAACtE,EAAE,CACpC;MACD,MAAMq7B,aAAa,GAAGY,gBAAgB,CAAC5+B,GAAG,CAAE6T,CAAC,KAAM;QAC/ClR,EAAE,EAAEkR,CAAC,CAAClR,EAAE;QACR8C,IAAI,EAAEoO,CAAC,CAACrO,YAAY,IAAIqO,CAAC,CAACpO,IAAI;QAC9B6iB,MAAM,EAAE,IAAI,CAACvkB,IAAI,CAACukB,MAAM,CAACjY,MAAM,CAC1ByZ,CAAC,IAAKA,CAAC,CAACvU,SAAS,KAAK1B,CAAC,CAAClR,EAAE,IAAImnB,CAAC,CAACH,IAAI,CAAC1d,QAAQ,CAAC,SAAS,CAAC;OAEhE,CAAC,CAAC;MACH,OAAO+xB,aAAa,CAAC3tB,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,CAACqhB,MAAM,CAACpd,MAAM,CAAC;IACvD,CAAC,CAAC,CACL;IACe,KAAAtD,QAAQ,GAAG,IAAI,CAAC+2B,KAAK,CAAC/2B,QAAQ;IAE9B,KAAAsQ,KAAK,GAAG,MAAM,IAAI,CAAC+Q,WAAW,CAACW,OAAO,EAAE;IACxC,KAAAxX,UAAU,GAAImU,CAAC,IAAK,IAAI,CAACoY,KAAK,CAACvsB,UAAU,CAACmU,CAAC,CAAC;IA6BxD,IAAI,CAAC2C,SAAS,GAAG,CAAC,CAAC,IAAI,CAACD,WAAW;EACvC;EAEauV,aAAaA,CAAC/B,IAAY,EAAExyB,KAAc;IAAA,IAAAiD,KAAA;IAAA,OAAAC,wJAAA;MACnD,MAAM;QAAEvF;MAAQ,CAAE,SAASsF,KAAI,CAACgG,OAAO,CAAC7O,IAAI,CAACoM,qDAAI,CAAC,CAAC,CAAC,CAAC,CAACrD,SAAS,EAAE;MACjE,MAAMyxB,QAAQ,GAAG,CAACj3B,QAAQ,IAAI,EAAE,EAAEyI,MAAM,CAAEpJ,CAAC,IAAKw1B,IAAI,KAAKx1B,CAAC,CAAC;MAC3D,IAAIgD,KAAK,EAAE40B,QAAQ,CAACnrB,IAAI,CAAC+oB,IAAI,CAAC;MAC9BvvB,KAAI,CAACkF,UAAU,CAAC;QAAExK,QAAQ,EAAEi3B;MAAQ,CAAE,CAAC;IAAC;EAC5C;EAAC,QAAA53B,CAAA;qBA1EQ+W,4BAA4B,EAAAzd,+DAAA,CAAA4G,8EAAA,MAAA5G,+DAAA,CAAA6G,4DAAA,GAAA7G,+DAAA,CAAA8G,qEAAA,GAAA9G,+DAAA,CAAA+G,sEAAA;EAAA;EAAA,QAAAE,EAAA;UAA5BwW,4BAA4B;IAAAvW,SAAA;IAAAC,MAAA;MAAAqiB,WAAA;IAAA;IAAAhiB,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAzMmBC,SAAA,8EAAa;;;;;;;;;;iBAQpBA,SAAA,wEAAO;;;;;;;;;;iBAEbA,SAAA,wEAAQ;;;;;;;;;;;;;;;;;;iBAuGZA,SAAA,sEAAI,iBAAM,oBAAC,kBAAO;;;;;;;;;;iBACaA,SAAA,qGAEtD;;;;;;;;;;iBA+BiCA,SAAA,2EAAU;;;;;;;;;;iBAEFA,SAAA,4FAEzC;;;;;;;;;;iBAxGyBA,SAAA,0EAAS;;;;;;;;;;iBAuBTA,SAAA,2EAAU;;;;;;;;;;iBAuBVA,SAAA,0EAAS;;;;;;;;;;;;;;;;;;kBA4BzBA,SAAA,4EAAU,gBAAM,oBAAC,iBAAO;;;;;;;;;;;;;;;;;;kBAYxBA,SAAA,0EAAQ,gBAAM,oBAAC,iBAAO;;;;;;;;;;kBAiCEA,SAAA,2EAAU;;;;;;;;;;kBAmBeA,SAAA,gFAElE;;;;;;QAtMA1N,4DADJ,cAAuE,cAC1C;QACrBA,wDAAA,IAAAu+B,8CAAA,qBAMC;QAGLv+B,0DAAA,EAAM;QACNA,4DAAA,aAAgD;QAAhDA,oDAAA,MAAgD;QAAaA,0DAAA,EAAK;QAClEA,uDAAA,cAA0B;QAC9BA,0DAAA,EAAM;QAMEA,4DALR,eAGC,kBACoB,aACwB;QAArCA,oDAAA,MAAqC;QAAOA,0DAAA,EAAK;QAE7CA,4DADJ,eAAgD,iBACjB;QAA3BA,oDAAA,OAA2B;QAAQA,0DAAA,EAAQ;QAiD3CA,wDAhDA,KAAAw+B,qDAAA,2BAAkC,KAAAC,qDAAA,2BAgDD;QAoDrCz+B,0DAAA,EAAM;QAEFA,4DADJ,eAAkC,iBACP;QAAvBA,yDAAA,OAAuB;QAAIA,uDAAA,YAAc;QAAAA,uDAAA,EAAQ;QAARA,0DAAA,EAAQ;QACjDA,4DAAA,wBAAsD;QAAtDA,oDAAA,OAAsD;QAG1DA,0DADI,EAAe,EACb;QACNA,wDAAA,KAAA0+B,4CAAA,mBAAuD;QA2B3D1+B,0DAAA,EAAU;QAENA,4DADJ,mBAAqC,cACI;QAArCA,oDAAA,OAAqC;QAAUA,0DAAA,EAAK;QAEhDA,4DADJ,eAA+B,eACc;QAAzCA,oDAAA,OAAyC;QAEzCA,0DAAA,EAAM;QACNA,4DAAA,wBAKC;;QAFGA,wDAAA,2BAAA2+B,6EAAAzf,MAAA;UAAA,OAAiBpX,GAAA,CAAA+J,UAAA,CAAW;YAAA+T,QAAA,EAAA1G;UAAA,CAAoB,CAAC;QAAA,EAAC;QAK9Dlf,0DAFQ,EAAe,EACb,EACA;QACVA,wDAAA,KAAA4+B,gDAAA,sBAIC;;QAeL5+B,0DAAA,EAAO;QACPA,wDAAA,KAAA6+B,4CAAA,kBAGC;;;;;QA9LY7+B,uDAAA,GAAe;QAAfA,wDAAA,SAAA8H,GAAA,CAAA6gB,SAAA,CAAe;QAWxB3oB,uDAAA,GAAkB;QAAlBA,wDAAA,cAAA8H,GAAA,CAAAwJ,IAAA,CAAkB;QAMKtR,uDAAA,GAAiB;QAAjBA,wDAAA,UAAA8H,GAAA,CAAA2S,UAAA,CAAiB;QAgDjBza,uDAAA,EAAgB;QAAhBA,wDAAA,SAAA8H,GAAA,CAAA2S,UAAA,CAAgB;QA2DOza,uDAAA,GAAW;QAAXA,wDAAA,eAAW;QAoC7CA,uDAAA,GAAuC;QAEvCA,wDAFA,aAAA0mB,OAAA,GAAA1mB,yDAAA,QAAA8H,GAAA,CAAA6K,OAAA,oBAAA+T,OAAA,CAAAd,QAAA,CAAuC,mBAAA5lB,6DAAA,KAAAiC,GAAA,EAEA;QAQ9CjC,uDAAA,GAAgC;QAAhCA,wDAAA,UAAAy8B,OAAA,GAAAz8B,yDAAA,SAAA8H,GAAA,CAAAT,QAAA,oBAAAo1B,OAAA,CAAA9xB,MAAA,CAAgC;QAmBpC3K,uDAAA,GAAe;QAAfA,wDAAA,SAAA8H,GAAA,CAAA6gB,SAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7M2C;AAElC;AACA;AACsC;;;;;;;;;;IAiC3C3oB,4DAJJ,cAGC,eACa;IAAAA,oDAAA,WAAI;IAClBA,0DADkB,EAAW,EACvB;;;;;IACNA,uDAAA,cAKE;;;;IADEA,wDAAA,WAAA8+B,QAAA,CAAAl2B,MAAA,IAA0B;;;;;IAG1B5I,uDAAA,cAGE;;;;;;IAzBdA,4DANJ,aAKC,iBAMI;IADGA,wDAAA,mBAAA++B,oFAAA;MAAA,MAAAD,QAAA,GAAA9+B,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAAkV,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAA6f,WAAA,CAAAF,QAAA,CAAkB;IAAA,EAAC;IAE5B9+B,4DAAA,cAEC;IAaGA,wDAZA,IAAAi/B,iEAAA,kBAGC,IAAAC,iEAAA,kBAQC,IAAAC,yEAAA,gCAAAn/B,oEAAA,CACwB;IAM9BA,0DAAA,EAAM;IAEFA,4DADJ,cAAuB,cACqB;IACpCA,oDAAA,GACJ;IAAAA,0DAAA,EAAM;IAEFA,4DADJ,eAAiD,oBACjB;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAW;IAC5CA,4DAAA,SAAG;IACCA,oDAAA,IAOJ;IACJA,0DADI,EAAI,EACF;IAEFA,4DADJ,eAAiD,oBACjB;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAW;IAC7CA,4DAAA,SAAQ;IAARA,oDAAA,OAAQ;IAQpBA,0DAHY,EAAI,EACF,EACJ,EACD;IACTA,4DAAA,kBAOC;IADGA,wDAAA,mBAAAo/B,qFAAA;MAAA,MAAAN,QAAA,GAAA9+B,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAAkV,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAAyF,SAAA,CAAAne,IAAA,CAAAq4B,QAAA,CAAqB;IAAA,EAAC;IAE/B9+B,4DAAA,gBAAU;IAAAA,oDAAA,IAIR;IAEVA,0DAFU,EAAW,EACR,EACR;;;;;;IAxEDA,yDAAA,iBAAAmf,MAAA,CAAA6F,MAAA,KAAA8Z,QAAA,CAAA18B,EAAA,CAA0C;IAc7BpC,uDAAA,GAAiC;IAAjCA,wDAAA,SAAAmf,MAAA,CAAAwD,QAAA,CAAAjX,QAAA,CAAAozB,QAAA,CAAA18B,EAAA,EAAiC;IAMjCpC,uDAAA,EAA4B;IAAAA,wDAA5B,SAAA8+B,QAAA,CAAAl2B,MAAA,kBAAAk2B,QAAA,CAAAl2B,MAAA,CAAA+B,MAAA,CAA4B,aAAAigB,cAAA,CAAgB;IAa7C5qB,uDAAA,GACJ;IADIA,gEAAA,MAAA8+B,QAAA,CAAA55B,IAAA,yBACJ;IAIQlF,uDAAA,GAOJ;IAPIA,gEAAA,MAAA8+B,QAAA,CAAA59B,QAAA,KAAA49B,QAAA,CAAAh6B,KAAA,kBAAAg6B,QAAA,CAAAh6B,KAAA,CAAAG,YAAA,MAAA65B,QAAA,CAAAh6B,KAAA,kBAAAg6B,QAAA,CAAAh6B,KAAA,CAAAI,IAAA,MAAA45B,QAAA,CAAA/pB,IAAA,kBAAA+pB,QAAA,CAAA/pB,IAAA,CAAA9P,YAAA,MAAA65B,QAAA,CAAA/pB,IAAA,kBAAA+pB,QAAA,CAAA/pB,IAAA,CAAA7P,IAAA,OAOJ;IAKIlF,uDAAA,GAIJ;IAJIA,uDAAA,CAAA8+B,QAAA,CAAApc,QAAA,WAAAoc,QAAA,CAAApc,QAAA,CAIJ;;IASR1iB,uDAAA,EAAyC;IAAzCA,yDAAA,cAAAmf,MAAA,CAAA0L,WAAA,CAAAiU,QAAA,CAAA18B,EAAA,EAAyC;IAG/BpC,uDAAA,GAIR;IAJQA,+DAAA,CAAAmf,MAAA,CAAA0L,WAAA,CAAAiU,QAAA,CAAA18B,EAAA,mCAIR;;;;;IA7EdpC,4DAAA,aAGC;IACGA,wDAAA,IAAAq/B,2DAAA,mBAKC;;IAuELr/B,0DAAA,EAAK;;;;IA1EqBA,uDAAA,EAAiB;IAAjBA,wDAAA,YAAAA,yDAAA,OAAAmf,MAAA,CAAAjG,MAAA,EAAiB;;;;;IAP/ClZ,qEAAA,GAA0D;IACtDA,wDAAA,IAAAs/B,sDAAA,iBAGC;;;;;;;;IADIt/B,uDAAA,EAAgC;IAAAA,wDAAhC,UAAAunB,OAAA,GAAAvnB,yDAAA,OAAAmf,MAAA,CAAAjG,MAAA,oBAAAqO,OAAA,CAAA5c,MAAA,CAAgC,aAAAqgB,cAAA,CAAgB;;;;;IAqFjDhrB,4DAJJ,cAGC,YAC0C;IAAvCA,oDAAA,MAAuC;IAG3CA,0DADI,EAAI,EACF;;;;;IAGNA,4DAAA,cAGC;IACGA,uDAAA,sBAA2C;IAC3CA,4DAAA,YAA2B;IAA3BA,oDAAA,MAA2B;IAC/BA,0DAD0D,EAAI,EACxD;;;IAFWA,uDAAA,EAAe;IAAfA,wDAAA,gBAAe;;;AAgBtC,MAAO0d,yBAAyB;EAiBlCra,YAAoB+6B,KAAyB;IAAzB,KAAAA,KAAK,GAALA,KAAK;IAhBT,KAAApZ,MAAM,GAAW,EAAE;IACnB,KAAArC,QAAQ,GAAW,EAAE;IACrB,KAAAZ,SAAS,GAAa,EAAE;IACvB,KAAAkJ,QAAQ,GAAG,IAAIlsB,uDAAY,EAAgB;IAC3C,KAAA6lB,SAAS,GAAG,IAAI7lB,uDAAY,EAAgB;IAE7C,KAAAma,MAAM,GAAG5J,mDAAa,CAAC,CACnC,IAAI,CAAC8uB,KAAK,CAACzrB,OAAO,EAClB,IAAI,CAACyrB,KAAK,CAACpqB,mBAAmB,CACjC,CAAC,CAAClQ,IAAI,CACHrE,mDAAG,CAAC,CAAC,CAAC;MAAEmmB;IAAQ,CAAE,EAAElf,CAAC,CAAC,KAClBA,CAAC,CAACoJ,MAAM,CAAEgK,CAAC,IAAK,CAAC8L,QAAQ,IAAI,IAAI,CAACiF,WAAW,CAAC/Q,CAAC,CAAC1X,EAAE,CAAC,CAAC,CACvD,CACJ;IACe,KAAAqQ,OAAO,GAAG,IAAI,CAAC2rB,KAAK,CAAC3rB,OAAO;EAEI;EAEzCoY,WAAWA,CAAC0U,QAAgB;IAC/B,OAAO,IAAI,CAACxd,SAAS,CAACrW,QAAQ,CAAC6zB,QAAQ,CAAC;EAC5C;EAEOP,WAAWA,CAACj7B,KAAmB;IAClC,IAAI,CAACknB,QAAQ,CAACxkB,IAAI,CAAC1C,KAAK,CAAC;EAC7B;EAAC,QAAA2C,CAAA;qBAzBQgX,yBAAyB,EAAA1d,+DAAA,CAAA4G,qEAAA;EAAA;EAAA,QAAAK,EAAA;UAAzByW,yBAAyB;IAAAxW,SAAA;IAAAC,MAAA;MAAA6d,MAAA;MAAArC,QAAA;MAAAZ,SAAA;IAAA;IAAA3a,OAAA;MAAA6jB,QAAA;MAAArG,SAAA;IAAA;IAAApd,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAtHHC,SAAA,wEAAO;;;;;;;;;;;;;;;;iBACYA,SAAA,mEAC1C,eAAmC,kCACvC;;;;;;;;;;;;;;;;iBA0DgCA,SAAA,mEACJ,eAEE,yBAEN;;;;;;;;;;iBA0BuBA,SAAA,uHAEvC;;;;;;;;;;iBAS2BA,SAAA,2FAA2B;;;;;;QAvG9D1N,4DAAA,YAA2B;QAA3BA,oDAAA,MAA2B;QAAOA,0DAAA,EAAK;QACvCA,4DAAA,WAA8C;QAA9CA,oDAAA,MAA8C;;QAE9CA,0DAAA,EAAI;QACJA,wDAAA,IAAAw/B,iDAAA,2BAA0D;;QA6F1Dx/B,wDAVA,IAAAy/B,gDAAA,gCAAAz/B,oEAAA,CAA0B,IAAA0/B,gDAAA,gCAAA1/B,oEAAA,CAUD;;;;;QA/FrBA,uDAAA,GACJ;QADIA,uDAAA,GAAAkqB,OAAA,GAAAlqB,yDAAA,OAAA8H,GAAA,CAAAoR,MAAA,oBAAAgR,OAAA,CAAAvf,MAAA,OACJ;;QACe3K,uDAAA,EAA0B;QAAAA,wDAA1B,UAAAA,yDAAA,OAAA8H,GAAA,CAAA2K,OAAA,EAA0B,aAAAgO,aAAA,CAAe;;;;;;;;;;;;;;;;;;;;;;;;ACZT;;;;;;IAiEvCzgB,uDAAA,cAGO;;;;;IACPA,4DAAA,mBAGC;IACGA,oDAAA,aACJ;IAAAA,0DAAA,EAAW;;;AAMrB,MAAO2d,gCAAgC;EACzC,IAAWgF,QAAQA,CAAA;IACf,OAAO,IAAI,CAACtC,KAAK,CAACsC,QAAQ,KAAK,IAAI;EACvC;EACAtf,YAA8Cgd,KAAU;IAAV,KAAAA,KAAK,GAALA,KAAK;EAAQ;EAAC,QAAA3Z,CAAA;qBAJnDiX,gCAAgC,EAAA3d,+DAAA,CAIrB2/B,iEAAgB;EAAA;EAAA,QAAA14B,EAAA;UAJ3B0W,gCAAgC;IAAAzW,SAAA;IAAAM,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAi4B,0CAAA/3B,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA3ErC7H,4DAAA,aAAyD;;QAQjDA,4DAPJ,aAMC,WAC0C;QACnCA,uDAAA,cAKE;QACNA,0DAAA,EAAI;QAEAA,4DADJ,WAAM,gBASD;QAuBGA,uDAtBA,iBAGE,uBAMA,kBACiB,wBACgB,sBACW,yBAI5C,mBAKA,mBAMA;QAGdA,0DAFQ,EAAS,EACN,EACL;;QACNA,4DAAA,eAEC;QAKGA,wDAJA,KAAA6/B,gDAAA,kBAGC,KAAAC,qDAAA,uBAIA;QAIT9/B,0DADI,EAAM,EACJ;;;QATOA,uDAAA,IAAe;QAAfA,wDAAA,UAAA8H,GAAA,CAAA6a,QAAA,CAAe;QAIf3iB,uDAAA,EAAc;QAAdA,wDAAA,SAAA8H,GAAA,CAAA6a,QAAA,CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEoC;AAChB;AACJ;AAEA;AAEiC;AACT;;;;;;;;;;;;;;;;IAKnE3iB,qEAAA,GAAmC;IAC/BA,4DAAA,yBAQC;;;;IALGA,8DADA,wBAAAigC,6FAAA/gB,MAAA;MAAAlf,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAAA,gEAAA,CAAA0I,MAAA,CAAAojB,IAAA,EAAA5M,MAAA,MAAAxW,MAAA,CAAAojB,IAAA,GAAA5M,MAAA;MAAA,OAAAlf,yDAAA,CAAAkf,MAAA;IAAA,EAAe,0BAAAghB,+FAAAhhB,MAAA;MAAAlf,2DAAA,CAAAgO,GAAA;MAAA,MAAAtF,MAAA,GAAA1I,2DAAA;MAAAA,gEAAA,CAAA0I,MAAA,CAAAqjB,MAAA,EAAA7M,MAAA,MAAAxW,MAAA,CAAAqjB,MAAA,GAAA7M,MAAA;MAAA,OAAAlf,yDAAA,CAAAkf,MAAA;IAAA,EACI;IAKtBlf,0DAAA,EAAkB;;;;;IAPfA,uDAAA,EAAe;IAAfA,wDAAA,QAAA0I,MAAA,CAAAqS,OAAA,CAAe;IAEf/a,8DADA,SAAA0I,MAAA,CAAAojB,IAAA,CAAe,WAAApjB,MAAA,CAAAqjB,MAAA,CACI;IAInB/rB,wDAHA,WAAAA,yDAAA,OAAA0I,MAAA,CAAAgkB,MAAA,EAAyB,aAAA1sB,yDAAA,OAAA0I,MAAA,CAAArB,QAAA,EACI,YAAArH,yDAAA,QAAA0I,MAAA,CAAA0jB,OAAA,EACF,YAAApsB,6DAAA,KAAAiC,GAAA,EACG;;;;;IAe1BjC,4DAAA,oBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAA8gB,MAAA,CAAa;IAEb9gB,uDAAA,EACJ;IADIA,gEAAA,MAAA8gB,MAAA,CAAA7b,YAAA,IAAA6b,MAAA,CAAA5b,IAAA,MACJ;;;AAmBd,MAAO0Y,8BAA+B,SAAQhe,yDAAY;EAW5D,IAAWmb,OAAOA,CAAA;IACd,OAAO,IAAI,CAACjW,KAAK,EAAE8F,MAAM,IAAI,EAAE;EACnC;EA8BAvH,YACY+qB,WAA6B,EAC7B+R,YAA+B;IAEvC,KAAK,EAAE;IAHC,KAAA/R,WAAW,GAAXA,WAAW;IACX,KAAA+R,YAAY,GAAZA,YAAY;IA5CR,KAAAxd,QAAQ,GAAa,EAAE;IACvB,KAAAkJ,YAAY,GAAY,KAAK;IAC5B,KAAAZ,QAAQ,GAAG,IAAIlsB,uDAAY,EAAgB;IAErD,KAAA+sB,IAAI,GAAG,CAAC;IACR,KAAAC,MAAM,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAG,CAAE;IAE1B,KAAAmU,aAAa,GAAI3d,CAAC,IAAK,MAAM,IAAI,CAACwI,QAAQ,CAACxkB,IAAI,CAACgc,CAAC,CAAC;IACnD,KAAA3d,KAAK,GAAkB,IAAI;IAMlB,KAAAijB,MAAM,GAAG,IAAI,CAACqG,WAAW,CAACiS,gBAAgB,CAACv8B,IAAI,CAC3DrE,mDAAG,CAAEiH,CAAC,IAAKqI,uDAAM,CAACrI,CAAC,CAACjH,GAAG,CAAC,CAAC;MAAEqF;IAAK,CAAE,KAAKA,KAAK,CAAC,CAAC,CAAC,CAClD;IAEe,KAAAuC,QAAQ,GAAG,IAAI,CAAC+mB,WAAW,CAACiS,gBAAgB,CAACv8B,IAAI,CAC7D8L,4DAAY,CAAC,IAAI,CAAC,EAClBnQ,mDAAG,CAAE8pB,CAAC,IACFA,CAAC,CAAC9pB,GAAG,CAAEsE,KAAK,KAAM;MACd7C,QAAQ,EAAE6C,KAAK,CAAC6G,MAAM;MACtB4B,OAAO,EAAEmR,6FAAgC;MACzCvX,IAAI,EAAE;QACF,GAAGrC,KAAK;QACR4e,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAACjX,QAAQ,CAAC3H,KAAK,CAAC3B,EAAE;;KAEhD,CAAC,CAAC,CACN,CACJ;IAEe,KAAAgqB,OAAO,GAAG,IAAI,CAACgC,WAAW,CAACiS,gBAAgB,CAACv8B,IAAI,CAC5DrE,mDAAG,CAAE8pB,CAAC,IACFA,CAAC,CAAC9pB,GAAG,CAAEsE,KAAK,KAAM;MACd3B,EAAE,EAAE2B,KAAK,CAAC6G,MAAM;MAChByhB,MAAM,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC;MAC/BC,QAAQ,EAAE,IAAI,CAAC8T,aAAa,CAACr8B,KAAK;KACrC,CAAC,CAAC,CACN,CACJ;EAOD;EAEOC,QAAQA,CAAA;IACX,IAAI,CAACC,YAAY,CACb,QAAQ,EACR,IAAI,CAACmqB,WAAW,CAACiS,gBAAgB,CAACl8B,SAAS,CAAEuC,CAAC,IAAI;MAC9C,IAAI,CAAC,IAAI,CAAC5B,KAAK,IAAI4B,CAAC,CAACiE,MAAM,EAAE,IAAI,CAAC7F,KAAK,GAAG4B,CAAC,CAAC,CAAC,CAAC,CAAC5B,KAAK;IACxD,CAAC,CAAC,CACL;EACL;EAEOwkB,QAAQA,CAACxkB,KAAoB;IAChC,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACq7B,YAAY,CAACG,aAAa,CAACx7B,KAAK,CAACkQ,SAAS,CAAC;EACpD;EAEOmY,OAAOA,CAACC,QAAgB;IAC3B,IAAI,CAACtB,IAAI,GAAGtmB,IAAI,CAAC6nB,GAAG,CAAC,GAAG,EAAE7nB,IAAI,CAAC8nB,GAAG,CAAC,EAAE,EAAEF,QAAQ,CAAC,CAAC;EACrD;EAEOG,QAAQA,CAAA;IACX,IAAI,CAACzB,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,MAAM,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE;IAAG,CAAE;EACpC;EAAC,QAAAvlB,CAAA;qBAvEQkX,8BAA8B,EAAA5d,+DAAA,CAAA4G,6DAAA,GAAA5G,+DAAA,CAAA6G,qFAAA;EAAA;EAAA,QAAAI,EAAA;UAA9B2W,8BAA8B;IAAA1W,SAAA;IAAAC,MAAA;MAAAwb,QAAA;MAAAkJ,YAAA;IAAA;IAAAzkB,OAAA;MAAA6jB,QAAA;IAAA;IAAA5jB,QAAA,GAAArH,wEAAA;IAAAwH,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA44B,wCAAA14B,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA/CnC7H,wDAAA,IAAAwgC,sDAAA,2BAAmC;QAmB3BxgC,4DARR,aAEC,wBAKI,oBAII;QAFGA,8DAAA,2BAAAygC,4EAAAvhB,MAAA;UAAAlf,gEAAA,CAAA8H,GAAA,CAAAhD,KAAA,EAAAoa,MAAA,MAAApX,GAAA,CAAAhD,KAAA,GAAAoa,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAmB;QACnBlf,wDAAA,2BAAAygC,4EAAAvhB,MAAA;UAAA,OAAiBpX,GAAA,CAAAwhB,QAAA,CAAApK,MAAA,CAAgB;QAAA,EAAC;QAElClf,wDAAA,IAAA0gC,oDAAA,wBAGC;;QAKb1gC,0DAFQ,EAAa,EACA,EACf;;;QA/BSA,wDAAA,SAAA8H,GAAA,CAAA+jB,YAAA,CAAkB;QAoBrB7rB,uDAAA,GAAmB;QAAnBA,8DAAA,YAAA8H,GAAA,CAAAhD,KAAA,CAAmB;QAIC9E,uDAAA,EAAiB;QAAjBA,wDAAA,YAAAA,yDAAA,OAAA8H,GAAA,CAAAigB,MAAA,EAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCgB;AACvB;AAKjB;;;;;;;;;;;;;;;;IA8Bb/nB,4DAAA,6BAQC;IAFGA,wDADA,uBAAA2gC,wGAAAzhB,MAAA;MAAAlf,2DAAA,CAAAuB,GAAA;MAAA,MAAA4d,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAamf,MAAA,CAAA0C,eAAA,CAAA3C,MAAA,CAAuB;IAAA,EAAC,sBAAA0hB,uGAAA1hB,MAAA;MAAAlf,2DAAA,CAAAuB,GAAA;MAAA,MAAA4d,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAAmf,MAAA,CAAA4O,SAAA,GAAA7O,MAAA;IAAA,EACN;IAElClf,0DAAA,EAAqB;;;;IAJlBA,wDAFA,WAAAmf,MAAA,CAAA4O,SAAA,kBAAA5O,MAAA,CAAA4O,SAAA,CAAA3rB,EAAA,CAAwB,aAAA+c,MAAA,CAAA6O,YAAA,CACC,cAAA7O,MAAA,CAAA4C,SAAA,CACF;;;;;;IAqB/B/hB,4DAAA,iBAQC;IAFGA,wDAAA,mBAAA6gC,4EAAA;MAAA7gC,2DAAA,CAAAuf,GAAA;MAAA,MAAAJ,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAAmf,MAAA,CAAA4O,SAAA,GAAqB,IAAI;IAAA,EAAC;IAN9B/tB,oDAAA,MAQC;IAEDA,0DAAA,EAAS;;;;;;IAqDbA,4DAAA,4BAKC;IADGA,wDAAA,sBAAA8gC,+FAAA5hB,MAAA;MAAAlf,2DAAA,CAAAyf,GAAA;MAAA,MAAAN,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAAAmf,MAAA,CAAA4O,SAAA,GAAA7O,MAAA;IAAA,EAA+B;IAEnClf,0DAAA,EAAoB;;;;IAHhBA,wDADA,aAAAmf,MAAA,CAAA6O,YAAA,CAAyB,mBAAA7O,MAAA,CAAA4O,SAAA,CACG;;;AAvHrC,MAAMgT,eAAe,GAAG,0BAA0B;AA+HnD,MAAOljB,gCAAgC;EAKzC,IAAWmQ,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACrL,QAAQ,CAACljB,GAAG,CAAEiH,CAAC,IAAKA,CAAC,CAACtE,EAAE,CAAC,CAAC2V,IAAI,CAAC,GAAG,CAAC;EACnD;EAEA,IAAWgK,SAASA,CAAA;IAChB,OAAO,IAAI,CAAC5e,SAAS,CAACmB,GAAG,CAAWy8B,eAAe,CAAC,IAAI,EAAE;EAC9D;EAEA19B,YACY8qB,WAA2D,EAC3DhrB,SAA0B,EAC1BirB,WAA+B,EAE/B/N,KAGP;IAPO,KAAA8N,WAAW,GAAXA,WAAW;IACX,KAAAhrB,SAAS,GAATA,SAAS;IACT,KAAAirB,WAAW,GAAXA,WAAW;IAEX,KAAA/N,KAAK,GAALA,KAAK;IAhBV,KAAAsC,QAAQ,GAAmB,EAAE;IAC7B,KAAA3R,IAAI,GAAG,MAAM;IAoBhB,IAAI,CAAC2R,QAAQ,GAAG,CAAC,IAAItC,KAAK,CAAC2gB,MAAM,IAAI,EAAE,CAAC,CAAC;IACzC,IAAI,CAAC5S,WAAW,CAACvc,UAAU,CAACwO,KAAK,CAAC1N,OAAO,CAAC;EAC9C;EAEO0b,UAAUA,CAACjsB,EAAU;IACxB,OAAOA,EAAE,IAAI,IAAI,CAAC4rB,YAAY,CAACtiB,QAAQ,CAACtJ,EAAE,CAAC;EAC/C;EAEOksB,WAAWA,CAAClhB,IAAkB,EAAE1D,KAAc;IACjD,MAAMsJ,IAAI,GAAG,IAAI,CAAC2P,QAAQ,CAAC7S,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAKgL,IAAI,CAAChL,EAAE,CAAC;IAC1D,IAAIsH,KAAK,EAAEsJ,IAAI,CAACG,IAAI,CAAC/F,IAAI,CAAC;IAC1B,IAAI,CAACuV,QAAQ,GAAG3P,IAAI;IACpB,IAAI,CAAC,IAAI,CAACqN,KAAK,CAAC1N,OAAO,CAACgD,KAAK,IAAIjM,KAAK,EAAE,IAAI,CAACykB,WAAW,CAACxW,KAAK,CAAC,CAACvK,IAAI,CAAC,CAAC;EAC1E;EAEOyU,eAAeA,CAACzU,IAAkB;IACrC,MAAM2V,QAAQ,GAAG,IAAI,CAAChB,SAAS;IAC/B,MAAMiB,SAAS,GAAG,CAACD,QAAQ,CAACrX,QAAQ,CAAC0B,IAAI,CAAChL,EAAE,CAAC;IAC7C,IAAI4gB,SAAS,EAAE;MACX,IAAI,CAAC7f,SAAS,CAAC8f,eAAe,CAAC8d,eAAe,EAAE,CAC5C,GAAGhe,QAAQ,EACX3V,IAAI,CAAChL,EAAE,CACV,CAAC;IACN,CAAC,MAAM;MACH,IAAI,CAACe,SAAS,CAAC8f,eAAe,CAC1B8d,eAAe,EACfhe,QAAQ,CAACjT,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,KAAK0G,IAAI,CAAChL,EAAE,CAAC,CACxC;IACL;EACJ;EAAC,QAAAsE,CAAA;qBApDQmX,gCAAgC,EAAA7d,+DAAA,CAAA4G,kEAAA,GAAA5G,+DAAA,CAAA6G,4DAAA,GAAA7G,+DAAA,CAAA8G,qEAAA,GAAA9G,+DAAA,CAiB7BmI,qEAAe;EAAA;EAAA,QAAAlB,EAAA;UAjBlB4W,gCAAgC;IAAA3W,SAAA;IAAAM,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAnHpBC,SAAA,mFAAkB;;;;;;;;;;iBA4D1BA,SAAA,4EAED;;;;;;;;;;iBAayCA,SAAA,4EAAY;;;;;;;;;;;;;;;;iBAGlBA,SAAA,mEAC/B,eAAqB,+BACzB;;;;;;;;;;iBA/BCA,SAAA,sEAED;;;;;;;QArDI1N,4DALZ,aAEC,gBACsD,gBACa,eAC9C;QAAAA,oDAAA,YAAK;QACnBA,0DADmB,EAAW,EACrB;QACTA,4DAAA,SAAS;QAATA,oDAAA,MAAS;QACbA,0DAD+B,EAAK,EAC3B;QACTA,4DAAA,cAEC;QACGA,uDAAA,gCAGyB;QAIrBA,4DAHJ,cAEC,yCAII;QADGA,8DAAA,wBAAAihC,+FAAA/hB,MAAA;UAAAlf,2DAAA,CAAAgO,GAAA;UAAAhO,gEAAA,CAAA8H,GAAA,CAAAkJ,IAAA,EAAAkO,MAAA,MAAApX,GAAA,CAAAkJ,IAAA,GAAAkO,MAAA;UAAA,OAAAlf,yDAAA,CAAAkf,MAAA;QAAA,EAAe;QAClBlf,0DAAA,EAAgC;QACjCA,wDAAA,KAAAkhC,+DAAA,iCAQC;QACLlhC,0DAAA,EAAM;QACNA,4DAAA,iCAUC;QADGA,wDAHA,0BAAAmhC,yFAAAjiB,MAAA;UAAAlf,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAgB8H,GAAA,CAAAwmB,WAAA,CAAAxmB,GAAA,CAAAimB,SAAA,EAAA7O,MAAA,CAA8B;QAAA,EAAC,uBAAAkiB,sFAAA;UAAAphC,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAElC8H,GAAA,CAAA+Z,eAAA,CAAA/Z,GAAA,CAAAimB,SAAA,CAA0B;QAAA,EAAC,mBAAAsT,kFAAA;UAAArhC,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAA8H,GAAA,CAAAimB,SAAA,GACnB,IAAI;QAAA,EAAC;QAElC/tB,0DADK,EAAwB,EACtB;QACPA,4DAAA,kBAEC;QACGA,wDAAA,KAAAshC,mDAAA,qBAQC;QAGDthC,4DAAA,kBAQC;QARDA,oDAAA,OAQC;QAGLA,0DADI,EAAS,EACJ;QAWGA,4DAVZ,kBAEC,kBAMI,eACkC,oBACD;QAAAA,oDAAA,kBAAU;QAAAA,0DAAA,EAAW;QAC/CA,4DAAA,eAAiC;QAAjCA,oDAAA,OAAiC;QAEzCA,0DAFqD,EAAM,EACjD,EACD;QACTA,4DAAA,aAAmC;QAAnCA,oDAAA,OAAmC;QAEnCA,0DAAA,EAAI;QACJA,4DAAA,kBAMC;QADGA,wDAAA,mBAAAuhC,mEAAA;UAAAvhC,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAS8H,GAAA,CAAAwmB,WAAA,CAAAxmB,GAAA,CAAAimB,SAAA,GAAwBjmB,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,CAAyB,CAAC;QAAA,EAAC;QAGxDpC,4DADJ,eAA+B,oBACD;QAAAA,oDAAA,IAExB;QAAAA,0DAAA,EAAW;QACbA,4DAAA,eAAkB;QACdA,oDAAA,IAKJ;QAIhBA,0DAJgB,EAAM,EACJ,EACD,EACJ,EACP;QACNA,wDAAA,KAAAwhC,wDAAA,gCAAAxhC,oEAAA,CAAuB;;;;QAhGXA,uDAAA,GAA+B;QAA/BA,wDAAA,gBAAA8H,GAAA,CAAAkJ,IAAA,YAA+B;QAO3BhR,uDAAA,GAAe;QAAfA,8DAAA,SAAA8H,GAAA,CAAAkJ,IAAA,CAAe;QAGdhR,uDAAA,EAAuB;QAAAA,wDAAvB,SAAA8H,GAAA,CAAAkJ,IAAA,YAAuB,aAAAie,WAAA,CAAa;QAYzCjvB,uDAAA,EAA2B;QAC3BA,yDADA,YAAA8H,GAAA,CAAAimB,SAAA,CAA2B,YAAAjmB,GAAA,CAAAimB,SAAA,CACA;QAG3B/tB,wDANA,UAAA8H,GAAA,CAAAimB,SAAA,CAAmB,WAAAjmB,GAAA,CAAAkmB,YAAA,CAAAtiB,QAAA,CAAA5D,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,EAI4B,QAAA0F,GAAA,CAAAimB,SAAA,IAAAjmB,GAAA,CAAAia,SAAA,CAAArW,QAAA,CAAA5D,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,EAEY;QAa1DpC,uDAAA,GAAe;QAAfA,wDAAA,SAAA8H,GAAA,CAAAimB,SAAA,CAAe;QAWhB/tB,uDAAA,EAAwB;QAAxBA,yDAAA,SAAA8H,GAAA,CAAAimB,SAAA,CAAwB;QADxB/tB,wDAAA,qBAAA8H,GAAA,CAAA6a,QAAA,CAA6B;QAc7B3iB,uDAAA,GAA6B;QAA7BA,wDAAA,qBAAA8H,GAAA,CAAA6a,QAAA,CAA6B;QAS7B3iB,uDAAA,GACJ;QADIA,uDAAA,CAAA8H,GAAA,CAAA6a,QAAA,CAAAhY,MAAA,CACJ;;QAKI3K,uDAAA,EAA2C;QAA3CA,yDAAA,YAAA8H,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,EAA2C;QAD3CpC,wDAAA,cAAA8H,GAAA,CAAAimB,SAAA,CAAuB;QAKO/tB,uDAAA,GAExB;QAFwBA,+DAAA,CAAA8H,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,qBAExB;QAEEpC,uDAAA,GAKJ;QALIA,gEAAA,MAAA8H,GAAA,CAAAumB,UAAA,CAAAvmB,GAAA,CAAAimB,SAAA,kBAAAjmB,GAAA,CAAAimB,SAAA,CAAA3rB,EAAA,kDAKJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvHqC;AACY;AACpB;AAEkB;AAKR;;;;;;;;;;IAgB3CpC,uDAAA,cAKE;;;;IADEA,wDAAA,WAAA8+B,QAAA,CAAAl2B,MAAA,IAA0B;;;;;IAG1B5I,uDAAA,cAGE;;;;;;IAbVA,4DALJ,cAIC,cAGI;IAOGA,wDANA,IAAAyhC,mDAAA,kBAKE,IAAAC,2DAAA,gCAAA1hC,oEAAA,CACwB;IAM9BA,0DAAA,EAAM;IAEFA,4DADJ,cAA4B,cACC;IACrBA,oDAAA,GACJ;IAAAA,0DAAA,EAAM;IAEFA,4DADJ,cAAiD,mBACb;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAW;IAChDA,4DAAA,SAAG;IACCA,oDAAA,IAOJ;IACJA,0DADI,EAAI,EACF;IAEFA,4DADJ,eAAiD,oBACb;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAW;IACjDA,4DAAA,SAAQ;IAARA,oDAAA,OAAQ;IAKZA,0DADI,EAAI,EACF;IAIFA,4DAHJ,eAEC,kBAOI;IADGA,wDAAA,mBAAA2hC,uEAAA;MAAA,MAAA7C,QAAA,GAAA9+B,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAAkV,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAAoC,eAAA,CAAAud,QAAA,CAAsB;IAAA,EAAC;IAEhC9+B,4DAAA,eAA8C;IAA9CA,yDAAA,OAA8C;IAE1CA,uDADA,mBAA0C,WACzB;IACrBA,uDAAA,EAAM;IACVA,0DADI,EAAM,EACD;IACTA,4DAAA,kBAMC;IADGA,wDAAA,mBAAA4hC,uEAAA;MAAA,MAAA9C,QAAA,GAAA9+B,2DAAA,CAAAgO,GAAA,EAAA/D,SAAA;MAAA,MAAAkV,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAAwC,cAAA,CAAAmd,QAAA,CAAqB;IAAA,EAAC;IAE/B9+B,4DAAA,eAA8C;IAA9CA,yDAAA,OAA8C;IAE1CA,uDADA,mBAA2C,WAC1B;IACrBA,uDAAA,EAAM;IAGlBA,0DAHY,EAAM,EACD,EACP,EACJ;IACNA,4DAAA,kBAOC;IADGA,wDAAA,mBAAA6hC,uEAAA;MAAA7hC,2DAAA,CAAAgO,GAAA;MAAA,MAAAmR,MAAA,GAAAnf,2DAAA;MAAA,OAAAA,yDAAA,CAASmf,MAAA,CAAA0C,eAAA,CAAA1C,MAAA,CAAAvK,KAAA,CAAsB;IAAA,EAAC;IAEhC5U,4DAAA,gBAAU;IAAAA,oDAAA,IAIR;IAEVA,0DAFU,EAAW,EACR,EACP;;;;;;IA9EOA,uDAAA,GAA4B;IAAAA,wDAA5B,SAAA8+B,QAAA,CAAAl2B,MAAA,kBAAAk2B,QAAA,CAAAl2B,MAAA,CAAA+B,MAAA,CAA4B,aAAAigB,cAAA,CAAgB;IAa7C5qB,uDAAA,GACJ;IADIA,gEAAA,MAAA8+B,QAAA,CAAA55B,IAAA,4BACJ;IAIQlF,uDAAA,GAOJ;IAPIA,gEAAA,MAAA8+B,QAAA,CAAA59B,QAAA,KAAA49B,QAAA,CAAAh6B,KAAA,kBAAAg6B,QAAA,CAAAh6B,KAAA,CAAAG,YAAA,MAAA65B,QAAA,CAAAh6B,KAAA,kBAAAg6B,QAAA,CAAAh6B,KAAA,CAAAI,IAAA,MAAA45B,QAAA,CAAA/pB,IAAA,kBAAA+pB,QAAA,CAAA/pB,IAAA,CAAA9P,YAAA,MAAA65B,QAAA,CAAA/pB,IAAA,kBAAA+pB,QAAA,CAAA/pB,IAAA,CAAA7P,IAAA,OAOJ;IAKIlF,uDAAA,GAAmD;IACnDA,uDADA,CAAA8+B,QAAA,CAAApc,QAAA,WAAAoc,QAAA,CAAApc,QAAA,MAAmD,CAAAoc,QAAA,CAAApc,QAAA,WAAAoc,QAAA,CAAApc,QAAA,MACL;;IAsCtD1iB,uDAAA,IAAqD;IAArDA,yDAAA,kBAAAmf,MAAA,CAAA4C,SAAA,CAAArW,QAAA,CAAAyT,MAAA,CAAAvK,KAAA,kBAAAuK,MAAA,CAAAvK,KAAA,CAAAxS,EAAA,EAAqD;IAG3CpC,uDAAA,GAIR;IAJQA,+DAAA,CAAAmf,MAAA,CAAA4C,SAAA,CAAArW,QAAA,CAAAyT,MAAA,CAAAvK,KAAA,kBAAAuK,MAAA,CAAAvK,KAAA,CAAAxS,EAAA,mCAIR;;;AA5FtB,MAAM4f,UAAU,GAAa,EAAE;AAyHzB,MAAOlE,8BAA8B;EASvC,IAAWiE,SAASA,CAAA;IAChB,OAAO,IAAI,CAAC5e,SAAS,CAACmB,GAAG,CAAW,kBAAkB,CAAC,IAAI0d,UAAU;EACzE;EAEA3e,YACYF,SAA0B,EAC1BG,OAAkB;IADlB,KAAAH,SAAS,GAATA,SAAS;IACT,KAAAG,OAAO,GAAPA,OAAO;IAdH,KAAAw+B,YAAY,GAAG,KAAK;IAC7B,KAAA7f,SAAS,GAAG,CAAC;IACb,KAAA+e,MAAM,GAAmB,EAAE;IAC3B,KAAA9e,QAAQ,GAAG,KAAK;IAsDvB;IACgB,KAAAC,gBAAgB,GAAIC,EAA+B,IAC9D,IAAI,CAACC,SAAS,GAAGD,EAAG;IACzB;IACgB,KAAAE,iBAAiB,GAAIF,EAA+B,IAC/D,IAAI,CAACG,QAAQ,GAAGH,EAAG;IACR,KAAAI,gBAAgB,GAAIC,CAAU,IAAM,IAAI,CAACP,QAAQ,GAAGO,CAAE;EAhDnE;EAEH;EACOlB,eAAeA,CAAA;IAClB,MAAMjb,GAAG,GAAG,IAAI,CAAChD,OAAO,CAACiD,IAAI,CAACsX,kHAAgC,EAAE;MAC5DzX,IAAI,EAAE;QACF46B,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBruB,OAAO,EAAE;UACL+P,QAAQ,EAAE,IAAI,CAACT,SAAS;UACxB6f,YAAY,EAAE,IAAI,CAACA;;;KAG9B,CAAC;IACFx7B,GAAG,CAACgH,WAAW,EAAE,CAACnJ,SAAS,CAAE68B,MAAuB,IAAI;MACpD,IAAI,CAACA,MAAM,EAAE;MACb,IAAI,CAACpe,QAAQ,CAACoe,MAAM,CAAC;IACzB,CAAC,CAAC;EACN;EAEA;EACOrf,cAAcA,CAAC5d,KAAmB;IACrC,IAAI,CAAC6e,QAAQ,CAAC,IAAI,CAACoe,MAAM,CAAClxB,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAK2B,KAAK,CAAC3B,EAAE,CAAC,CAAC;EAC/D;EAEA;;;;EAIOwgB,QAAQA,CAACC,SAAyB;IACrC,IAAI,CAACme,MAAM,GAAGne,SAAS;IACvB,IAAI,IAAI,CAACR,SAAS,EAAE,IAAI,CAACA,SAAS,CAAC,IAAI,CAAC2e,MAAM,CAAC;EACnD;EAEA;EACA;;;;EAIOle,UAAUA,CAAC5M,KAAqB;IACnC,IAAI,CAAC8qB,MAAM,GAAG9qB,KAAK,IAAI,EAAE;EAC7B;EAUO2L,eAAeA,CAAC9d,KAAmB;IACtC,MAAMgf,QAAQ,GAAG,IAAI,CAAChB,SAAS;IAC/B,MAAMiB,SAAS,GAAG,CAACD,QAAQ,CAACrX,QAAQ,CAAC3H,KAAK,CAAC3B,EAAE,CAAC;IAC9C,IAAI4gB,SAAS,EAAE;MACX,IAAI,CAAC7f,SAAS,CAAC8f,eAAe,CAAC8d,iGAAe,EAAE,CAC5C,GAAGhe,QAAQ,EACXhf,KAAK,CAAC3B,EAAE,CACX,CAAC;IACN,CAAC,MAAM;MACH,IAAI,CAACe,SAAS,CAAC8f,eAAe,CAC1B8d,iGAAe,EACfhe,QAAQ,CAACjT,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,KAAK3C,KAAK,CAAC3B,EAAE,CAAC,CACzC;IACL;EACJ;EAAC,QAAAsE,CAAA;qBAhFQoX,8BAA8B,EAAA9d,+DAAA,CAAA4G,iFAAA,GAAA5G,+DAAA,CAAA6G,+DAAA;EAAA;EAAA,QAAAI,EAAA;UAA9B6W,8BAA8B;IAAA5W,SAAA;IAAAC,MAAA;MAAA26B,YAAA;IAAA;IAAAz6B,QAAA,GAAArH,gEAAA,CAR5B,CACP;MACImjB,OAAO,EAAExC,6DAAiB;MAC1ByC,WAAW,EAAE1C,yDAAU,CAAC,MAAM5C,8BAA8B,CAAC;MAC7DuF,KAAK,EAAE;KACV,CACJ;IAAA7b,KAAA;IAAAC,IAAA;IAAAC,MAAA,EAAAA,CAAA;MAAA,IAAA8F,MAAA;MAAA,WAAAC,iBAAA,oBAAAA,iBAAA;;;;;;;iBAdsBC,SAAA,qFAAoB;;;;;;;;;;iBA3DgCA,SAAA,mHAEX;;;;;;;;;;;;;;;;;;;;;iBAHpCA,SAAA,kEACJ,eAAkD,mBAAC0X,MAEX,QAC5C;;;;;;;;;;;;;;;;;;;;;;iBAaQ1X,SAAA,mFAA2B,2BAAI,kBAAW,uBAC1C,iBAAK,wBAAM,kBAAM;;;;;;;;;;;;;;;;;;;;;;iBAWjBA,SAAA,kFAA2B,4BAAK,kBAAW,uBAC3C,iBAAK,wBAAM,kBAAM;;;;;;QAtEzC1N,4DAAA,aAA4B;QACxBA,wDAAA,IAAA+hC,6CAAA,kBAIC;QAqFL/hC,0DAAA,EAAM;QACNA,4DAAA,gBAMC;QADGA,wDAAA,mBAAAgiC,gEAAA;UAAA,OAASl6B,GAAA,CAAAyZ,eAAA,EAAiB;QAAA,EAAC;QAGvBvhB,4DADJ,aAAwD,kBACzB;QAAAA,oDAAA,aAAM;QAAAA,0DAAA,EAAW;QAC5CA,4DAAA,WAAW;QAAXA,oDAAA,MAAW;QAEnBA,0DAFuC,EAAO,EACpC,EACD;QACTA,4DAAA,cAA2D;QACvDA,uDAAA,cAAkD;QACtDA,0DAAA,EAAM;;;QArGoBA,uDAAA,EAAS;QAATA,wDAAA,YAAA8H,GAAA,CAAAk5B,MAAA,CAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdlB;AACmC;AACV;AACkB;AAQ5C;AACsB;AACe;;;;AA0BvD,MAAOlhC,cAAe,SAAQF,yDAAY;EAoI5CyD,YACYG,IAAyB,EACzBL,SAA0B;IAElC,KAAK,EAAE;IAHC,KAAAK,IAAI,GAAJA,IAAI;IACJ,KAAAL,SAAS,GAATA,SAAS;IArIb,KAAAgP,QAAQ,GAAG,IAAI9C,iDAAe,CAAW,EAAE,CAAC;IAEpC,KAAAoD,OAAO,GACnB,IAAI,CAACN,QAAQ,CAACO,YAAY,EAAE,CAAC,CAAC;IAC3B,KAAAqV,MAAM,GAAG,IAAI,CAACvkB,IAAI,CAACulB,UAAU,CAACjlB,IAAI,CACrCrE,mDAAG,CAAEiH,CAAC,IAAI;MACN,IAAI,CAAC,IAAI,CAACvD,SAAS,CAACmB,GAAG,CAAC,gBAAgB,CAAC,EAAE;QACvC,MAAM29B,IAAI,GAAG,IAAI,CAACz+B,IAAI,CAAC0+B,kBAAkB,EAAE;QAC3C,MAAMC,OAAO,GAAGF,IAAI,CAACxiC,GAAG,CAAEmM,GAAG,IAAKA,GAAG,CAACxJ,EAAE,CAAC;QACzC,MAAM4Q,IAAI,GAAGtM,CAAC,CAACoJ,MAAM,CAChBqZ,GAAG,IACAgZ,OAAO,CAACz2B,QAAQ,CAACyd,GAAG,CAACnU,SAAS,CAAC,IAC/BmU,GAAG,CAACC,IAAI,CAAC1d,QAAQ,CAAC,SAAS,CAAC,CACnC;QACDsH,IAAI,CAACvT,GAAG,CAAE0pB,GAAG,KAAM;UACf,GAAGA,GAAG;UACNlkB,YAAY,EAAE,GACVg9B,IAAI,CAACx2B,IAAI,CAAE/E,CAAC,IAAKA,CAAC,CAACtE,EAAE,KAAK+mB,GAAG,CAACnU,SAAS,CAAC,EAAE/P,YAC9C,MAAMkkB,GAAG,CAAClkB,YAAY;SACzB,CAAC,CAAC;QACH,OAAO+N,IAAI;MACf;MACA,OAAOtM,CAAC,CAACoJ,MAAM,CACVqZ,GAAG,IACAA,GAAG,CAACnU,SAAS,KAAK,IAAI,CAACxR,IAAI,CAAC8H,QAAQ,CAAClJ,EAAE,IACvC+mB,GAAG,CAACC,IAAI,CAAC1d,QAAQ,CAAC,SAAS,CAAC,CACnC;IACL,CAAC,CAAC,CACL;IACD;IACO,KAAAs1B,MAAM,GAAG1xB,mDAAa,CAAC,CAAC,IAAI,CAACyY,MAAM,CAAC,CAAC,CAACjkB,IAAI,CAC7CgM,sDAAM,CAAC,CAAC,CAACsyB,IAAI,CAAC,KAAK,CAAC,CAACA,IAAI,CAAC,CAAC,CAAC,EAAEhgC,EAAE,CAAC,EACjC6N,yDAAS,CAAC,CAAC,CAAC8X,MAAM,CAAC,KAAI;MACnB,IAAI,CAAC5V,QAAQ,CAACJ,IAAI,CAAC,CAAC,GAAG,IAAI,CAACI,QAAQ,CAACjB,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;MAC3D,OAAO3B,8CAAQ,CACXwY,MAAM,CAACtoB,GAAG,CAAE0pB,GAAG,IACXja,gEAAY,CAACia,GAAG,CAAC/mB,EAAE,EAAE,gBAAgB,CAAC,CAAC0B,IAAI,CACvCrE,mDAAG,CACEmb,CAAC,IACE,CAACA,CAAC,CAAC7G,OAAO,YAAYd,KAAK,GACrB2H,CAAC,CAAC7G,OAAO,GACT,EAAE,EACNtU,GAAG,CAAEgjB,CAAC,KAAM;QACV,GAAGA,CAAC;QACJnO,OAAO,EAAE6U,GAAG,CAAC/mB;OAChB,CAAC,CAAmB,CAC5B,CACJ,CACJ,CACJ;IACL,CAAC,CAAC,EACF3C,mDAAG,CAAEuT,IAAI,IAAKtE,wDAAO,CAAesE,IAAI,CAAC,CAAC,EAC1C7C,oDAAG,CAAC,MACA,IAAI,CAACgC,QAAQ,CAACJ,IAAI,CACd,IAAI,CAACI,QAAQ,CAACjB,QAAQ,EAAE,CAACpB,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,KAAK,QAAQ,CAAC,CACzD,CACJ,EACDsJ,4DAAW,CAAC,CAAC,CAAC,CACjB;IAED;IACO,KAAAqyB,KAAK,GAAG/yB,mDAAa,CAAC,CAAC,IAAI,CAAC9L,IAAI,CAACqP,eAAe,CAAC,CAAC,CAAC/O,IAAI,CAC1DgM,sDAAM,CAAC,CAAC,CAAClE,GAAG,CAAC,KAAK,CAAC,CAACA,GAAG,EAAExJ,EAAE,CAAC,EAC5B6N,yDAAS,CAAC,CAAC,CAACrE,GAAG,CAAC,KAAI;MAChB,IAAI,CAACuG,QAAQ,CAACJ,IAAI,CAAC,CAAC,GAAG,IAAI,CAACI,QAAQ,CAACjB,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;MAC1D,OAAOhC,gEAAY,CAACtD,GAAG,CAACxJ,EAAE,EAAE,eAAe,CAAC;IAChD,CAAC,CAAC,EACF3C,mDAAG,CACEkb,QAAQ,IACJA,QAAQ,CAAC5G,OAAO,YAAYd,KAAK,GAC5B0H,QAAQ,CAAC5G,OAAO,GAChB,EAAoB,CACjC,EACD5D,oDAAG,CAAC,MACA,IAAI,CAACgC,QAAQ,CAACJ,IAAI,CACd,IAAI,CAACI,QAAQ,CAACjB,QAAQ,EAAE,CAACpB,MAAM,CAAEpJ,CAAC,IAAKA,CAAC,KAAK,OAAO,CAAC,CACxD,CACJ,EACDsJ,4DAAW,CAAC,CAAC,CAAC,CACjB;IAEe,KAAAnM,cAAc,GAAG,IAAI,CAACm9B,MAAM,CAACl9B,IAAI,CAC7CrE,mDAAG,CAAEuT,IAAI,IACLA,IAAI,CAACvH,IAAI,CACJ/E,CAAC,IACEA,CAAC,CAAC6O,WAAW,EAAEtS,WAAW,EAAE,KAC5B7D,4DAAW,EAAE,CAAC8D,KAAK,EAAED,WAAW,EAAE,CACzC,CACJ,CACJ;IAEe,KAAAq/B,YAAY,GAAG,IAAI,CAACD,KAAK,CAACv+B,IAAI,CAC1CrE,mDAAG,CAAEuT,IAAI,IACLA,IAAI,CAACvH,IAAI,CACJ/E,CAAC,IACEA,CAAC,CAACxD,KAAK,EAAED,WAAW,EAAE,KACtB7D,4DAAW,EAAE,CAAC8D,KAAK,EAAED,WAAW,EAAE,CACzC,CACJ,CACJ;IAEe,KAAAs/B,mBAAmB,GAAG,IAAI,CAACD,YAAY,CAACx+B,IAAI,CACxDrE,mDAAG,CAAEsU,OAAO,IAAK,CAAC,CAACA,OAAO,EAAEyuB,IAAI,CAAC,CACpC;IAEe,KAAAC,YAAY,GAAGnzB,mDAAa,CAAC,CACzC,IAAI,CAAC9L,IAAI,CAACqP,eAAe,EACzB,IAAI,CAACmuB,MAAM,CACd,CAAC,CAACl9B,IAAI,CACHrE,mDAAG,CAAC,CAAC,CAACiH,CAAC,EAAEs6B,MAAM,CAAC,KACZ1wB,2DAAa,CAAC;MACV8D,YAAY,EAAEjF,sDAAW,CAACC,qDAAU,CAACzK,IAAI,CAACC,GAAG,EAAE,CAAC,CAAC;MACjDyP,UAAU,EAAElF,sDAAW,CAACsW,mDAAQ,CAAC9gB,IAAI,CAACC,GAAG,EAAE,CAAC,CAAC;MAC7C3D,IAAI,EAAE;KACT,CAAC,CAAC6C,IAAI,CACH6L,2DAAU,CAAC,MAAMF,yCAAE,CAAC,EAAE,CAAC,CAAC,EACxBhQ,mDAAG,CAAEijC,YAAY,IACbA,YAAY,CACPjjC,GAAG,CAAEoB,OAAO,IACTmgC,MAAM,CAACv1B,IAAI,CACN1H,KAAK,IAAKA,KAAK,CAAC3B,EAAE,KAAKvB,OAAO,CAAC4B,QAAQ,CAC3C,CACJ,CACAqN,MAAM,CAAE/L,KAAK,IAAK,CAAC,CAACA,KAAK,CAAC,CAClC,CACJ,CACJ,EACDtE,mDAAG,CAAEiH,CAAC,IAAKA,CAAC,CAAC,CAAC,CAAC,CAAC,EAChBsJ,4DAAW,CAAC,CAAC,CAAC,CACjB;IAOG,IAAI,CAAC/L,YAAY,CAAC,QAAQ,EAAE,IAAI,CAACJ,cAAc,CAACM,SAAS,EAAE,CAAC;EAChE;EAAC,QAAAuC,CAAA;qBA1IQ5G,cAAc,EAAAE,uDAAA,CAAA4G,sEAAA,GAAA5G,uDAAA,CAAA6G,4DAAA;EAAA;EAAA,QAAAI,EAAA;WAAdnH,cAAc;IAAAsb,OAAA,EAAdtb,cAAc,CAAAub,IAAA;IAAAC,UAAA,EAFX;EAAM;;;;;;;;;;;;;;;;;;;AC3CgD;AAGe;;;;;;IA4CjEtb,4DAAA,WAA0C;IAAAA,oDAAA,GAAU;IAAAA,0DAAA,EAAI;;;;IAAdA,uDAAA,EAAU;IAAVA,+DAAA,CAAAM,MAAA,CAAA4T,IAAA,CAAU;;;;;IACpDlU,4DAAA,YAAwD;IACpDA,oDAAA,GACJ;IAAAA,0DAAA,EAAI;;;;IADAA,uDAAA,EACJ;IADIA,gEAAA,MAAAM,MAAA,CAAAwY,UAAA,MACJ;;;;;IACA9Y,4DAAA,YAA4C;IACxCA,oDAAA,GAEJ;;;IAAAA,0DAAA,EAAI;;;;IAFAA,uDAAA,EAEJ;IAFIA,gEAAA,MAAAA,yDAAA,OAAAM,MAAA,CAAA8E,KAAA,4BAAApF,yDAAA,OAAAM,MAAA,CAAAsD,GAAA,oBAEJ;;;;;IAtBR5D,4DAAA,aASC;IACGA,uDAAA,aAAyB;IAErBA,4DADJ,aAAqB,YACkB;IAC/BA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;IAKLA,wDAJA,IAAA4iC,mDAAA,eAA0C,IAAAC,mDAAA,eACc,IAAAC,mDAAA,eAGZ;IAKpD9iC,0DADI,EAAM,EACJ;;;;IArBFA,wDAAA,+EAAAM,MAAA,CAAA0iC,KAAA,SAAA1iC,MAAA,CAAA2iC,KAAA,CAKC;IANDjjC,wDAAA,OAAAM,MAAA,CAAAsK,MAAA,CAAa;IAWL5K,uDAAA,GACJ;IADIA,gEAAA,MAAAM,MAAA,CAAA4E,IAAA,IAAA5E,MAAA,CAAAsK,MAAA,IAAAtK,MAAA,CAAA8B,EAAA,MACJ;IAC8BpC,uDAAA,EAAU;IAAVA,wDAAA,SAAAM,MAAA,CAAA4T,IAAA,CAAU;IACVlU,uDAAA,EAAwB;IAAxBA,wDAAA,SAAAM,MAAA,CAAA4T,IAAA,IAAA5T,MAAA,CAAAwY,UAAA,CAAwB;IAGvB9Y,uDAAA,EAAW;IAAXA,wDAAA,SAAAM,MAAA,CAAA8E,KAAA,CAAW;;;AAiCxD,MAAOmmB,wBAAwB;EAejCloB,YACsC6/B,QAAsB,EAChDC,QAAiC;IADP,KAAAD,QAAQ,GAARA,QAAQ;IAClC,KAAAC,QAAQ,GAARA,QAAQ;IAhBpB;IACgB,KAAA/gC,EAAE,GAAG,IAAI,CAAC8gC,QAAQ,CAAC9gC,EAAE;IACrB,KAAAwI,MAAM,GAAG,IAAI,CAACs4B,QAAQ,CAACt4B,MAAM;IAC7B,KAAA1F,IAAI,GAAG,IAAI,CAACg+B,QAAQ,CAACh+B,IAAI;IACzB,KAAAgP,IAAI,GAAG,IAAI,CAACgvB,QAAQ,CAAChvB,IAAI;IACzB,KAAA9O,KAAK,GAAG,IAAI,CAAC89B,QAAQ,CAAC99B,KAAK;IAC3B,KAAAxB,GAAG,GAAG,IAAI,CAACs/B,QAAQ,CAACt/B,GAAG;IACvB,KAAAzC,MAAM,GAAG,IAAI,CAAC+hC,QAAQ,CAAC/hC,MAAM;IAC7B,KAAA2X,UAAU,GAAG,IAAI,CAACoqB,QAAQ,CAACpqB,UAAU;EASlD;EAEI9U,QAAQA,CAACo/B,KAAA,GAAgB,CAAC;IAC7B,IAAIA,KAAK,GAAG,EAAE,EAAE;IAChBC,UAAU,CAAC,MAAK;MACZ,MAAMC,MAAM,GACR,IAAI,CAACH,QAAQ,CAACI,aAAa,CAACC,aAAa,EAAEA,aAAa;MAC5D,IAAI,CAACF,MAAM,EAAE,OAAO,IAAI,CAACt/B,QAAQ,CAAC,EAAEo/B,KAAK,CAAC;MAC1C,MAAM3O,QAAQ,GAAG;QACbxI,CAAC,EAAEiE,QAAQ,CAACoT,MAAM,CAACG,KAAK,CAACC,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG;QACvC1X,CAAC,EAAEkE,QAAQ,CAACoT,MAAM,CAACG,KAAK,CAACE,IAAI,EAAE,EAAE,CAAC,GAAG;OACxC;MACD,IAAI,CAACV,KAAK,GAAGxO,QAAQ,CAACxI,CAAC,IAAI,GAAG,GAAG,QAAQ,GAAG,KAAK;MACjD,IAAI,CAAC+W,KAAK,GAAGvO,QAAQ,CAACzI,CAAC,IAAI,GAAG,GAAG,OAAO,GAAG,MAAM;IACrD,CAAC,EAAE,GAAG,CAAC;EACX;EAEA,IAAW4X,eAAeA,CAAA;IACtB,OAAO,EAAE;EACb;EAAC,QAAAl9B,CAAA;qBArCQ6kB,wBAAwB,EAAAvrB,+DAAA,CAgBrB2/B,+FAAgB,GAAA3/B,+DAAA,CAAAA,qDAAA;EAAA;EAAA,QAAAiH,EAAA;UAhBnBskB,wBAAwB;IAAArkB,SAAA;IAAAM,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAk8B,kCAAAh8B,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAjE7B7H,uDAAA,aAWO;QACPA,wDAAA,IAAA8jC,+CAAA,gCAAA9jC,oEAAA,CAA2B;;;;QALvBA,wDALA,YAAA+jC,eAAA,CAAwB,mBACN,uBACI,uBACA,eACR,eACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BoC;AACP;AAEiC;AACnC;;;;;;IAsCrC/jC,4DAVJ,aASC,YAC2B;IAAAA,oDAAA,GAAe;IAAAA,0DAAA,EAAK;IAC5CA,4DAAA,WAAqC;IACjCA,oDAAA,GAEJ;IACJA,0DADI,EAAI,EACF;;;;IAZFA,wDAAA,+EAAA0I,MAAA,CAAAs6B,KAAA,SAAAt6B,MAAA,CAAAu6B,KAAA,CAKC;IANDjjC,wDAAA,OAAA0I,MAAA,CAAAkC,MAAA,CAAa;IAQW5K,uDAAA,GAAe;IAAfA,+DAAA,CAAA0I,MAAA,CAAAmsB,IAAA,CAAA3vB,IAAA,CAAe;IAEnClF,uDAAA,GAEJ;IAFIA,gEAAA,MAAA0I,MAAA,CAAAu7B,YAAA,yBAAAv7B,MAAA,CAAAmsB,IAAA,CAAAha,OAAA,CAAAlQ,MAAA,WAEJ;;;AAMV,MAAOouB,8BAA8B;EAMvC11B,YACsC6/B,QAA4B,EACtDC,QAAiC,EACjC7/B,OAAkB;IAFQ,KAAA4/B,QAAQ,GAARA,QAAQ;IAClC,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAA7/B,OAAO,GAAPA,OAAO;IARZ,KAAAuxB,IAAI,GAAe,IAAI,CAACqO,QAAQ,CAACrO,IAAI;IACrC,KAAAoP,YAAY,GAAW,IAAI,CAACf,QAAQ,CAACe,YAAY;EAQrD;EAEIjgC,QAAQA,CAACo/B,KAAA,GAAgB,CAAC;IAC7B,IAAIA,KAAK,GAAG,EAAE,EAAE;IAChBC,UAAU,CAAC,MAAK;MACZ,MAAMC,MAAM,GACR,IAAI,CAACH,QAAQ,CAACI,aAAa,CAACC,aAAa,EAAEA,aAAa;MAC5D,IAAI,CAACF,MAAM,EAAE,OAAO,IAAI,CAACt/B,QAAQ,CAAC,EAAEo/B,KAAK,CAAC;MAC1C,MAAM3O,QAAQ,GAAG;QACbxI,CAAC,EAAEiE,QAAQ,CAACoT,MAAM,CAACG,KAAK,CAACC,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG;QACvC1X,CAAC,EAAEkE,QAAQ,CAACoT,MAAM,CAACG,KAAK,CAACE,IAAI,EAAE,EAAE,CAAC,GAAG;OACxC;MACD,IAAI,CAACV,KAAK,GAAGxO,QAAQ,CAACxI,CAAC,IAAI,GAAG,GAAG,QAAQ,GAAG,KAAK;MACjD,IAAI,CAAC+W,KAAK,GAAGvO,QAAQ,CAACzI,CAAC,IAAI,GAAG,GAAG,OAAO,GAAG,MAAM;IACrD,CAAC,EAAE,GAAG,CAAC;EACX;EAEOkY,aAAaA,CAAA;IAChB,IAAI,CAAC5gC,OAAO,CAACiD,IAAI,CAACy9B,iGAA+B,EAAE;MAC/C59B,IAAI,EAAE;QAAE,GAAG,IAAI,CAAC88B;MAAQ;KAC3B,CAAC;EACN;EAAC,QAAAx8B,CAAA;qBA/BQqyB,8BAA8B,EAAA/4B,+DAAA,CAO3B2/B,iEAAgB,GAAA3/B,+DAAA,CAAAA,qDAAA,GAAAA,+DAAA,CAAA4G,+DAAA;EAAA;EAAA,QAAAK,EAAA;UAPnB8xB,8BAA8B;IAAA7xB,SAAA;IAAAM,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAw8B,wCAAAt8B,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QApCnC7H,4DAAA,gBAGC;QADGA,wDAAA,mBAAAokC,gEAAA;UAAApkC,2DAAA,CAAAgO,GAAA;UAAA,OAAAhO,yDAAA,CAAS8H,GAAA,CAAAo8B,aAAA,EAAe;QAAA,EAAC;QAEzBlkC,uDAAA,aASO;QACXA,0DAAA,EAAS;QACTA,wDAAA,IAAAqkC,qDAAA,gCAAArkC,oEAAA,CAA2B;;;;QATnBA,uDAAA,EAAwB;QAKxBA,wDALA,YAAAskC,eAAA,CAAwB,mBACN,uBACI,uBACA,eACR,eACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1B6B;AAKZ;;;;;;AAsBzC,MAAON,+BAA+B;EAOxC3gC,YAA6Cgd,KAA0B;IAA1B,KAAAA,KAAK,GAALA,KAAK;IANlC,KAAAwU,IAAI,GAAG,IAAI,CAACxU,KAAK,CAACwU,IAAI;IACtB,KAAAha,OAAO,GAAG,IAAI,CAACwF,KAAK,CAACxF,OAAO,CAAC+R,MAAM,CAAC,CAACntB,GAAG,EAAE8pB,CAAC,KAAI;MAC3D9pB,GAAG,CAAC8pB,CAAC,CAACnnB,EAAE,CAAC,GAAG,MAAM;MAClB,OAAO3C,GAAG;IACd,CAAC,EAAE,EAAE,CAAC;EAEoE;EAAC,QAAAiH,CAAA;qBAPlEs9B,+BAA+B,EAAAhkC,+DAAA,CAOpBmI,qEAAe;EAAA;EAAA,QAAAlB,EAAA;UAP1B+8B,+BAA+B;IAAA98B,SAAA;IAAAM,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAA88B,yCAAA58B,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAXhC7H,4DADJ,aAAQ,YAC4B;QAAAA,oDAAA,GAAe;QAAAA,0DAAA,EAAK;QAEhDA,4DADJ,gBAA4C,eAC9B;QAAAA,oDAAA,YAAK;QAEvBA,0DAFuB,EAAW,EACrB,EACJ;QACTA,4DAAA,cAAuC;QACnCA,uDAAA,qBAAiE;QACrEA,0DAAA,EAAO;;;QAP6BA,uDAAA,GAAe;QAAfA,+DAAA,CAAA8H,GAAA,CAAA+sB,IAAA,CAAA3vB,IAAA,CAAe;QAMlClF,uDAAA,GAAa;QAACA,wDAAd,SAAA8H,GAAA,CAAA+sB,IAAA,CAAa,gBAAA/sB,GAAA,CAAA+S,OAAA,CAAwB","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk-settings-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/locker-list-field.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-bank-list.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters-display.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-filters.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-map.component.ts","./libs/bookings/src/lib/locker-select-modal/locker-select-modal.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/bookings/src/lib/parking.service.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { map } from 'rxjs/operators';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ParkingService } from './parking.service';\nimport { GroupEventDetailsModalComponent } from '../../../events/src/lib/group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{ raw_description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"is_reserved_parking_space | async\"\n                >\n                    {{\n                        booking.status !== 'cancelled' ? 'RESERVED' : 'RELEASED'\n                    }}\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public readonly is_reserved_parking_space =\n        this._parking.assigned_space.pipe(\n            map(\n                (space) =>\n                    this.booking.booking_type === 'parking' &&\n                    space &&\n                    this.booking.asset_id === space.id\n            )\n        );\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _parking: ParkingService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit()\n                )\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_checked_in && desk_height_enabled\"\n                (click)=\"setDeskHeight()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon className=\"material-symbols-rounded\">\n                        height\n                    </app-icon>\n                    <div i18n>Set Desk Height</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        if (this._settings.get('app.use_region')) {\n            const region = this._org.regions.find((region) =>\n                (this.booking?.zones || []).includes(region.id)\n            );\n            if (region) return region;\n        }\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_checked_in() {\n        return this.booking.checked_in;\n    }\n\n    public get desk_height_enabled() {\n        return (\n            this.booking?.type === 'desk' &&\n            this._settings.get('app.desks.height_enabled')\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n\n    public setDeskHeight() {\n        this._dialog.open(DeskSettingsModalComponent, {\n            data: { id: this.booking.asset_ids[0] || this.booking.asset_id },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { bookedResourceList, queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n    /** Whether to group bookings */\n    disable_date?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise()\n                )\n            )\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1)\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return bookedResourceList({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    this._org.building?.id ||\n                    this._org.organisation.id,\n            }).pipe(\n                map(\n                    (booked_ids) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        for (const id of booked_ids) {\n                            this._resource_use[id] = ' ';\n                        }\n                        console.log('Booked:', booked_ids);\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[asset.zone?.id] ||\n                                    restrictions[asset.zone?.parent_id] ||\n                                    restrictions[this._org.building.id] ||\n                                    []\n                            ).hidden;\n                            console.log(\n                                'Booked:',\n                                asset.id,\n                                booked_ids.includes(asset.id)\n                            );\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !booked_ids.includes(asset.id) &&\n                                !asset.assigned_to\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    group: value.group,\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            event_id\n                ? { ical_uid: value.ical_uid, event_id: event_id }\n                : parent_id\n                ? { booking_id: parent_id }\n                : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: [this._org.building?.id],\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        let active_bookings = bookings.filter(\n            (_) =>\n                _.status !== 'declined' &&\n                _.status !== 'cancelled' &&\n                !_.rejected\n        );\n        if (\n            active_bookings.find((_) => _.asset_id === asset_id && id !== _.id)\n        ) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            active_bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((_) => ({\n                          ..._,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || []\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata)))\n                    )\n                )\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n    DeskSettingsModalComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this._state.options.subscribe(({ zone_id }) => {\n                const level = this._org.levelWithID([zone_id]);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notifyError, notifySuccess } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'desk-settings-modal',\n    template: `\n        <div\n            class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\"\n            *ngIf=\"!edit_presets; else desk_height_tooltip\"\n        >\n            <div class=\"text-lg\" i18n>Desk Height</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience\n            </div>\n            <div class=\"flex flex-col mt-2 mb-4\">\n                <label>Presets</label>\n                <div class=\"flex items-center space-x-2 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript flex-1 w-1/2\"\n                    >\n                        <mat-select\n                            placeholder=\"No selected preset\"\n                            [(ngModel)]=\"preset\"\n                            (ngModelChange)=\"setPreset($event)\"\n                        >\n                            <mat-option value=\"\">None</mat-option>\n                            <mat-option value=\"standing\">Standing</mat-option>\n                            <mat-option value=\"sitting\">Seated</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"edit_presets = true\"\n                        class=\"rounded h-12 w-12 bg-secondary text-secondary-content\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                </div>\n                <label>Current Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"height\"\n                            (ngModelChange)=\"updatePreset(height)\"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button btn matRipple (click)=\"setDeskHeight()\" class=\"w-full\">\n                Apply Settings\n            </button>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 right-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <ng-template #desk_height_tooltip>\n            <desk-height-presets\n                [show_close]=\"true\"\n                (close)=\"edit_presets = false\"\n            ></desk-height-presets>\n        </ng-template>\n    `,\n    styles: [],\n})\nexport class DeskSettingsModalComponent {\n    public readonly desk_id = this._data.id;\n    public edit_presets = false;\n    public preset: string;\n    public height = 71;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { id: string },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<DeskSettingsModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        const sitting_height = this._settings.get('desk_sitting_height');\n        const standing_height = this._settings.get('desk_standing_height');\n        if (!sitting_height && !standing_height) {\n            this.edit_presets = true;\n        }\n        const last_height = parseInt(\n            localStorage.getItem('PLACEOS.last_desk_height'),\n            10\n        );\n        this.height = last_height || sitting_height || 71;\n        if (this.height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (this.height === standing_height) {\n            this.preset = 'standing';\n        }\n    }\n\n    public updatePreset(new_height: number) {\n        const sitting_height = this._settings.get('desk_sitting_height') || 71;\n        const standing_height =\n            this._settings.get('desk_standing_height') || 102;\n        if (new_height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (new_height === standing_height) {\n            this.preset = 'standing';\n        } else {\n            this.preset = null;\n        }\n    }\n\n    public setPreset(value: string) {\n        console.log('Set preset:', value);\n        switch (value) {\n            case 'standing':\n                this.height = this._settings.get('desk_standing_height') || 102;\n                break;\n            case 'sitting':\n                this.height = this._settings.get('desk_sitting_height') || 71;\n                break;\n            default:\n                this.height = 70;\n                break;\n        }\n    }\n\n    public async setDeskHeight() {\n        const sys_id = this._org.binding('desks');\n        localStorage.setItem('PLACEOS.last_desk_height', `${this.height}`);\n        if (!sys_id) return this._dialog_ref.close();\n        const module = getModule(sys_id, 'DeskControl');\n        await module\n            .execute('set_desk_height', [this.desk_id, this.height])\n            .catch((_) => {\n                notifyError('Error setting desk height.' + _);\n                throw _;\n            });\n        notifySuccess('Successfully set desk height');\n        this._dialog_ref.close();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._settings.get('app.use_region')\n            ? this._org.region\n            : this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    LockerSelectModalComponent,\n    FAV_LOCKER_KEY,\n} from './locker-select-modal/locker-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `locker-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                locker\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/locker-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Locker' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >place</app-icon\n                        >\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"flex items-center text-sm space-x-2\"\n                        *ngIf=\"item.accessible\"\n                    >\n                        <app-icon class=\"text-blue-500 text-base\"\n                            >accessible</app-icon\n                        >\n                        <p>Disability Accessible</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-locker\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-locker\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-locker-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-locker\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Locker</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LockerListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class LockerListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(LockerSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\nimport { LockersService } from '../lockers.service';\n\n@Component({\n    selector: 'locker-bank-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (locker_banks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2 min-w-[50vh]\"\n                *ngIf=\"(locker_banks | async)?.length; else empty_state\"\n            >\n                <li\n                    locker_bank\n                    *ngFor=\"let locker_bank of locker_banks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === locker_bank.id\"\n                >\n                    <button\n                        name=\"select-locker_bank\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectLockerBank(locker_bank)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(locker_bank.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"\n                                    locker_bank.images?.length;\n                                    else placeholder\n                                \"\n                                class=\"object-cover h-full\"\n                                [source]=\"locker_bank.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/locker-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{\n                                    locker_bank.name ||\n                                        locker_bank.id ||\n                                        'Locker_bank'\n                                }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        locker_bank.zone?.display_name ||\n                                            locker_bank.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p class=\"text-xs\">\n                                    {{ locker_bank.available || 0 }} /\n                                    {{ locker_bank.lockers.length || 1 }}\n                                    Available\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-locker_bank-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(locker_bank.id)\"\n                        (click)=\"toggleFav.emit(locker_bank)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(locker_bank.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available locker banks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available locker banks for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class LockerBankListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly locker_banks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n        this._lockers.lockers_banks$,\n    ]).pipe(\n        map(([{ show_fav }, resources, banks]) => {\n            return banks\n                .filter(\n                    (i) =>\n                        (!show_fav || this.isFavourite(i.id)) &&\n                        resources.find((_: any) => _.bank_id === i.id)\n                )\n                .map((bank) => ({\n                    ...bank,\n                    available: resources.filter(\n                        (_: any) => _.bank_id === bank.id\n                    ).length,\n                    lockers: bank.lockers.map((_) => ({\n                        ..._,\n                        zone: bank.zone,\n                    })),\n                }));\n        })\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(\n        private _state: BookingFormService,\n        private _lockers: LockersService\n    ) {}\n\n    public isFavourite(locker_bank_id: string) {\n        return this.favorites.includes(locker_bank_id);\n    }\n\n    public selectLockerBank(locker_bank: BookingAsset) {\n        this.onSelect.emit(locker_bank);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { LockerFiltersComponent } from './locker-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'locker-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-locker-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-locker-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-locker-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class LockerFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () =>\n        this._bsheet.open(LockerFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'locker-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-locker-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Locker Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'LOCKERS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-locker-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class LockerFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.lockers.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.lockers.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.lockers.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<LockerFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreLockerBankInfoComponent } from 'libs/explore/src/lib/explore-locker-bank-info.component';\n\n@Component({\n    selector: 'locker-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <interactive-map\n            [src]=\"map_url\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n            [features]=\"features | async\"\n            [styles]=\"styles | async\"\n            [actions]=\"actions | async\"\n        ></interactive-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class LockerMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly lockers = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((lockers) =>\n            unique(\n                lockers.map((locker) => locker.zone),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((lockers) =>\n            lockers.map((locker) => ({\n                id: locker.map_id || locker.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectLocker(locker as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((lockers) => {\n            return this._settings.get('app.lockers.hide_user')\n                ? []\n                : lockers.map((locker) => ({\n                      location: locker.id,\n                      content: ExploreLockerBankInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: locker.map_id || locker.id,\n                          map_id: locker.name,\n                          name: locker.name || locker.map_id,\n                          user: this._state.resourceUserName(locker.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([lockers, free_lockers]) =>\n            lockers.reduce((styles, locker) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status = free_lockers.find((_) => _.id === locker.id)\n                    ? 'free'\n                    : 'busy';\n                styles[`#${locker.map_id || locker.id}`] = {\n                    fill:\n                        colours[`locker-${status}`] ||\n                        colours[`${status}`] ||\n                        DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public selectLocker(locker: BookingAsset) {\n        this.onSelect.emit(locker);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\nimport { LockerBank } from '../lockers.service';\n\nexport const FAV_LOCKER_KEY = 'favourite_lockers';\n\n@Component({\n    selector: 'locker-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Locker</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-locker-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <locker-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></locker-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <locker-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></locker-filters-display>\n                    <ng-container *ngIf=\"!bank; else bank_view\">\n                        <locker-bank-list\n                            *ngIf=\"view === 'list'; else map_view\"\n                            [active]=\"displayed?.id\"\n                            [selected]=\"selected_ids\"\n                            [favorites]=\"favorites\"\n                            (toggleFav)=\"toggleFavourite($event)\"\n                            (onSelect)=\"bank = $event\"\n                            class=\"flex-1 h-1/2 bg-base-200\"\n                        ></locker-bank-list>\n                    </ng-container>\n                </div>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-lockers\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"locker-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm text-center\" i18n>\n                    {{ selected.length }} locker(s) added\n                </p>\n                <div class=\"flex items-center\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"clear-bank\"\n                        *ngIf=\"bank\"\n                        class=\"inverse mr-2 w-32\"\n                        (click)=\"bank = null; displayed = null\"\n                    >\n                        Return\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"toggle-locker\"\n                        [disabled]=\"!displayed\"\n                        [class.inverse]=\"isSelected(displayed?.id)\"\n                        (click)=\"\n                            setSelected(displayed, !isSelected(displayed?.id))\n                        \"\n                    >\n                        <div class=\"flex items-center\">\n                            <app-icon class=\"text-xl\">{{\n                                isSelected(displayed?.id) ? 'remove' : 'add'\n                            }}</app-icon>\n                            <div class=\"mr-1\" i18n>\n                                {{\n                                    isSelected(displayed?.id)\n                                        ? 'Remove from Booking'\n                                        : 'Add to booking'\n                                }}\n                            </div>\n                        </div>\n                    </button>\n                </div>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <locker-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </locker-map>\n        </ng-template>\n        <ng-template #bank_view>\n            <locker-grid\n                class=\"flex-1 h-1/2 bg-base-200\"\n                [bank]=\"bank\"\n                [selected]=\"displayed?.id\"\n                (clicked)=\"displayed = $event\"\n            >\n            </locker-grid>\n        </ng-template>\n    `,\n})\nexport class LockerSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n    public bank?: LockerBank = null;\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_LOCKER_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<LockerSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_LOCKER_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_LOCKER_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"false\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking')\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    space.level?.display_name ||\n                                    space.level?.name ||\n                                    space.zone?.display_name ||\n                                    space.zone?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity || 1 }} {\n                            (space.capacity < 1 ? 2 : space.capacity || 1),\n                            plural, =1 { Person } other { People } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div>Change</div>\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">close</app-icon>\n                                <div>Remove</div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon class=\"text-2xl\">search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    @Input() public disable_date = false;\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: {\n                    capacity: this.room_size,\n                    disable_date: this.disable_date,\n                },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    flatten,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, forkJoin, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryBookings } from './bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { ca } from 'date-fns/locale';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n}\n\nexport interface ParkingUser {\n    id: string;\n    name: string;\n    email: string;\n    car_model: string;\n    car_colour: string;\n    plate_number: string;\n    phone: string;\n    notes: string;\n    deny: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParkingService extends AsyncHandler {\n    private _loading = new BehaviorSubject<string[]>([]);\n\n    public readonly loading =\n        this._loading.asObservable(); /** List of available parking levels for the current building */\n    public levels = this._org.level_list.pipe(\n        map((_) => {\n            if (!this._settings.get('app.use_region')) {\n                const blds = this._org.buildingsForRegion();\n                const bld_ids = blds.map((bld) => bld.id);\n                const list = _.filter(\n                    (lvl) =>\n                        bld_ids.includes(lvl.parent_id) &&\n                        lvl.tags.includes('parking')\n                );\n                list.map((lvl) => ({\n                    ...lvl,\n                    display_name: `${\n                        blds.find((_) => _.id === lvl.parent_id)?.display_name\n                    } - ${lvl.display_name}`,\n                }));\n                return list;\n            }\n            return _.filter(\n                (lvl) =>\n                    lvl.parent_id === this._org.building.id &&\n                    lvl.tags.includes('parking')\n            );\n        })\n    );\n    /** List of parking spaces for the current building/level */\n    public spaces = combineLatest([this.levels]).pipe(\n        filter(([lvls]) => !!lvls[0]?.id),\n        switchMap(([levels]) => {\n            this._loading.next([...this._loading.getValue(), 'spaces']);\n            return forkJoin(\n                levels.map((lvl) =>\n                    showMetadata(lvl.id, 'parking-spaces').pipe(\n                        map(\n                            (d) =>\n                                (d.details instanceof Array\n                                    ? d.details\n                                    : []\n                                ).map((s) => ({\n                                    ...s,\n                                    zone_id: lvl.id,\n                                })) as ParkingSpace[]\n                        )\n                    )\n                )\n            );\n        }),\n        map((list) => flatten<ParkingSpace>(list)),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'spaces')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    /** List of parking spaces for the current building/level */\n    public users = combineLatest([this._org.active_building]).pipe(\n        filter(([bld]) => !!bld?.id),\n        switchMap(([bld]) => {\n            this._loading.next([...this._loading.getValue(), 'users']);\n            return showMetadata(bld.id, 'parking-users');\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingUser[]\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'users')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly assigned_space = this.spaces.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.assigned_to?.toLowerCase() ===\n                    currentUser().email?.toLowerCase()\n            )\n        )\n    );\n\n    public readonly user_details = this.users.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.email?.toLowerCase() ===\n                    currentUser().email?.toLowerCase()\n            )\n        )\n    );\n\n    public readonly deny_parking_access = this.user_details.pipe(\n        map((details) => !!details?.deny)\n    );\n\n    public readonly booked_space = combineLatest([\n        this._org.active_building,\n        this.spaces,\n    ]).pipe(\n        map(([_, spaces]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(Date.now())),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type: 'parking',\n            }).pipe(\n                catchError(() => of([])),\n                map((booking_list) =>\n                    booking_list\n                        .map((booking) =>\n                            spaces.find(\n                                (space) => space.id === booking.asset_id\n                            )\n                        )\n                        .filter((space) => !!space)\n                )\n            )\n        ),\n        map((_) => _[0]),\n        shareReplay(1)\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription('spaces', this.assigned_space.subscribe());\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n"],"names":["EventEmitter","SimpleChanges","MatDialog","ActivatedRoute","SettingsService","currentUser","addMinutes","format","formatDuration","isSameDay","map","Booking","BookingDetailsModalComponent","AsyncHandler","OrganisationService","ParkingService","GroupEventDetailsModalComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","day","ɵɵtemplate","BookingCardComponent_h4_0_span_1_Template","ɵɵproperty","show_day","ɵɵpipeBind2","booking","date","time_format","ɵɵtextInterpolate","type","location","status","ɵɵlistener","BookingCardComponent_a_1_Template_a_click_0_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_17_Template","ɵɵpureFunction0","_c0","ɵɵpureFunction1","_c1","id","title","period","desk_icon_r3","raw_description","asset_id","for_current_user","booking_type","ɵɵpipeBind1","is_reserved_parking_space","ɵɵelement","BookingCardComponent","user_email","toLowerCase","email","_settings","is_done","constructor","_dialog","_route","_org","_parking","edit","remove","end","assigned_space","pipe","space","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","ngOnChanges","changes","removeHtmlTags","description","Date","now","is_today","level","levelWithID","zones","display_name","name","is_all_day","start","duration","dur","hours","Math","floor","minutes","replace","html","doc","DOMParser","parseFromString","body","textContent","timeout","view_component","data","concierge","ref","open","componentInstance","emit","_","ɵɵdirectiveInject","i1","i2","i3","i4","i5","_2","selectors","inputs","outputs","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","decls","vars","consts","template","BookingCardComponent_Template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","MAT_DIALOG_DATA","notifyError","notifySuccess","MapLocateModalComponent","MapPinComponent","checkinBooking","DeskSettingsModalComponent","ctx_r1","extension_data","images","checked_in","BookingDetailsModalComponent_div_10_button_1_Template_button_click_0_listener","_r3","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","ɵɵclassProp","checking_in","loading_state_r4","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","state","menu_r5","item_r8","quantity","BookingDetailsModalComponent_ng_container_36_div_5_Template_button_click_1_listener","request_r7","_r6","$implicit","show_request","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","deliver_at","items","ɵɵelementContainerStart","ɵɵi18n","BookingDetailsModalComponent_ng_container_36_div_5_Template","ɵɵi18nExp","valid_assets","length","map_id","BookingDetailsModalComponent_button_44_Template_button_click_0_listener","_r9","BookingDetailsModalComponent_button_45_Template_button_click_0_listener","_r10","setDeskHeight","BookingDetailsModalComponent_button_46_Template_button_click_0_listener","_r11","BookingDetailsModalComponent_button_47_Template_button_click_0_listener","_r12","building","region","regions","find","includes","buildings","bld","can_edit","is_checked_in","desk_height_enabled","is_in_progress","ts","booking_start","booking_end","all_day","booking_status","_booking","hide_map","content","has_assets","linked_bookings","_this","_asyncToGenerator","toPromise","catch","approved","rejected","viewLocation","maxWidth","maxHeight","item","asset_name","afterClosed","asset_ids","i18n_0","ngI18nClosureMode","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","BookingDetailsModalComponent_Template_button_click_37_listener","_r1","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","BookingDetailsModalComponent_button_47_Template","ɵɵtextInterpolate2","address","NavigationEnd","Router","flatten","getInvalidFields","notifyWarn","openConfirmModal","rulesForResource","unique","cleanObject","listChildMetadata","showMetadata","getUnixTime","startOfDay","BehaviorSubject","combineLatest","forkJoin","merge","of","timer","catchError","debounceTime","distinctUntilKeyChanged","filter","first","shareReplay","switchMap","take","tap","generateBookingForm","bookedResourceList","queryBookings","saveBooking","DeskQuestionsModalComponent","findNearbyFeature","PaymentsService","BookingLinkModalComponent","validateAssetRequestsForResource","AssetStateService","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","form","reset","patchValue","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","resources","active_building","loadResourceList","resource","list","Array","forEach","push","sort","a","b","localeCompare","booking_rules","building_list","Promise","all","building_rules","mapping","rules","details","available_resources","restrictions","user","valueOf","period_start","period_end","zone_id","organisation","booked_ids","console","log","available","asset","is_restricted","host","zone","parent_id","hidden","groups","some","grp","bookable","every","assigned_to","grouped_availability","asset_list","members","group","pop","events","url","clearForm","initialised","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","confirmPost","checkQuestions","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","event_id","result","user_name","user_id","phone","department","ical_uid","booking_id","error","assets","requests","from_booking","booked_by_email","_this3","extra_members","active_resource","_getNearbyResources","group_members","idx","unavailable","group_name","i","bkn","_this4","race","key","_this5","bookings","limit","active_bookings","allowed_bookings","current","use_region","map_metadata","metadata","d","lockers","bank_id","map_url","count","nearby_resources","ɵɵinject","i6","factory","ɵfac","providedIn","generateCalendarFileLink","generateGoogleCalendarLink","generateMicrosoftCalendarLink","_event","outlook_link","google_link","ical_link","ɵɵsanitizeUrl","CommonModule","FormsModule","ReactiveFormsModule","MatButtonModule","MatCheckboxModule","MatDatepickerModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatProgressSpinnerModule","MatRadioModule","ComponentsModule","FormFieldsModule","SharedEventsModule","SharedSpacesModule","SharedUsersModule","DeskConfirmModalComponent","DeskDetailsComponent","DeskFiltersDisplayComponent","DeskFiltersComponent","DeskListComponent","DeskMapComponent","DeskSelectModalComponent","InviteVisitorFormComponent","ParkingSpaceDetailsComponent","ParkingSpaceFiltersDisplayComponent","ParkingSpaceFiltersComponent","ParkingSpaceListComponent","ParkingSpaceLocationPinComponent","ParkingSpaceSelectMapComponent","ParkingSpaceSelectModalComponent","ParkingSpaceListFieldComponent","DeskListFieldComponent","MatAutocompleteModule","MatRippleModule","LockerGridComponent","MatTooltipModule","LockerSelectModalComponent","LockerListFieldComponent","LockerFiltersComponent","LockerFiltersDisplayComponent","LockerBankListComponent","LockerMapComponent","COMPONENTS","SharedBookingsModule","_3","imports","declarations","exports","ɵɵtwoWayListener","DeskConfirmModalComponent_ng_container_5_div_2_Template_a_user_search_field_ngModelChange_3_listener","$event","ctx_r2","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template_a_date_field_ngModelChange_0_listener","_r4","DeskConfirmModalComponent_ng_container_5_div_8_Template_input_ngModelChange_4_listener","_r5","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","DeskConfirmModalComponent_ng_container_5_Template_button_click_12_listener","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","_data","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","load_state_r6","forwardRef","NG_VALUE_ACCESSOR","FAV_DESK_KEY","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template_mat_checkbox_ngModelChange_0_listener","opt_r3","ctx_r3","selected_features","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r5","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","DeskListFieldComponent_div_1_Template_button_click_15_listener","changeResources","ɵɵi18nStart","ɵɵi18nEnd","DeskListFieldComponent_div_1_Template_button_click_19_listener","removeResource","DeskListFieldComponent_div_1_Template_button_click_23_listener","toggleFavourite","placeholder_r6","favorites","EMPTY_FAVS","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","capacity","selected","setValue","new_value","writeValue","fav_list","new_state","saveUserSetting","ɵɵProvidersFeature","provide","useExisting","multi","DeskListFieldComponent_div_1_Template","DeskListFieldComponent_Template_button_click_2_listener","FormControl","FormGroup","DialogEvent","DeskQuestionsModalComponent_div_0_Template_button_click_32_listener","submit","travelled","unwell","contact","Object","keys","failure","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","fail_state_r3","desk","feat_r3","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","DeskDetailsComponent_ng_container_0_Template_button_click_3_listener","DeskDetailsComponent_ng_container_0_Template_button_click_6_listener","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","DeskDetailsComponent_ng_container_0_Template_button_click_34_listener","active","activeChange","fav","updateFeature","i18n_1","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","emptyState_r4","MatBottomSheet","endOfDay","DeskFiltersDisplayComponent_div_15_Template_button_click_3_listener","DeskFiltersDisplayComponent_div_17_Template_button_click_3_listener","show_fav","_state","_bsheet","viewChange","o","f","editFilter","DeskFiltersDisplayComponent_Template_button_click_1_listener","DeskFiltersDisplayComponent_Template_button_click_4_listener","DeskFiltersDisplayComponent_Template_button_click_6_listener","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","MatBottomSheetRef","addDays","DeskFiltersComponent_button_2_Template_button_click_0_listener","reg_r4","DeskFiltersComponent_mat_form_field_13_Template_mat_select_ngModelChange_1_listener","setRegion","DeskFiltersComponent_mat_form_field_13_mat_option_2_Template","bld_r6","DeskFiltersComponent_mat_form_field_15_Template_mat_select_ngModelChange_1_listener","setBuilding","DeskFiltersComponent_mat_form_field_15_mat_option_5_Template","tmp_3_0","tmp_4_0","lvl_r8","DeskFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","DeskFiltersComponent_mat_form_field_17_Template_mat_select_ngModelChange_1_listener","_r7","DeskFiltersComponent_mat_form_field_17_mat_option_3_Template","tmp_1_0","levels","DeskFiltersComponent_div_25_Template_a_time_field_ngModelChange_4_listener","use_24hr","DeskFiltersComponent_section_36_div_3_Template_mat_checkbox_ngModelChange_3_listener","feat_r11","DeskFiltersComponent_section_36_div_3_Template","DeskFiltersComponent_div_38_Template_button_click_1_listener","reg","allow_time_changes","allow_all_day","end_date","_bsheet_ref","can_close","active_buildings","region_list","active_region","level_list","levelsForRegion","levelsForBuilding","viewable_levels","lvl","tags","dismiss","setLevel","l","hide_levels","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_mat_form_field_13_Template","DeskFiltersComponent_mat_form_field_15_Template","DeskFiltersComponent_mat_form_field_17_Template","DeskFiltersComponent_div_24_Template","DeskFiltersComponent_div_25_Template","DeskFiltersComponent_Template_mat_checkbox_ngModelChange_34_listener","DeskFiltersComponent_section_36_Template","DeskFiltersComponent_div_38_Template","tmp_2_0","tmp_13_0","tmp_15_0","desk_r2","DeskListComponent_ng_container_5_ul_1_li_1_Template_button_click_1_listener","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","DeskListComponent_ng_container_5_ul_1_li_1_Template_button_click_15_listener","placeholder_r4","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","empty_state_r5","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","DEFAULT_COLOURS","ExploreDeskInfoComponent","lvl_r3","DeskMapComponent_mat_form_field_1_mat_option_2_div_2_Template","DeskMapComponent_mat_form_field_1_Template_mat_select_ngModelChange_1_listener","zone_ids","DeskMapComponent_mat_form_field_1_mat_option_2_Template","is_displayed","zoom","center","x","y","coordinates","_change","actions","action","callback","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","latitude","longitude","split","parseFloat","setZoom","new_zoom","max","min","resetMap","DeskMapComponent_mat_form_field_1_Template","DeskMapComponent_Template_interactive_map_zoomChange_4_listener","DeskMapComponent_Template_interactive_map_centerChange_4_listener","tmp_0_0","MatDialogRef","DeskSelectModalComponent_desk_list_16_Template_desk_list_toggleFav_0_listener","DeskSelectModalComponent_desk_list_16_Template_desk_list_onSelect_0_listener","displayed","selected_ids","DeskSelectModalComponent_button_19_Template_button_click_0_listener","DeskSelectModalComponent_ng_template_37_Template_desk_map_onSelect_0_listener","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_Template_button_click_8_listener","DeskSelectModalComponent_Template_button_click_10_listener","DeskSelectModalComponent_Template_desk_filters_display_viewChange_15_listener","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_Template_desk_details_activeChange_17_listener","DeskSelectModalComponent_Template_desk_details_toggleFav_17_listener","DeskSelectModalComponent_Template_desk_details_close_17_listener","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_Template_button_click_31_listener","DeskSelectModalComponent_ng_template_37_Template","map_view_r6","getModule","DeskSettingsModalComponent_div_0_Template_mat_select_ngModelChange_10_listener","preset","setPreset","DeskSettingsModalComponent_div_0_Template_button_click_17_listener","edit_presets","DeskSettingsModalComponent_div_0_Template_input_ngModelChange_24_listener","height","updatePreset","DeskSettingsModalComponent_div_0_Template_button_click_27_listener","formatLabel","toFixed","DeskSettingsModalComponent_ng_template_1_Template_desk_height_presets_close_0_listener","sitting_height","standing_height","last_height","parseInt","localStorage","new_height","sys_id","binding","module","execute","DeskSettingsModalComponent_div_0_Template","DeskSettingsModalComponent_ng_template_1_Template","desk_height_tooltip_r4","Validators","randomString","User","bld_r5","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template_mat_select_ngModelChange_5_listener","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template_mat_option_click_0_listener","setVisitor","company","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template_mat_option_click_0_listener","item_r10","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template_input_focus_6_listener","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template_input_focus_15_listener","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","name_auto_r11","filtered_visitors","email_auto_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template_a_time_field_ngModelChange_12_listener","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","multi_state_r13","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","InviteVisitorFormComponent_ng_container_0_div_1_Template_button_click_6_listener","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","load_state_r14","ɵɵelementContainer","last_count","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","InviteVisitorFormComponent_ng_template_1_Template_button_click_16_listener","_r15","onDone","InviteVisitorFormComponent_ng_template_1_Template_button_click_18_listener","sent","_service","done","visitors","initFormZone","setValidators","required","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","send_state_r16","LockerGridComponent_button_3_Template_button_click_0_listener","locker_r2","clicked","ɵɵstyleProp","position","size","columns","locker","bank","bank_status","LockerGridComponent_Template","LockerGridComponent_button_3_Template","FAV_LOCKER_KEY","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template_mat_checkbox_ngModelChange_0_listener","LockerListFieldComponent_div_1_div_1_mat_checkbox_4_Template","LockerListFieldComponent_div_1_div_1_Template","LockerListFieldComponent_div_1_img_3_Template","LockerListFieldComponent_div_1_ng_template_4_Template","LockerListFieldComponent_div_1_div_14_Template","LockerListFieldComponent_div_1_Template_button_click_16_listener","LockerListFieldComponent_div_1_Template_button_click_20_listener","LockerListFieldComponent_div_1_Template_button_click_24_listener","accessible","LockerListFieldComponent_div_1_Template","LockerListFieldComponent_Template_button_click_2_listener","LockersService","locker_bank_r2","LockerBankListComponent_ng_container_5_ul_1_li_1_Template_button_click_1_listener","selectLockerBank","LockerBankListComponent_ng_container_5_ul_1_li_1_div_3_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_img_4_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","LockerBankListComponent_ng_container_5_ul_1_li_1_Template_button_click_20_listener","LockerBankListComponent_ng_container_5_ul_1_li_1_Template","locker_banks","LockerBankListComponent_ng_container_5_ul_1_Template","_lockers","lockers_banks$","banks","locker_bank_id","locker_bank","LockerBankListComponent_ng_container_5_Template","LockerBankListComponent_ng_template_7_Template","LockerBankListComponent_ng_template_9_Template","LockerFiltersDisplayComponent_div_16_Template_button_click_3_listener","feat_r2","LockerFiltersDisplayComponent_div_18_Template_button_click_3_listener","LockerFiltersDisplayComponent_Template_button_click_1_listener","LockerFiltersDisplayComponent_Template_button_click_4_listener","LockerFiltersDisplayComponent_Template_button_click_6_listener","LockerFiltersDisplayComponent_div_16_Template","LockerFiltersDisplayComponent_div_18_Template","LockerFiltersComponent_button_2_Template_button_click_0_listener","bld_r4","LockerFiltersComponent_div_10_Template_mat_select_ngModelChange_4_listener","LockerFiltersComponent_div_10_mat_option_5_Template","lvl_r6","LockerFiltersComponent_div_12_Template_mat_select_ngModelChange_4_listener","LockerFiltersComponent_div_12_mat_option_5_Template","LockerFiltersComponent_section_39_div_3_Template_mat_checkbox_ngModelChange_3_listener","feat_r8","LockerFiltersComponent_section_39_div_3_Template","LockerFiltersComponent_div_41_Template_button_click_1_listener","active_levels","LockerFiltersComponent_button_2_Template","LockerFiltersComponent_div_10_Template","LockerFiltersComponent_div_12_Template","LockerFiltersComponent_Template_a_time_field_ngModelChange_24_listener","LockerFiltersComponent_Template_mat_checkbox_ngModelChange_37_listener","LockerFiltersComponent_section_39_Template","LockerFiltersComponent_div_41_Template","tmp_9_0","tmp_18_0","tmp_20_0","ExploreLockerBankInfoComponent","lvl_r1","selectLocker","free_lockers","LockerMapComponent_Template","LockerMapComponent_Template_interactive_map_zoomChange_0_listener","LockerMapComponent_Template_interactive_map_centerChange_0_listener","LockerMapComponent_Template_mat_select_ngModelChange_6_listener","LockerMapComponent_mat_option_7_Template","LockerMapComponent_Template_button_click_10_listener","LockerMapComponent_Template_button_click_14_listener","LockerMapComponent_Template_button_click_18_listener","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template_locker_bank_list_toggleFav_0_listener","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template_locker_bank_list_onSelect_0_listener","LockerSelectModalComponent_ng_container_16_locker_bank_list_1_Template","map_view_r4","LockerSelectModalComponent_button_18_Template_button_click_0_listener","LockerSelectModalComponent_button_31_Template_button_click_0_listener","LockerSelectModalComponent_ng_template_38_Template_locker_map_onSelect_0_listener","LockerSelectModalComponent_ng_template_40_Template_locker_grid_clicked_0_listener","_r8","LockerSelectModalComponent_Template_button_click_8_listener","LockerSelectModalComponent_Template_button_click_10_listener","LockerSelectModalComponent_Template_locker_filters_display_viewChange_15_listener","LockerSelectModalComponent_ng_container_16_Template","LockerSelectModalComponent_button_18_Template","LockerSelectModalComponent_button_31_Template","LockerSelectModalComponent_Template_button_click_32_listener","LockerSelectModalComponent_ng_template_38_Template","LockerSelectModalComponent_ng_template_40_Template","bank_view_r9","PlaceMetadata","updateMetadata","_level","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent_ng_container_0_Template_button_click_3_listener","ParkingSpaceDetailsComponent_ng_container_0_Template_button_click_6_listener","ParkingSpaceDetailsComponent_ng_container_0_Template_button_click_36_listener","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","empty_state_r3","ParkingSpaceFiltersDisplayComponent_div_20_Template_button_click_3_listener","removeFeature","editFilters","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_Template_button_click_1_listener","ParkingSpaceFiltersDisplayComponent_Template_button_click_4_listener","ParkingSpaceFiltersDisplayComponent_Template_button_click_6_listener","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_7_0","ParkingSpaceFiltersComponent_button_2_Template_button_click_0_listener","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template_mat_select_ngModelChange_1_listener","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template_mat_select_ngModelChange_1_listener","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r8","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template_mat_select_ngModelChange_1_listener","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r10","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r11","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template_mat_select_ngModelChange_1_listener","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","region_levels","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","ParkingSpaceFiltersComponent_div_21_Template_a_time_field_ngModelChange_5_listener","max_duration","ParkingSpaceFiltersComponent_section_30_div_3_Template_mat_checkbox_ngModelChange_3_listener","feat_r14","_r13","toggleFeature","ParkingSpaceFiltersComponent_section_30_div_3_Template","ParkingSpaceFiltersComponent_div_32_Template_button_click_1_listener","_form","region_buildings","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_div_21_Template","ParkingSpaceFiltersComponent_Template_mat_checkbox_ngModelChange_28_listener","ParkingSpaceFiltersComponent_section_30_Template","ParkingSpaceFiltersComponent_div_32_Template","space_r2","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template_button_click_1_listener","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template_button_click_20_listener","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_Template","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","EventFormService","MapsPeopleService","ParkingSpaceSelectMapComponent_ng_container_0_Template_interactive_map_zoomChange_1_listener","ParkingSpaceSelectMapComponent_ng_container_0_Template_interactive_map_centerChange_1_listener","_maps_people","_seletedSpace","available_spaces","setCustomZone","ParkingSpaceSelectMapComponent_Template","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_Template_mat_select_ngModelChange_3_listener","ParkingSpaceSelectMapComponent_mat_option_4_Template","ParkingSpaceSelectModalComponent_parking_space_list_11_Template_parking_space_list_toggleFav_0_listener","ParkingSpaceSelectModalComponent_parking_space_list_11_Template_parking_space_list_onSelect_0_listener","ParkingSpaceSelectModalComponent_button_14_Template_button_click_0_listener","ParkingSpaceSelectModalComponent_ng_template_32_Template_parking_space_map_onSelect_0_listener","FAV_PARKING_KEY","spaces","ParkingSpaceSelectModalComponent_Template_parking_space_filters_display_viewChange_10_listener","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_Template_parking_space_details_activeChange_12_listener","ParkingSpaceSelectModalComponent_Template_parking_space_details_toggleFav_12_listener","ParkingSpaceSelectModalComponent_Template_parking_space_details_close_12_listener","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_Template_button_click_26_listener","ParkingSpaceSelectModalComponent_ng_template_32_Template","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent_div_1_Template_button_click_19_listener","ParkingSpaceListFieldComponent_div_1_Template_button_click_24_listener","ParkingSpaceListFieldComponent_div_1_Template_button_click_29_listener","disable_date","ParkingSpaceListFieldComponent_div_1_Template","ParkingSpaceListFieldComponent_Template_button_click_2_listener","blds","buildingsForRegion","bld_ids","lvls","users","user_details","deny_parking_access","deny","booked_space","booking_list","ElementRef","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","ɵɵclassMap","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","style","top","left","available_until","ExploreDeskInfoComponent_Template","ExploreDeskInfoComponent_ng_template_1_Template","desk_tooltip_r2","ExploreLockerBankModalComponent","in_use_count","openBankModal","ExploreLockerBankInfoComponent_Template","ExploreLockerBankInfoComponent_Template_button_click_0_listener","ExploreLockerBankInfoComponent_ng_template_2_Template","desk_tooltip_r3","Locker","LockerBank","ExploreLockerBankModalComponent_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}