{"version":3,"file":"apps_concierge_src_app_staff_staff_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACyE;AAEjB;AACI;AACM;AACZ;AACqB;AACb;AACD;;;;;;;;;;;;;;;;;;;;IAS7CiB,4DADJ,gBAA+C,eACjC;IAAAA,oDAAA,YAAK;IACnBA,0DADmB,EAAW,EACrB;;;;;IAmDOA,4DAAA,qBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAAK,QAAA,CAAAC,EAAA,CAAkB;IAElBN,uDAAA,EACJ;IADIA,gEAAA,MAAAK,QAAA,CAAAI,YAAA,IAAAJ,QAAA,CAAAK,IAAA,MACJ;;;;;IAqBQV,4DAAA,qBAAwC;IACpCA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAFYA,wDAAA,UAAAW,OAAA,CAAc;IACnCX,uDAAA,EACJ;IADIA,gEAAA,MAAAW,OAAA,MACJ;;;;;IAPJX,qEAAA,GAIC;IACGA,wDAAA,IAAAc,2EAAA,yBAAwC;;;;;IAA3Bd,uDAAA,EAAU;IAAVA,wDAAA,SAAAW,OAAA,CAAU;;;;;;IAzE3CX,4DAFR,cAA8D,cACf,6BAKtC;IAFGA,wDAAA,2BAAAgB,4FAAAC,MAAA;MAAAjB,2DAAA,CAAAmB,GAAA;MAAA,MAAAC,MAAA,GAAApB,2DAAA;MAAA,OAAAA,yDAAA,CAAiBoB,MAAA,CAAAG,OAAA,CAAAN,MAAA,CAAe;IAAA,EAAC;IAEpCjB,0DAAA,EAAsB;IAEnBA,4DADJ,cAA2B,gBACL;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAQ;IAC/BA,4DAAA,yBAAqC;IACjCA,uDAAA,gBAIE;IAEVA,0DADI,EAAiB,EACf;IAGEA,4DAFR,cAAyC,cACH,iBACX;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAQ;IACjCA,4DAAA,0BAAqC;IACjCA,uDAAA,iBAKE;IAEVA,0DADI,EAAiB,EACf;IAEFA,4DADJ,eAAkC,iBACX;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAQ;IACjCA,4DAAA,0BAAqC;IACjCA,uDAAA,iBAKE;IAGdA,0DAFQ,EAAiB,EACf,EACJ;IAEFA,4DADJ,eAA2B,iBACL;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAQ;IAMxBA,4DALR,0BAAqC,sBAIhC,sBACwB;IAAAA,oDAAA,kBAAU;IAAAA,0DAAA,EAAa;IAC5CA,wDAAA,KAAAyB,4DAAA,yBAGC;;IAKbzB,0DAFQ,EAAa,EACA,EACf;IAEFA,4DADJ,eAA2B,iBACJ;IAAAA,oDAAA,cAAM;IAAAA,0DAAA,EAAQ;IAMzBA,4DALR,eAAyC,0BAIpC,sBAKI;IACGA,wDAAA,KAAA0B,8DAAA,2BAIC;;IAMT1B,0DADI,EAAa,EACA;IAQbA,4DAPJ,kBAMC,gBACa;IAAAA,oDAAA,WAAG;IAAAA,0DAAA,EAAW;IACxBA,4DAAA,eAAkB;IAAAA,oDAAA,oBAAY;IAKlDA,0DALkD,EAAM,EAC/B,EACP,EACJ,EACH,EACJ;;;;;;IA7FGA,uDAAA,EAAkB;IAAlBA,wDAAA,cAAAoB,MAAA,CAAAO,IAAA,CAAkB;IAIhB3B,uDAAA,EAAuC;IAAvCA,wDAAA,mBAAAA,6DAAA,IAAA6B,GAAA,EAAuC;IA6CT7B,uDAAA,IAAiB;IAAjBA,wDAAA,YAAAA,yDAAA,QAAAoB,MAAA,CAAAW,MAAA,EAAiB;IAuBzD/B,uDAAA,GACR;IADQA,wDAAA,cAAAgC,OAAA,GAAAhC,yDAAA,QAAAoB,MAAA,CAAAa,IAAA,oBAAAD,OAAA,CAAAE,KAAA,KAAAlC,6DAAA,KAAAmC,GAAA,EACR;IAY0BnC,uDAAA,GAAqB;IAArBA,wDAAA,YAAAoC,YAAA,CAAqB;;;;;;IAarCpC,4DAJJ,iBAGC,iBACuD;IAAjBA,wDAAA,mBAAAqC,yEAAA;MAAArC,2DAAA,CAAAsC,GAAA;MAAA,MAAAlB,MAAA,GAAApB,2DAAA;MAAA,OAAAA,yDAAA,CAASoB,MAAA,CAAAmB,IAAA,EAAM;IAAA,EAAC;IAACvC,oDAAA,WAAI;IAC5DA,0DAD4D,EAAS,EAC5D;;;;;IAELA,4DAAA,eAGC;IACGA,uDAAA,sBAAwD;IACxDA,4DAAA,QAAG;IAAAA,oDAAA,gCAAyB;IAChCA,0DADgC,EAAI,EAC7B;;;IAFUA,uDAAA,EAAe;IAAfA,wDAAA,gBAAe;;;;;;IAOxBA,4DAFR,cAAsC,yBACG,gBAK/B;IAFEA,8DAAA,2BAAAyC,qFAAAxB,MAAA;MAAAjB,2DAAA,CAAA0C,GAAA;MAAA,MAAAtB,MAAA,GAAApB,2DAAA;MAAAA,gEAAA,CAAAoB,MAAA,CAAAwB,SAAA,EAAA3B,MAAA,MAAAG,MAAA,CAAAwB,SAAA,GAAA3B,MAAA;MAAA,OAAAjB,yDAAA,CAAAiB,MAAA;IAAA,EAAuB;IAG/BjB,0DALI,EAIE,EACW;IACjBA,4DAAA,iBAAyD;IAApBA,wDAAA,mBAAA6C,8EAAA;MAAA7C,2DAAA,CAAA0C,GAAA;MAAA,MAAAtB,MAAA,GAAApB,2DAAA;MAAA,OAAAA,yDAAA,CAASoB,MAAA,CAAA0B,OAAA,EAAS;IAAA,EAAC;IACpD9C,oDAAA,kBACJ;IACJA,0DADI,EAAS,EACP;;;;IAPMA,uDAAA,GAAuB;IAAvBA,8DAAA,YAAAoB,MAAA,CAAAwB,SAAA,CAAuB;;;AAYzC,MAAOI,8BAA8B;EA4BvCC,YACqCC,KAAmC,EAC5DC,WAAyD,EACzDC,IAAyB;IAFA,KAAAF,KAAK,GAALA,KAAK;IAC9B,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,IAAI,GAAJA,IAAI;IA9BR,KAAAC,QAAQ,GAAG,IAAI/D,iDAAe,CAAC,CAAC,CAAC;IAElC,KAAAgE,OAAO,GAAG,KAAK;IAEN,KAAAC,OAAO,GAAsB,IAAI,CAACL,KAAK;IACvC,KAAAjB,IAAI,GAAG1C,oDAAa,CAAC,CACjC,IAAI,CAAC6D,IAAI,CAACI,eAAe,EACzB,IAAI,CAACH,QAAQ,CAChB,CAAC,CAACI,IAAI,CACHjE,uDAAM,CAAC,CAAC,CAACkE,GAAG,CAAC,KAAK,CAAC,CAACA,GAAG,CAAC,EACxB/D,0DAAS,CAAC,CAAC,CAAC+D,GAAG,CAAC,KAAKtE,gEAAY,CAACsE,GAAG,CAACpD,EAAE,EAAE,oBAAoB,CAAC,CAAC,EAChEb,oDAAG,CAAC,CAAC;MAAEkE;IAAO,CAAE,KAAMA,OAAe,IAAI;MAAEzB,KAAK,EAAE,EAAE;MAAE0B,QAAQ,EAAE;IAAE,CAAE,CAAC,EACrElE,4DAAW,CAAC,CAAC,CAAC,CACjB;IACe,KAAAiC,IAAI,GAAG,IAAIzC,sDAAS,CAAC;MACjCoB,EAAE,EAAE,IAAIrB,wDAAW,CAAC,IAAI,CAACiE,KAAK,EAAE5C,EAAE,IAAI,UAAUR,6DAAY,CAAC,CAAC,CAAC,EAAE,CAAC;MAClEY,IAAI,EAAE,IAAIzB,wDAAW,CAAC,IAAI,CAACiE,KAAK,EAAExC,IAAI,IAAI,EAAE,CAAC;MAC7CmD,KAAK,EAAE,IAAI5E,wDAAW,CAAC,IAAI,CAACiE,KAAK,EAAEW,KAAK,IAAI,EAAE,CAAC;MAC/CC,KAAK,EAAE,IAAI7E,wDAAW,CAAC,IAAI,CAACiE,KAAK,EAAEY,KAAK,IAAI,EAAE,CAAC;MAC/CC,IAAI,EAAE,IAAI9E,wDAAW,CAAC,IAAI,CAACiE,KAAK,EAAEa,IAAI,IAAI,EAAE,CAAC;MAC7C7B,KAAK,EAAE,IAAIjD,wDAAW,CAAC,IAAI,CAACiE,KAAK,EAAEhB,KAAK,IAAI,EAAE;KACjD,CAAC;IACF;IACgB,KAAAH,MAAM,GAAG,IAAI,CAACqB,IAAI,CAACY,aAAa;EAQ7C;EAEUlB,OAAOA,CAAA;IAAA,IAAAmB,KAAA;IAAA,OAAAC,wJAAA;MAChB,IAAI,CAACD,KAAI,CAACrB,SAAS,EAAE;MACrBqB,KAAI,CAACE,QAAQ,CAACC,KAAK,EAAE;MACrBH,KAAI,CAACX,OAAO,GAAG,IAAI;MACnBW,KAAI,CAACd,WAAW,CAACkB,YAAY,GAAG,IAAI;MACpC,MAAMpC,IAAI,SAAcgC,KAAI,CAAChC,IAAI,CAACwB,IAAI,CAAC7D,qDAAI,CAAC,CAAC,CAAC,CAAC,CAAC0E,SAAS,EAAE;MAC3D,MAAMjF,kEAAc,CAAC4E,KAAI,CAACb,IAAI,CAACmB,QAAQ,CAACjE,EAAE,EAAE;QACxCI,IAAI,EAAE,oBAAoB;QAC1B8D,WAAW,EAAE,oBAAoB;QACjCb,OAAO,EAAE;UACLzB,KAAK,EAAE,CAAC,IAAID,IAAI,CAACC,KAAK,IAAI,EAAE,CAAC,EAAE+B,KAAI,CAACrB,SAAS,CAAC,CAACpD,MAAM,CAChDiF,CAAC,IAAK,CAAC,CAACA,CAAC,CACb;UACDb,QAAQ,EAAE3B,IAAI,CAAC2B;;OAEtB,CAAC,CAACU,SAAS,EAAE;MACdL,KAAI,CAACZ,QAAQ,CAACqB,IAAI,CAAC,CAAC,CAAC;MACrBT,KAAI,CAACtC,IAAI,CAACgD,UAAU,CAAC;QACjBzC,KAAK,EAAE,CAAC,IAAI+B,KAAI,CAACtC,IAAI,CAACiD,KAAK,CAAC1C,KAAK,IAAI,EAAE,CAAC,EAAE+B,KAAI,CAACrB,SAAS;OAC3D,CAAC;MACFqB,KAAI,CAACrB,SAAS,GAAG,EAAE;MACnBqB,KAAI,CAACX,OAAO,GAAG,KAAK;MACpBW,KAAI,CAACd,WAAW,CAACkB,YAAY,GAAG,KAAK;IAAC;EAC1C;EAEO9C,OAAOA,CAACsD,IAAS;IACpB,IAAI,CAAClD,IAAI,CAACgD,UAAU,CAAC;MACjBjE,IAAI,EAAEmE,IAAI,EAAEnE,IAAI;MAChBmD,KAAK,EAAEgB,IAAI,EAAEhB,KAAK;MAClBC,KAAK,EAAEe,IAAI,EAAEf;KAChB,CAAC;EACN;EAEavB,IAAIA,CAAA;IAAA,IAAAuC,MAAA;IAAA,OAAAZ,wJAAA;MACbY,MAAI,CAACxB,OAAO,GAAG,IAAI;MACnBwB,MAAI,CAAC3B,WAAW,CAACkB,YAAY,GAAG,IAAI;MACpC,MAAMpC,IAAI,SAAc6C,MAAI,CAAC7C,IAAI,CAACwB,IAAI,CAAC7D,qDAAI,CAAC,CAAC,CAAC,CAAC,CAAC0E,SAAS,EAAE;MAC3D,MAAMV,QAAQ,GAAG3B,IAAI,EAAE2B,QAAQ,IAAI,EAAE;MACrC,MAAMmB,YAAY,GAAG,CACjB,GAAGnB,QAAQ,CAACpE,MAAM,CAAEiF,CAAC,IAAKA,CAAC,CAACnE,EAAE,KAAKwE,MAAI,CAACvB,OAAO,EAAEjD,EAAE,CAAC,EACpDwE,MAAI,CAACnD,IAAI,CAACiD,KAAK,CAClB,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACvE,IAAI,CAACyE,aAAa,CAACD,CAAC,CAACxE,IAAI,CAAC,CAAC;MAC9C,MAAMrB,kEAAc,CAACyF,MAAI,CAAC1B,IAAI,CAACmB,QAAQ,CAACjE,EAAE,EAAE;QACxCI,IAAI,EAAE,oBAAoB;QAC1B8D,WAAW,EAAE,oBAAoB;QACjCb,OAAO,EAAE;UAAEzB,KAAK,EAAED,IAAI,CAACC,KAAK,IAAI,EAAE;UAAE0B,QAAQ,EAAEmB;QAAY;OAC7D,CAAC,CAACT,SAAS,EAAE;MACdQ,MAAI,CAAC3B,WAAW,CAACkB,YAAY,GAAG,IAAI;MACpCxE,8DAAa,CAAC,0CAA0C,CAAC;MACzDiF,MAAI,CAACxB,OAAO,GAAG,KAAK;MACpBwB,MAAI,CAAC3B,WAAW,CAACiB,KAAK,EAAE;IAAC;EAC7B;EAAC,QAAAK,CAAA;qBArFQzB,8BAA8B,EAAAhD,+DAAA,CA6B3BjB,sEAAe,GAAAiB,+DAAA,CAAAqF,mEAAA,GAAArF,+DAAA,CAAAsF,sEAAA;EAAA;EAAA,QAAAC,EAAA;UA7BlBvC,8BAA8B;IAAAwC,SAAA;IAAAC,SAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;kEA0B5B5F,uEAAsB;;;;;;;;;;;;QA/JzBC,4DADJ,aAAQ,SACA;QAAAA,oDAAA,GAAgD;QAAAA,0DAAA,EAAK;QACzDA,uDAAA,aAA8B;QAC9BA,wDAAA,IAAA6F,gDAAA,oBAA+C;QAGnD7F,0DAAA,EAAS;QA+GTA,wDA9GA,IAAA8F,8CAAA,oBAA8D,IAAAC,gDAAA,oBAkG7D,IAAAC,qDAAA,gCAAAhG,oEAAA,CAGwB,IAAAkG,qDAAA,gCAAAlG,oEAAA,CASD;;;;QApHhBA,uDAAA,GAAgD;QAAhDA,gEAAA,KAAA4F,GAAA,CAAArC,OAAA,wCAAgD;QAErBvD,uDAAA,GAAc;QAAdA,wDAAA,UAAA4F,GAAA,CAAAtC,OAAA,CAAc;QAIpBtD,uDAAA,EAAgB;QAAAA,wDAAhB,UAAA4F,GAAA,CAAAtC,OAAA,CAAgB,aAAA6C,aAAA,CAAe;QAgGvDnG,uDAAA,EAAc;QAAdA,wDAAA,UAAA4F,GAAA,CAAAtC,OAAA,CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpH0B;AACO;AACM;AACR;AACiB;AACU;AACX;AACO;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0DjDtD,6DAAA,qBAGC;IACGA,qDAAA,GACJ;IAAAA,2DAAA,EAAa;;;;IAHTA,yDAAA,UAAAuG,OAAA,CAAc;IAEdvG,wDAAA,EACJ;IADIA,iEAAA,MAAAuG,OAAA,MACJ;;;;;IAoDRvG,6DAAA,eAGC;IACGA,qDAAA,GACJ;IAAAA,2DAAA,EAAO;;;;IADHA,wDAAA,EACJ;IADIA,iEAAA,MAAAwG,OAAA,MACJ;;;;;IALAxG,yDAAA,IAAAyG,yDAAA,mBAGC;;;;IADoBzG,yDAAA,YAAA0G,OAAA,CAAO;;;;;IAM5B1G,qDAAA,GACJ;;;;;;IADIA,iEAAA,MAAA2G,OAAA,IAAAC,OAAA,GAAA5G,0DAAA,OAAA2G,OAAA,oBAAAC,OAAA,CAAAnG,YAAA,cACJ;;;;;;IAKQT,6DAHJ,cAEC,iBACqD;IAA3BA,yDAAA,mBAAA6G,2EAAA;MAAA,MAAAC,MAAA,GAAA9G,4DAAA,CAAAsC,GAAA,EAAAyE,GAAA;MAAA,MAAAC,MAAA,GAAAhH,4DAAA;MAAA,OAAAA,0DAAA,CAASgH,MAAA,CAAAC,WAAA,CAAAH,MAAA,CAAgB;IAAA,EAAC;IAC7C9G,6DAAA,eAAU;IAAAA,qDAAA,WAAI;IAClBA,2DADkB,EAAW,EACpB;IACTA,6DAAA,iBAAoD;IAA7BA,yDAAA,mBAAAkH,2EAAA;MAAA,MAAAJ,MAAA,GAAA9G,4DAAA,CAAAsC,GAAA,EAAAyE,GAAA;MAAA,MAAAC,MAAA,GAAAhH,4DAAA;MAAA,OAAAA,0DAAA,CAASgH,MAAA,CAAAG,aAAA,CAAAL,MAAA,CAAkB;IAAA,EAAC;IAC/C9G,6DAAA,eAAU;IAAAA,qDAAA,aAAM;IAExBA,2DAFwB,EAAW,EACtB,EACP;;;AAkBxB,MAAOoH,0BAA0B;EAyBnCnE,YACYG,IAAyB,EACzBiE,OAAkB;IADlB,KAAAjE,IAAI,GAAJA,IAAI;IACJ,KAAAiE,OAAO,GAAPA,OAAO;IA1BX,KAAAC,OAAO,GAAG,IAAIhI,kDAAe,CAAS,CAAC,CAAC;IAEzC,KAAAiI,MAAM,GAAG,EAAE;IACF,KAAAC,WAAW,GAAG,IAAIlI,kDAAe,CAAS,EAAE,CAAC;IAC7C,KAAA2C,IAAI,GAAG1C,oDAAa,CAAC,CACjC,IAAI,CAAC6D,IAAI,CAACI,eAAe,EACzB,IAAI,CAAC8D,OAAO,CACf,CAAC,CAAC7D,IAAI,CACHjE,uDAAM,CAAC,CAAC,CAACkE,GAAG,CAAC,KAAK,CAAC,CAACA,GAAG,CAAC,EACxB/D,0DAAS,CAAC,CAAC,CAAC+D,GAAG,CAAC,KAAKtE,gEAAY,CAACsE,GAAG,CAACpD,EAAE,EAAE,oBAAoB,CAAC,CAAC,EAChEb,oDAAG,CAAC,CAAC;MAAEkE;IAAO,CAAE,KAAMA,OAAe,IAAI;MAAEzB,KAAK,EAAE,EAAE;MAAE0B,QAAQ,EAAE;IAAE,CAAE,CAAC,EACrElE,4DAAW,CAAC,CAAC,CAAC,CACjB;IACe,KAAAwC,KAAK,GAAG,IAAI,CAACD,IAAI,CAACwB,IAAI,CAAChE,oDAAG,CAAEgF,CAAC,IAAKA,CAAC,EAAEvC,KAAK,IAAI,EAAE,CAAC,CAAC;IAClD,KAAA0B,QAAQ,GAAG,IAAI,CAAC3B,IAAI,CAACwB,IAAI,CAAChE,oDAAG,CAAEgF,CAAC,IAAKA,CAAC,EAAEb,QAAQ,IAAI,EAAE,CAAC,CAAC;IACxD,KAAA6D,iBAAiB,GAAGlI,oDAAa,CAAC,CAC9C,IAAI,CAACqE,QAAQ,EACb,IAAI,CAAC4D,WAAW,CACnB,CAAC,CAAC/D,IAAI,CACHhE,oDAAG,CAAC,CAAC,CAACiI,IAAI,EAAEC,IAAI,CAAC,KACbD,IAAI,CAAClI,MAAM,CAAEiF,CAAC,IAAK,CAACkD,IAAI,IAAIlD,CAAC,CAACvC,KAAK,CAAC0F,QAAQ,CAACD,IAAI,CAAC,CAAC,CACtD,CACJ;EAKE;EAEIE,QAAQA,CAAA,GAAI;EAEZC,WAAWA,CAAA;IACd,MAAMC,GAAG,GAAG,IAAI,CAACV,OAAO,CAACW,IAAI,CAAC1B,0FAA4B,EAAE,EAAE,CAAC;IAC/DyB,GAAG,CAACE,WAAW,EAAE,CAACC,SAAS,CAAC,MAAM,IAAI,CAACZ,OAAO,CAAC5C,IAAI,CAACyD,IAAI,CAACC,GAAG,EAAE,CAAC,CAAC;EACpE;EAEOnB,WAAWA,CAAC1D,OAA0B;IACzC,MAAMwE,GAAG,GAAG,IAAI,CAACV,OAAO,CAACW,IAAI,CAAChF,8FAA8B,EAAE;MAC1Df,IAAI,EAAEsB;KACT,CAAC;IACFwE,GAAG,CAACE,WAAW,EAAE,CAACC,SAAS,CAAC,MAAM,IAAI,CAACZ,OAAO,CAAC5C,IAAI,CAACyD,IAAI,CAACC,GAAG,EAAE,CAAC,CAAC;EACpE;EAEajB,aAAaA,CAAC5D,OAAyB;IAAA,IAAAU,KAAA;IAAA,OAAAC,wJAAA;MAChD,MAAMmE,MAAM,SAAShC,iEAAgB,CACjC;QACIiC,KAAK,EAAE,0BAA0B;QACjCC,OAAO,EAAE,mCAAmChF,OAAO,CAAC7C,IAAI,+BAA+B;QACvF8H,IAAI,EAAE;UAAED,OAAO,EAAE;QAAQ;OAC5B,EACDtE,KAAI,CAACoD,OAAO,CACf;MACD,IAAIgB,MAAM,CAACI,MAAM,KAAK,MAAM,EAAE;MAC9BJ,MAAM,CAAC/E,OAAO,CAAC,qBAAqB,CAAC;MACrC,MAAMrB,IAAI,SAAcgC,KAAI,CAAChC,IAAI,CAACwB,IAAI,CAAC7D,qDAAI,CAAC,CAAC,CAAC,CAAC,CAAC0E,SAAS,EAAE;MAC3D,MAAMS,YAAY,GAAG,CAAC9C,IAAI,EAAE2B,QAAQ,IAAI,EAAE,EAAEpE,MAAM,CAC7CiF,CAAC,IAAKA,CAAC,CAACnE,EAAE,KAAKiD,OAAO,CAACjD,EAAE,CAC7B;MACD,MAAMjB,kEAAc,CAAC4E,KAAI,CAACb,IAAI,CAACmB,QAAQ,CAACjE,EAAE,EAAE;QACxCI,IAAI,EAAE,oBAAoB;QAC1B8D,WAAW,EAAE,oBAAoB;QACjCb,OAAO,EAAE;UAAEzB,KAAK,EAAED,IAAI,CAACC,KAAK;UAAE0B,QAAQ,EAAEmB;QAAY;OACvD,CAAC,CAACT,SAAS,EAAE;MACd+D,MAAM,CAACjE,KAAK,EAAE;MACdH,KAAI,CAACqD,OAAO,CAAC5C,IAAI,CAACyD,IAAI,CAACC,GAAG,EAAE,CAAC;MAC7BvI,8DAAa,CAAC,yCAAyC,CAAC;IAAC;EAC7D;EAAC,QAAA4E,CAAA;qBAnEQ2C,0BAA0B,EAAApH,gEAAA,CAAAqF,sEAAA,GAAArF,gEAAA,CAAAsF,gEAAA;EAAA;EAAA,QAAAC,EAAA;UAA1B6B,0BAA0B;IAAA5B,SAAA;IAAAkD,KAAA,EAAA7G,GAAA;IAAA8G,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,oCAAApD,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QAtI/B3F,wDAAA,iBAAyB;QACzBA,6DAAA,aAA8B;QAC1BA,wDAAA,kBAA2B;QAIfA,6DAHZ,cAAgD,iBACI,aACG,YACV;QAAAA,qDAAA,yBAAkB;QAAAA,2DAAA,EAAK;QAEpDA,6DADJ,aAAyC,gBAOpC;QADGA,yDAAA,mBAAAgJ,4DAAA;UAAAhJ,4DAAA,CAAAmB,GAAA;UAAA,OAAAnB,0DAAA,CAAS4F,GAAA,CAAAkC,WAAA,EAAa;QAAA,EAAC;QAEvB9H,6DAAA,gBAAU;QAAAA,qDAAA,gBAAQ;QACtBA,2DADsB,EAAW,EACxB;QACTA,6DAAA,kBAKC;QADGA,yDAAA,mBAAAiJ,6DAAA;UAAAjJ,4DAAA,CAAAmB,GAAA;UAAA,OAAAnB,0DAAA,CAAS4F,GAAA,CAAAqB,WAAA,EAAa;QAAA,EAAC;QAEvBjH,6DAAA,oBAA2B;QAAAA,qDAAA,WAAG;QAAAA,2DAAA,EAAW;QACzCA,6DAAA,eAAkB;QAAAA,qDAAA,mBAAW;QAGzCA,2DAHyC,EAAM,EAC9B,EACP,EACJ;QAMEA,6DALR,eAAyD,0BAIpD,sBAKI;QAFGA,yDAAA,2BAAAkJ,yEAAAjI,MAAA;UAAAjB,4DAAA,CAAAmB,GAAA;UAAA,OAAAnB,0DAAA,CAAiB4F,GAAA,CAAA4B,WAAA,CAAA9C,IAAA,CAAAzD,MAAA,CAAwB;QAAA,EAAC;QAG1CjB,6DAAA,sBAAqB;QAAAA,qDAAA,iBAAS;QAAAA,2DAAA,EAAa;QAC3CA,yDAAA,KAAAmJ,iDAAA,yBAGC;;QAITnJ,2DADI,EAAa,EACA;QAMTA,6DALR,cAAyC,0BAIpC,oBACwC;QACjCA,qDAAA,gBACJ;QAAAA,2DAAA,EAAW;QACXA,6DAAA,iBAIE;QAFEA,+DAAA,2BAAAoJ,oEAAAnI,MAAA;UAAAjB,4DAAA,CAAAmB,GAAA;UAAAnB,iEAAA,CAAA4F,GAAA,CAAA2B,MAAA,EAAAtG,MAAA,MAAA2E,GAAA,CAAA2B,MAAA,GAAAtG,MAAA;UAAA,OAAAjB,0DAAA,CAAAiB,MAAA;QAAA,EAAoB;QAMxCjB,2DARgB,EAIE,EACW,EACf,EACJ,EACA;QACVA,6DAAA,mBAAwD;QACpDA,wDAAA,wBA6BgB;QAYhBA,yDAXA,KAAAqJ,kDAAA,gCAAArJ,qEAAA,CAA6C,KAAAsJ,kDAAA,gCAAAtJ,qEAAA,CAQD,KAAAuJ,kDAAA,gCAAAvJ,qEAAA,CAGC;QAczDA,2DAFQ,EAAU,EACP,EACL;;;;;;QAtFkBA,wDAAA,IAAkC;QAAlCA,yDAAA,YAAA4F,GAAA,CAAA4B,WAAA,CAAAgC,QAAA,GAAkC;QAMbxJ,wDAAA,GAAwB;QAAxBA,yDAAA,YAAAA,0DAAA,SAAA4F,GAAA,CAAA1D,KAAA,KAAAlC,8DAAA,KAAAmC,GAAA,EAAwB;QAiBzCnC,wDAAA,GAAoB;QAApBA,+DAAA,YAAA4F,GAAA,CAAA2B,MAAA,CAAoB;QAUhCvH,wDAAA,GAAgC;QAsBhCA,yDAtBA,eAAA4F,GAAA,CAAA6B,iBAAA,CAAgC,WAAA7B,GAAA,CAAA2B,MAAA,CACf,YAAAvH,8DAAA,KAAAyJ,GAAA,EAOf,mBAAAzJ,8DAAA,KAAA0J,GAAA,EAOA,gBAAA1J,8DAAA,KAAA2J,GAAA,EAC0C,aAAA3J,8DAAA,KAAA6J,GAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,oBAAA,EAK1C,UAAApE,GAAA,CAAA2B,MAAA,sEAKD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtHiC;;;;;;;;;;;;IAW1CvH,uDAAA,0BAIoB;;;AAgB9B,MAAOkK,iBAAiB;EAG1BjH,YAAoBkH,MAAyB;IAAzB,KAAAA,MAAM,GAANA,MAAM;IAFV,KAAA7G,OAAO,GAAG,IAAI,CAAC6G,MAAM,CAAC7G,OAAO;EAEG;EAEzCuE,QAAQA,CAAA;IACX,IAAI,CAACsC,MAAM,CAACC,YAAY,EAAE;EAC9B;EAEOC,WAAWA,CAAA;IACd,IAAI,CAACF,MAAM,CAACG,WAAW,EAAE;EAC7B;EAAC,QAAA7F,CAAA;qBAXQyF,iBAAiB,EAAAlK,+DAAA,CAAAqF,mEAAA;EAAA;EAAA,QAAAE,EAAA;UAAjB2E,iBAAiB;IAAA1E,SAAA;IAAAkD,KAAA,EAAA7G,GAAA;IAAA8G,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAyB,2BAAA5E,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA1BtB3F,uDAAA,iBAAyB;QACzBA,4DAAA,aAA8B;QAC1BA,uDAAA,kBAA2B;QAC3BA,4DAAA,cAAgD;QAE5CA,uDADA,sBAA4C,wBACe;QAC3DA,wDAAA,IAAAwK,6CAAA,8BAIC;;QAETxK,0DADI,EAAO,EACL;;;QAJOA,uDAAA,GAAqB;QAArBA,wDAAA,SAAAA,yDAAA,OAAA4F,GAAA,CAAAtC,OAAA,EAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdc;AACK;AACD;AACM;AACZ;AACqB;;;;;;;;;;;;;;IAyB/DtD,qEAAA,GAAiD;IAIzCA,4DAHJ,aAEC,aACgC;IAAAA,oDAAA,GAAU;IAAAA,0DAAA,EAAM;IAC7CA,4DAAA,gBAOC;IAHGA,wDAAA,mBAAAyK,8EAAA;MAAA,MAAAjE,OAAA,GAAAxG,2DAAA,CAAA0K,GAAA,EAAAC,SAAA;MAAA,MAAAC,MAAA,GAAA5K,2DAAA;MAAA4K,MAAA,CAAAC,MAAA,GAAArE,OAAA;MAAA,OAAAxG,yDAAA,CAAA4K,MAAA,CAAAhI,SAAA,GAAA4D,OAAA;IAAA,EAAyC;IAIzCxG,4DAAA,eAAU;IAAAA,oDAAA,WAAI;IAClBA,0DADkB,EAAW,EACpB;IACTA,4DAAA,gBAAsD;IAA3BA,wDAAA,mBAAA8K,8EAAA;MAAA,MAAAtE,OAAA,GAAAxG,2DAAA,CAAA0K,GAAA,EAAAC,SAAA;MAAA,MAAAC,MAAA,GAAA5K,2DAAA;MAAA,OAAAA,yDAAA,CAAS4K,MAAA,CAAAG,UAAA,CAAAvE,OAAA,CAAgB;IAAA,EAAC;IACjDxG,4DAAA,eAAU;IAAAA,oDAAA,aAAM;IAExBA,0DAFwB,EAAW,EACtB,EACP;;;;;;;IAd2BA,uDAAA,GAAU;IAAVA,+DAAA,CAAAwG,OAAA,CAAU;IAOnCxG,uDAAA,EAAqB;IAArBA,wDAAA,YAAAoC,YAAA,CAAqB;;;;;;IAazBpC,4DAFR,cAAsC,yBACG,gBAK/B;IAFEA,8DAAA,2BAAAiL,oFAAAhK,MAAA;MAAAjB,2DAAA,CAAAsC,GAAA;MAAA,MAAAsI,MAAA,GAAA5K,2DAAA;MAAAA,gEAAA,CAAA4K,MAAA,CAAAhI,SAAA,EAAA3B,MAAA,MAAA2J,MAAA,CAAAhI,SAAA,GAAA3B,MAAA;MAAA,OAAAjB,yDAAA,CAAAiB,MAAA;IAAA,EAAuB;IAG/BjB,0DALI,EAIE,EACW;IACjBA,4DAAA,iBAA6D;IAAxBA,wDAAA,mBAAAkL,6EAAA;MAAAlL,2DAAA,CAAAsC,GAAA;MAAA,MAAAsI,MAAA,GAAA5K,2DAAA;MAAA,OAAAA,yDAAA,CAAS4K,MAAA,CAAAO,WAAA,EAAa;IAAA,EAAC;IACxDnL,oDAAA,kBACJ;IACJA,0DADI,EAAS,EACP;;;;IAPMA,uDAAA,GAAuB;IAAvBA,8DAAA,YAAA4K,MAAA,CAAAhI,SAAA,CAAuB;;;AAYzC,MAAO0D,4BAA4B;EAmBxByE,UAAUA,CAACpD,IAAY;IAAA,IAAA1D,KAAA;IAAA,OAAAC,wJAAA;MAChC,IAAI,CAACyD,IAAI,EAAE;MACX1D,KAAI,CAACX,OAAO,GAAG,IAAI;MACnBW,KAAI,CAACd,WAAW,CAACkB,YAAY,GAAG,IAAI;MACpC,MAAMpC,IAAI,SAAcgC,KAAI,CAAChC,IAAI,CAACwB,IAAI,CAAC7D,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC0E,SAAS,EAAE;MAC3D,MAAMjF,kEAAc,CAAC4E,KAAI,CAACb,IAAI,CAACmB,QAAQ,CAACjE,EAAE,EAAE;QACxCI,IAAI,EAAE,oBAAoB;QAC1B8D,WAAW,EAAE,oBAAoB;QACjCb,OAAO,EAAE;UACLzB,KAAK,EAAE,CAAC,GAAGD,IAAI,CAACC,KAAK,CAAC1C,MAAM,CAAEiF,CAAC,IAAKA,CAAC,KAAKkD,IAAI,CAAC,CAAC,CAC3CnI,MAAM,CAAEiF,CAAC,IAAK,CAAC,CAACA,CAAC,CAAC,CAClBO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC;UACvCtB,QAAQ,EAAE3B,IAAI,CAAC2B,QAAQ,CAACnE,GAAG,CAAEgF,CAAC,KAAM;YAChC,GAAGA,CAAC;YACJvC,KAAK,EAAEuC,CAAC,CAACvC,KAAK,CAAC1C,MAAM,CAAE4L,CAAC,IAAKA,CAAC,KAAKzD,IAAI;WAC1C,CAAC;;OAET,CAAC,CAACrD,SAAS,EAAE;MACdL,KAAI,CAACZ,QAAQ,CAACqB,IAAI,CAAC,CAAC,CAAC;MACrBT,KAAI,CAACX,OAAO,GAAG,KAAK;MACpBW,KAAI,CAACd,WAAW,CAACkB,YAAY,GAAG,KAAK;IAAC;EAC1C;EAEa8G,WAAWA,CAAA;IAAA,IAAArG,MAAA;IAAA,OAAAZ,wJAAA;MACpB,IAAI,CAACY,MAAI,CAAClC,SAAS,EAAE;MACrBkC,MAAI,CAACxB,OAAO,GAAG,IAAI;MACnBwB,MAAI,CAACX,QAAQ,CAACC,KAAK,EAAE;MACrBU,MAAI,CAAC3B,WAAW,CAACkB,YAAY,GAAG,IAAI;MACpC,MAAMpC,IAAI,SAAc6C,MAAI,CAAC7C,IAAI,CAACwB,IAAI,CAAC7D,oDAAI,CAAC,CAAC,CAAC,CAAC,CAAC0E,SAAS,EAAE;MAC3D,MAAMjF,kEAAc,CAACyF,MAAI,CAAC1B,IAAI,CAACmB,QAAQ,CAACjE,EAAE,EAAE;QACxCI,IAAI,EAAE,oBAAoB;QAC1B8D,WAAW,EAAE,oBAAoB;QACjCb,OAAO,EAAE;UACLzB,KAAK,EAAE,CACH,GAAGD,IAAI,CAACC,KAAK,CAAC1C,MAAM,CAAEiF,CAAC,IAAKA,CAAC,KAAKK,MAAI,CAAC+F,MAAM,CAAC,EAC9C/F,MAAI,CAAClC,SAAS,CACjB,CACIpD,MAAM,CAAEiF,CAAC,IAAK,CAAC,CAACA,CAAC,CAAC,CAClBO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC;UACvCtB,QAAQ,EAAE3B,IAAI,CAAC2B;;OAEtB,CAAC,CAACU,SAAS,EAAE;MACdQ,MAAI,CAACzB,QAAQ,CAACqB,IAAI,CAAC,CAAC,CAAC;MACrBI,MAAI,CAAClC,SAAS,GAAG,EAAE;MACnBkC,MAAI,CAAC+F,MAAM,GAAG,EAAE;MAChB/F,MAAI,CAACxB,OAAO,GAAG,KAAK;MACpBwB,MAAI,CAAC3B,WAAW,CAACkB,YAAY,GAAG,KAAK;IAAC;EAC1C;EAEApB,YACYG,IAAyB,EACzBD,WAAuD;IADvD,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAD,WAAW,GAAXA,WAAW;IArEf,KAAAE,QAAQ,GAAG,IAAI/D,iDAAe,CAAC,CAAC,CAAC;IAIlC,KAAAgE,OAAO,GAAG,KAAK;IACN,KAAArB,IAAI,GAAG1C,mDAAa,CAAC,CACjC,IAAI,CAAC6D,IAAI,CAACI,eAAe,EACzB,IAAI,CAACH,QAAQ,CAChB,CAAC,CAACI,IAAI,CACHjE,uDAAM,CAAC,CAAC,CAACkE,GAAG,CAAC,KAAK,CAAC,CAACA,GAAG,CAAC,EACxB/D,0DAAS,CAAC,CAAC,CAAC+D,GAAG,CAAC,KAAKtE,gEAAY,CAACsE,GAAG,CAACpD,EAAE,EAAE,oBAAoB,CAAC,CAAC,EAChEb,oDAAG,CAAC,CAAC;MAAEkE;IAAO,CAAE,KAAMA,OAAe,IAAI;MAAEzB,KAAK,EAAE,EAAE;MAAE0B,QAAQ,EAAE;IAAE,CAAE,CAAC,EACrElE,4DAAW,CAAC,CAAC,CAAC,CACjB;IACe,KAAAwC,KAAK,GAAG,IAAI,CAACD,IAAI,CAACwB,IAAI,CAAChE,oDAAG,CAAEgF,CAAC,IAAKA,CAAC,CAACvC,KAAK,CAAC,CAAC;EAwDxD;EAAC,QAAAuC,CAAA;qBAvEK6B,4BAA4B,EAAAtG,+DAAA,CAAAqF,sEAAA,GAAArF,+DAAA,CAAAsF,mEAAA;EAAA;EAAA,QAAAC,EAAA;UAA5Be,4BAA4B;IAAAd,SAAA;IAAAC,SAAA,WAAA4F,mCAAA1F,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;kEAiB1B5F,uEAAsB;;;;;;;;;;;;;QA1EzBC,4DADJ,aAAQ,SACA;QAAAA,oDAAA,mBAAY;QAAAA,0DAAA,EAAK;QAEjBA,4DADJ,gBAA4C,eAC9B;QAAAA,oDAAA,YAAK;QAEvBA,0DAFuB,EAAW,EACrB,EACJ;QAILA,4DAHJ,cAEC,gBAQI;QAFGA,wDAAA,mBAAAsL,8DAAA;UAAAtL,2DAAA,CAAAmB,GAAA;UAAAyE,GAAA,CAAAiF,MAAA,GAAkB,EAAE;UAAA,OAAA7K,yDAAA,CAAA4F,GAAA,CAAAhD,SAAA,GAAc,EAAE;QAAA,EAAC;QAGrC5C,4DAAA,aAAsB;QAAAA,oDAAA,eAAQ;QAAAA,0DAAA,EAAM;QACpCA,4DAAA,gBAAU;QAAAA,oDAAA,WAAG;QACjBA,0DADiB,EAAW,EACnB;QACTA,wDAAA,KAAAuL,qDAAA,2BAAiD;;QAoBrDvL,0DAAA,EAAO;QACPA,wDAAA,KAAAwL,oDAAA,gCAAAxL,oEAAA,CAAwB;;;;QA1BhBA,uDAAA,GAAqB;QAArBA,wDAAA,YAAAoC,YAAA,CAAqB;QAKMpC,uDAAA,GAAgB;QAAhBA,wDAAA,YAAAA,yDAAA,QAAA4F,GAAA,CAAA1D,KAAA,EAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9Bb;AACH;AAEe;;;;;;;;;;;IAiB9ClC,4DAAA,cAAoD;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAM;;;;;;IAZpEA,4DAAA,aAIC;IACGA,uDAAA,uBAA6C;IAEzCA,4DADJ,aAAkC,aACZ;IAAAA,oDAAA,GAAgB;IAAAA,0DAAA,EAAM;IACxCA,4DAAA,aAA0C;IACtCA,oDAAA,GACJ;IACJA,0DADI,EAAM,EACJ;IACNA,wDAAA,IAAA2L,0CAAA,iBAAoD;IAEhD3L,4DADJ,aAA+B,qBAM1B;IADGA,wDAAA,mBAAA4L,kEAAA;MAAA5L,2DAAA,CAAAmB,GAAA;MAAA,MAAAC,MAAA,GAAApB,2DAAA;MAAA,OAAAA,yDAAA,CAAAoB,MAAA,CAAAyK,MAAA,GAAkBzK,MAAA,CAAA0K,QAAA,EAAU,GAAG1K,MAAA,CAAA2K,OAAA,EAAS;IAAA,EAAC;IAE7C/L,0DAAA,EAAc;IAQVA,4DAPJ,YAMC,gBACa;IAAAA,oDAAA,aAAK;IACnBA,0DADmB,EAAW,EAC1B;IAQAA,4DAPJ,aAMC,gBACa;IAAAA,oDAAA,YAAI;IAG1BA,0DAH0B,EAAW,EACzB,EACF,EACJ;;;;IAnCaA,uDAAA,EAAa;IAAbA,wDAAA,SAAAoB,MAAA,CAAAyD,IAAA,CAAa;IAEN7E,uDAAA,GAAgB;IAAhBA,+DAAA,CAAAoB,MAAA,CAAAyD,IAAA,kBAAAzD,MAAA,CAAAyD,IAAA,CAAAnE,IAAA,CAAgB;IAE9BV,uDAAA,GACJ;IADIA,gEAAA,MAAAoB,MAAA,CAAAyD,IAAA,kBAAAzD,MAAA,CAAAyD,IAAA,CAAAhB,KAAA,MACJ;IAEE7D,uDAAA,EAAY;IAAZA,wDAAA,SAAAoB,MAAA,CAAAyK,MAAA,CAAY;IAGV7L,uDAAA,GAA0D;IAE1DA,wDAFA,eAAAoB,MAAA,CAAAyK,MAAA,sCAA0D,YAAAzK,MAAA,CAAAkC,OAAA,CACvC,YAAAlC,MAAA,CAAAyK,MAAA,oCACkC;IASrD7L,uDAAA,EAAgC;IAAhCA,wDAAA,sBAAAoB,MAAA,CAAAyD,IAAA,kBAAAzD,MAAA,CAAAyD,IAAA,CAAAhB,KAAA,GAAA7D,2DAAA,CAAgC;;IAShCA,uDAAA,GAA6B;IAA7BA,wDAAA,mBAAAoB,MAAA,CAAAyD,IAAA,kBAAAzD,MAAA,CAAAyD,IAAA,CAAAf,KAAA,GAAA9D,2DAAA,CAA6B;;;;AAS3C,MAAOiM,qBAAqB;EAqB9BhJ,YAAoBkH,MAAyB;IAAA,IAAAlG,KAAA;IAAzB,KAAAkG,MAAM,GAANA,MAAM;IAfV,KAAA4B,OAAO,gBAAA7H,wJAAA,CAAG,aAAW;MACjCD,KAAI,CAACX,OAAO,GAAG,IAAI;MACnB,MAAMW,KAAI,CAACkG,MAAM,CACZ4B,OAAO,CAAC9H,KAAI,CAACY,IAAI,CAAC,CAClBqH,KAAK,CAAEC,CAAC,IAAKV,4DAAW,CAAC,gCAAgC,CAAC,CAAC;MAChExH,KAAI,CAACX,OAAO,GAAG,KAAK;IACxB,CAAC;IACe,KAAAwI,QAAQ,gBAAA5H,wJAAA,CAAG,aAAW;MAClCD,KAAI,CAACX,OAAO,GAAG,IAAI;MACnB,MAAMW,KAAI,CAACkG,MAAM,CACZ2B,QAAQ,CAAC7H,KAAI,CAACY,IAAI,CAAC,CACnBqH,KAAK,CAAEC,CAAC,IAAKV,4DAAW,CAAC,iCAAiC,CAAC,CAAC;MACjExH,KAAI,CAACX,OAAO,GAAG,KAAK;IACxB,CAAC;EAE+C;EAAC,QAAAmB,CAAA;qBArBxCwH,qBAAqB,EAAAjM,+DAAA,CAAAqF,mEAAA;EAAA;EAAA,QAAAE,EAAA;UAArB0G,qBAAqB;IAAAzG,SAAA;IAAA4G,MAAA;MAAAvH,IAAA;MAAAgH,MAAA;IAAA;IAAAlD,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAuD,+BAAA1G,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA5C1B3F,wDAAA,IAAAsM,oCAAA,mBAIC;;;QADItM,wDAAA,SAAA4F,GAAA,CAAAf,IAAA,CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ0C;AAClB;AACV;AAEqB;;;;;;;;;;IAQ9C7E,4DAAA,aAOC;;IADGA,wDAAA,mBAAAyM,0DAAA;MAAA,MAAAC,QAAA,GAAA1M,2DAAA,CAAA0K,GAAA,EAAAC,SAAA;MAAA,MAAAC,MAAA,GAAA5K,2DAAA;MAAA,OAAAA,yDAAA,CAAS4K,MAAA,CAAA+B,QAAA,CAAAD,QAAA,CAAe;IAAA,EAAC;IAEzB1M,oDAAA,GACJ;IAAAA,0DAAA,EAAM;;;;;IAJFA,yDADA,aAAAA,yDAAA,OAAA4K,MAAA,CAAAiC,SAAA,EAAAH,QAAA,EAAAI,MAAA,MAAyD,WAAAJ,QAAA,KAAA9B,MAAA,CAAAmC,YAAA,CAClB;IAGvC/M,uDAAA,GACJ;IADIA,gEAAA,MAAA0M,QAAA,MACJ;;;;;IAkBY1M,uDAAA,wBAYiB;;;;;;;;;IALbA,wDAFA,mBAAAgN,QAAA,SAAAC,IAAA,CAAkC,SAAAC,OAAA,CACrB,WAAAlN,yDAAA,OAAA4K,MAAA,CAAAuC,MAAA,IAAAnN,yDAAA,OAAA4K,MAAA,CAAAuC,MAAA,EAAAD,OAAA,CAAArJ,KAAA,UAKZ;;;;;IAnBT7D,qEAAA,GAAwD;IACpDA,4DAAA,cAIC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAM;IACNA,wDAAA,IAAAoN,2FAAA,4BAYC;;;;;;;IAjBGpN,uDAAA,EAAgD;IAAhDA,wDAAA,oBAAAgN,QAAA,iBAAAA,QAAA,EAAgD;IAGhDhN,uDAAA,EACJ;IADIA,gEAAA,MAAAgN,QAAA,MACJ;IAItBhN,uDAAA,EACiB;IADjBA,wDAAA,YAAAA,yDAAA,OAAA4K,MAAA,CAAAiC,SAAA,EAAAG,QAAA,EACiB;;;;;IAbHhN,qEAAA,GAA2C;IACvCA,wDAAA,IAAAqN,2EAAA,0BAAwD;;;;;;;IAAzCrN,uDAAA,EAAuC;IAAvCA,wDAAA,SAAAA,yDAAA,OAAA4K,MAAA,CAAAiC,SAAA,EAAAG,QAAA,EAAAF,MAAA,CAAuC;;;;;IAF9D9M,qEAAA,GAA2D;IACvDA,wDAAA,IAAAsN,4DAAA,0BAA2C;;;;;IAAXtN,uDAAA,EAAS;IAATA,wDAAA,YAAA4K,MAAA,CAAA2C,MAAA,CAAS;;;;;IA0BjDvN,uDAAA,2BAGoB;;;;;IAKZA,4DAHJ,cAEC,QACM;IAAAA,oDAAA,gCAAyB;IAChCA,0DADgC,EAAI,EAC9B;;;AA3DlB,MAAMwN,KAAK,GAAG,6BAA6B,CAACC,KAAK,CAAC,EAAE,CAAC;AA6F/C,MAAOC,qBAAsB,SAAQlB,yDAAY;EA6BnDvJ,YAAoBkH,MAAyB;IACzC,KAAK,EAAE;IADS,KAAAA,MAAM,GAANA,MAAM;IA5BnB,KAAA4C,YAAY,GAAG,GAAG;IAET,KAAAQ,MAAM,GAAGC,KAAK;IACd,KAAAL,MAAM,GAAG,IAAI,CAAChD,MAAM,CAACwD,WAAW;IAChC,KAAArK,OAAO,GAAG,IAAI,CAAC6G,MAAM,CAAC7G,OAAO;IAE7B,KAAAsK,UAAU,GAAG,IAAI,CAACzD,MAAM,CAAC0D,cAAc,CAACpK,IAAI,CACxDhE,mDAAG,CAAEiI,IAAI,IAAKA,IAAI,CAACoF,MAAM,CAAC,CAC7B;IAEe,KAAAD,SAAS,GAAG,IAAI,CAAC1C,MAAM,CAAC0D,cAAc,CAACpK,IAAI,CACvDhE,mDAAG,CAAEiI,IAAI,IAAI;MACT,MAAMoG,QAAQ,GAAG,EAAE;MACnB,KAAK,MAAMC,IAAI,IAAIP,KAAK,EAAE;QACtBM,QAAQ,CAACC,IAAI,CAAC,GAAG,CAACrG,IAAI,IAAI,EAAE,EAAElI,MAAM,CAC/BqF,IAAI,IACDA,IAAI,CAACnE,IAAI,CAACsN,WAAW,EAAE,CAAC,CAAC,CAAC,CAACC,UAAU,CAACF,IAAI,CAAC,IAC1CA,IAAI,KAAK,GAAG,IACT,CAACP,KAAK,CAAC5F,QAAQ,CAAC/C,IAAI,CAACnE,IAAI,CAACsN,WAAW,EAAE,CAAC,CAAC,CAAC,CAAE,CACvD;MACL;MACA,IAAI,CAACE,OAAO,CAAC,QAAQ,EAAE,MAAM,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MACnD,OAAOL,QAAQ;IACnB,CAAC,CAAC,CACL;EAMD;EAEOK,QAAQA,CAAC1J,CAAC;IACb,MAAM2J,UAAU,GAAG,IAAI,CAACC,GAAG,CAACC,aAAa,CAACC,SAAS;IACnD,KAAK,MAAMC,KAAK,IAAIhB,KAAK,EAAE;MACvB,MAAMiB,EAAE,GAAmBC,QAAQ,CAACC,aAAa,CAC7C,WAAWH,KAAK,KAAK,GAAG,GAAG,GAAG,GAAGA,KAAK,EAAE,CAC3C;MACD,IAAIC,EAAE,EAAE;QACJ,IAAIA,EAAE,CAACG,SAAS,GAAGR,UAAU,GAAG,CAAC,EAAE;UAC/B;QACJ;QACA,IAAI,CAACrB,YAAY,GAAGyB,KAAK;MAC7B;IACJ;EACJ;EAEO7B,QAAQA,CAAC6B,KAAa;IACzB,MAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAa,CAAC,WAAWH,KAAK,IAAI,CAAC;IACvD,IAAIC,EAAE,EAAE;MACJA,EAAE,CAACI,cAAc,CAAC;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAQ,CAAE,CAAC;MAC1D,IAAI,CAAChC,YAAY,GAAGyB,KAAK;IAC7B;EACJ;EAAC,QAAA/J,CAAA;qBAtDQiJ,qBAAqB,EAAA1N,+DAAA,CAAAqF,mEAAA;EAAA;EAAA,QAAAE,EAAA;UAArBmI,qBAAqB;IAAAlI,SAAA;IAAAC,SAAA,WAAAuJ,4BAAArJ,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;QAxF1B3F,4DAAA,aAAyD;QACrDA,wDAAA,IAAAiP,oCAAA,iBAOC;QAGLjP,0DAAA,EAAM;QACNA,4DAAA,gBAKC;QADGA,wDAAA,oBAAAkP,qDAAAjO,MAAA;UAAAjB,2DAAA,CAAAmB,GAAA;UAAA,OAAAnB,yDAAA,CAAU4F,GAAA,CAAAuI,QAAA,CAAAlN,MAAA,CAAgB;QAAA,EAAC;QAE3BjB,wDAAA,IAAAmP,6CAAA,0BAA2D;;QA0B/DnP,0DAAA,EAAM;QACNA,wDAAA,IAAAoP,iDAAA,8BAGC;;QACDpP,wDAAA,IAAAqP,4CAAA,gCAAArP,oEAAA,CAA0B;;;;QA9CAA,uDAAA,EAAS;QAATA,wDAAA,YAAA4F,GAAA,CAAA2H,MAAA,CAAS;QAehBvN,uDAAA,GAA0B;QAAAA,wDAA1B,SAAAA,yDAAA,OAAA4F,GAAA,CAAAgI,UAAA,EAA0B,aAAA0B,cAAA,CAAgB;QA4BxDtP,uDAAA,GAAqB;QAArBA,wDAAA,SAAAA,yDAAA,OAAA4F,GAAA,CAAAtC,OAAA,EAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDsB;AACF;AAO3B;AACkC;AACA;AACQ;AAET;;;AAWtD,MAAO2G,iBAAkB,SAAQuC,yDAAY;EAiE/CvJ,YAAoBG,IAAyB;IAAA,IAAAa,KAAA;IACzC,KAAK,EAAE;IAAAA,KAAA,GAAA8L,IAAA;IADS,KAAA3M,IAAI,GAAJA,IAAI;IAhEhB,KAAA4M,OAAO,GAAqB,EAAE;IAC9B,KAAAC,OAAO,GAAqB,EAAE;IAE9B,KAAAC,QAAQ,GAAG,IAAI5Q,iDAAe,CAAe,EAAE,CAAC;IAEhD,KAAA6Q,OAAO,GAAG,IAAI7Q,iDAAe,CAAS,EAAE,CAAC;IAEzC,KAAA8Q,QAAQ,GAAG,IAAI9Q,iDAAe,CAAU,KAAK,CAAC;IAE9C,KAAA+Q,MAAM,GAAG,IAAI/Q,iDAAe,CAAc,EAAE,CAAC;IAErC,KAAAgE,OAAO,GAAG,IAAI,CAAC8M,QAAQ,CAACE,YAAY,EAAE;IAEtC,KAAAC,OAAO,GAAG,IAAI,CAACL,QAAQ,CAACI,YAAY,EAAE;IAEtC,KAAAE,KAAK,GAAG,IAAI,CAACN,QAAQ,CAACI,YAAY,EAAE;IAEpC,KAAAzC,cAAc,GAAGtO,mDAAa,CAAC,CAC3C,IAAI,CAAC4Q,OAAO,EACZ,IAAI,CAACE,MAAM,EACX,IAAI,CAACH,QAAQ,CAChB,CAAC,CAACzM,IAAI,CACHhE,mDAAG,CAAEkE,OAAO,IAAI;MACZ,MAAM,CAACnE,MAAM,EAAEgR,KAAK,EAAEC,OAAO,CAAC,GAAG9M,OAAO;MACxC,OAAO6M,KAAK,CAAChR,MAAM,CACdkR,CAAC,IACE,CAAC,CAAClR,MAAM,IACJkR,CAAC,CAAChQ,IAAI,CAACsN,WAAW,EAAE,CAACpG,QAAQ,CAACpI,MAAM,CAAC,IACrCkR,CAAC,CAAC7M,KAAK,CAACmK,WAAW,EAAE,CAACpG,QAAQ,CAACpI,MAAM,CAAC,MACzC,CAACiR,OAAO,CAACE,WAAW,IAAI,IAAI,CAACX,OAAO,CAACU,CAAC,CAAC7M,KAAK,CAAC,CAAC,CACtD;IACL,CAAC,CAAC,CACL;IAEe,KAAA8J,WAAW,GAAGpO,mDAAa,CAAC,CAAC,IAAI,CAAC2Q,QAAQ,CAAC,CAAC,CAACzM,IAAI,CAC7D9D,yDAAS;MAAA,IAAAiR,IAAA,GAAA1M,wJAAA,CAAC,WAAOO,CAAC,EAAI;QAClBR,KAAI,CAACmM,QAAQ,CAAC1L,IAAI,CAAC,IAAI,CAAC;QACxB,MAAMmM,QAAQ,SAASpB,gEAAa,CAAC;UACjCqB,YAAY,EAAElB,oDAAW,CAACC,qDAAU,CAAC1H,IAAI,CAACC,GAAG,EAAE,CAAC,CAAC;UACjD2I,UAAU,EAAEnB,oDAAW,CAACD,qDAAQ,CAACxH,IAAI,CAACC,GAAG,EAAE,CAAC,CAAC;UAC7C4I,IAAI,EAAE;SACT,CAAC,CAAC1M,SAAS,EAAE;QACd,MAAM2M,WAAW,GAAG,EAAE;QACtB,MAAM7I,GAAG,GAAG,IAAID,IAAI,EAAE,CAAC+I,OAAO,EAAE;QAChC,KAAK,MAAMC,GAAG,IAAIN,QAAQ,EAAE;UACxB,IACIf,qEAAoB,CAChB1H,GAAG,EACHA,GAAG,EACH+I,GAAG,CAACC,IAAI,EACRD,GAAG,CAACC,IAAI,GAAGD,GAAG,CAACE,QAAQ,GAAG,EAAE,GAAG,IAAI,CACtC,EACH;YACEJ,WAAW,CAACE,GAAG,CAACG,QAAQ,CAAC,GAAGH,GAAG,CAACI,UAAU;YAC1CtN,KAAI,CAACgM,OAAO,CAACkB,GAAG,CAACG,QAAQ,CAAC,GAAGH,GAAG;UACpC;QACJ;QACAlN,KAAI,CAAC+L,OAAO,GAAGiB,WAAW;QAC1BhN,KAAI,CAACmM,QAAQ,CAAC1L,IAAI,CAAC,KAAK,CAAC;QACzB,OAAOuM,WAAW;MACtB,CAAC;MAAA,iBAAAO,EAAA;QAAA,OAAAZ,IAAA,CAAAa,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC,EACFhS,4DAAW,EAAE,CAChB;IAIG,IAAI,CAACiS,SAAS,EAAE;IAChB,IAAI,CAAChE,WAAW,CAACzF,SAAS,EAAE;EAChC;EAEO0J,UAAUA,CAACrB,OAAqB;IACnC,IAAI,CAACL,QAAQ,CAACxL,IAAI,CAAC;MAAE,GAAG,IAAI,CAACwL,QAAQ,CAAC1G,QAAQ,EAAE;MAAE,GAAG+G;IAAO,CAAE,CAAC;EACnE;EAEOsB,eAAeA,CAACtK,MAAc;IACjC,IAAI,CAAC4I,OAAO,CAACzL,IAAI,CAAC6C,MAAM,CAAC;EAC7B;EAEO6C,YAAYA,CAAC0H,KAAA,GAAgB,EAAE,GAAG,IAAI;IACzC,IAAI,CAACF,UAAU,CAAC,IAAI,CAAC1B,QAAQ,CAAC1G,QAAQ,EAAE,CAAC;IACzC,IAAI,CAACuI,QAAQ,CACT,MAAM,EACN,MAAM,IAAI,CAACH,UAAU,CAAC,IAAI,CAAC1B,QAAQ,CAAC1G,QAAQ,EAAE,CAAC,EAC/CsI,KAAK,CACR;EACL;EAEOxH,WAAWA,CAAA;IACd,IAAI,CAAC0H,aAAa,CAAC,MAAM,CAAC;EAC9B;EAEajG,OAAOA,CAAClH,IAAe;IAAA,IAAAC,MAAA;IAAA,OAAAZ,wJAAA;MAChC,MAAMmE,MAAM,SAASqH,8DAAW,CAAC;QAC7BuC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAAC,IAAIhK,IAAI,EAAE,CAAC+I,OAAO,EAAE,GAAG,IAAI,CAAC;QACtDkB,WAAW,EAAEF,IAAI,CAACC,KAAK,CAACxC,qDAAQ,CAAC,IAAIxH,IAAI,EAAE,CAAC,CAAC+I,OAAO,EAAE,GAAG,IAAI,CAAC;QAC9DI,QAAQ,EAAEzM,IAAI,CAAChB,KAAK;QACpByE,KAAK,EAAE,mBAAmB;QAC1B9D,WAAW,EACPM,MAAI,CAAC1B,IAAI,CAACmB,QAAQ,CAAC9D,YAAY,IAAIqE,MAAI,CAAC1B,IAAI,CAACmB,QAAQ,CAAC7D,IAAI;QAC9D2R,KAAK,EAAE,CAACvN,MAAI,CAAC1B,IAAI,CAACmB,QAAQ,CAACjE,EAAE,CAAC;QAC9BgS,YAAY,EAAE;OACV,CAAC,CAAChO,SAAS,EAAE;MACrB,MAAMkL,iEAAc,CAACnH,MAAM,CAAC/H,EAAE,EAAE,IAAI,CAAC,CAACgE,SAAS,EAAE;MACjDQ,MAAI,CAACmL,OAAO,CAACpL,IAAI,CAAChB,KAAK,CAAC,GAAGwE,MAAM;MACjCvD,MAAI,CAACkL,OAAO,CAACnL,IAAI,CAAChB,KAAK,CAAC,GAAG,IAAI;IAAC;EACpC;EAEaiI,QAAQA,CAACjH,IAAe;IAAA,IAAA0N,MAAA;IAAA,OAAArO,wJAAA;MACjC,MAAMsO,KAAK,GAAGD,MAAI,CAACtC,OAAO,CAACpL,IAAI,CAAChB,KAAK,CAAC;MACtC,IAAI2O,KAAK,EAAE;QACP,MAAMnK,MAAM,SAASqH,8DAAW,CAAC;UAC7B,GAAG8C,KAAK,CAACC,MAAM,EAAE;UACjBL,WAAW,EAAEF,IAAI,CAACC,KAAK,CAAC,IAAIhK,IAAI,EAAE,CAAC+I,OAAO,EAAE,GAAG,IAAI;SAC/C,CAAC,CAAC5M,SAAS,EAAE;QACrB,MAAMkL,iEAAc,CAACnH,MAAM,CAAC/H,EAAE,EAAE,KAAK,CAAC,CAACgE,SAAS,EAAE;QAClDiO,MAAI,CAACtC,OAAO,CAACpL,IAAI,CAAChB,KAAK,CAAC,GAAGwE,MAAM;QACjCkK,MAAI,CAACvC,OAAO,CAACnL,IAAI,CAAChB,KAAK,CAAC,GAAG,KAAK;MACpC;IAAC;EACL;EAEc8N,SAASA,CAAA;IAAA,IAAAe,MAAA;IAAA,OAAAxO,wJAAA;MACnB,MAAM2I,SAAS,SAAS0C,2DAAW,CAAC,EAAE,CAAC,CAACjL,SAAS,EAAE;MACnDuI,SAAS,CAAC7H,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACvE,IAAI,CAACyE,aAAa,CAACD,CAAC,CAACxE,IAAI,CAAC,CAAC;MACtDgS,MAAI,CAACrC,MAAM,CAAC3L,IAAI,CAACmI,SAAS,CAAC;IAAC;EAChC;EAAC,QAAApI,CAAA;qBA7HQwF,iBAAiB,EAAAjK,uDAAA,CAAAqF,sEAAA;EAAA;EAAA,QAAAE,EAAA;WAAjB0E,iBAAiB;IAAA2I,OAAA,EAAjB3I,iBAAiB,CAAA4I,IAAA;IAAAC,UAAA,EAFd;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBmC;AAClB;AAEQ;AACa;AACF;;;;;;;;;;;;;;IAetC9S,4DAAA,oBAGC;IACGA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAHTA,wDAAA,UAAAkT,QAAA,CAAA5S,EAAA,CAAkB;IAElBN,uDAAA,EACJ;IADIA,gEAAA,MAAAkT,QAAA,CAAAzS,YAAA,IAAAyS,QAAA,CAAAxS,IAAA,MACJ;;;AAyBd,MAAOyS,oBAAqB,SAAQ3G,yDAAY;EAsBlDvJ,YACYkH,MAAyB,EACzB/G,IAAyB,EACzBgQ,MAAsB,EACtBC,OAAe;IAEvB,KAAK,EAAE;IALC,KAAAlJ,MAAM,GAANA,MAAM;IACN,KAAA/G,IAAI,GAAJA,IAAI;IACJ,KAAAgQ,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;IAzBnB;IACO,KAAAhB,KAAK,GAAa,EAAE;IAC3B;IACgB,KAAAtQ,MAAM,GAAG,IAAI,CAACqB,IAAI,CAACY,aAAa;IAEhC,KAAAuM,OAAO,GAAG,IAAI,CAACpG,MAAM,CAACoG,OAAO;IAC7C;IACgB,KAAA+C,OAAO,GAAIlC,IAAI,IAAK,IAAI,CAACjH,MAAM,CAACyH,UAAU,CAAC;MAAER;IAAI,CAAE,CAAC;IACpE;IACgB,KAAAQ,UAAU,GAAIrB,OAAO,IAAK,IAAI,CAACpG,MAAM,CAACyH,UAAU,CAACrB,OAAO,CAAC;IACzE;IACgB,KAAAgD,SAAS,GAAIC,GAAG,IAAK,IAAI,CAACrJ,MAAM,CAAC0H,eAAe,CAAC2B,GAAG,CAAC;IACrE;IACgB,KAAAC,WAAW,GAAIpB,KAAK,IAAI;MACpC,IAAI,CAACgB,OAAO,CAACK,QAAQ,CAAC,EAAE,EAAE;QACtBC,UAAU,EAAE,IAAI,CAACP,MAAM;QACvBQ,WAAW,EAAE;UAAEC,QAAQ,EAAExB,KAAK,CAACyB,IAAI,CAAC,GAAG;QAAC;OAC3C,CAAC;MACF,IAAI,CAAC3J,MAAM,CAACyH,UAAU,CAAC;QAAES;MAAK,CAAE,CAAC;IACrC,CAAC;EASD;EAEaxK,QAAQA,CAAA;IAAA,IAAA5D,KAAA;IAAA,OAAAC,wJAAA;MACjB,MAAMD,KAAI,CAACb,IAAI,CAAC2Q,WAAW,CAACtQ,IAAI,CAACwP,qDAAK,CAAExO,CAAC,IAAKA,CAAC,CAAC,CAAC,CAACH,SAAS,EAAE;MAC7DL,KAAI,CAAC+P,YAAY,CACb,aAAa,EACb/P,KAAI,CAACmP,MAAM,CAACa,aAAa,CAAC/L,SAAS,CAAEgM,MAAM,IAAI;QAC3C,IAAIA,MAAM,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE;UACxB,MAAM9B,KAAK,GAAG6B,MAAM,CAACE,GAAG,CAAC,UAAU,CAAC,CAAC3G,KAAK,CAAC,GAAG,CAAC;UAC/C,IAAI4E,KAAK,CAACvF,MAAM,EAAE;YACd,MAAMuH,KAAK,GAAGpQ,KAAI,CAACb,IAAI,CAACkR,WAAW,CAACjC,KAAK,CAAC;YAC1C,IAAI,CAACgC,KAAK,EAAE;cACR;YACJ;YACApQ,KAAI,CAACb,IAAI,CAACmB,QAAQ,GAAGN,KAAI,CAACb,IAAI,CAACmR,SAAS,CAACC,IAAI,CACxC9Q,GAAG,IAAKA,GAAG,CAACpD,EAAE,KAAK+T,KAAK,CAACI,SAAS,CACtC;YACDxQ,KAAI,CAACoO,KAAK,GAAGA,KAAK;UACtB;QACJ;MACJ,CAAC,CAAC,CACL;MACDpO,KAAI,CAAC+P,YAAY,CACb,QAAQ,EACR/P,KAAI,CAACb,IAAI,CAACY,aAAa,CAACkE,SAAS,CAAEnG,MAAM,IAAI;QACzCkC,KAAI,CAACoO,KAAK,GAAGpO,KAAI,CAACoO,KAAK,CAAC7S,MAAM,CAAEuE,IAAI,IAChChC,MAAM,CAACyS,IAAI,CAAEE,GAAG,IAAKA,GAAG,CAACpU,EAAE,KAAKyD,IAAI,CAAC,CACxC;QACD,IAAI,CAACE,KAAI,CAACoO,KAAK,CAACvF,MAAM,IAAI/K,MAAM,CAAC+K,MAAM,EAAE;UACrC7I,KAAI,CAACoO,KAAK,CAACsC,IAAI,CAAC5S,MAAM,CAAC,CAAC,CAAC,CAACzB,EAAE,CAAC;QACjC;QACA2D,KAAI,CAACwP,WAAW,CAACxP,KAAI,CAACoO,KAAK,CAAC;MAChC,CAAC,CAAC,CACL;MACDpO,KAAI,CAACsP,SAAS,CAAC,EAAE,CAAC;IAAC;EACvB;EAAC,QAAA9O,CAAA;qBAhEQ0O,oBAAoB,EAAAnT,+DAAA,CAAAqF,mEAAA,GAAArF,+DAAA,CAAAsF,sEAAA,GAAAtF,+DAAA,CAAA4U,2DAAA,GAAA5U,+DAAA,CAAA4U,mDAAA;EAAA;EAAA,QAAArP,EAAA;UAApB4N,oBAAoB;IAAA3N,SAAA;IAAAqP,QAAA,GAAA7U,wEAAA;IAAA2I,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAiM,8BAAApP,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QApCjB3F,4DAJR,aAEC,wBACwC,oBAMhC;QAHGA,8DAAA,2BAAAgV,kEAAA/T,MAAA;UAAAjB,gEAAA,CAAA4F,GAAA,CAAAyM,KAAA,EAAApR,MAAA,MAAA2E,GAAA,CAAAyM,KAAA,GAAApR,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAmB;QACnBjB,wDAAA,2BAAAgV,kEAAA/T,MAAA;UAAA,OAAiB2E,GAAA,CAAA6N,WAAA,CAAAxS,MAAA,CAAmB;QAAA,EAAC;QAGrCjB,wDAAA,IAAAiV,0CAAA,wBAGC;;QAITjV,0DADI,EAAa,EACA;QACjBA,4DAAA,0BAIK;;QADDA,wDAAA,2BAAAkV,wEAAAjU,MAAA;UAAA,OAAiB2E,GAAA,CAAAgM,UAAA,CAAW;YAAAjB,WAAA,EAAA1P;UAAA,CAAuB,CAAC;QAAA,EAAC;QACpDjB,4DAAA,aAAqB;QAAAA,oDAAA,kBAAW;QAAMA,0DAAN,EAAM,EAC1C;QACDA,uDAAA,aAA8B;QAC9BA,4DAAA,oBAGC;QADGA,wDAAA,yBAAAmV,gEAAAlU,MAAA;UAAA,OAAe2E,GAAA,CAAA2N,SAAA,CAAAtS,MAAA,CAAiB;QAAA,EAAC;QAEzCjB,0DADK,EAAY,EACX;;;;QAvBMA,uDAAA,GAAmB;QAAnBA,8DAAA,YAAA4F,GAAA,CAAAyM,KAAA,CAAmB;QAKGrS,uDAAA,EAAiB;QAAjBA,wDAAA,YAAAA,yDAAA,OAAA4F,GAAA,CAAA7D,MAAA,EAAiB;QAS3C/B,uDAAA,GAA0C;QAA1CA,wDAAA,aAAAoV,OAAA,GAAApV,yDAAA,OAAA4F,GAAA,CAAA2K,OAAA,oBAAA6E,OAAA,CAAAzE,WAAA,CAA0C;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;;;;;;;;;;;IAS9C3Q,uDAAA,0BAIoB;;;AAc1B,MAAOqV,cAAc;EAGvBpS,YAAoBkH,MAAyB;IAAzB,KAAAA,MAAM,GAANA,MAAM;IAFV,KAAA7G,OAAO,GAAG,IAAI,CAAC6G,MAAM,CAAC7G,OAAO;EAEG;EAEzCuE,QAAQA,CAAA;IACX,IAAI,CAACsC,MAAM,CAACC,YAAY,EAAE;EAC9B;EAEOC,WAAWA,CAAA;IACd,IAAI,CAACF,MAAM,CAACG,WAAW,EAAE;EAC7B;EAAC,QAAA7F,CAAA;qBAXQ4Q,cAAc,EAAArV,+DAAA,CAAAqF,mEAAA;EAAA;EAAA,QAAAE,EAAA;UAAd8P,cAAc;IAAA7P,SAAA;IAAAkD,KAAA,EAAA7G,GAAA;IAAA8G,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAwM,wBAAA3P,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAtBnB3F,uDAAA,cAAmB;QACnBA,4DAAA,cAA4D;QAExDA,uDADA,sBAA4C,wBACe;QAC3DA,wDAAA,IAAAuV,0CAAA,8BAIC;;QACLvV,0DAAA,EAAO;;;QAHEA,uDAAA,GAAqB;QAArBA,wDAAA,SAAAA,yDAAA,OAAA4F,GAAA,CAAAtC,OAAA,EAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbS;AACA;AACF;AACS;AAEH;AACa;AACE;AACA;AACvB;AACe;AACkB;AACS;AACJ;;;AAEjF,MAAMuS,MAAM,GAAY,CACpB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEV,4DAAcA;AAAA,CAAE,EACvC;EAAES,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAE7L,mEAAiBA;AAAA,CAAE,EAC7C;EAAE4L,IAAI,EAAE,oBAAoB;EAAEC,SAAS,EAAE3O,qFAA0BA;AAAA,CAAE,CACxE;AAEM,MAAM4O,UAAU,GAAgB,CACnC9L,mEAAiB,EACjBmL,4DAAc,EACdlC,yEAAoB,EACpBzF,2EAAqB,EACrBzB,2EAAqB,EACrB7E,qFAA0B,EAC1BpE,8FAA8B,EAC9BsD,0FAA4B,CAC/B;AAWK,MAAO2P,WAAW;EAAA,QAAAxR,CAAA;qBAAXwR,WAAW;EAAA;EAAA,QAAA1Q,EAAA;UAAX0Q;EAAW;EAAA,QAAAC,EAAA;cANhBV,0DAAY,EACZE,wDAAW,EACXE,mDAAQ,EACRD,0DAAY,CAACQ,QAAQ,CAACN,MAAM,CAAC;EAAA;;;sHAGxBI,WAAW;IAAAG,YAAA,GAnBpBlM,mEAAiB,EACjBmL,4DAAc,EACdlC,yEAAoB,EACpBzF,2EAAqB,EACrBzB,2EAAqB,EACrB7E,qFAA0B,EAC1BpE,8FAA8B,EAC9BsD,0FAA4B;IAAA+P,OAAA,GAMxBb,0DAAY,EACZE,wDAAW,EACXE,mDAAQ,EAAAvQ,0DAAA;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCmB;AACY;AACiC;AACtC;AACL;AACJ;AACI;AACF;AACH;;;;;;;;;;;;;;;;ACPO;AAEjC,MAAOiR,WAAW;EAsBpBrT,YAAYC,KAAA,GAAiB,EAAE;IAC3B,IAAI,CAAC8N,IAAI,GAAG9N,KAAK,CAAC8N,IAAI,IAAI9N,KAAK,CAACqT,QAAQ,IAAI,OAAO;IACnD,IAAI,CAACC,QAAQ,GAAGtT,KAAK,CAACsT,QAAQ,IAC1BtT,KAAK,CAACuT,MAAM,IAAIvT,KAAK,CAACoO,QAAQ,IAAI;MAC9BoF,CAAC,EAAExT,KAAK,CAACwT,CAAC,GAAGxT,KAAK,CAACyT,SAAS,IAAI,CAAC;MACjCC,CAAC,EAAE1T,KAAK,CAAC0T,CAAC,GAAG1T,KAAK,CAAC2T,UAAU,IAAI;KACpC;IACL,IAAI,CAACC,QAAQ,GAAG5T,KAAK,CAAC4T,QAAQ,IAAI,CAAC;IACnC,IAAI,CAACC,SAAS,GAAG7T,KAAK,CAAC6T,SAAS,IAAInH,oDAAW,CAAC,IAAIzH,IAAI,EAAE,CAAC;IAC3D,IAAI,CAACkM,KAAK,GAAGnR,KAAK,CAACmR,KAAK;IACxB,IAAI,CAAC9P,QAAQ,GAAGrB,KAAK,CAACqB,QAAQ;IAC9B,IAAI,CAACyS,WAAW,GAAG,CAAC,CAAC9T,KAAK,CAAC8T,WAAW;IACtC,IAAI,CAACC,gBAAgB,GAAG/T,KAAK,CAAC+T,gBAAgB,IAAI,UAAU;EAChE","sources":["./apps/concierge/src/app/staff/emergency-contact-modal.component.ts","./apps/concierge/src/app/staff/emergency-contacts.component.ts","./apps/concierge/src/app/staff/new-staff.component.ts","./apps/concierge/src/app/staff/role-management-modal.component.ts","./apps/concierge/src/app/staff/staff-details.component.ts","./apps/concierge/src/app/staff/staff-listing.component.ts","./apps/concierge/src/app/staff/staff-state.service.ts","./apps/concierge/src/app/staff/staff-topbar.component.ts","./apps/concierge/src/app/staff/staff.component.ts","./apps/concierge/src/app/staff/staff.module.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { EmergencyContact } from './emergency-contacts.component';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\nimport { notifySuccess, randomString } from '@placeos/common';\nimport { CustomTooltipComponent } from '@placeos/components';\n\n@Component({\n    selector: 'emergency-contact-modal',\n    template: `\n        <header>\n            <h2>{{ contact ? 'Edit' : 'New' }} Emergency Contact</h2>\n            <div class=\"flex-1 w-0\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4 w-[36rem]\" *ngIf=\"!loading; else load_state\">\n            <form [formGroup]=\"form\" class=\"space-y-4\">\n                <a-user-search-field\n                    ngModel\n                    (ngModelChange)=\"setUser($event)\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                ></a-user-search-field>\n                <div class=\"flex flex-col\">\n                    <label for=\"name\">Name:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            formControlName=\"name\"\n                            placeholder=\"Full name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex flex-col flex-1\">\n                        <label for=\"email\">Email:</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                formControlName=\"email\"\n                                type=\"email\"\n                                placeholder=\"Email address\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1\">\n                        <label for=\"email\">Phone:</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                formControlName=\"phone\"\n                                type=\"tel\"\n                                placeholder=\"Emergency contact number\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"name\">Level:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"zone\"\n                            placeholder=\"All Levels\"\n                        >\n                            <mat-option value=\"\">All Levels</mat-option>\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"email\">Roles:</label>\n                    <div class=\"flex items-center space-x-2\">\n                        <mat-form-field\n                            class=\"no-subscript flex-1\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                multiple\n                                formControlName=\"roles\"\n                                placeholder=\"Select roles\"\n                            >\n                                <ng-container\n                                    *ngFor=\"\n                                        let role of (data | async)?.roles || []\n                                    \"\n                                >\n                                    <mat-option *ngIf=\"role\" [value]=\"role\">\n                                        {{ role }}\n                                    </mat-option>\n                                </ng-container>\n                            </mat-select>\n                        </mat-form-field>\n                        <button\n                            btn\n                            matRipple\n                            class=\"space-x-2\"\n                            customTooltip\n                            [content]=\"role_form\"\n                        >\n                            <app-icon>add</app-icon>\n                            <div class=\"pr-2\">Add New Role</div>\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </main>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex justify-center items-center p-2 border-t border-base-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                loading\n                class=\"h-64 flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Saving contact details...</p>\n            </main>\n        </ng-template>\n        <ng-template #role_form>\n            <div class=\"bg-base-100 p-4 rounded \">\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"role_name\"\n                        placeholder=\"Role name\"\n                    />\n                </mat-form-field>\n                <button btn matRipple class=\"w-full\" (click)=\"addRole()\">\n                    Save Role\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class EmergencyContactModalComponent {\n    private _changes = new BehaviorSubject(0);\n\n    public loading = false;\n    public role_name: string;\n    public readonly contact?: EmergencyContact = this._data;\n    public readonly data = combineLatest([\n        this._org.active_building,\n        this._changes,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any) || { roles: [], contacts: [] }),\n        shareReplay(1)\n    );\n    public readonly form = new FormGroup({\n        id: new FormControl(this._data?.id || `ecntct-${randomString(8)}`),\n        name: new FormControl(this._data?.name || ''),\n        email: new FormControl(this._data?.email || ''),\n        phone: new FormControl(this._data?.phone || ''),\n        zone: new FormControl(this._data?.zone || ''),\n        roles: new FormControl(this._data?.roles || []),\n    });\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: EmergencyContact | undefined,\n        private _dialog_ref: MatDialogRef<EmergencyContactModalComponent>,\n        private _org: OrganisationService\n    ) {}\n\n    public async addRole() {\n        if (!this.role_name) return;\n        this._tooltip.close();\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data: any = await this.data.pipe(take(1)).toPromise();\n        await updateMetadata(this._org.building.id, {\n            name: 'emergency_contacts',\n            description: 'Emergency Contacts',\n            details: {\n                roles: [...(data.roles || []), this.role_name].filter(\n                    (_) => !!_\n                ),\n                contacts: data.contacts,\n            },\n        }).toPromise();\n        this._changes.next(0);\n        this.form.patchValue({\n            roles: [...(this.form.value.roles || []), this.role_name],\n        });\n        this.role_name = '';\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n    }\n\n    public setUser(user: any) {\n        this.form.patchValue({\n            name: user?.name,\n            email: user?.email,\n            phone: user?.phone,\n        });\n    }\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data: any = await this.data.pipe(take(1)).toPromise();\n        const contacts = data?.contacts || [];\n        const new_contacts = [\n            ...contacts.filter((_) => _.id !== this.contact?.id),\n            this.form.value,\n        ].sort((a, b) => a.name.localeCompare(b.name));\n        await updateMetadata(this._org.building.id, {\n            name: 'emergency_contacts',\n            description: 'Emergency Contacts',\n            details: { roles: data.roles || [], contacts: new_contacts },\n        }).toPromise();\n        this._dialog_ref.disableClose = true;\n        notifySuccess('Successfully updated emergency contacts.');\n        this.loading = false;\n        this._dialog_ref.close();\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\nimport { EmergencyContactModalComponent } from './emergency-contact-modal.component';\nimport { notify, notifySuccess, openConfirmModal } from '@placeos/common';\nimport { RoleManagementModalComponent } from './role-management-modal.component';\n\nexport interface EmergencyContact {\n    id: string;\n    email: string;\n    name: string;\n    phone: string;\n    roles: string[];\n    zone: string;\n}\n\nexport interface EmergencyContactData {\n    contacts: EmergencyContact[];\n    roles: string[];\n}\n\n@Component({\n    selector: '[app-emergency-contacts]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <section topbar class=\"px-8 py-4 flex flex-col\">\n                    <div class=\"flex items-center justify-between\">\n                        <h2 class=\"text-2xl font-medium\">Emergency Contacts</h2>\n                        <div class=\"flex items-center space-x-2\">\n                            <button\n                                icon\n                                matRipple\n                                class=\"bg-secondary text-secondary-content rounded\"\n                                matTooltip=\"Manage Roles\"\n                                (click)=\"manageRoles()\"\n                            >\n                                <app-icon>list_alt</app-icon>\n                            </button>\n                            <button\n                                btn\n                                matRipple\n                                class=\"space-x-2\"\n                                (click)=\"editContact()\"\n                            >\n                                <app-icon class=\"text-2xl\">add</app-icon>\n                                <div class=\"pr-2\">Add Contact</div>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"flex items-center justify-between py-2 mt-2\">\n                        <mat-form-field\n                            class=\"no-subscript\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                [ngModel]=\"role_filter.getValue()\"\n                                (ngModelChange)=\"role_filter.next($event)\"\n                                placeholder=\"All Roles\"\n                            >\n                                <mat-option value=\"\">All Roles</mat-option>\n                                <mat-option\n                                    *ngFor=\"let role of (roles | async) || []\"\n                                    [value]=\"role\"\n                                >\n                                    {{ role }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <div class=\"flex items-center space-x-2\">\n                            <mat-form-field\n                                class=\"no-subscript\"\n                                appearance=\"outline\"\n                            >\n                                <app-icon class=\"text-2xl\" matPrefix>\n                                    search\n                                </app-icon>\n                                <input\n                                    matInput\n                                    [(ngModel)]=\"search\"\n                                    placeholder=\"Filter contacts...\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </section>\n                <section class=\"w-full h-1/2 flex-1 overflow-auto px-8\">\n                    <custom-table\n                        class=\"min-w-[40rem] block\"\n                        [dataSource]=\"filtered_contacts\"\n                        [filter]=\"search\"\n                        [columns]=\"[\n                            'email',\n                            'name',\n                            'roles',\n                            'zone',\n                            'actions'\n                        ]\"\n                        [display_column]=\"[\n                            'Email',\n                            'Name',\n                            'Roles',\n                            'Level',\n                            ' '\n                        ]\"\n                        [column_size]=\"['flex', '12r', '16r', '7r']\"\n                        [template]=\"{\n                            roles: roles_template,\n                            zone: zone_template,\n                            actions: actions_template\n                        }\"\n                        [empty]=\"\n                            search\n                                ? 'No matching contacts'\n                                : 'No emergency contacts for this building'\n                        \"\n                    ></custom-table>\n                    <ng-template #roles_template let-data=\"data\">\n                        <span\n                            class=\"m-1 py-1 px-2 rounded-2xl text-xs font-mono bg-info text-info-content\"\n                            *ngFor=\"let role of data\"\n                        >\n                            {{ role }}\n                        </span>\n                    </ng-template>\n                    <ng-template #zone_template let-data=\"data\">\n                        {{ data ? (data | level)?.display_name : 'All' }}\n                    </ng-template>\n                    <ng-template #actions_template let-row=\"row\">\n                        <div\n                            class=\"flex items-center justify-end w-full space-x-2\"\n                        >\n                            <button icon matRipple (click)=\"editContact(row)\">\n                                <app-icon>edit</app-icon>\n                            </button>\n                            <button icon matRipple (click)=\"removeContact(row)\">\n                                <app-icon>delete</app-icon>\n                            </button>\n                        </div>\n                    </ng-template>\n                </section>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class EmergencyContactsComponent {\n    private _change = new BehaviorSubject<number>(0);\n\n    public search = '';\n    public readonly role_filter = new BehaviorSubject<string>('');\n    public readonly data = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any) || { roles: [], contacts: [] }),\n        shareReplay(1)\n    );\n    public readonly roles = this.data.pipe(map((_) => _?.roles || []));\n    public readonly contacts = this.data.pipe(map((_) => _?.contacts || []));\n    public readonly filtered_contacts = combineLatest([\n        this.contacts,\n        this.role_filter,\n    ]).pipe(\n        map(([list, role]) =>\n            list.filter((_) => !role || _.roles.includes(role))\n        )\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit() {}\n\n    public manageRoles() {\n        const ref = this._dialog.open(RoleManagementModalComponent, {});\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public editContact(contact?: EmergencyContact) {\n        const ref = this._dialog.open(EmergencyContactModalComponent, {\n            data: contact,\n        });\n        ref.afterClosed().subscribe(() => this._change.next(Date.now()));\n    }\n\n    public async removeContact(contact: EmergencyContact) {\n        const result = await openConfirmModal(\n            {\n                title: 'Remove Emergency Contact',\n                content: `Are you sure you want to remove ${contact.name} from the emergency contacts?`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (result.reason !== 'done') return;\n        result.loading('Removing contact...');\n        const data: any = await this.data.pipe(take(1)).toPromise();\n        const new_contacts = (data?.contacts || []).filter(\n            (_) => _.id !== contact.id\n        );\n        await updateMetadata(this._org.building.id, {\n            name: 'emergency_contacts',\n            description: 'Emergency Contacts',\n            details: { roles: data.roles, contacts: new_contacts },\n        }).toPromise();\n        result.close();\n        this._change.next(Date.now());\n        notifySuccess('Successfully removed emergency contact.');\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: '[app-new-staff]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <staff-topbar class=\"w-full\"></staff-topbar>\n                <staff-listings class=\"w-full flex-1 h-0\"></staff-listings>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewStaffComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: StaffStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { CustomTooltipComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'role-management-modal',\n    template: `\n        <header>\n            <h2>Manage Roles</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"overflow-y-auto min-w-[20rem] divide-y divide-base-200 max-h-[65vh]\"\n        >\n            <button\n                btn\n                matRipple\n                class=\"flex items-center justify-center space-x-2 w-[calc(100%-1rem)] m-2\"\n                customTooltip\n                (click)=\"active = ''; role_name = ''\"\n                [content]=\"role_form\"\n            >\n                <div class=\"truncate\">New Role</div>\n                <app-icon>add</app-icon>\n            </button>\n            <ng-container *ngFor=\"let role of roles | async\">\n                <div\n                    class=\"flex items-center space-x-2 hover:bg-base-200:bg-base-300 p-2\"\n                >\n                    <div class=\"flex-1 truncate\">{{ role }}</div>\n                    <button\n                        btn\n                        icon\n                        matRipple\n                        (click)=\"active = role; role_name = role\"\n                        customTooltip\n                        [content]=\"role_form\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button btn icon matRipple (click)=\"removeRole(role)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </ng-container>\n        </main>\n        <ng-template #role_form>\n            <div class=\"bg-base-100 p-4 rounded \">\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"role_name\"\n                        placeholder=\"Role name\"\n                    />\n                </mat-form-field>\n                <button btn matRipple class=\"w-full\" (click)=\"updateRoles()\">\n                    Save Role\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class RoleManagementModalComponent {\n    private _changes = new BehaviorSubject(0);\n\n    public active: string;\n    public role_name: string;\n    public loading = false;\n    public readonly data = combineLatest([\n        this._org.active_building,\n        this._changes,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) => showMetadata(bld.id, 'emergency_contacts')),\n        map(({ details }) => (details as any) || { roles: [], contacts: [] }),\n        shareReplay(1)\n    );\n    public readonly roles = this.data.pipe(map((_) => _.roles));\n\n    @ViewChild(CustomTooltipComponent) private _tooltip: CustomTooltipComponent;\n\n    public async removeRole(role: string) {\n        if (!role) return;\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data: any = await this.data.pipe(take(1)).toPromise();\n        await updateMetadata(this._org.building.id, {\n            name: 'emergency_contacts',\n            description: 'Emergency Contacts',\n            details: {\n                roles: [...data.roles.filter((_) => _ !== role)]\n                    .filter((_) => !!_)\n                    .sort((a, b) => a.localeCompare(b)),\n                contacts: data.contacts.map((_) => ({\n                    ..._,\n                    roles: _.roles.filter((r) => r !== role),\n                })),\n            },\n        }).toPromise();\n        this._changes.next(0);\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n    }\n\n    public async updateRoles() {\n        if (!this.role_name) return;\n        this.loading = true;\n        this._tooltip.close();\n        this._dialog_ref.disableClose = true;\n        const data: any = await this.data.pipe(take(1)).toPromise();\n        await updateMetadata(this._org.building.id, {\n            name: 'emergency_contacts',\n            description: 'Emergency Contacts',\n            details: {\n                roles: [\n                    ...data.roles.filter((_) => _ !== this.active),\n                    this.role_name,\n                ]\n                    .filter((_) => !!_)\n                    .sort((a, b) => a.localeCompare(b)),\n                contacts: data.contacts,\n            },\n        }).toPromise();\n        this._changes.next(0);\n        this.role_name = '';\n        this.active = '';\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog_ref: MatDialogRef<RoleManagementModalComponent>\n    ) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { notifyError } from '@placeos/common';\nimport { StaffUser } from '@placeos/users';\n\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: 'staff-details',\n    template: `\n        <div\n            class=\"w-full flex items-center px-4 py-2 bg-base-100 border-b border-base-200 hover:opacity-80\"\n            details\n            *ngIf=\"user\"\n        >\n            <a-user-avatar [user]=\"user\"></a-user-avatar>\n            <div class=\"flex flex-col flex-1\">\n                <div class=\"px-2\">{{ user?.name }}</div>\n                <div class=\"px-2 text-xs text-opacity-50\">\n                    {{ user?.email }}\n                </div>\n            </div>\n            <div *ngIf=\"onsite\" class=\"text-xs opacity-50 px-4\">Onsite</div>\n            <div class=\"flex items-center\">\n                <action-icon\n                    [matTooltip]=\"onsite ? 'Checkout Staff' : 'Checkin Staff'\"\n                    [loading]=\"loading\"\n                    [content]=\"onsite ? 'event_busy' : 'event_available'\"\n                    (click)=\"onsite ? checkout() : checkin()\"\n                >\n                </action-icon>\n                <a\n                    icon\n                    matRipple\n                    matTooltip=\"Email Staff\"\n                    [attr.disabled]=\"!user?.email\"\n                    [href]=\"'mailto:' + user?.email\"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n                <a\n                    icon\n                    matRipple\n                    matTooltip=\"Phone Staff\"\n                    [attr.disabled]=\"!user?.phone\"\n                    [href]=\"'tel:' + user?.phone\"\n                >\n                    <app-icon>call</app-icon>\n                </a>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class StaffDetailsComponent {\n    @Input() public user: StaffUser;\n    @Input() public onsite: boolean;\n\n    public loading: boolean;\n\n    public readonly checkin = async () => {\n        this.loading = true;\n        await this._state\n            .checkin(this.user)\n            .catch((e) => notifyError('Error checking in Staff member'));\n        this.loading = false;\n    };\n    public readonly checkout = async () => {\n        this.loading = true;\n        await this._state\n            .checkout(this.user)\n            .catch((e) => notifyError('Error checking out Staff member'));\n        this.loading = false;\n    };\n\n    constructor(private _state: StaffStateService) {}\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { AsyncHandler } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { StaffStateService } from './staff-state.service';\n\nconst CHARS = '#abcdefghijklmnopqrstuvwxyz'.split('');\n\n@Component({\n    selector: 'staff-listings',\n    template: `\n        <div class=\"w-full p-2 flex items-center justify-center\">\n            <div\n                letter\n                *ngFor=\"let group of groups\"\n                class=\"capitalize h-6 w-6 flex items-center justify-center text-xs cursor-pointer\"\n                [class.disabled]=\"(user_list | async)[group].length <= 0\"\n                [class.active]=\"group === active_group\"\n                (click)=\"scrollTo(group)\"\n            >\n                {{ group }}\n            </div>\n        </div>\n        <div\n            class=\"flex-1 overflow-auto w-full relative bg-base-200\"\n            style=\"height: 50%\"\n            #container\n            (scroll)=\"onScroll($event)\"\n        >\n            <ng-container *ngIf=\"user_count | async; else empty_state\">\n                <ng-container *ngFor=\"let group of groups\">\n                    <ng-container *ngIf=\"(user_list | async)[group].length\">\n                        <div\n                            group\n                            [id]=\"'letter-' + (group === '#' ? '0' : group)\"\n                            class=\"capitalize bg-base-200 border-b text-sm font-medium sticky top-0 z-10\"\n                        >\n                            {{ group }}\n                        </div>\n                        <staff-details\n                            *ngFor=\"\n                                let user of (user_list | async)[group];\n                                let i = index\n                            \"\n                            [id]=\"'letter-' + group + '-' + i\"\n                            [user]=\"user\"\n                            [onsite]=\"\n                                (events | async)\n                                    ? (events | async)[user.email]\n                                    : false\n                            \"\n                        ></staff-details>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n        </div>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n        <ng-template #empty_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center\"\n            >\n                <p>No matching staff members</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 50%;\n            }\n\n            [letter] {\n                transition: font-size 200ms, color 200ms;\n            }\n\n            [group] {\n                border-color: #ccc;\n                padding: 0.5rem 1.65rem;\n            }\n\n            .disabled {\n                opacity: 0.2;\n                pointer-events: none;\n            }\n\n            .active {\n                font-size: 1.25rem;\n                opacity: 1;\n                color: #d81b60;\n            }\n        `,\n    ],\n})\nexport class StaffListingComponent extends AsyncHandler {\n    public active_group = '#';\n\n    public readonly groups = CHARS;\n    public readonly events = this._state.user_events;\n    public readonly loading = this._state.loading;\n\n    public readonly user_count = this._state.filtered_users.pipe(\n        map((list) => list.length)\n    );\n\n    public readonly user_list = this._state.filtered_users.pipe(\n        map((list) => {\n            const user_map = {};\n            for (const char of CHARS) {\n                user_map[char] = (list || []).filter(\n                    (user) =>\n                        user.name.toLowerCase()[0].startsWith(char) ||\n                        (char === '#' &&\n                            !CHARS.includes(user.name.toLowerCase()[0]))\n                );\n            }\n            this.timeout('scroll', () => this.onScroll({}), 30);\n            return user_map;\n        })\n    );\n\n    @ViewChild('container') private _el: ElementRef<HTMLDivElement>;\n\n    constructor(private _state: StaffStateService) {\n        super();\n    }\n\n    public onScroll(_) {\n        const scroll_top = this._el.nativeElement.scrollTop;\n        for (const group of CHARS) {\n            const el: HTMLDivElement = document.querySelector(\n                `#letter-${group === '#' ? '0' : group}`\n            );\n            if (el) {\n                if (el.offsetTop - scroll_top > 0) {\n                    break;\n                }\n                this.active_group = group;\n            }\n        }\n    }\n\n    public scrollTo(group: string) {\n        const el = document.querySelector(`#letter-${group}-0`);\n        if (el) {\n            el.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            this.active_group = group;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { searchStaff, StaffUser } from '@placeos/users';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport {\n    Booking,\n    checkinBooking,\n    queryBookings,\n    saveBooking,\n} from '@placeos/bookings';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { AsyncHandler, timePeriodsIntersect } from '@placeos/common';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface StaffFilters {\n    date?: number;\n    zones?: string[];\n    only_onsite?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StaffStateService extends AsyncHandler {\n    private _onsite: HashMap<boolean> = {};\n    private _events: HashMap<Booking> = {};\n\n    private _filters = new BehaviorSubject<StaffFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    private _users = new BehaviorSubject<StaffUser[]>([]);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly users = this._filters.asObservable();\n\n    public readonly filtered_users = combineLatest([\n        this._search,\n        this._users,\n        this._filters,\n    ]).pipe(\n        map((details) => {\n            const [filter, users, options] = details;\n            return users.filter(\n                (i) =>\n                    (!filter ||\n                        i.name.toLowerCase().includes(filter) ||\n                        i.email.toLowerCase().includes(filter)) &&\n                    (!options.only_onsite || this._onsite[i.email])\n            );\n        })\n    );\n\n    public readonly user_events = combineLatest([this._filters]).pipe(\n        switchMap(async (_) => {\n            this._loading.next(true);\n            const bookings = await queryBookings({\n                period_start: getUnixTime(startOfDay(Date.now())),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type: 'staff',\n            }).toPromise();\n            const checkin_map = {};\n            const now = new Date().valueOf();\n            for (const bkn of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        now,\n                        now,\n                        bkn.date,\n                        bkn.date + bkn.duration * 60 * 1000\n                    )\n                ) {\n                    checkin_map[bkn.asset_id] = bkn.checked_in;\n                    this._events[bkn.asset_id] = bkn;\n                }\n            }\n            this._onsite = checkin_map;\n            this._loading.next(false);\n            return checkin_map;\n        }),\n        shareReplay()\n    );\n\n    constructor(private _org: OrganisationService) {\n        super();\n        this.loadUsers();\n        this.user_events.subscribe();\n    }\n\n    public setFilters(filters: StaffFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.setFilters(this._filters.getValue());\n        this.interval(\n            'poll',\n            () => this.setFilters(this._filters.getValue()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkin(user: StaffUser) {\n        const result = await saveBooking({\n            booking_start: Math.floor(new Date().valueOf() / 1000),\n            booking_end: Math.floor(endOfDay(new Date()).valueOf() / 1000),\n            asset_id: user.email,\n            title: 'Checked-in Onsite',\n            description:\n                this._org.building.display_name || this._org.building.name,\n            zones: [this._org.building.id],\n            booking_type: 'staff',\n        } as any).toPromise();\n        await checkinBooking(result.id, true).toPromise();\n        this._events[user.email] = result;\n        this._onsite[user.email] = true;\n    }\n\n    public async checkout(user: StaffUser) {\n        const event = this._events[user.email];\n        if (event) {\n            const result = await saveBooking({\n                ...event.toJSON(),\n                booking_end: Math.floor(new Date().valueOf() / 1000),\n            } as any).toPromise();\n            await checkinBooking(result.id, false).toPromise();\n            this._events[user.email] = result;\n            this._onsite[user.email] = false;\n        }\n    }\n\n    private async loadUsers() {\n        const user_list = await searchStaff('').toPromise();\n        user_list.sort((a, b) => a.name.localeCompare(b.name));\n        this._users.next(user_list);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: 'staff-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.only_onsite\"\n                (ngModelChange)=\"setFilters({ only_onsite: $event })\"\n                ><div class=\"text-xs\">Onsite Only</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class StaffTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: StaffStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: '[app-staff]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex-1 flex flex-col\">\n            <staff-topbar class=\"w-full\"></staff-topbar>\n            <staff-listings class=\"w-full flex-1 h-0\"></staff-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--b1);\n            }\n        `,\n    ],\n})\nexport class StaffComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: StaffStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { StaffComponent } from './staff.component';\nimport { StaffTopbarComponent } from './staff-topbar.component';\nimport { StaffListingComponent } from './staff-listing.component';\nimport { StaffDetailsComponent } from './staff-details.component';\nimport { UIModule } from '../ui/ui.module';\nimport { NewStaffComponent } from './new-staff.component';\nimport { EmergencyContactsComponent } from './emergency-contacts.component';\nimport { EmergencyContactModalComponent } from './emergency-contact-modal.component';\nimport { RoleManagementModalComponent } from './role-management-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: StaffComponent },\n    { path: 'new', component: NewStaffComponent },\n    { path: 'emergency-contacts', component: EmergencyContactsComponent },\n];\n\nexport const COMPONENTS: Type<any>[] = [\n    NewStaffComponent,\n    StaffComponent,\n    StaffTopbarComponent,\n    StaffListingComponent,\n    StaffDetailsComponent,\n    EmergencyContactsComponent,\n    EmergencyContactModalComponent,\n    RoleManagementModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class StaffModule {}\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["MAT_DIALOG_DATA","MatDialogRef","FormControl","FormGroup","OrganisationService","showMetadata","updateMetadata","BehaviorSubject","combineLatest","filter","map","shareReplay","switchMap","take","notifySuccess","randomString","CustomTooltipComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","level_r3","id","ɵɵadvance","ɵɵtextInterpolate1","display_name","name","role_r4","ɵɵelementContainerStart","ɵɵtemplate","EmergencyContactModalComponent_main_5_ng_container_34_mat_option_1_Template","ɵɵlistener","EmergencyContactModalComponent_main_5_Template_a_user_search_field_ngModelChange_2_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","setUser","ɵɵelement","EmergencyContactModalComponent_main_5_mat_option_26_Template","EmergencyContactModalComponent_main_5_ng_container_34_Template","form","ɵɵpureFunction0","_c0","ɵɵpipeBind1","levels","tmp_6_0","data","roles","_c1","role_form_r5","EmergencyContactModalComponent_footer_6_Template_button_click_1_listener","_r6","save","ɵɵtwoWayListener","EmergencyContactModalComponent_ng_template_9_Template_input_ngModelChange_2_listener","_r7","ɵɵtwoWayBindingSet","role_name","EmergencyContactModalComponent_ng_template_9_Template_button_click_3_listener","addRole","ɵɵtwoWayProperty","EmergencyContactModalComponent","constructor","_data","_dialog_ref","_org","_changes","loading","contact","active_building","pipe","bld","details","contacts","email","phone","zone","active_levels","_this","_asyncToGenerator","_tooltip","close","disableClose","toPromise","building","description","_","next","patchValue","value","user","_this2","new_contacts","sort","a","b","localeCompare","ɵɵdirectiveInject","i1","i2","_2","selectors","viewQuery","EmergencyContactModalComponent_Query","rf","ctx","EmergencyContactModalComponent_button_4_Template","EmergencyContactModalComponent_main_5_Template","EmergencyContactModalComponent_footer_6_Template","EmergencyContactModalComponent_ng_template_7_Template","ɵɵtemplateRefExtractor","EmergencyContactModalComponent_ng_template_9_Template","load_state_r8","MatDialog","openConfirmModal","RoleManagementModalComponent","role_r2","role_r3","EmergencyContactsComponent_ng_template_31_span_0_Template","data_r4","data_r5","tmp_5_0","EmergencyContactsComponent_ng_template_35_Template_button_click_1_listener","row_r7","row","ctx_r7","editContact","EmergencyContactsComponent_ng_template_35_Template_button_click_4_listener","removeContact","EmergencyContactsComponent","_dialog","_change","search","role_filter","filtered_contacts","list","role","includes","ngOnInit","manageRoles","ref","open","afterClosed","subscribe","Date","now","result","title","content","icon","reason","attrs","decls","vars","consts","template","EmergencyContactsComponent_Template","EmergencyContactsComponent_Template_button_click_9_listener","EmergencyContactsComponent_Template_button_click_12_listener","EmergencyContactsComponent_Template_mat_select_ngModelChange_19_listener","EmergencyContactsComponent_mat_option_22_Template","EmergencyContactsComponent_Template_input_ngModelChange_28_listener","EmergencyContactsComponent_ng_template_31_Template","EmergencyContactsComponent_ng_template_33_Template","EmergencyContactsComponent_ng_template_35_Template","getValue","_c2","_c3","_c4","ɵɵpureFunction3","_c5","roles_template_r9","zone_template_r10","actions_template_r11","StaffStateService","NewStaffComponent","_state","startPolling","ngOnDestroy","stopPolling","NewStaffComponent_Template","NewStaffComponent_mat_progress_bar_6_Template","RoleManagementModalComponent_ng_container_12_Template_button_click_4_listener","_r2","$implicit","ctx_r3","active","RoleManagementModalComponent_ng_container_12_Template_button_click_7_listener","removeRole","ɵɵtextInterpolate","RoleManagementModalComponent_ng_template_14_Template_input_ngModelChange_2_listener","RoleManagementModalComponent_ng_template_14_Template_button_click_3_listener","updateRoles","r","RoleManagementModalComponent_Query","RoleManagementModalComponent_Template_button_click_7_listener","RoleManagementModalComponent_ng_container_12_Template","RoleManagementModalComponent_ng_template_14_Template","notifyError","StaffUser","StaffDetailsComponent_div_0_div_7_Template","StaffDetailsComponent_div_0_Template_action_icon_click_9_listener","onsite","checkout","checkin","ɵɵsanitizeUrl","StaffDetailsComponent","catch","e","inputs","StaffDetailsComponent_Template","StaffDetailsComponent_div_0_Template","ElementRef","AsyncHandler","StaffListingComponent_div_1_Template_div_click_0_listener","group_r3","scrollTo","ɵɵclassProp","user_list","length","active_group","group_r7","i_r6","user_r5","events","StaffListingComponent_ng_container_4_ng_container_1_ng_container_1_staff_details_3_Template","StaffListingComponent_ng_container_4_ng_container_1_ng_container_1_Template","StaffListingComponent_ng_container_4_ng_container_1_Template","groups","CHARS","split","StaffListingComponent","user_events","user_count","filtered_users","user_map","char","toLowerCase","startsWith","timeout","onScroll","scroll_top","_el","nativeElement","scrollTop","group","el","document","querySelector","offsetTop","scrollIntoView","behavior","block","StaffListingComponent_Query","StaffListingComponent_div_1_Template","StaffListingComponent_Template_div_scroll_2_listener","StaffListingComponent_ng_container_4_Template","StaffListingComponent_mat_progress_bar_6_Template","StaffListingComponent_ng_template_8_Template","empty_state_r8","searchStaff","checkinBooking","queryBookings","saveBooking","endOfDay","getUnixTime","startOfDay","timePeriodsIntersect","this","_onsite","_events","_filters","_search","_loading","_users","asObservable","filters","users","options","i","only_onsite","_ref","bookings","period_start","period_end","type","checkin_map","valueOf","bkn","date","duration","asset_id","checked_in","_x","apply","arguments","loadUsers","setFilters","setSearchString","delay","interval","clearInterval","booking_start","Math","floor","booking_end","zones","booking_type","_this3","event","toJSON","_this4","ɵɵinject","factory","ɵfac","providedIn","ActivatedRoute","Router","first","level_r1","StaffTopbarComponent","_route","_router","setDate","setSearch","str","updateZones","navigate","relativeTo","queryParams","zone_ids","join","initialised","subscription","queryParamMap","params","has","get","level","levelWithID","buildings","find","parent_id","lvl","push","i3","features","ɵɵInheritDefinitionFeature","StaffTopbarComponent_Template","StaffTopbarComponent_Template_mat_select_ngModelChange_2_listener","StaffTopbarComponent_mat_option_3_Template","StaffTopbarComponent_Template_mat_slide_toggle_ngModelChange_5_listener","StaffTopbarComponent_Template_searchbar_modelChange_10_listener","tmp_2_0","StaffComponent","StaffComponent_Template","StaffComponent_mat_progress_bar_4_Template","CommonModule","Type","FormsModule","RouterModule","UIModule","ROUTES","path","component","COMPONENTS","StaffModule","_3","forChild","declarations","imports","MapLocation","location","position","map_id","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}