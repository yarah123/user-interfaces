{"version":3,"file":"apps_concierge_src_app_parking_parking_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/parking/new-parking.component.ts","./apps/concierge/src/app/parking/parking-bookings-list.component.ts","./apps/concierge/src/app/parking/parking-space-list.component.ts","./apps/concierge/src/app/parking/parking-space-modal.component.ts","./apps/concierge/src/app/parking/parking-state.service.ts","./apps/concierge/src/app/parking/parking-topbar.component.ts","./apps/concierge/src/app/parking/parking-users-list.component.ts","./apps/concierge/src/app/parking/parking.component.ts","./apps/concierge/src/app/parking/parking.module.ts","./libs/bookings/src/index.ts","./libs/bookings/src/lib/desk.service.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'app-new-parking',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full relative\">\n                <parking-topbar></parking-topbar>\n                <div class=\"flex-1 h-1/2 w-full relative overflow-auto px-2\">\n                    <router-outlet></router-outlet>\n                </div>\n                <div\n                    *ngIf=\"!(levels | async)?.length\"\n                    class=\"absolute inset-0 bg-base-100/80/20 flex flex-col items-center justify-center z-50\"\n                >\n                    <p>No parking floors for the currently selected building</p>\n                </div>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class NewParkingComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n\n    public path = '';\n\n    constructor(private _state: ParkingStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'parking-bookings-list',\n    template: `\n        <custom-table\n            class=\"block min-w-[60rem]\"\n            [dataSource]=\"events\"\n            [columns]=\"[\n                'asset_name',\n                'booked_by_name',\n                'user_name',\n                'plate_number',\n                'status',\n                'actions'\n            ]\"\n            [display_column]=\"[\n                'Bay No.',\n                'Reserved By',\n                'Reserved For',\n                'Car Plate #',\n                'Status',\n                ' '\n            ]\"\n            [filter]=\"(options | async).search\"\n            [column_size]=\"['6r', 'flex', '14r', '8r', '6r', '6r']\"\n            [template]=\"{\n                plate_number: plate_template,\n                actions: action_template,\n                status: status_template\n            }\"\n            [class.opacity-50]=\"(loading | async)?.includes('bookings')\"\n        ></custom-table>\n        <ng-template #plate_template let-row=\"row\">\n            {{ row?.extension_data?.plate_number }}\n        </ng-template>\n        <ng-template #status_template let-data=\"data\">\n            <span\n                class=\"capitalize px-2 py-1 rounded border border-base-200\"\n                [class.bg-success]=\"data === 'approved'\"\n                [class.bg-warning]=\"data === 'tentative'\"\n                [class.bg-error]=\"data === 'cancelled' || data === 'declined'\"\n                [class.text-success-content]=\"data === 'approved'\"\n                [class.text-warning-content]=\"data === 'tentative'\"\n                [class.text-error-content]=\"\n                    data === 'cancelled' || data === 'declined'\n                \"\n            >\n                {{ data }}\n            </span>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex items-center justify-end\">\n                <!-- <button icon matTooltip=\"Reallocate Parking Reservation\">\n                    <app-icon>published_with_changes</app-icon>\n                </button> -->\n                <button\n                    icon\n                    matTooltip=\"Reject Parking Reservation\"\n                    (click)=\"reject(row)\"\n                >\n                    <app-icon>event_busy</app-icon>\n                </button>\n                <button\n                    icon\n                    matTooltip=\"Approve Parking Reservation\"\n                    (click)=\"approve(row)\"\n                >\n                    <app-icon>event_available</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <mat-progress-bar\n            *ngIf=\"(loading | async)?.includes('bookings')\"\n            class=\"absolute bottom-0 inset-x-0\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingBookingsListComponent {\n    public readonly events = this._state.bookings;\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly reject = (e) => this._state.rejectBooking(e);\n    public readonly approve = (e) => this._state.approveBooking(e);\n\n    constructor(private _state: ParkingStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'parking-space-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-2\">\n            <custom-table\n                class=\"block min-w-[56rem]\"\n                [dataSource]=\"spaces\"\n                [columns]=\"[\n                    'name',\n                    'map_id',\n                    'assigned_to',\n                    'notes',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'Bay No.',\n                    'Map ID',\n                    'Assigned',\n                    'Notes',\n                    ' '\n                ]\"\n                [column_size]=\"['8r', '10r', '14r', 'flex', '10r']\"\n                [template]=\"{ actions: action_template }\"\n                [filter]=\"(options | async).search\"\n                [class.opacity-50]=\"(loading | async)?.includes('spaces')\"\n            ></custom-table>\n            <ng-template #action_template let-row=\"row\">\n                <div class=\"w-full flex items-center justify-end\">\n                    <button icon (click)=\"editSpace(row)\">\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button icon (click)=\"removeSpace(row)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <mat-progress-bar\n                *ngIf=\"(loading | async)?.includes('spaces')\"\n                class=\"absolute bottom-0 inset-x-0\"\n            ></mat-progress-bar>\n        </div>\n        <button\n            btn\n            icon\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-secondary text-secondary-content\"\n            (click)=\"editSpace()\"\n        >\n            <app-icon>add</app-icon>\n        </button>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceListComponent {\n    public readonly spaces = this._state.spaces;\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly editSpace = (s?) => this._state.editSpace(s);\n    public readonly removeSpace = (s) => this._state.removeSpace(s);\n\n    constructor(private _state: ParkingStateService) {}\n}\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent } from '@placeos/common';\nimport { User } from '@placeos/users';\nimport { ParkingSpace } from './parking-state.service';\n\n@Component({\n    selector: 'parking-space-modal',\n    template: `\n        <div class=\"w-[28rem]\">\n            <header class=\"flex items-center justify-between px-2 w-full\">\n                <h2 class=\"px-2\">{{ id ? 'Edit' : 'New' }} Parking Space</h2>\n                <button *ngIf=\"!loading\" icon matRipple mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                *ngIf=\"!loading; else load_state\"\n                class=\"p-4 flex flex-col\"\n                [formGroup]=\"form\"\n            >\n                <label for=\"name\">Parking Space Name/Bay Number</label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput name=\"name\" formControlName=\"name\" />\n                    <mat-error>A name is required for parking spaces</mat-error>\n                </mat-form-field>\n                <label for=\"map-id\">Map ID</label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput name=\"map-id\" formControlName=\"map_id\" />\n                    <mat-error>\n                        A map ID is required for parking spaces\n                    </mat-error>\n                </mat-form-field>\n                <label for=\"user\">Assigned User</label>\n                <div class=\"flex items-center space-x-2\">\n                    <a-user-search-field\n                        name=\"user\"\n                        formControlName=\"assigned_user\"\n                    ></a-user-search-field>\n                    <button\n                        btn\n                        matRipple\n                        class=\"mb-5\"\n                        (click)=\"\n                            form.patchValue({\n                                assigned_user: null,\n                                assigned_to: null,\n                                assigned_name: null\n                            })\n                        \"\n                    >\n                        Clear\n                    </button>\n                </div>\n                <label for=\"notes\">Notes</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n                <label for=\"map-rotation\">Map Rotation</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"map-rotation\"\n                        formControlName=\"map_rotation\"\n                    ></textarea>\n                </mat-form-field>\n                <div class=\"flex items-center justify-center space-x-2\">\n                    <button btn matRipple class=\"w-32 inverse\" mat-dialog-close>\n                        Cancel\n                    </button>\n                    <button btn matRipple class=\"w-32\" (click)=\"postForm()\">\n                        Save\n                    </button>\n                </div>\n            </main>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving parking space details...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceModalComponent {\n    @Output() public readonly event = new EventEmitter<DialogEvent>();\n    public loading: boolean;\n\n    public get id() {\n        return this._data?.id || '';\n    }\n\n    public readonly form = new FormGroup({\n        id: new FormControl(''),\n        name: new FormControl('', [Validators.required]),\n        map_id: new FormControl('', [Validators.required]),\n        assigned_user: new FormControl<User>(null),\n        assigned_to: new FormControl(''),\n        assigned_name: new FormControl(''),\n        notes: new FormControl(''),\n        map_rotation: new FormControl(0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ParkingSpace,\n        private _dialog_ref: MatDialogRef<ParkingSpaceModalComponent>\n    ) {\n        if (_data) this.form.patchValue(_data);\n    }\n\n    public postForm() {\n        if (!this.form.valid) return;\n        this.loading = true;\n        const value = this.form.value;\n        if (value.assigned_user) {\n            value.assigned_to = value.assigned_user.email;\n            value.assigned_name = value.assigned_user.name;\n        }\n        this._dialog_ref.disableClose = true;\n        this.event.emit({ reason: 'done', metadata: value });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    approveBooking,\n    Booking,\n    queryBookings,\n    rejectBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { randomInt } from '@placeos/common';\nimport { endOfDay, format, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { ParkingSpaceModalComponent } from './parking-space-modal.component';\n\nexport interface ParkingOptions {\n    date: number;\n    search: string;\n    zones: string[];\n}\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n}\n\nexport interface ParkingUser {\n    id: string;\n    email: string;\n    name: string;\n    transponder: string;\n    designation: string;\n    car_model: string;\n    car_colour: string;\n    plate_number: string;\n    phone: string;\n    notes: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParkingStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _change = new BehaviorSubject(0);\n    private _options = new BehaviorSubject<ParkingOptions>({\n        date: Date.now(),\n        search: '',\n        zones: [],\n    });\n    private _loading = new BehaviorSubject<string[]>([]);\n    /** List of available parking levels for the current building */\n    public levels = this._org.level_list.pipe(\n        map((_) => {\n            if (!this._settings.get('app.use_region')) {\n                const blds = this._org.buildingsForRegion();\n                const bld_ids = blds.map((bld) => bld.id);\n                const list = _.filter(\n                    (lvl) =>\n                        bld_ids.includes(lvl.parent_id) &&\n                        lvl.tags.includes('parking')\n                );\n                list.map((lvl) => ({\n                    ...lvl,\n                    display_name: `${\n                        blds.find((_) => _.id === lvl.parent_id)?.display_name\n                    } - ${lvl.display_name}`,\n                }));\n                return list;\n            }\n            return _.filter(\n                (lvl) =>\n                    lvl.parent_id === this._org.building.id &&\n                    lvl.tags.includes('parking')\n            );\n        })\n    );\n    /** List of parking spaces for the current building/level */\n    public spaces = combineLatest([\n        this.levels,\n        this._options,\n        this._change,\n    ]).pipe(\n        filter(([lvls, options]) => !!(options.zones[0] || lvls[0]?.id)),\n        switchMap(([levels, options]) => {\n            this._loading.next([...this._loading.getValue(), 'spaces']);\n            return showMetadata(\n                options.zones[0] || levels[0]?.id,\n                'parking-spaces'\n            );\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingSpace[]\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'spaces')\n            )\n        ),\n        shareReplay(1)\n    );\n    /** List of parking spaces for the current building/level */\n    public users = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld?.id),\n        switchMap(([bld]) => {\n            this._loading.next([...this._loading.getValue(), 'users']);\n            return showMetadata(bld.id, 'parking-users');\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingUser[]\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'users')\n            )\n        ),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the current building/level */\n    public bookings = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([bld, options]) => {\n            this._loading.next([...this._loading.getValue(), 'bookings']);\n            return queryBookings({\n                period_start: getUnixTime(startOfDay(options.date)),\n                period_end: getUnixTime(endOfDay(options.date)),\n                type: 'parking',\n                zones: options.zones?.length\n                    ? options.zones.join(',')\n                    : bld?.id,\n            });\n        }),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'bookings')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public startPolling(delay = 5000) {\n        this._poll.next(Date.now());\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    /** Add or update a space in the available list */\n    public async editSpace(space?: ParkingSpace) {\n        const ref = this._dialog.open(ParkingSpaceModalComponent, {\n            data: space,\n        });\n        const state = await Promise.race([\n            ref.afterClosed().toPromise(),\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n        ]);\n        if (state?.reason !== 'done') return;\n        const zone = this._options.getValue().zones[0];\n        const new_space = {\n            ...state.metadata,\n            id: state.metadata.id || `parking-${zone}.${randomInt(999_999)}`,\n        };\n        const spaces = await this.spaces.pipe(take(1)).toPromise();\n        const idx = spaces.findIndex((_) => _.id === new_space.id);\n        if (idx >= 0) spaces[idx] = new_space;\n        else spaces.push(new_space);\n        const new_space_list = spaces;\n        await updateMetadata(zone, {\n            name: 'parking-spaces',\n            details: new_space_list,\n            description: 'List of available parking spaces',\n        }).toPromise();\n        this._change.next(Date.now());\n        ref.close();\n    }\n\n    /** Remove the given space from the available list */\n    public async removeSpace(space: ParkingSpace) {\n        const state = await openConfirmModal(\n            {\n                title: 'Remove Parking Space',\n                content: `Are you sure you wish to remove the parking space \"${space.name}\"?`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (state?.reason !== 'done') return;\n        state.loading('Removing parking space...');\n        const zone = this._options.getValue().zones[0];\n        const spaces = await this.spaces.pipe(take(1)).toPromise();\n        await updateMetadata(zone, {\n            name: 'parking-spaces',\n            details: spaces.filter((_) => _.id !== space.id),\n            description: 'List of available parking spaces',\n        }).toPromise();\n        state.close();\n    }\n\n    public async saveUsers(users: ParkingUser[]) {}\n\n    public async approveBooking(booking: Booking) {\n        const success = await approveBooking(booking.id)\n            .toPromise()\n            .catch((_) => 'failed');\n        success === 'failed'\n            ? notifyError('Error approving in desk booking')\n            : notifySuccess(\n                  `Approved parking reservation for ${\n                      booking.user_name\n                  } on ${format(booking.date, 'MMM Do')}.`\n              );\n    }\n\n    public async rejectBooking(bookings: Booking) {\n        const success = await rejectBooking(bookings.id)\n            .toPromise()\n            .catch((_) => 'failed');\n        success === 'failed'\n            ? notifyError('Error rejecting in desk booking')\n            : notifySuccess(\n                  `Rejected parking reservation for ${\n                      bookings.user_name\n                  } on ${format(bookings.date, 'MMM Do')}.`\n              );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'parking-topbar',\n    template: `\n        <div class=\"flex items-center bg-base-100 px-2 h-20\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"zones[0]\"\n                    (ngModelChange)=\"updateZones([$event]); zones = [$event]\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-0\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options\n                *ngIf=\"!manage\"\n                (dateChange)=\"setDate($event)\"\n            ></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class ParkingTopbarComponent extends AsyncHandler implements OnInit {\n    public manage = false;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n    /** Options set for week view */\n    public readonly options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setOptions({ date: d });\n    /** Set filter string */\n    public readonly setSearch = (str) =>\n        this._state.setOptions({ search: str });\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setOptions({ zones: z });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: ParkingStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._state.levels.subscribe((levels) => {\n                if (this.use_region) return;\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.manage = !this._router.url.includes('events');\n    }\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService, ParkingUser } from './parking-state.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { map, take } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { randomInt } from '@placeos/common';\n\nconst generateUserForm = (user?: ParkingUser) =>\n    new FormGroup({\n        id: new FormControl(user.id || ''),\n        email: new FormControl(user.email || ''),\n        name: new FormControl(user.name || ''),\n        transponder: new FormControl(user.transponder || ''),\n        designation: new FormControl(user.designation || ''),\n        car_model: new FormControl(user.car_model || ''),\n        car_colour: new FormControl(user.car_colour || ''),\n        plate_number: new FormControl(user.plate_number || ''),\n        phone: new FormControl(user.phone || ''),\n        notes: new FormControl(user.notes || ''),\n    });\n\n@Component({\n    selector: 'parking-users-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-2\">\n            <custom-table\n                class=\"block min-w-[96rem]\"\n                [dataSource]=\"user_list\"\n                [columns]=\"[\n                    'email',\n                    'transponder',\n                    'designation',\n                    'car_model',\n                    'car_colour',\n                    'plate_number',\n                    'phone',\n                    'notes',\n                    'actions'\n                ]\"\n                [display_column]=\"['', '', '', '', '', '', '', '', ' ']\"\n                [column_size]=\"[\n                    '14r',\n                    '10r',\n                    '10r',\n                    '10r',\n                    '10r',\n                    '10r',\n                    '10r',\n                    'flex'\n                ]\"\n                [template]=\"{\n                    email: text_input_template,\n                    name: text_input_template,\n                    transponder: text_input_template,\n                    designation: text_input_template,\n                    car_model: text_input_template,\n                    car_colour: text_input_template,\n                    plate_number: text_input_template,\n                    phone: text_input_template,\n                    notes: text_input_template,\n                    actions: action_template\n                }\"\n                [filter]=\"(options | async).search\"\n                [class.opacity-50]=\"(loading | async)?.includes('users')\"\n            ></custom-table>\n            <ng-template\n                #text_input_template\n                let-form=\"row\"\n                let-key=\"key\"\n                let-name=\"name\"\n            >\n                <input\n                    [ngModel]=\"form.value[key]\"\n                    (ngModelChange)=\"form.get(key).setValue($event)\"\n                    [placeholder]=\"name\"\n                    class=\"relative -top-px border-none px-2 py-4 -m-2 text-base w-full !outline-none focus:border-b border-blue-600\"\n                />\n            </ng-template>\n            <ng-template #action_template let-form=\"row\">\n                <div class=\"w-full flex items-center justify-end\">\n                    <app-icon\n                        *ngIf=\"\n                            deletion.has(form.value.id) ||\n                            form.dirty ||\n                            isNew(form.value.id)\n                        \"\n                        [class.text-red-600]=\"deletion.has(form.value.id)\"\n                        [class.text-yellow-400]=\"!deletion.has(form.value.id)\"\n                    >\n                        warning\n                    </app-icon>\n                    <button\n                        btn\n                        icon\n                        *ngIf=\"!deletion.has(form.value.id)\"\n                        (click)=\"markForDelete(form.value.id)\"\n                        [matTooltip]=\"\n                            isNew(form.value.id)\n                                ? 'Remove New User'\n                                : 'Mark for Deletion'\n                        \"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        btn\n                        icon\n                        *ngIf=\"deletion.has(form.value.id) || form.dirty\"\n                        matTooltip=\"Clear Changes\"\n                        (click)=\"clearChanges(id)\"\n                    >\n                        <app-icon>clear_all</app-icon>\n                    </button>\n                </div>\n            </ng-template>\n        </div>\n        <button\n            btn\n            icon\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-primary text-white\"\n            (click)=\"newUser()\"\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <div\n            class=\"absolute bottom-2 right-2 bg-base-100 border border-base-200 p-2 text-base rounded shadow space-y-2\"\n            *ngIf=\"\n                deletion.entries.length ||\n                (change_count | async) ||\n                (new_items | async).length\n            \"\n        >\n            <div\n                class=\"flex items-center space-x-2 p-2\"\n                *ngIf=\"deletion.entries.length\"\n            >\n                <app-icon class=\"text-red-600 text-2xl\">warning</app-icon>\n                <div>{{ deletion.entries.length }} users pending deletion</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 p-2\"\n                *ngIf=\"(new_items | async).length\"\n            >\n                <app-icon class=\"text-yellow-400 text-2xl\">warning</app-icon>\n                <div>\n                    {{ (new_items | async).length }} new users pending save\n                </div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 p-2\"\n                *ngIf=\"change_count | async\"\n            >\n                <app-icon class=\"text-yellow-400 text-2xl\">warning</app-icon>\n                <div>{{ change_count | async }} users with pending changes</div>\n            </div>\n            <button btn class=\"w-full\">Save Changes</button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ParkingUsersListComponent {\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n    public readonly forms = this._state.users.pipe(\n        map((_) => _.map((u) => generateUserForm(u)))\n    );\n    public readonly new_items = new BehaviorSubject<FormGroup[]>([]);\n    public readonly user_list = combineLatest([\n        this.forms,\n        this.new_items,\n    ]).pipe(map(([a, b]) => [...a, ...b]));\n    public readonly change_count = this.user_list.pipe(\n        map((_) => _.filter((f) => f.dirty || !this.isNew(f.value.id)).length)\n    );\n    public deletion = new Set<string>();\n\n    public isNew(id: string) {\n        return !!this.new_items.getValue().find((_) => _.value.id === id);\n    }\n\n    constructor(private _state: ParkingStateService) {}\n\n    public markForDelete(id) {\n        if (this.isNew(id)) {\n            this.new_items.next(\n                this.new_items.getValue().filter((_) => _.value.id !== id)\n            );\n        } else this.deletion.add(id);\n    }\n\n    public async clearChanges(id) {\n        if (this.isNew(id)) {\n            const new_items = this.new_items.getValue();\n            const item = new_items.find((_) => _.value.id === id);\n            if (item) {\n                item.reset({ id });\n            }\n        } else {\n            const list = await this.user_list.pipe(take(1)).toPromise();\n            const users = await this._state.users.pipe(take(1)).toPromise();\n            const item = list.find((_) => _.value.id === id);\n            const user = users.find((_) => _.id === id);\n            if (item && user) item.reset(user);\n        }\n    }\n\n    public newUser() {\n        const form = generateUserForm({\n            id: `parking-${randomInt(99999999, 10000000)}`,\n        } as any);\n        this.new_items.next([...this.new_items.getValue(), form]);\n    }\n\n    public async saveChanges() {\n        const list = await this.user_list.pipe(take(1)).toPromise();\n        const users = list\n            .map((_) => _.value)\n            .filter((_) => !this.deletion.has(_.id));\n        await this._state.saveUsers(users);\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'app-parking',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden bg-base-100\">\n            <parking-topbar></parking-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'spaces']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'spaces'\"\n                    >\n                        Manage Spaces\n                    </a>\n                    <!-- <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Make Booking\n                    </a> -->\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto px-4\">\n                <router-outlet></router-outlet>\n            </div>\n            <div\n                *ngIf=\"!(levels | async)?.length\"\n                class=\"absolute inset-0 flex flex-col items-center justify-center z-50\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-50 z-0\"></div>\n                <p>No parking floors for the currently selected building</p>\n            </div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class ParkingComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n\n    public path = '';\n\n    constructor(private _state: ParkingStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { UIModule } from '../ui/ui.module';\n\nimport { ParkingBookingsListComponent } from './parking-bookings-list.component';\nimport { ParkingSpaceListComponent } from './parking-space-list.component';\nimport { ParkingSpaceModalComponent } from './parking-space-modal.component';\nimport { ParkingTopbarComponent } from './parking-topbar.component';\nimport { ParkingComponent } from './parking.component';\nimport { NewParkingComponent } from './new-parking.component';\nimport { ParkingUsersListComponent } from './parking-users-list.component';\n\nconst COMPONENTS = [\n    NewParkingComponent,\n    ParkingComponent,\n    ParkingBookingsListComponent,\n    ParkingSpaceListComponent,\n    ParkingUsersListComponent,\n    ParkingTopbarComponent,\n    ParkingSpaceModalComponent,\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewParkingComponent,\n        children: [\n            { path: 'events', component: ParkingBookingsListComponent },\n            { path: 'users', component: ParkingUsersListComponent },\n            { path: 'manage', component: ParkingSpaceListComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: ParkingComponent,\n        children: [\n            { path: 'events', component: ParkingBookingsListComponent },\n            { path: 'users', component: ParkingUsersListComponent },\n            { path: 'manage', component: ParkingSpaceListComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FormFieldsModule,\n        MatTabsModule,\n        MatProgressBarModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppParkingModule {}\n","export * from './lib/bookings.module';\nexport * from './lib/booking-form.service';\nexport * from './lib/booking.class';\nexport * from './lib/booking.utilities';\nexport * from './lib/bookings.fn';\nexport * from './lib/bookings.module';\nexport * from './lib/desk.service';\nexport * from './lib/lockers.service';\nexport * from './lib/booking-details-modal.component';\nexport * from './lib/booking-card.component';\nexport * from './lib/parking-select-modal/parking-select-modal.component';\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { StaffUser, User } from 'libs/users/src/lib/user.class';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date = true;\n    public error_on_host = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        } else {\n            host = host || currentUser();\n        }\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                host,\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        host = ref.componentInstance.host || host;\n        date = ref.componentInstance.date || date;\n        reason = ref.componentInstance.reason || reason;\n        if (!host) {\n            ref.close();\n            return notifyError('You need to select a host to book a desk. ');\n        }\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...(attendees || [])];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: for_user?.id || host.id,\n            user_name: for_user?.name || host.name,\n            user_email: for_user?.email || host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            asset_name: desk.name,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                map_id: desk?.map_id || desk?.id,\n                groups: desk.groups,\n                for_user: for_user?.email,\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n"],"names":["NavigationEnd","Router","AsyncHandler","ParkingStateService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","NewParkingComponent","constructor","_state","_router","levels","path","ngOnInit","startPolling","subscription","events","subscribe","e","url_parts","url","split","parts","length","_","ɵɵdirectiveInject","i1","i2","_2","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","NewParkingComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","NewParkingComponent_div_7_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ɵɵpipeBind1","ɵɵtextInterpolate1","row_r7","extension_data","plate_number","ɵɵclassProp","data_r8","ɵɵlistener","ParkingBookingsListComponent_ng_template_7_Template_button_click_1_listener","restoredCtx","ɵɵrestoreView","_r11","row_r9","row","ctx_r10","ɵɵnextContext","ɵɵresetView","reject","ParkingBookingsListComponent_ng_template_7_Template_button_click_4_listener","ctx_r12","approve","ParkingBookingsListComponent","bookings","options","loading","rejectBooking","approveBooking","ParkingBookingsListComponent_Template","ParkingBookingsListComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","ParkingBookingsListComponent_ng_template_5_Template","ParkingBookingsListComponent_ng_template_7_Template","ParkingBookingsListComponent_mat_progress_bar_9_Template","includes","ɵɵpureFunction0","_c0","_c1","search","_c2","ɵɵpureFunction3","_c3","_r1","_r5","_r3","tmp_7_0","ParkingSpaceListComponent_ng_template_4_Template_button_click_1_listener","row_r3","ctx_r4","editSpace","ParkingSpaceListComponent_ng_template_4_Template_button_click_4_listener","ctx_r6","removeSpace","ParkingSpaceListComponent","spaces","s","ParkingSpaceListComponent_Template","ParkingSpaceListComponent_ng_template_4_Template","ParkingSpaceListComponent_mat_progress_bar_6_Template","ParkingSpaceListComponent_Template_button_click_8_listener","ɵɵpureFunction1","EventEmitter","FormControl","FormGroup","Validators","MatDialogRef","MAT_DIALOG_DATA","ParkingSpaceModalComponent_main_5_Template_button_click_17_listener","form","patchValue","assigned_user","assigned_to","assigned_name","ParkingSpaceModalComponent_main_5_Template_button_click_30_listener","postForm","ctx_r1","ParkingSpaceModalComponent","id","_data","_dialog_ref","event","name","required","map_id","notes","map_rotation","valid","value","email","disableClose","emit","reason","metadata","outputs","ParkingSpaceModalComponent_Template","ParkingSpaceModalComponent_button_4_Template","ParkingSpaceModalComponent_main_5_Template","ParkingSpaceModalComponent_ng_template_6_Template","MatDialog","queryBookings","notifyError","notifySuccess","openConfirmModal","SettingsService","OrganisationService","showMetadata","updateMetadata","randomInt","endOfDay","format","getUnixTime","startOfDay","BehaviorSubject","combineLatest","debounceTime","filter","first","map","shareReplay","switchMap","take","tap","_org","_dialog","_settings","_poll","_change","_options","date","Date","now","zones","_loading","level_list","pipe","get","blds","buildingsForRegion","bld_ids","bld","list","lvl","parent_id","tags","display_name","find","building","lvls","next","getValue","details","Array","users","active_building","period_start","period_end","type","join","asObservable","setOptions","delay","interval","stopPolling","clearInterval","space","_this","_asyncToGenerator","ref","open","data","state","Promise","race","afterClosed","toPromise","componentInstance","zone","new_space","idx","findIndex","push","new_space_list","description","close","_this2","title","content","icon","saveUsers","booking","success","catch","user_name","ɵɵinject","i3","factory","ɵfac","providedIn","ActivatedRoute","level_r2","ParkingTopbarComponent_date_options_7_Template_date_options_dateChange_0_listener","$event","_r4","ctx_r3","setDate","ParkingTopbarComponent","use_region","_route","manage","d","setSearch","str","updateZones","z","navigate","relativeTo","queryParams","zone_ids","initialised","queryParamMap","params","has","level","levelWithID","buildings","i4","ParkingTopbarComponent_Template","ParkingTopbarComponent_Template_mat_select_ngModelChange_2_listener","ParkingTopbarComponent_mat_option_3_Template","ParkingTopbarComponent_Template_searchbar_modelChange_6_listener","ParkingTopbarComponent_date_options_7_Template","ParkingUsersListComponent_ng_template_4_Template_input_ngModelChange_0_listener","_r9","key_r6","key","form_r5","setValue","name_r7","ctx_r11","deletion","form_r10","ParkingUsersListComponent_ng_template_6_button_2_Template_button_click_0_listener","_r17","ctx_r15","markForDelete","isNew","ParkingUsersListComponent_ng_template_6_button_3_Template_button_click_0_listener","_r20","ctx_r19","clearChanges","ParkingUsersListComponent_ng_template_6_app_icon_1_Template","ParkingUsersListComponent_ng_template_6_button_2_Template","ParkingUsersListComponent_ng_template_6_button_3_Template","ctx_r2","dirty","ctx_r21","entries","ctx_r22","new_items","ctx_r23","change_count","ParkingUsersListComponent_div_11_div_1_Template","ParkingUsersListComponent_div_11_div_2_Template","ParkingUsersListComponent_div_11_div_4_Template","generateUserForm","user","transponder","designation","car_model","car_colour","phone","ParkingUsersListComponent","forms","u","user_list","a","b","f","Set","add","item","reset","newUser","saveChanges","ParkingUsersListComponent_Template","ParkingUsersListComponent_ng_template_4_Template","ParkingUsersListComponent_ng_template_6_Template","ParkingUsersListComponent_Template_button_click_8_listener","ParkingUsersListComponent_div_11_Template","ɵɵpureFunctionV","ParkingComponent","ParkingComponent_Template","ParkingComponent_div_11_Template","tmp_4_0","CommonModule","FormsModule","ReactiveFormsModule","MatProgressBarModule","MatTabsModule","RouterModule","FormFieldsModule","UIModule","COMPONENTS","ROUTES","component","children","redirectTo","AppParkingModule","_3","forChild","declarations","imports","currentUser","saveBooking","DeskConfirmModalComponent","DeskQuestionsModalComponent","DesksService","can_set_date","error_on_host","bookDesk","desks","host","attendees","desk_list","user_email","toLowerCase","all","desk","makeDeskBooking","valueOf","for_user","location","booking_data","booking_start","user_id","booking_end","Math","floor","asset_id","asset_name","booking_type","groups"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}