{"version":3,"file":"apps_concierge_src_app_parking_parking_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/parking/new-parking.component.ts","./apps/concierge/src/app/parking/parking-bookings-list.component.ts","./apps/concierge/src/app/parking/parking-space-list.component.ts","./apps/concierge/src/app/parking/parking-space-modal.component.ts","./apps/concierge/src/app/parking/parking-state.service.ts","./apps/concierge/src/app/parking/parking-topbar.component.ts","./apps/concierge/src/app/parking/parking-users-list.component.ts","./apps/concierge/src/app/parking/parking.component.ts","./apps/concierge/src/app/parking/parking.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'app-new-parking',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full relative\">\n                <parking-topbar></parking-topbar>\n                <div class=\"flex-1 h-1/2 w-full relative overflow-auto px-2\">\n                    <router-outlet></router-outlet>\n                </div>\n                <div\n                    *ngIf=\"!(levels | async)?.length\"\n                    class=\"absolute inset-0 bg-base-100/80/20 flex flex-col items-center justify-center z-50\"\n                >\n                    <p>No parking floors for the currently selected building</p>\n                </div>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class NewParkingComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n\n    public path = '';\n\n    constructor(private _state: ParkingStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'parking-bookings-list',\n    template: `\n        <custom-table\n            class=\"block min-w-[60rem]\"\n            [dataSource]=\"events\"\n            [columns]=\"[\n                'asset_name',\n                'booked_by_name',\n                'user_name',\n                'plate_number',\n                'status',\n                'actions'\n            ]\"\n            [display_column]=\"[\n                'Bay No.',\n                'Reserved By',\n                'Reserved For',\n                'Car Plate #',\n                'Status',\n                ' '\n            ]\"\n            [filter]=\"(options | async).search\"\n            [column_size]=\"['6r', 'flex', '14r', '8r', '6r', '6r']\"\n            [template]=\"{\n                plate_number: plate_template,\n                actions: action_template,\n                status: status_template\n            }\"\n            [class.opacity-50]=\"(loading | async)?.includes('bookings')\"\n        ></custom-table>\n        <ng-template #plate_template let-row=\"row\">\n            {{ row?.extension_data?.plate_number }}\n        </ng-template>\n        <ng-template #status_template let-data=\"data\">\n            <span\n                class=\"capitalize px-2 py-1 rounded border border-base-200\"\n                [class.bg-success]=\"data === 'approved'\"\n                [class.bg-warning]=\"data === 'tentative'\"\n                [class.bg-error]=\"data === 'cancelled' || data === 'declined'\"\n                [class.text-success-content]=\"data === 'approved'\"\n                [class.text-warning-content]=\"data === 'tentative'\"\n                [class.text-error-content]=\"\n                    data === 'cancelled' || data === 'declined'\n                \"\n            >\n                {{ data }}\n            </span>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex items-center justify-end\">\n                <!-- <button icon matTooltip=\"Reallocate Parking Reservation\">\n                    <app-icon>published_with_changes</app-icon>\n                </button> -->\n                <button\n                    icon\n                    matTooltip=\"Reject Parking Reservation\"\n                    (click)=\"reject(row)\"\n                >\n                    <app-icon>event_busy</app-icon>\n                </button>\n                <button\n                    icon\n                    matTooltip=\"Approve Parking Reservation\"\n                    (click)=\"approve(row)\"\n                >\n                    <app-icon>event_available</app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <mat-progress-bar\n            *ngIf=\"(loading | async)?.includes('bookings')\"\n            class=\"absolute bottom-0 inset-x-0\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                height: 100%;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingBookingsListComponent {\n    public readonly events = this._state.bookings;\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly reject = (e) => this._state.rejectBooking(e);\n    public readonly approve = (e) => this._state.approveBooking(e);\n\n    constructor(private _state: ParkingStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'parking-space-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-2\">\n            <custom-table\n                class=\"block min-w-[56rem]\"\n                [dataSource]=\"spaces\"\n                [columns]=\"[\n                    'name',\n                    'map_id',\n                    'assigned_to',\n                    'notes',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'Bay No.',\n                    'Map ID',\n                    'Assigned',\n                    'Notes',\n                    ' '\n                ]\"\n                [column_size]=\"['8r', '10r', '14r', 'flex', '10r']\"\n                [template]=\"{ actions: action_template }\"\n                [filter]=\"(options | async).search\"\n                [class.opacity-50]=\"(loading | async)?.includes('spaces')\"\n            ></custom-table>\n            <ng-template #action_template let-row=\"row\">\n                <div class=\"w-full flex items-center justify-end\">\n                    <button icon (click)=\"editSpace(row)\">\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button icon (click)=\"removeSpace(row)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <mat-progress-bar\n                *ngIf=\"(loading | async)?.includes('spaces')\"\n                class=\"absolute bottom-0 inset-x-0\"\n            ></mat-progress-bar>\n        </div>\n        <button\n            btn\n            icon\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-secondary text-secondary-content\"\n            (click)=\"editSpace()\"\n        >\n            <app-icon>add</app-icon>\n        </button>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceListComponent {\n    public readonly spaces = this._state.spaces;\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n\n    public readonly editSpace = (s?) => this._state.editSpace(s);\n    public readonly removeSpace = (s) => this._state.removeSpace(s);\n\n    constructor(private _state: ParkingStateService) {}\n}\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent } from '@placeos/common';\nimport { User } from '@placeos/users';\nimport { ParkingSpace } from './parking-state.service';\n\n@Component({\n    selector: 'parking-space-modal',\n    template: `\n        <div class=\"w-[28rem]\">\n            <header class=\"flex items-center justify-between px-2 w-full\">\n                <h2 class=\"px-2\">{{ id ? 'Edit' : 'New' }} Parking Space</h2>\n                <button *ngIf=\"!loading\" icon matRipple mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </header>\n            <main\n                *ngIf=\"!loading; else load_state\"\n                class=\"p-4 flex flex-col\"\n                [formGroup]=\"form\"\n            >\n                <label for=\"name\">Parking Space Name/Bay Number</label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput name=\"name\" formControlName=\"name\" />\n                    <mat-error>A name is required for parking spaces</mat-error>\n                </mat-form-field>\n                <label for=\"map-id\">Map ID</label>\n                <mat-form-field appearance=\"outline\">\n                    <input matInput name=\"map-id\" formControlName=\"map_id\" />\n                    <mat-error>\n                        A map ID is required for parking spaces\n                    </mat-error>\n                </mat-form-field>\n                <label for=\"user\">Assigned User</label>\n                <div class=\"flex items-center space-x-2\">\n                    <a-user-search-field\n                        name=\"user\"\n                        formControlName=\"assigned_user\"\n                    ></a-user-search-field>\n                    <button\n                        btn\n                        matRipple\n                        class=\"mb-5\"\n                        (click)=\"\n                            form.patchValue({\n                                assigned_user: null,\n                                assigned_to: null,\n                                assigned_name: null\n                            })\n                        \"\n                    >\n                        Clear\n                    </button>\n                </div>\n                <label for=\"notes\">Notes</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"notes\"\n                        formControlName=\"notes\"\n                    ></textarea>\n                </mat-form-field>\n                <label for=\"map-rotation\">Map Rotation</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"map-rotation\"\n                        formControlName=\"map_rotation\"\n                    ></textarea>\n                </mat-form-field>\n                <div class=\"flex items-center justify-center space-x-2\">\n                    <button btn matRipple class=\"w-32 inverse\" mat-dialog-close>\n                        Cancel\n                    </button>\n                    <button btn matRipple class=\"w-32\" (click)=\"postForm()\">\n                        Save\n                    </button>\n                </div>\n            </main>\n        </div>\n        <ng-template #load_state>\n            <main\n                class=\"p-8 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving parking space details...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceModalComponent {\n    @Output() public readonly event = new EventEmitter<DialogEvent>();\n    public loading: boolean;\n\n    public get id() {\n        return this._data?.id || '';\n    }\n\n    public readonly form = new FormGroup({\n        id: new FormControl(''),\n        name: new FormControl('', [Validators.required]),\n        map_id: new FormControl('', [Validators.required]),\n        assigned_user: new FormControl<User>(null),\n        assigned_to: new FormControl(''),\n        assigned_name: new FormControl(''),\n        notes: new FormControl(''),\n        map_rotation: new FormControl(0),\n    });\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ParkingSpace,\n        private _dialog_ref: MatDialogRef<ParkingSpaceModalComponent>\n    ) {\n        if (_data) this.form.patchValue(_data);\n    }\n\n    public postForm() {\n        if (!this.form.valid) return;\n        this.loading = true;\n        const value = this.form.value;\n        if (value.assigned_user) {\n            value.assigned_to = value.assigned_user.email;\n            value.assigned_name = value.assigned_user.name;\n        }\n        this._dialog_ref.disableClose = true;\n        this.event.emit({ reason: 'done', metadata: value });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    approveBooking,\n    Booking,\n    queryBookings,\n    rejectBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { randomInt } from '@placeos/common';\nimport { endOfDay, format, getUnixTime, startOfDay } from 'date-fns';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { ParkingSpaceModalComponent } from './parking-space-modal.component';\n\nexport interface ParkingOptions {\n    date: number;\n    search: string;\n    zones: string[];\n}\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n}\n\nexport interface ParkingUser {\n    id: string;\n    email: string;\n    name: string;\n    transponder: string;\n    designation: string;\n    car_model: string;\n    car_colour: string;\n    plate_number: string;\n    phone: string;\n    notes: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParkingStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _change = new BehaviorSubject(0);\n    private _options = new BehaviorSubject<ParkingOptions>({\n        date: Date.now(),\n        search: '',\n        zones: [],\n    });\n    private _loading = new BehaviorSubject<string[]>([]);\n    /** List of available parking levels for the current building */\n    public levels = this._org.active_levels.pipe(\n        map((_) => _.filter((lvl) => lvl.tags.includes('parking')))\n    );\n    /** List of parking spaces for the current building/level */\n    public spaces = combineLatest([\n        this.levels,\n        this._options,\n        this._change,\n    ]).pipe(\n        filter(([lvls, options]) => !!(options.zones[0] || lvls[0]?.id)),\n        switchMap(([levels, options]) => {\n            this._loading.next([...this._loading.getValue(), 'spaces']);\n            return showMetadata(\n                options.zones[0] || levels[0]?.id,\n                'parking-spaces'\n            );\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingSpace[]\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'spaces')\n            )\n        ),\n        shareReplay(1)\n    );\n    /** List of parking spaces for the current building/level */\n    public users = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld?.id),\n        switchMap(([bld]) => {\n            this._loading.next([...this._loading.getValue(), 'users']);\n            return showMetadata(bld.id, 'parking-users');\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingUser[]\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'users')\n            )\n        ),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the current building/level */\n    public bookings = combineLatest([\n        this._org.active_building,\n        this._options,\n        this._poll,\n    ]).pipe(\n        debounceTime(500),\n        switchMap(([bld, options]) => {\n            this._loading.next([...this._loading.getValue(), 'bookings']);\n            return queryBookings({\n                period_start: getUnixTime(startOfDay(options.date)),\n                period_end: getUnixTime(endOfDay(options.date)),\n                type: 'parking',\n                zones: options.zones?.length\n                    ? options.zones.join(',')\n                    : bld?.id,\n            });\n        }),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'bookings')\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly options = this._options.asObservable();\n    public readonly loading = this._loading.asObservable();\n\n    constructor(private _org: OrganisationService, private _dialog: MatDialog) {\n        super();\n    }\n\n    public setOptions(options: Partial<ParkingOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public startPolling(delay = 5000) {\n        this._poll.next(Date.now());\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    /** Add or update a space in the available list */\n    public async editSpace(space?: ParkingSpace) {\n        const ref = this._dialog.open(ParkingSpaceModalComponent, {\n            data: space,\n        });\n        const state = await Promise.race([\n            ref.afterClosed().toPromise(),\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n        ]);\n        if (state?.reason !== 'done') return;\n        const zone = this._options.getValue().zones[0];\n        const new_space = {\n            ...state.metadata,\n            id: state.metadata.id || `parking-${zone}.${randomInt(999_999)}`,\n        };\n        const spaces = await this.spaces.pipe(take(1)).toPromise();\n        const idx = spaces.findIndex((_) => _.id === new_space.id);\n        if (idx >= 0) spaces[idx] = new_space;\n        else spaces.push(new_space);\n        const new_space_list = spaces;\n        await updateMetadata(zone, {\n            name: 'parking-spaces',\n            details: new_space_list,\n            description: 'List of available parking spaces',\n        }).toPromise();\n        this._change.next(Date.now());\n        ref.close();\n    }\n\n    /** Remove the given space from the available list */\n    public async removeSpace(space: ParkingSpace) {\n        const state = await openConfirmModal(\n            {\n                title: 'Remove Parking Space',\n                content: `Are you sure you wish to remove the parking space \"${space.name}\"?`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (state?.reason !== 'done') return;\n        state.loading('Removing parking space...');\n        const zone = this._options.getValue().zones[0];\n        const spaces = await this.spaces.pipe(take(1)).toPromise();\n        await updateMetadata(zone, {\n            name: 'parking-spaces',\n            details: spaces.filter((_) => _.id !== space.id),\n            description: 'List of available parking spaces',\n        }).toPromise();\n        state.close();\n    }\n\n    public async saveUsers(users: ParkingUser[]) {}\n\n    public async approveBooking(booking: Booking) {\n        const success = await approveBooking(booking.id)\n            .toPromise()\n            .catch((_) => 'failed');\n        success === 'failed'\n            ? notifyError('Error approving in desk booking')\n            : notifySuccess(\n                  `Approved parking reservation for ${\n                      booking.user_name\n                  } on ${format(booking.date, 'MMM Do')}.`\n              );\n    }\n\n    public async rejectBooking(bookings: Booking) {\n        const success = await rejectBooking(bookings.id)\n            .toPromise()\n            .catch((_) => 'failed');\n        success === 'failed'\n            ? notifyError('Error rejecting in desk booking')\n            : notifySuccess(\n                  `Rejected parking reservation for ${\n                      bookings.user_name\n                  } on ${format(bookings.date, 'MMM Do')}.`\n              );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'parking-topbar',\n    template: `\n        <div class=\"flex items-center bg-base-100 px-2 h-20\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"zones[0]\"\n                    (ngModelChange)=\"updateZones([$event]); zones = [$event]\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-0\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options\n                *ngIf=\"!manage\"\n                (dateChange)=\"setDate($event)\"\n            ></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                min-width: 0;\n                padding: 0 0.85rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class ParkingTopbarComponent extends AsyncHandler implements OnInit {\n    public manage = false;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n    /** Options set for week view */\n    public readonly options = this._state.options;\n    /** Set filtered date */\n    public readonly setDate = (d) => this._state.setOptions({ date: d });\n    /** Set filter string */\n    public readonly setSearch = (str) =>\n        this._state.setOptions({ search: str });\n    /** List of levels for the active building */\n    public readonly updateZones = (z) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: z.join(',') },\n        });\n        this._state.setOptions({ zones: z });\n    };\n\n    constructor(\n        private _state: ParkingStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._state.levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.manage = !this._router.url.includes('events');\n    }\n}\n","import { Component } from '@angular/core';\nimport { ParkingStateService, ParkingUser } from './parking-state.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { map, take } from 'rxjs/operators';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { randomInt } from '@placeos/common';\n\nconst generateUserForm = (user?: ParkingUser) =>\n    new FormGroup({\n        id: new FormControl(user.id || ''),\n        email: new FormControl(user.email || ''),\n        name: new FormControl(user.name || ''),\n        transponder: new FormControl(user.transponder || ''),\n        designation: new FormControl(user.designation || ''),\n        car_model: new FormControl(user.car_model || ''),\n        car_colour: new FormControl(user.car_colour || ''),\n        plate_number: new FormControl(user.plate_number || ''),\n        phone: new FormControl(user.phone || ''),\n        notes: new FormControl(user.notes || ''),\n    });\n\n@Component({\n    selector: 'parking-users-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-2\">\n            <custom-table\n                class=\"block min-w-[96rem]\"\n                [dataSource]=\"user_list\"\n                [columns]=\"[\n                    'email',\n                    'transponder',\n                    'designation',\n                    'car_model',\n                    'car_colour',\n                    'plate_number',\n                    'phone',\n                    'notes',\n                    'actions'\n                ]\"\n                [display_column]=\"['', '', '', '', '', '', '', '', ' ']\"\n                [column_size]=\"[\n                    '14r',\n                    '10r',\n                    '10r',\n                    '10r',\n                    '10r',\n                    '10r',\n                    '10r',\n                    'flex'\n                ]\"\n                [template]=\"{\n                    email: text_input_template,\n                    name: text_input_template,\n                    transponder: text_input_template,\n                    designation: text_input_template,\n                    car_model: text_input_template,\n                    car_colour: text_input_template,\n                    plate_number: text_input_template,\n                    phone: text_input_template,\n                    notes: text_input_template,\n                    actions: action_template\n                }\"\n                [filter]=\"(options | async).search\"\n                [class.opacity-50]=\"(loading | async)?.includes('users')\"\n            ></custom-table>\n            <ng-template\n                #text_input_template\n                let-form=\"row\"\n                let-key=\"key\"\n                let-name=\"name\"\n            >\n                <input\n                    [ngModel]=\"form.value[key]\"\n                    (ngModelChange)=\"form.get(key).setValue($event)\"\n                    [placeholder]=\"name\"\n                    class=\"relative -top-px border-none px-2 py-4 -m-2 text-base w-full !outline-none focus:border-b border-blue-600\"\n                />\n            </ng-template>\n            <ng-template #action_template let-form=\"row\">\n                <div class=\"w-full flex items-center justify-end\">\n                    <app-icon\n                        *ngIf=\"\n                            deletion.has(form.value.id) ||\n                            form.dirty ||\n                            isNew(form.value.id)\n                        \"\n                        [class.text-red-600]=\"deletion.has(form.value.id)\"\n                        [class.text-yellow-400]=\"!deletion.has(form.value.id)\"\n                    >\n                        warning\n                    </app-icon>\n                    <button\n                        btn\n                        icon\n                        *ngIf=\"!deletion.has(form.value.id)\"\n                        (click)=\"markForDelete(form.value.id)\"\n                        [matTooltip]=\"\n                            isNew(form.value.id)\n                                ? 'Remove New User'\n                                : 'Mark for Deletion'\n                        \"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        btn\n                        icon\n                        *ngIf=\"deletion.has(form.value.id) || form.dirty\"\n                        matTooltip=\"Clear Changes\"\n                        (click)=\"clearChanges(id)\"\n                    >\n                        <app-icon>clear_all</app-icon>\n                    </button>\n                </div>\n            </ng-template>\n        </div>\n        <button\n            btn\n            icon\n            matRipple\n            class=\"absolute bottom-2 left-2 bg-primary text-white\"\n            (click)=\"newUser()\"\n        >\n            <app-icon>add</app-icon>\n        </button>\n        <div\n            class=\"absolute bottom-2 right-2 bg-base-100 border border-base-200 p-2 text-base rounded shadow space-y-2\"\n            *ngIf=\"\n                deletion.entries.length ||\n                (change_count | async) ||\n                (new_items | async).length\n            \"\n        >\n            <div\n                class=\"flex items-center space-x-2 p-2\"\n                *ngIf=\"deletion.entries.length\"\n            >\n                <app-icon class=\"text-red-600 text-2xl\">warning</app-icon>\n                <div>{{ deletion.entries.length }} users pending deletion</div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 p-2\"\n                *ngIf=\"(new_items | async).length\"\n            >\n                <app-icon class=\"text-yellow-400 text-2xl\">warning</app-icon>\n                <div>\n                    {{ (new_items | async).length }} new users pending save\n                </div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2 p-2\"\n                *ngIf=\"change_count | async\"\n            >\n                <app-icon class=\"text-yellow-400 text-2xl\">warning</app-icon>\n                <div>{{ change_count | async }} users with pending changes</div>\n            </div>\n            <button btn class=\"w-full\">Save Changes</button>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ParkingUsersListComponent {\n    public readonly options = this._state.options;\n    public readonly loading = this._state.loading;\n    public readonly forms = this._state.users.pipe(\n        map((_) => _.map((u) => generateUserForm(u)))\n    );\n    public readonly new_items = new BehaviorSubject<FormGroup[]>([]);\n    public readonly user_list = combineLatest([\n        this.forms,\n        this.new_items,\n    ]).pipe(map(([a, b]) => [...a, ...b]));\n    public readonly change_count = this.user_list.pipe(\n        map((_) => _.filter((f) => f.dirty || !this.isNew(f.value.id)).length)\n    );\n    public deletion = new Set<string>();\n\n    public isNew(id: string) {\n        return !!this.new_items.getValue().find((_) => _.value.id === id);\n    }\n\n    constructor(private _state: ParkingStateService) {}\n\n    public markForDelete(id) {\n        if (this.isNew(id)) {\n            this.new_items.next(\n                this.new_items.getValue().filter((_) => _.value.id !== id)\n            );\n        } else this.deletion.add(id);\n    }\n\n    public async clearChanges(id) {\n        if (this.isNew(id)) {\n            const new_items = this.new_items.getValue();\n            const item = new_items.find((_) => _.value.id === id);\n            if (item) {\n                item.reset({ id });\n            }\n        } else {\n            const list = await this.user_list.pipe(take(1)).toPromise();\n            const users = await this._state.users.pipe(take(1)).toPromise();\n            const item = list.find((_) => _.value.id === id);\n            const user = users.find((_) => _.id === id);\n            if (item && user) item.reset(user);\n        }\n    }\n\n    public newUser() {\n        const form = generateUserForm({\n            id: `parking-${randomInt(99999999, 10000000)}`,\n        } as any);\n        this.new_items.next([...this.new_items.getValue(), form]);\n    }\n\n    public async saveChanges() {\n        const list = await this.user_list.pipe(take(1)).toPromise();\n        const users = list\n            .map((_) => _.value)\n            .filter((_) => !this.deletion.has(_.id));\n        await this._state.saveUsers(users);\n    }\n}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { ParkingStateService } from './parking-state.service';\n\n@Component({\n    selector: 'app-parking',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden bg-base-100\">\n            <parking-topbar></parking-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'spaces']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'spaces'\"\n                    >\n                        Manage Spaces\n                    </a>\n                    <!-- <a\n                        mat-tab-link\n                        [routerLink]=\"['/parking', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Make Booking\n                    </a> -->\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto px-4\">\n                <router-outlet></router-outlet>\n            </div>\n            <div\n                *ngIf=\"!(levels | async)?.length\"\n                class=\"absolute inset-0 flex flex-col items-center justify-center z-50\"\n            >\n                <div class=\"absolute inset-0 bg-base-100 opacity-50 z-0\"></div>\n                <p>No parking floors for the currently selected building</p>\n            </div>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class ParkingComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._state.levels;\n\n    public path = '';\n\n    constructor(private _state: ParkingStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { UIModule } from '../ui/ui.module';\n\nimport { ParkingBookingsListComponent } from './parking-bookings-list.component';\nimport { ParkingSpaceListComponent } from './parking-space-list.component';\nimport { ParkingSpaceModalComponent } from './parking-space-modal.component';\nimport { ParkingTopbarComponent } from './parking-topbar.component';\nimport { ParkingComponent } from './parking.component';\nimport { NewParkingComponent } from './new-parking.component';\nimport { ParkingUsersListComponent } from './parking-users-list.component';\n\nconst COMPONENTS = [\n    NewParkingComponent,\n    ParkingComponent,\n    ParkingBookingsListComponent,\n    ParkingSpaceListComponent,\n    ParkingUsersListComponent,\n    ParkingTopbarComponent,\n    ParkingSpaceModalComponent,\n];\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewParkingComponent,\n        children: [\n            { path: 'events', component: ParkingBookingsListComponent },\n            { path: 'users', component: ParkingUsersListComponent },\n            { path: 'manage', component: ParkingSpaceListComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: ParkingComponent,\n        children: [\n            { path: 'events', component: ParkingBookingsListComponent },\n            { path: 'users', component: ParkingUsersListComponent },\n            { path: 'manage', component: ParkingSpaceListComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        UIModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FormFieldsModule,\n        MatTabsModule,\n        MatProgressBarModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class AppParkingModule {}\n"],"names":["NavigationEnd","Router","AsyncHandler","ParkingStateService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","NewParkingComponent","constructor","_state","_router","levels","path","ngOnInit","startPolling","subscription","events","subscribe","e","url_parts","url","split","parts","length","_","ɵɵdirectiveInject","i1","i2","_2","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","NewParkingComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","NewParkingComponent_div_7_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ɵɵpipeBind1","ɵɵtextInterpolate1","row_r1","extension_data","plate_number","ɵɵclassProp","data_r2","ɵɵlistener","ParkingBookingsListComponent_ng_template_7_Template_button_click_1_listener","row_r4","ɵɵrestoreView","_r3","row","ctx_r4","ɵɵnextContext","ɵɵresetView","reject","ParkingBookingsListComponent_ng_template_7_Template_button_click_4_listener","approve","ParkingBookingsListComponent","bookings","options","loading","rejectBooking","approveBooking","ParkingBookingsListComponent_Template","ParkingBookingsListComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","ParkingBookingsListComponent_ng_template_5_Template","ParkingBookingsListComponent_ng_template_7_Template","ParkingBookingsListComponent_mat_progress_bar_9_Template","tmp_3_0","includes","ɵɵpureFunction0","_c0","_c1","search","_c2","ɵɵpureFunction3","_c3","plate_template_r6","action_template_r8","status_template_r7","tmp_10_0","ParkingSpaceListComponent_ng_template_4_Template_button_click_1_listener","row_r3","_r2","ctx_r3","editSpace","ParkingSpaceListComponent_ng_template_4_Template_button_click_4_listener","removeSpace","ParkingSpaceListComponent","spaces","s","ParkingSpaceListComponent_Template","ParkingSpaceListComponent_ng_template_4_Template","ParkingSpaceListComponent_mat_progress_bar_6_Template","ParkingSpaceListComponent_Template_button_click_8_listener","_r1","tmp_1_0","ɵɵpureFunction1","action_template_r5","tmp_8_0","EventEmitter","FormControl","FormGroup","Validators","MatDialogRef","MAT_DIALOG_DATA","ParkingSpaceModalComponent_main_5_Template_button_click_17_listener","ctx_r1","form","patchValue","assigned_user","assigned_to","assigned_name","ParkingSpaceModalComponent_main_5_Template_button_click_30_listener","postForm","ParkingSpaceModalComponent","id","_data","_dialog_ref","event","name","required","map_id","notes","map_rotation","valid","value","email","disableClose","emit","reason","metadata","outputs","ParkingSpaceModalComponent_Template","ParkingSpaceModalComponent_button_4_Template","ParkingSpaceModalComponent_main_5_Template","ParkingSpaceModalComponent_ng_template_6_Template","load_state_r3","MatDialog","queryBookings","notifyError","notifySuccess","openConfirmModal","OrganisationService","showMetadata","updateMetadata","randomInt","endOfDay","format","getUnixTime","startOfDay","BehaviorSubject","combineLatest","debounceTime","filter","first","map","shareReplay","switchMap","take","tap","_org","_dialog","_poll","_change","_options","date","Date","now","zones","_loading","active_levels","pipe","lvl","tags","lvls","next","getValue","details","Array","users","active_building","bld","period_start","period_end","type","join","asObservable","setOptions","delay","interval","stopPolling","clearInterval","space","_this","_asyncToGenerator","ref","open","data","state","Promise","race","afterClosed","toPromise","componentInstance","zone","new_space","idx","findIndex","push","new_space_list","description","close","_this2","title","content","icon","saveUsers","booking","success","catch","user_name","ɵɵinject","factory","ɵfac","providedIn","ActivatedRoute","level_r1","display_name","ParkingTopbarComponent_date_options_7_Template_date_options_dateChange_0_listener","$event","ctx_r2","setDate","ParkingTopbarComponent","_route","manage","d","setSearch","str","updateZones","z","navigate","relativeTo","queryParams","zone_ids","initialised","queryParamMap","params","has","get","level","levelWithID","building","buildings","find","parent_id","i3","ParkingTopbarComponent_Template","ParkingTopbarComponent_Template_mat_select_ngModelChange_2_listener","ParkingTopbarComponent_mat_option_3_Template","ParkingTopbarComponent_Template_searchbar_modelChange_6_listener","ParkingTopbarComponent_date_options_7_Template","ParkingUsersListComponent_ng_template_4_Template_input_ngModelChange_0_listener","form_r4","key_r5","key","setValue","name_r6","ctx_r7","deletion","form_r7","ParkingUsersListComponent_ng_template_6_button_2_Template_button_click_0_listener","_r9","markForDelete","isNew","ParkingUsersListComponent_ng_template_6_button_3_Template_button_click_0_listener","_r10","clearChanges","ParkingUsersListComponent_ng_template_6_app_icon_1_Template","ParkingUsersListComponent_ng_template_6_button_2_Template","ParkingUsersListComponent_ng_template_6_button_3_Template","dirty","entries","new_items","change_count","ParkingUsersListComponent_div_11_div_1_Template","ParkingUsersListComponent_div_11_div_2_Template","ParkingUsersListComponent_div_11_div_4_Template","generateUserForm","user","transponder","designation","car_model","car_colour","phone","ParkingUsersListComponent","forms","u","user_list","a","b","f","Set","add","item","reset","list","newUser","saveChanges","ParkingUsersListComponent_Template","ParkingUsersListComponent_ng_template_4_Template","ParkingUsersListComponent_ng_template_6_Template","ParkingUsersListComponent_Template_button_click_8_listener","ParkingUsersListComponent_div_11_Template","tmp_2_0","ɵɵpureFunctionV","text_input_template_r11","action_template_r12","ParkingComponent","ParkingComponent_Template","ParkingComponent_div_11_Template","tmp_4_0","CommonModule","FormsModule","ReactiveFormsModule","MatProgressBarModule","MatTabsModule","RouterModule","FormFieldsModule","UIModule","COMPONENTS","ROUTES","component","children","redirectTo","AppParkingModule","_3","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}