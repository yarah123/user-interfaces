{"version":3,"file":"apps_concierge_src_app_room-manager_room-manager_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/room-manager/new-room-manager.component.ts","./apps/concierge/src/app/room-manager/room-list.component.ts","./apps/concierge/src/app/room-manager/room-management.service.ts","./apps/concierge/src/app/room-manager/room-manager-topbar.component.ts","./apps/concierge/src/app/room-manager/room-manager.component.ts","./apps/concierge/src/app/room-manager/room-manager.module.ts","./apps/concierge/src/app/room-manager/room-modal.component.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-new-room-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <room-manager-topbar class=\"block w-full\"></room-manager-topbar>\n                <room-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></room-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class NewRoomManagerComponent {}\n","import { Component } from '@angular/core';\nimport { RoomManagementService } from './room-management.service';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'room-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-4\">\n            <custom-table\n                class=\"block min-w-[48rem] w-full h-full\"\n                [dataSource]=\"rooms\"\n                [columns]=\"[\n                    'display_name',\n                    'zones',\n                    'capacity',\n                    'type',\n                    'bookable',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'Room Name',\n                    'Level',\n                    'Capacity',\n                    'Room Type',\n                    'Bookable',\n                    ' '\n                ]\"\n                [column_size]=\"['flex', '8r', '6r', '8r', '6r', '3.75r']\"\n                [template]=\"{\n                    display_name: name_template,\n                    bookable: bool_template,\n                    zones: level_template,\n                    actions: action_template\n                }\"\n                empty=\"No rooms for selected level or building\"\n            ></custom-table>\n        </div>\n        <ng-template #name_template let-row=\"row\" let-data=\"data\">\n            <span\n                [matTooltip]=\"row.id\"\n                class=\"underline\"\n                (click)=\"copyToClipboard(row.id)\"\n                >{{ data }}</span\n            >\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ (data | level)?.display_name || (data | level)?.name }}\n        </ng-template>\n        <ng-template #bool_template let-data=\"data\">\n            <div\n                [class.bg-error]=\"!data\"\n                [class.bg-success]=\"data\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl text-white mx-auto\"\n            >\n                <app-icon>{{ data ? 'done' : 'close' }}</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <button\n                    btn\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Room\"\n                    (click)=\"editRoom(row)\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class RoomListComponent {\n    public readonly rooms = this._manager.filtered_rooms;\n\n    public readonly editRoom = (room) => this._manager.editRoom(room);\n\n    public readonly copyToClipboard = (id: string) => {\n        const success = this._clipboard.copy(id);\n        if (success) notifySuccess('Room ID copied to clipboard.');\n    };\n\n    constructor(\n        private _manager: RoomManagementService,\n        private _clipboard: Clipboard\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceSystem, querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { RoomModalComponent } from './room-modal.component';\n\nexport interface RoomListOptions {\n    zone?: string;\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomManagementService {\n    private _options = new BehaviorSubject<RoomListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    public readonly room_list = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_?.id),\n        switchMap(([bld]) =>\n            querySystems({ zone_id: bld.id }).pipe(\n                map(({ data }) => data),\n                catchError(() => of([]))\n            )\n        ),\n        map((list) =>\n            list\n                .filter((_) => this._org.levelWithID(_.zones as any))\n                .sort((a, b) => a.name.localeCompare(b.name))\n        ),\n        shareReplay(1)\n    );\n\n    public readonly filtered_rooms = combineLatest([\n        this.room_list,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            if (options.zone) {\n                list = list.filter((_) => _.zones.includes(options.zone));\n            }\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<RoomListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editRoom(room: PlaceSystem = new PlaceSystem()) {\n        const ref = this._dialog.open(RoomModalComponent, { data: { room } });\n        ref.afterClosed().subscribe((data) => {\n            if (data) setTimeout(() => this._change.next(Date.now()), 300);\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { RoomManagementService } from './room-management.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { first, take } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: 'room-manager-topbar',\n    template: `\n        <div class=\"flex items-center justify-between p-4\">\n            <h2 class=\"text-2xl font-medium\">Room Management</h2>\n            <button btn (click)=\"newRoom()\" class=\"w-32\">New Room</button>\n        </div>\n        <div class=\"flex items-center bg-base-100 h-20 px-4 space-x-2\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(this.filters | async)?.zone\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option [value]=\"building?.id\">All Levels</mat-option>\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <button\n                btn\n                icon\n                matRipple\n                class=\"bg-secondary text-secondary-content rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Room Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n})\nexport class RoomManagerTopbarComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._manager.options;\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._manager.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._manager.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zone) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_id: zone },\n        });\n        this._manager.setFilters({ zone });\n    };\n\n    public readonly newRoom = () => this._manager.editRoom();\n\n    public get building() {\n        return this._org.building;\n    }\n\n    constructor(\n        private _manager: RoomManagementService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'room' },\n        });\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('zone_id')) {\n                    const new_zone = params.get('zone_id');\n                    const { zone } = await this._manager.options\n                        .pipe(take(1))\n                        .toPromise();\n                    if (new_zone && new_zone !== zone) {\n                        const level = this._org.levelWithID([new_zone]);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.setFilters({ zone: new_zone });\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                var zone = levels.find((lvl) => lvl.id === zone);\n                if (!zone && levels.length) zone = levels[0].id;\n                this.updateZones(zone);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-room-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex flex-col\">\n            <room-manager-topbar class=\"block w-full\"></room-manager-topbar>\n            <room-list class=\"block w-full relative flex-1 h-1/2\"></room-list>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class RoomManagerComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { RoomManagerComponent } from './room-manager.component';\nimport { RoomManagerTopbarComponent } from './room-manager-topbar.component';\nimport { RoomListComponent } from './room-list.component';\nimport { RoomModalComponent } from './room-modal.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { NewRoomManagerComponent } from './new-room-manager.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: RoomManagerComponent },\n    { path: 'new', component: NewRoomManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewRoomManagerComponent,\n        RoomManagerComponent,\n        RoomManagerTopbarComponent,\n        RoomListComponent,\n        RoomModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class RoomManagerModule {}\n","import { Component, Inject, SimpleChanges } from '@angular/core';\nimport { SPACE, ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport {\n    EncryptionLevel,\n    addSystem,\n    queryZones,\n    showMetadata,\n    updateMetadata,\n    updateSystem,\n} from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    TIMEZONES_IANA,\n    getInvalidFields,\n    getItemWithKeys,\n    notifyError,\n    unique,\n} from '@placeos/common';\nimport { Space, generateSystemsFormFields } from '@placeos/spaces';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'room-form-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Room</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[36rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.zone\">\n                    <label\n                        for=\"zone\"\n                        [class.error]=\"\n                            form.controls.zone.invalid &&\n                            form.controls.zone.touched\n                        \"\n                        i18n=\"@@zoneLabel\"\n                    >\n                        Level<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"zone\"\n                            placeholder=\"Select Level\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>Level is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.name\"\n                    >\n                        <label\n                            for=\"system-name\"\n                            [class.error]=\"\n                                form.controls.name.invalid &&\n                                form.controls.name.touched\n                            \"\n                            i18n=\"@@nameLabel\"\n                        >\n                            Name<span>*</span>:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"system-name\"\n                                placeholder=\"Room Name\"\n                                i18n-placeholder=\"@@systemNamePlaceholder\"\n                                formControlName=\"name\"\n                                required\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.name.invalid\"\n                                i18n=\"@@systemNameError\"\n                                >Room name is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.email\"\n                    >\n                        <label\n                            for=\"system-email\"\n                            [class.error]=\"\n                                form.controls.email.invalid &&\n                                form.controls.email.touched\n                            \"\n                            i18n=\"@@emailLabel\"\n                        >\n                            Email:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"system-email\"\n                                placeholder=\"Room Email\"\n                                i18n-placeholder=\"@@systemEmailPlaceholder\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.email.invalid\"\n                                i18n=\"@@emailError\"\n                                >A valid email is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.display_name\"\n                    >\n                        <label for=\"display-name\" i18n=\"@@displayNameLabel\"\n                            >Display Name:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"display-name\"\n                                placeholder=\"Display Name\"\n                                i18n-placeholder=\"@@displayNamePlaceholder\"\n                                formControlName=\"display_name\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.display_name\"\n                    >\n                        <label for=\"code-name\" i18n=\"@@codeNameLabel\"\n                            >Code:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"code-name\"\n                                placeholder=\"Code\"\n                                i18n-placeholder=\"@@codeNamePlaceholder\"\n                                formControlName=\"code\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\" [formGroup]=\"settings_form\">\n                    <div class=\"flex-1 flex flex-col space-y-2\">\n                        <label for=\"setup\" class=\"flex items-center\">\n                            Default Setup Duration\n                            <app-icon\n                                class=\"ml-2\"\n                                matTooltip=\"Time before a meeting needed for setup and preparation for the upcoming meeting\"\n                            >\n                                info_outline\n                            </app-icon>\n                        </label>\n                        <a-duration-field\n                            name=\"setup\"\n                            formControlName=\"setup\"\n                            [min]=\"0\"\n                        ></a-duration-field>\n                    </div>\n                    <div class=\"flex-1 flex flex-col space-y-2\">\n                        <label for=\"breakdown\" class=\"flex items-center\">\n                            Default Breakdown Duration\n                            <app-icon\n                                class=\"ml-2\"\n                                matTooltip=\"Time after a meeting needed for cleaning and preparation for next meeting\"\n                            >\n                                info_outline\n                            </app-icon>\n                        </label>\n                        <a-duration-field\n                            name=\"breakdown\"\n                            [min]=\"0\"\n                            formControlName=\"breakdown\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.capacity\"\n                    >\n                        <label\n                            for=\"capacity\"\n                            [class.error]=\"\n                                form.controls.capacity.invalid &&\n                                form.controls.capacity.touched\n                            \"\n                            i18n=\"@@capacityLabel\"\n                        >\n                            Capacity:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"capacity\"\n                                type=\"number\"\n                                placeholder=\"Capacity\"\n                                i18n-placeholder=\"@@capacityPlaceholder\"\n                                formControlName=\"capacity\"\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.capacity.invalid\"\n                                i18n=\"@@capacityError\"\n                            >\n                                A valid positive number is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.bookable\">\n                        <mat-checkbox\n                            name=\"bookable\"\n                            formControlName=\"bookable\"\n                            i18n=\"@@bookableLabel\"\n                        >\n                            Bookable\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                    <label for=\"description\" i18n=\"@@descriptionLabel\"\n                        >Description:</label\n                    >\n                    <mat-form-field appearance=\"outline\">\n                        <textarea\n                            matInput\n                            name=\"description\"\n                            placeholder=\"Description\"\n                            i18n=\"@@descriptionPlaceholder\"\n                            formControlName=\"description\"\n                        ></textarea>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.features\">\n                    <label\n                        [class.error]=\"\n                            form.controls.features.invalid &&\n                            form.controls.features.touched\n                        \"\n                        i18n=\"@@featuresLabel\"\n                    >\n                        Features:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-chip-grid #chipList aria-label=\"Room features\">\n                            <mat-chip-row\n                                *ngFor=\"let feature of feature_list\"\n                                [selectable]=\"true\"\n                                [removable]=\"true\"\n                                (removed)=\"removeFeature(feature)\"\n                            >\n                                {{ feature }}\n                                <app-icon matChipRemove>close</app-icon>\n                            </mat-chip-row>\n                            <input\n                                placeholder=\"New feature...\"\n                                [matChipInputFor]=\"chipList\"\n                                [matChipInputSeparatorKeyCodes]=\"separators\"\n                                [matChipInputAddOnBlur]=\"true\"\n                                (matChipInputTokenEnd)=\"addFeature($event)\"\n                            />\n                        </mat-chip-grid>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.map_id\">\n                    <label for=\"map_id\" i18n=\"@@mapIdLabel\">Map ID:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"map_id\"\n                            i18n-placeholder=\"@@mapIdPlaceholder\"\n                            placeholder=\"Map SVG ID selector e.g. area-01.10-status\"\n                            formControlName=\"map_id\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"timezone\">Timezone</label>\n                    <mat-form-field appearance=\"outline\">\n                        <app-icon matPrefix class=\"text-2xl\">search</app-icon>\n                        <input\n                            matInput\n                            formControlName=\"timezone\"\n                            placeholder=\"Room timezone\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                    </mat-form-field>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let tz of filtered_timezones\"\n                            [value]=\"tz\"\n                            >{{ tz }}</mat-option\n                        >\n                        <mat-option *ngIf=\"!timezones.length\" [disabled]=\"true\">\n                            No matching timezones\n                        </mat-option>\n                    </mat-autocomplete>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                    <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                    <image-list-field\n                        name=\"images\"\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving room...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-checkbox {\n                margin-top: 2.5em;\n                margin-bottom: 1.5em;\n            }\n\n            @media screen and (max-width: 640px) {\n                mat-checkbox {\n                    margin-top: 0;\n                }\n            }\n        `,\n    ],\n})\nexport class RoomModalComponent extends AsyncHandler {\n    public loading = false;\n    public timezones: string[] = [];\n    public filtered_timezones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** Group of form fields used for creating the system */\n    public form = generateSystemsFormFields(this._data.room as any);\n    public settings_form = new FormGroup({\n        setup: new FormControl(0),\n        breakdown: new FormControl(0),\n    });\n    /** Levels of encyption available for the system's settings */\n    public encryption_levels: any[] = [\n        { id: EncryptionLevel.None, name: 'None' },\n        { id: EncryptionLevel.Support, name: 'Support' },\n        { id: EncryptionLevel.Admin, name: 'Admin' },\n        { id: EncryptionLevel.NeverDisplay, name: 'Never Display' },\n    ];\n    /** Function for querying zones */\n    public readonly query_fn = (_: string) =>\n        queryZones({ q: _ }).pipe(map((resp) => resp.data));\n    /** List of separator characters for features */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    public get feature_list(): string[] {\n        return this.form.controls.features.value;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { room: Space },\n        private _dialog_ref: MatDialogRef<RoomModalComponent>,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        const { details } = await showMetadata(\n            this._org.organisation.id,\n            'settings'\n        ).toPromise();\n        const overflow = getItemWithKeys(['events', 'overflow'], details) || {};\n        if (this._data.room.id && overflow[this._data.room.id]) {\n            this.settings_form.patchValue(overflow[this._data.room.id]);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.form) {\n            this.updateTimezoneList();\n            this.subscription(\n                'tz-change',\n                this.form.valueChanges.subscribe(\n                    ({ timezone }) =>\n                        (this.filtered_timezones = this.timezones.filter((_) =>\n                            _.toLowerCase().includes(timezone.toLowerCase())\n                        ))\n                )\n            );\n        }\n    }\n\n    /**\n     * Add a feature to the list of features for the item\n     * @param event Input event\n     */\n    public addFeature(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.features) return;\n        const input = event.input;\n        const value = event.value;\n        const feature_list = this.feature_list;\n        if ((value || '').trim()) {\n            feature_list.push(value);\n            this.form.controls.features.setValue(feature_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove feature from the list\n     * @param existing_feature Feature to remove\n     */\n    public removeFeature(existing_feature: string): void {\n        if (!this.form || !this.form.controls.features) return;\n        const feature_list = this.feature_list;\n        const index = feature_list.indexOf(existing_feature);\n\n        if (index >= 0) {\n            feature_list.splice(index, 1);\n            this.form.controls.features.setValue(feature_list);\n        }\n    }\n\n    public updateTimezoneList() {\n        const timezone = this.form?.value?.timezone || '';\n        this.timezones = TIMEZONES_IANA;\n        this.filtered_timezones = this.timezones.filter((_) =>\n            _.toLowerCase().includes(timezone.toLowerCase())\n        );\n    }\n\n    public async save() {\n        if (!this.form.valid)\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        if (!this.form.value.id) {\n            this.form.patchValue({\n                display_name:\n                    this.form.value.display_name || this.form.value.name,\n                zones: unique([\n                    this._org.organisation.id,\n                    this._org.building.parent_id,\n                    this._org.building.id,\n                    `${this.form.value.zone?.id || this.form.value.zone || ''}`,\n                ]).filter((_) => _),\n            });\n        }\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data = this.form.getRawValue();\n        const { details } = (await showMetadata(\n            this._org.organisation.id,\n            'settings'\n        ).toPromise()) as any;\n        const overflow = getItemWithKeys(['events', 'overflow'], details) || {};\n        overflow[data.id] = this.settings_form.value;\n        await updateMetadata(this._org.organisation.id, {\n            name: 'settings',\n            details: {\n                ...details,\n                events: { ...(details.events || {}), overflow },\n            },\n            description: '',\n        }).toPromise();\n        await (data.id\n            ? updateSystem(data.id, data)\n            : addSystem(data)\n        ).toPromise();\n        this._dialog_ref.disableClose = false;\n        this._dialog_ref.close(true);\n        this.loading = false;\n    }\n}\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["NewRoomManagerComponent","_","_2","selectors","attrs","_c0","decls","vars","consts","template","NewRoomManagerComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","RoomManagementService","Clipboard","notifySuccess","ɵɵlistener","RoomListComponent_ng_template_2_Template_span_click_0_listener","row_r2","ɵɵrestoreView","_r1","row","ctx_r2","ɵɵnextContext","ɵɵresetView","copyToClipboard","id","ɵɵtext","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","data_r4","ɵɵtextInterpolate1","tmp_6_0","ɵɵpipeBind1","data_r5","display_name","name","ɵɵclassProp","data_r6","RoomListComponent_ng_template_8_Template_button_click_1_listener","row_r8","_r7","editRoom","RoomListComponent","constructor","_manager","_clipboard","rooms","filtered_rooms","room","success","copy","ɵɵdirectiveInject","i1","i2","RoomListComponent_Template","ɵɵtemplate","RoomListComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","RoomListComponent_ng_template_4_Template","RoomListComponent_ng_template_6_Template","RoomListComponent_ng_template_8_Template","ɵɵpureFunction0","_c1","_c2","ɵɵpureFunction4","_c3","name_template_r9","bool_template_r11","level_template_r10","action_template_r12","MatDialog","OrganisationService","PlaceSystem","querySystems","BehaviorSubject","combineLatest","of","catchError","filter","map","shareReplay","switchMap","RoomModalComponent","_org","_dialog","_options","_change","options","asObservable","room_list","active_building","pipe","bld","zone_id","data","list","levelWithID","zones","sort","a","b","localeCompare","zone","includes","search","toLowerCase","setFilters","next","getValue","setSearchString","ref","open","afterClosed","subscribe","setTimeout","Date","now","ɵɵinject","factory","ɵfac","providedIn","ActivatedRoute","Router","AsyncHandler","first","take","BookingRulesModalComponent","level_r1","RoomManagerTopbarComponent","building","_route","_router","levels","active_levels","filters","setSearch","str","updateZones","navigate","relativeTo","queryParams","newRoom","manageRestrictions","type","ngOnInit","_this","_asyncToGenerator","initialised","toPromise","subscription","queryParamMap","_ref","params","has","new_zone","get","level","buildings","find","parent_id","_x","apply","arguments","lvl","length","i3","i4","features","ɵɵInheritDefinitionFeature","RoomManagerTopbarComponent_Template","RoomManagerTopbarComponent_Template_button_click_3_listener","RoomManagerTopbarComponent_Template_mat_select_ngModelChange_7_listener","$event","RoomManagerTopbarComponent_mat_option_11_Template","RoomManagerTopbarComponent_Template_button_click_14_listener","RoomManagerTopbarComponent_Template_searchbar_modelChange_17_listener","tmp_0_0","RoomManagerComponent","RoomManagerComponent_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","ROUTES","path","component","RoomManagerModule","_3","forChild","declarations","imports","SimpleChanges","SPACE","ENTER","COMMA","EncryptionLevel","addSystem","queryZones","showMetadata","updateMetadata","updateSystem","TIMEZONES_IANA","getInvalidFields","getItemWithKeys","notifyError","unique","generateSystemsFormFields","MAT_DIALOG_DATA","MatDialogRef","FormControl","FormGroup","ɵɵi18nStart","ɵɵi18nEnd","RoomModalComponent_main_4_form_1_div_1_mat_option_6_Template","ctx_r1","form","controls","invalid","touched","ɵɵi18n","RoomModalComponent_main_4_form_1_div_3_mat_error_6_Template","RoomModalComponent_main_4_form_1_div_4_mat_error_5_Template","email","RoomModalComponent_main_4_form_1_div_22_mat_error_5_Template","capacity","RoomModalComponent_main_4_form_1_div_25_mat_chip_row_6_Template_mat_chip_row_removed_0_listener","feature_r5","_r4","$implicit","removeFeature","RoomModalComponent_main_4_form_1_div_25_mat_chip_row_6_Template","RoomModalComponent_main_4_form_1_div_25_Template_input_matChipInputTokenEnd_7_listener","_r3","addFeature","feature_list","chipList_r6","separators","tz_r7","RoomModalComponent_main_4_form_1_div_1_Template","RoomModalComponent_main_4_form_1_div_3_Template","RoomModalComponent_main_4_form_1_div_4_Template","RoomModalComponent_main_4_form_1_div_6_Template","RoomModalComponent_main_4_form_1_div_7_Template","RoomModalComponent_main_4_form_1_div_22_Template","RoomModalComponent_main_4_form_1_div_23_Template","RoomModalComponent_main_4_form_1_div_24_Template","RoomModalComponent_main_4_form_1_div_25_Template","RoomModalComponent_main_4_form_1_div_26_Template","RoomModalComponent_main_4_form_1_mat_option_36_Template","RoomModalComponent_main_4_form_1_mat_option_37_Template","RoomModalComponent_main_4_form_1_div_38_Template","settings_form","bookable","description","map_id","auto_r8","filtered_timezones","timezones","images","RoomModalComponent_main_4_form_1_Template","RoomModalComponent_footer_5_Template_button_click_1_listener","_r9","save","value","_data","_dialog_ref","loading","setup","breakdown","encryption_levels","None","Support","Admin","NeverDisplay","query_fn","q","resp","details","organisation","overflow","patchValue","ngOnChanges","changes","updateTimezoneList","valueChanges","timezone","event","input","trim","push","setValue","existing_feature","index","indexOf","splice","_this2","valid","join","disableClose","getRawValue","events","close","ɵɵNgOnChangesFeature","i18n_0","ngI18nClosureMode","$localize","RoomModalComponent_button_3_Template","RoomModalComponent_main_4_Template","RoomModalComponent_footer_5_Template","RoomModalComponent_ng_template_6_Template","load_state_r10","getUnixTime","MapLocation","location","position","asset_id","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}