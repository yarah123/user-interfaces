{"version":3,"file":"apps_concierge_src_app_room-manager_room-manager_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/room-manager/new-room-manager.component.ts","./apps/concierge/src/app/room-manager/room-list.component.ts","./apps/concierge/src/app/room-manager/room-management.service.ts","./apps/concierge/src/app/room-manager/room-manager-topbar.component.ts","./apps/concierge/src/app/room-manager/room-manager.component.ts","./apps/concierge/src/app/room-manager/room-manager.module.ts","./apps/concierge/src/app/room-manager/room-modal.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-new-room-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <room-manager-topbar class=\"block w-full\"></room-manager-topbar>\n                <room-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></room-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class NewRoomManagerComponent {}\n","import { Component } from '@angular/core';\nimport { RoomManagementService } from './room-management.service';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'room-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-4\">\n            <custom-table\n                class=\"block min-w-[48rem] w-full h-full\"\n                [dataSource]=\"rooms\"\n                [columns]=\"[\n                    'display_name',\n                    'zones',\n                    'capacity',\n                    'type',\n                    'bookable',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'Room Name',\n                    'Level',\n                    'Capacity',\n                    'Room Type',\n                    'Bookable',\n                    ' '\n                ]\"\n                [column_size]=\"['flex', '8r', '6r', '8r', '6r', '3.75r']\"\n                [template]=\"{\n                    display_name: name_template,\n                    bookable: bool_template,\n                    zones: level_template,\n                    actions: action_template\n                }\"\n                empty=\"No rooms for selected level or building\"\n            ></custom-table>\n        </div>\n        <ng-template #name_template let-row=\"row\" let-data=\"data\">\n            <span\n                [matTooltip]=\"row.id\"\n                class=\"underline\"\n                (click)=\"copyToClipboard(row.id)\"\n                >{{ data }}</span\n            >\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ (data | level)?.display_name || (data | level)?.name }}\n        </ng-template>\n        <ng-template #bool_template let-data=\"data\">\n            <div\n                [class.bg-error]=\"!data\"\n                [class.bg-success]=\"data\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl text-white mx-auto\"\n            >\n                <app-icon>{{ data ? 'done' : 'close' }}</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <button\n                    btn\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Room\"\n                    (click)=\"editRoom(row)\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class RoomListComponent {\n    public readonly rooms = this._manager.filtered_rooms;\n\n    public readonly editRoom = (room) => this._manager.editRoom(room);\n\n    public readonly copyToClipboard = (id: string) => {\n        const success = this._clipboard.copy(id);\n        if (success) notifySuccess('Room ID copied to clipboard.');\n    };\n\n    constructor(\n        private _manager: RoomManagementService,\n        private _clipboard: Clipboard\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceSystem, querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { RoomModalComponent } from './room-modal.component';\nimport { SettingsService } from '@placeos/common';\n\nexport interface RoomListOptions {\n    zones?: string[];\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomManagementService {\n    private _options = new BehaviorSubject<RoomListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    public readonly room_list = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n        this._change,\n    ]).pipe(\n        filter(([b, r]) => !!b?.id),\n        switchMap(([bld, region]) =>\n            querySystems({\n                zone_id:\n                    (this._settings.get('use_region') ? region.id : '') ||\n                    bld.id,\n            }).pipe(\n                map(({ data }) => data),\n                catchError(() => of([]))\n            )\n        ),\n        map((list) =>\n            list\n                .filter((_) => this._org.levelWithID(_.zones as any))\n                .sort((a, b) => a.name.localeCompare(b.name))\n        ),\n        shareReplay(1)\n    );\n\n    public readonly filtered_rooms = combineLatest([\n        this.room_list,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            if (options.zones?.length) {\n                list = list.filter((_) =>\n                    options.zones.find((z) => _.zones.includes(z))\n                );\n            }\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public setFilters(options: Partial<RoomListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editRoom(room: PlaceSystem = new PlaceSystem()) {\n        const ref = this._dialog.open(RoomModalComponent, { data: { room } });\n        ref.afterClosed().subscribe((data) => {\n            if (data) setTimeout(() => this._change.next(Date.now()), 300);\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { RoomManagementService } from './room-management.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { first, map, take } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'room-manager-topbar',\n    template: `\n        <div class=\"flex items-center justify-between p-4\">\n            <h2 class=\"text-2xl font-medium\">Room Management</h2>\n            <button btn (click)=\"newRoom()\" class=\"w-32\">New Room</button>\n        </div>\n        <div class=\"flex items-center bg-base-100 h-20 px-4 space-x-2\">\n            <mat-form-field appearance=\"outline\" class=\"no-subscript w-[15rem]\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                    multiple\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"text-xs opacity-30\" *ngIf=\"use_region\">\n                                {{ (level.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ level.display_name || level.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <button\n                btn\n                icon\n                matRipple\n                class=\"bg-secondary text-secondary-content rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Room Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n})\nexport class RoomManagerTopbarComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld)\n        )\n    );\n\n    public readonly filters = this._manager.options;\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._manager.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._manager.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n    };\n\n    public readonly newRoom = () => this._manager.editRoom();\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public get root_zone() {\n        return (\n            (this.use_region ? this._org.region.id : '') ||\n            this._org.building.id\n        );\n    }\n\n    constructor(\n        private _manager: RoomManagementService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'room' },\n        });\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('zone_ids')) {\n                    const zone_list = (params.get('zone_ids') || '').split(',');\n                    const zones = zone_list.filter((z) => z);\n                    this._manager.setFilters({ zones });\n                }\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-room-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex flex-col\">\n            <room-manager-topbar class=\"block w-full\"></room-manager-topbar>\n            <room-list class=\"block w-full relative flex-1 h-1/2\"></room-list>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class RoomManagerComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { RoomManagerComponent } from './room-manager.component';\nimport { RoomManagerTopbarComponent } from './room-manager-topbar.component';\nimport { RoomListComponent } from './room-list.component';\nimport { RoomModalComponent } from './room-modal.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { NewRoomManagerComponent } from './new-room-manager.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: RoomManagerComponent },\n    { path: 'new', component: NewRoomManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewRoomManagerComponent,\n        RoomManagerComponent,\n        RoomManagerTopbarComponent,\n        RoomListComponent,\n        RoomModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class RoomManagerModule {}\n","import { Component, Inject, SimpleChanges } from '@angular/core';\nimport { SPACE, ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport {\n    EncryptionLevel,\n    addSystem,\n    queryZones,\n    showMetadata,\n    updateMetadata,\n    updateSystem,\n} from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    TIMEZONES_IANA,\n    getInvalidFields,\n    getItemWithKeys,\n    notifyError,\n    unique,\n} from '@placeos/common';\nimport { Space, generateSystemsFormFields } from '@placeos/spaces';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'room-form-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Room</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[36rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.zone\">\n                    <label\n                        for=\"zone\"\n                        [class.error]=\"\n                            form.controls.zone.invalid &&\n                            form.controls.zone.touched\n                        \"\n                        i18n=\"@@zoneLabel\"\n                    >\n                        Level<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"zone\"\n                            placeholder=\"Select Level\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>Level is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.name\"\n                    >\n                        <label\n                            for=\"system-name\"\n                            [class.error]=\"\n                                form.controls.name.invalid &&\n                                form.controls.name.touched\n                            \"\n                            i18n=\"@@nameLabel\"\n                        >\n                            Name<span>*</span>:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"system-name\"\n                                placeholder=\"Room Name\"\n                                i18n-placeholder=\"@@systemNamePlaceholder\"\n                                formControlName=\"name\"\n                                required\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.name.invalid\"\n                                i18n=\"@@systemNameError\"\n                                >Room name is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.email\"\n                    >\n                        <label\n                            for=\"system-email\"\n                            [class.error]=\"\n                                form.controls.email.invalid &&\n                                form.controls.email.touched\n                            \"\n                            i18n=\"@@emailLabel\"\n                        >\n                            Email:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"system-email\"\n                                placeholder=\"Room Email\"\n                                i18n-placeholder=\"@@systemEmailPlaceholder\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.email.invalid\"\n                                i18n=\"@@emailError\"\n                                >A valid email is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.display_name\"\n                    >\n                        <label for=\"display-name\" i18n=\"@@displayNameLabel\"\n                            >Display Name:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"display-name\"\n                                placeholder=\"Display Name\"\n                                i18n-placeholder=\"@@displayNamePlaceholder\"\n                                formControlName=\"display_name\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.display_name\"\n                    >\n                        <label for=\"code-name\" i18n=\"@@codeNameLabel\"\n                            >Code:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"code-name\"\n                                placeholder=\"Code\"\n                                i18n-placeholder=\"@@codeNamePlaceholder\"\n                                formControlName=\"code\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\" [formGroup]=\"settings_form\">\n                    <div class=\"flex-1 flex flex-col space-y-2\">\n                        <label for=\"setup\" class=\"flex items-center\">\n                            Default Setup Duration\n                            <app-icon\n                                class=\"ml-2\"\n                                matTooltip=\"Time before a meeting needed for setup and preparation for the upcoming meeting\"\n                            >\n                                info_outline\n                            </app-icon>\n                        </label>\n                        <a-duration-field\n                            name=\"setup\"\n                            formControlName=\"setup\"\n                            [min]=\"0\"\n                        ></a-duration-field>\n                    </div>\n                    <div class=\"flex-1 flex flex-col space-y-2\">\n                        <label for=\"breakdown\" class=\"flex items-center\">\n                            Default Breakdown Duration\n                            <app-icon\n                                class=\"ml-2\"\n                                matTooltip=\"Time after a meeting needed for cleaning and preparation for next meeting\"\n                            >\n                                info_outline\n                            </app-icon>\n                        </label>\n                        <a-duration-field\n                            name=\"breakdown\"\n                            [min]=\"0\"\n                            formControlName=\"breakdown\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.capacity\"\n                    >\n                        <label\n                            for=\"capacity\"\n                            [class.error]=\"\n                                form.controls.capacity.invalid &&\n                                form.controls.capacity.touched\n                            \"\n                            i18n=\"@@capacityLabel\"\n                        >\n                            Capacity:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"capacity\"\n                                type=\"number\"\n                                placeholder=\"Capacity\"\n                                i18n-placeholder=\"@@capacityPlaceholder\"\n                                formControlName=\"capacity\"\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.capacity.invalid\"\n                                i18n=\"@@capacityError\"\n                            >\n                                A valid positive number is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.bookable\">\n                        <mat-checkbox\n                            name=\"bookable\"\n                            formControlName=\"bookable\"\n                            i18n=\"@@bookableLabel\"\n                        >\n                            Bookable\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                    <label for=\"description\" i18n=\"@@descriptionLabel\"\n                        >Description:</label\n                    >\n                    <mat-form-field appearance=\"outline\">\n                        <textarea\n                            matInput\n                            name=\"description\"\n                            placeholder=\"Description\"\n                            i18n=\"@@descriptionPlaceholder\"\n                            formControlName=\"description\"\n                        ></textarea>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.features\">\n                    <label\n                        [class.error]=\"\n                            form.controls.features.invalid &&\n                            form.controls.features.touched\n                        \"\n                        i18n=\"@@featuresLabel\"\n                    >\n                        Features:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-chip-grid #chipList aria-label=\"Room features\">\n                            <mat-chip-row\n                                *ngFor=\"let feature of feature_list\"\n                                [selectable]=\"true\"\n                                [removable]=\"true\"\n                                (removed)=\"removeFeature(feature)\"\n                            >\n                                {{ feature }}\n                                <app-icon matChipRemove>close</app-icon>\n                            </mat-chip-row>\n                            <input\n                                placeholder=\"New feature...\"\n                                [matChipInputFor]=\"chipList\"\n                                [matChipInputSeparatorKeyCodes]=\"separators\"\n                                [matChipInputAddOnBlur]=\"true\"\n                                (matChipInputTokenEnd)=\"addFeature($event)\"\n                            />\n                        </mat-chip-grid>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.map_id\">\n                    <label for=\"map_id\" i18n=\"@@mapIdLabel\">Map ID:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"map_id\"\n                            i18n-placeholder=\"@@mapIdPlaceholder\"\n                            placeholder=\"Map SVG ID selector e.g. area-01.10-status\"\n                            formControlName=\"map_id\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"timezone\">Timezone</label>\n                    <mat-form-field appearance=\"outline\">\n                        <app-icon matPrefix class=\"text-2xl\">search</app-icon>\n                        <input\n                            matInput\n                            formControlName=\"timezone\"\n                            placeholder=\"Room timezone\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                    </mat-form-field>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let tz of filtered_timezones\"\n                            [value]=\"tz\"\n                            >{{ tz }}</mat-option\n                        >\n                        <mat-option *ngIf=\"!timezones.length\" [disabled]=\"true\">\n                            No matching timezones\n                        </mat-option>\n                    </mat-autocomplete>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                    <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                    <image-list-field\n                        name=\"images\"\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving room...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-checkbox {\n                margin-top: 2.5em;\n                margin-bottom: 1.5em;\n            }\n\n            @media screen and (max-width: 640px) {\n                mat-checkbox {\n                    margin-top: 0;\n                }\n            }\n        `,\n    ],\n})\nexport class RoomModalComponent extends AsyncHandler {\n    public loading = false;\n    public timezones: string[] = [];\n    public filtered_timezones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** Group of form fields used for creating the system */\n    public form = generateSystemsFormFields(this._data.room as any);\n    public settings_form = new FormGroup({\n        setup: new FormControl(0),\n        breakdown: new FormControl(0),\n    });\n    /** Levels of encyption available for the system's settings */\n    public encryption_levels: any[] = [\n        { id: EncryptionLevel.None, name: 'None' },\n        { id: EncryptionLevel.Support, name: 'Support' },\n        { id: EncryptionLevel.Admin, name: 'Admin' },\n        { id: EncryptionLevel.NeverDisplay, name: 'Never Display' },\n    ];\n    /** Function for querying zones */\n    public readonly query_fn = (_: string) =>\n        queryZones({ q: _ }).pipe(map((resp) => resp.data));\n    /** List of separator characters for features */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    public get feature_list(): string[] {\n        return this.form.controls.features.value;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { room: Space },\n        private _dialog_ref: MatDialogRef<RoomModalComponent>,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        const { details } = await showMetadata(\n            this._org.organisation.id,\n            'settings'\n        ).toPromise();\n        const overflow = getItemWithKeys(['events', 'overflow'], details) || {};\n        if (this._data.room.id && overflow[this._data.room.id]) {\n            this.settings_form.patchValue(overflow[this._data.room.id]);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.form) {\n            this.updateTimezoneList();\n            this.subscription(\n                'tz-change',\n                this.form.valueChanges.subscribe(\n                    ({ timezone }) =>\n                        (this.filtered_timezones = this.timezones.filter((_) =>\n                            _.toLowerCase().includes(timezone.toLowerCase())\n                        ))\n                )\n            );\n        }\n    }\n\n    /**\n     * Add a feature to the list of features for the item\n     * @param event Input event\n     */\n    public addFeature(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.features) return;\n        const input = event.input;\n        const value = event.value;\n        const feature_list = this.feature_list;\n        if ((value || '').trim()) {\n            feature_list.push(value);\n            this.form.controls.features.setValue(feature_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove feature from the list\n     * @param existing_feature Feature to remove\n     */\n    public removeFeature(existing_feature: string): void {\n        if (!this.form || !this.form.controls.features) return;\n        const feature_list = this.feature_list;\n        const index = feature_list.indexOf(existing_feature);\n\n        if (index >= 0) {\n            feature_list.splice(index, 1);\n            this.form.controls.features.setValue(feature_list);\n        }\n    }\n\n    public updateTimezoneList() {\n        const timezone = this.form?.value?.timezone || '';\n        this.timezones = TIMEZONES_IANA;\n        this.filtered_timezones = this.timezones.filter((_) =>\n            _.toLowerCase().includes(timezone.toLowerCase())\n        );\n    }\n\n    public async save() {\n        if (!this.form.valid)\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        if (!this.form.value.id) {\n            this.form.patchValue({\n                display_name:\n                    this.form.value.display_name || this.form.value.name,\n                zones: unique([\n                    this._org.organisation.id,\n                    this._org.building.parent_id,\n                    this._org.building.id,\n                    `${this.form.value.zone?.id || this.form.value.zone || ''}`,\n                ]).filter((_) => _),\n            });\n        }\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data = this.form.getRawValue();\n        const { details } = (await showMetadata(\n            this._org.organisation.id,\n            'settings'\n        ).toPromise()) as any;\n        const overflow = getItemWithKeys(['events', 'overflow'], details) || {};\n        overflow[data.id] = this.settings_form.value;\n        await updateMetadata(this._org.organisation.id, {\n            name: 'settings',\n            details: {\n                ...details,\n                events: { ...(details.events || {}), overflow },\n            },\n            description: '',\n        }).toPromise();\n        await (data.id\n            ? updateSystem(data.id, data)\n            : addSystem(data)\n        ).toPromise();\n        this._dialog_ref.disableClose = false;\n        this._dialog_ref.close(true);\n        this.loading = false;\n    }\n}\n"],"names":["NewRoomManagerComponent","_","_2","selectors","attrs","_c0","decls","vars","consts","template","NewRoomManagerComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","RoomManagementService","Clipboard","notifySuccess","ɵɵlistener","RoomListComponent_ng_template_2_Template_span_click_0_listener","restoredCtx","ɵɵrestoreView","_r11","row_r8","row","ctx_r10","ɵɵnextContext","ɵɵresetView","copyToClipboard","id","ɵɵtext","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","data_r9","ɵɵtextInterpolate1","tmp_0_0","ɵɵpipeBind1","data_r12","display_name","name","ɵɵclassProp","data_r13","RoomListComponent_ng_template_8_Template_button_click_1_listener","_r16","row_r14","ctx_r15","editRoom","RoomListComponent","constructor","_manager","_clipboard","rooms","filtered_rooms","room","success","copy","ɵɵdirectiveInject","i1","i2","RoomListComponent_Template","ɵɵtemplate","RoomListComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","RoomListComponent_ng_template_4_Template","RoomListComponent_ng_template_6_Template","RoomListComponent_ng_template_8_Template","ɵɵpureFunction0","_c1","_c2","ɵɵpureFunction4","_c3","_r1","_r5","_r3","_r7","MatDialog","OrganisationService","PlaceSystem","querySystems","BehaviorSubject","combineLatest","of","catchError","filter","map","shareReplay","switchMap","RoomModalComponent","SettingsService","_org","_dialog","_settings","_options","_change","options","asObservable","room_list","active_building","active_region","pipe","b","r","bld","region","zone_id","get","data","list","levelWithID","zones","sort","a","localeCompare","length","find","z","includes","search","toLowerCase","setFilters","next","getValue","setSearchString","ref","open","afterClosed","subscribe","setTimeout","Date","now","ɵɵinject","i3","factory","ɵfac","providedIn","ActivatedRoute","Router","AsyncHandler","first","BookingRulesModalComponent","level_r1","parent_id","RoomManagerTopbarComponent_mat_option_9_div_2_Template","ctx_r0","use_region","RoomManagerTopbarComponent","building","root_zone","_route","_router","levels","levelsForRegion","levelsForBuilding","filters","setSearch","str","updateZones","navigate","relativeTo","queryParams","zone_ids","join","newRoom","manageRestrictions","type","ngOnInit","_this","_asyncToGenerator","initialised","toPromise","subscription","queryParamMap","_ref","params","has","zone_list","split","_x","apply","arguments","i4","i5","features","ɵɵInheritDefinitionFeature","RoomManagerTopbarComponent_Template","RoomManagerTopbarComponent_Template_button_click_3_listener","RoomManagerTopbarComponent_Template_mat_select_ngModelChange_7_listener","$event","RoomManagerTopbarComponent_mat_option_9_Template","RoomManagerTopbarComponent_Template_button_click_12_listener","RoomManagerTopbarComponent_Template_searchbar_modelChange_15_listener","RoomManagerComponent","RoomManagerComponent_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","ROUTES","path","component","RoomManagerModule","_3","forChild","declarations","imports","SimpleChanges","SPACE","ENTER","COMMA","EncryptionLevel","addSystem","queryZones","showMetadata","updateMetadata","updateSystem","TIMEZONES_IANA","getInvalidFields","getItemWithKeys","notifyError","unique","generateSystemsFormFields","MAT_DIALOG_DATA","MatDialogRef","FormControl","FormGroup","level_r21","ɵɵi18nStart","ɵɵi18nEnd","RoomModalComponent_main_4_form_1_div_1_mat_option_6_Template","ctx_r6","form","controls","zone","invalid","touched","ɵɵi18n","RoomModalComponent_main_4_form_1_div_3_mat_error_6_Template","ctx_r7","RoomModalComponent_main_4_form_1_div_4_mat_error_5_Template","ctx_r8","email","RoomModalComponent_main_4_form_1_div_22_mat_error_5_Template","ctx_r11","capacity","RoomModalComponent_main_4_form_1_div_25_mat_chip_row_6_Template_mat_chip_row_removed_0_listener","_r29","feature_r27","$implicit","ctx_r28","removeFeature","RoomModalComponent_main_4_form_1_div_25_mat_chip_row_6_Template","RoomModalComponent_main_4_form_1_div_25_Template_input_matChipInputTokenEnd_7_listener","_r31","ctx_r30","addFeature","ctx_r14","feature_list","_r25","separators","tz_r32","RoomModalComponent_main_4_form_1_div_1_Template","RoomModalComponent_main_4_form_1_div_3_Template","RoomModalComponent_main_4_form_1_div_4_Template","RoomModalComponent_main_4_form_1_div_6_Template","RoomModalComponent_main_4_form_1_div_7_Template","RoomModalComponent_main_4_form_1_div_22_Template","RoomModalComponent_main_4_form_1_div_23_Template","RoomModalComponent_main_4_form_1_div_24_Template","RoomModalComponent_main_4_form_1_div_25_Template","RoomModalComponent_main_4_form_1_div_26_Template","RoomModalComponent_main_4_form_1_mat_option_36_Template","RoomModalComponent_main_4_form_1_mat_option_37_Template","RoomModalComponent_main_4_form_1_div_38_Template","ctx_r5","settings_form","bookable","description","map_id","filtered_timezones","timezones","images","RoomModalComponent_main_4_form_1_Template","ctx_r1","RoomModalComponent_footer_5_Template_button_click_1_listener","_r34","ctx_r33","save","value","_data","_dialog_ref","loading","active_levels","setup","breakdown","encryption_levels","None","Support","Admin","NeverDisplay","query_fn","q","resp","details","organisation","overflow","patchValue","ngOnChanges","changes","updateTimezoneList","valueChanges","timezone","event","input","trim","push","setValue","existing_feature","index","indexOf","splice","_this2","valid","disableClose","getRawValue","events","close","ɵɵNgOnChangesFeature","i18n_0","ngI18nClosureMode","$localize","RoomModalComponent_button_3_Template","RoomModalComponent_main_4_Template","RoomModalComponent_footer_5_Template","RoomModalComponent_ng_template_6_Template","_r4"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}