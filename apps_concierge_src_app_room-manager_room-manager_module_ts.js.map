{"version":3,"file":"apps_concierge_src_app_room-manager_room-manager_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/room-manager/new-room-manager.component.ts","./apps/concierge/src/app/room-manager/room-list.component.ts","./apps/concierge/src/app/room-manager/room-management.service.ts","./apps/concierge/src/app/room-manager/room-manager-topbar.component.ts","./apps/concierge/src/app/room-manager/room-manager.component.ts","./apps/concierge/src/app/room-manager/room-manager.module.ts","./apps/concierge/src/app/room-manager/room-modal.component.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-new-room-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <room-manager-topbar class=\"block w-full\"></room-manager-topbar>\n                <room-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></room-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class NewRoomManagerComponent {}\n","import { Component } from '@angular/core';\nimport { RoomManagementService } from './room-management.service';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'room-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-8\">\n            <custom-table\n                class=\"block min-w-[48rem] w-full h-full\"\n                [dataSource]=\"rooms\"\n                [columns]=\"[\n                    'display_name',\n                    'zones',\n                    'capacity',\n                    'type',\n                    'bookable',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'Room Name',\n                    'Level',\n                    'Capacity',\n                    'Room Type',\n                    'Bookable',\n                    ' '\n                ]\"\n                [column_size]=\"['flex', '8r', '6r', '8r', '6r', '3.75r']\"\n                [template]=\"{\n                    display_name: name_template,\n                    bookable: bool_template,\n                    zones: level_template,\n                    actions: action_template\n                }\"\n                empty=\"No rooms for selected level or building\"\n            ></custom-table>\n        </div>\n        <ng-template #name_template let-row=\"row\" let-data=\"data\">\n            <span\n                [matTooltip]=\"row.id\"\n                class=\"underline\"\n                (click)=\"copyToClipboard(row.id)\"\n                >{{ data }}</span\n            >\n        </ng-template>\n        <ng-template #level_template let-data=\"data\">\n            {{ (data | level)?.display_name || (data | level)?.name }}\n        </ng-template>\n        <ng-template #bool_template let-data=\"data\">\n            <div\n                [class.bg-error]=\"!data\"\n                [class.bg-success]=\"data\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl text-white mx-auto\"\n            >\n                <app-icon>{{ data ? 'done' : 'close' }}</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2\">\n                <button\n                    btn\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Room\"\n                    (click)=\"editRoom(row)\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class RoomListComponent {\n    public readonly rooms = this._manager.filtered_rooms;\n\n    public readonly editRoom = (room) => this._manager.editRoom(room);\n\n    public readonly copyToClipboard = (id: string) => {\n        const success = this._clipboard.copy(id);\n        if (success) notifySuccess('Room ID copied to clipboard.');\n    };\n\n    constructor(\n        private _manager: RoomManagementService,\n        private _clipboard: Clipboard\n    ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceSystem, querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\nimport { RoomModalComponent } from './room-modal.component';\nimport { SettingsService } from '@placeos/common';\n\nexport interface RoomListOptions {\n    zones?: string[];\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RoomManagementService {\n    private _options = new BehaviorSubject<RoomListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    public readonly room_list = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n        this._change,\n    ]).pipe(\n        filter(([b, r]) => !!b?.id),\n        switchMap(([bld, region]) =>\n            querySystems({\n                zone_id:\n                    (this._settings.get('use_region') ? region.id : '') ||\n                    bld.id,\n            }).pipe(\n                map(({ data }) => data),\n                catchError(() => of([]))\n            )\n        ),\n        map((list) =>\n            list\n                .filter((_) => this._org.levelWithID(_.zones as any))\n                .sort((a, b) => a.name.localeCompare(b.name))\n        ),\n        shareReplay(1)\n    );\n\n    public readonly filtered_rooms = combineLatest([\n        this.room_list,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            if (options.zones?.length) {\n                list = list.filter((_) =>\n                    options.zones.find((z) => _.zones.includes(z))\n                );\n            }\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public setFilters(options: Partial<RoomListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editRoom(room: PlaceSystem = new PlaceSystem()) {\n        const ref = this._dialog.open(RoomModalComponent, { data: { room } });\n        ref.afterClosed().subscribe((data) => {\n            if (data) setTimeout(() => this._change.next(Date.now()), 300);\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { RoomManagementService } from './room-management.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { first, map, take } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'room-manager-topbar',\n    template: `\n        <div class=\"flex items-center px-8 pt-4 space-x-2\">\n            <h2 class=\"text-2xl font-medium\">Room Management</h2>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar (modelChange)=\"setSearch($event)\"></searchbar>\n            <button btn (click)=\"newRoom()\" class=\"w-40\">New Room</button>\n        </div>\n        <div class=\"flex items-center bg-base-100 h-20 px-8 space-x-2\">\n            <mat-form-field appearance=\"outline\" class=\"no-subscript w-60\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                    multiple\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"text-xs opacity-30\" *ngIf=\"use_region\">\n                                {{ (level.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ level.display_name || level.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <button\n                btn\n                icon\n                matRipple\n                class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Room Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25rem;\n            }\n        `,\n    ],\n})\nexport class RoomManagerTopbarComponent extends AsyncHandler {\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld)\n        )\n    );\n\n    public readonly filters = this._manager.options;\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._manager.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._manager.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n    };\n\n    public readonly newRoom = () => this._manager.editRoom();\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    public get root_zone() {\n        return (\n            (this.use_region ? this._org.region.id : '') ||\n            this._org.building.id\n        );\n    }\n\n    constructor(\n        private _manager: RoomManagementService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'room' },\n        });\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('zone_ids')) {\n                    const zone_list = (params.get('zone_ids') || '').split(',');\n                    const zones = zone_list.filter((z) => z);\n                    this._manager.setFilters({ zones });\n                }\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: '[app-room-manager]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex flex-col\">\n            <room-manager-topbar class=\"block w-full\"></room-manager-topbar>\n            <room-list class=\"block w-full relative flex-1 h-1/2\"></room-list>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class RoomManagerComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { RoomManagerComponent } from './room-manager.component';\nimport { RoomManagerTopbarComponent } from './room-manager-topbar.component';\nimport { RoomListComponent } from './room-list.component';\nimport { RoomModalComponent } from './room-modal.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { NewRoomManagerComponent } from './new-room-manager.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: RoomManagerComponent },\n    { path: 'new', component: NewRoomManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewRoomManagerComponent,\n        RoomManagerComponent,\n        RoomManagerTopbarComponent,\n        RoomListComponent,\n        RoomModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class RoomManagerModule {}\n","import { Component, Inject, SimpleChanges } from '@angular/core';\nimport { SPACE, ENTER, COMMA } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport {\n    EncryptionLevel,\n    addSystem,\n    queryZones,\n    showMetadata,\n    updateMetadata,\n    updateSystem,\n} from '@placeos/ts-client';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    TIMEZONES_IANA,\n    getInvalidFields,\n    getItemWithKeys,\n    notifyError,\n    notifyInfo,\n    notifyWarn,\n    unique,\n} from '@placeos/common';\nimport { Space, generateSystemsFormFields } from '@placeos/spaces';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'room-form-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Room</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[36rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.zone\">\n                    <label\n                        for=\"zone\"\n                        [class.error]=\"\n                            form.controls.zone.invalid &&\n                            form.controls.zone.touched\n                        \"\n                        i18n=\"@@zoneLabel\"\n                    >\n                        Level<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"zone\"\n                            placeholder=\"Select Level\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>Level is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.name\"\n                    >\n                        <label\n                            for=\"system-name\"\n                            [class.error]=\"\n                                form.controls.name.invalid &&\n                                form.controls.name.touched\n                            \"\n                            i18n=\"@@nameLabel\"\n                        >\n                            Name<span>*</span>:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"system-name\"\n                                placeholder=\"Room Name\"\n                                i18n-placeholder=\"@@systemNamePlaceholder\"\n                                formControlName=\"name\"\n                                required\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.name.invalid\"\n                                i18n=\"@@systemNameError\"\n                                >Room name is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.email\"\n                    >\n                        <label\n                            for=\"system-email\"\n                            [class.error]=\"\n                                form.controls.email.invalid &&\n                                form.controls.email.touched\n                            \"\n                            i18n=\"@@emailLabel\"\n                        >\n                            Email:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"system-email\"\n                                placeholder=\"Room Email\"\n                                i18n-placeholder=\"@@systemEmailPlaceholder\"\n                                formControlName=\"email\"\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.email.invalid\"\n                                i18n=\"@@emailError\"\n                                >A valid email is required</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.display_name\"\n                    >\n                        <label for=\"display-name\" i18n=\"@@displayNameLabel\"\n                            >Display Name:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"display-name\"\n                                placeholder=\"Display Name\"\n                                i18n-placeholder=\"@@displayNamePlaceholder\"\n                                formControlName=\"display_name\"\n                            />\n                        </mat-form-field>\n                    </div>\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.display_name\"\n                    >\n                        <label for=\"code-name\" i18n=\"@@codeNameLabel\"\n                            >Code:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"code-name\"\n                                placeholder=\"Code\"\n                                i18n-placeholder=\"@@codeNamePlaceholder\"\n                                formControlName=\"code\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\" [formGroup]=\"settings_form\">\n                    <div class=\"flex-1 flex flex-col space-y-2\">\n                        <label for=\"setup\" class=\"flex items-center\">\n                            Default Setup Duration\n                            <app-icon\n                                class=\"ml-2\"\n                                matTooltip=\"Time before a meeting needed for setup and preparation for the upcoming meeting\"\n                            >\n                                info_outline\n                            </app-icon>\n                        </label>\n                        <a-duration-field\n                            name=\"setup\"\n                            formControlName=\"setup\"\n                            [min]=\"0\"\n                        ></a-duration-field>\n                    </div>\n                    <div class=\"flex-1 flex flex-col space-y-2\">\n                        <label for=\"breakdown\" class=\"flex items-center\">\n                            Default Breakdown Duration\n                            <app-icon\n                                class=\"ml-2\"\n                                matTooltip=\"Time after a meeting needed for cleaning and preparation for next meeting\"\n                            >\n                                info_outline\n                            </app-icon>\n                        </label>\n                        <a-duration-field\n                            name=\"breakdown\"\n                            [min]=\"0\"\n                            formControlName=\"breakdown\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n                <div class=\"flex space-x-2\">\n                    <div\n                        class=\"flex flex-col flex-1\"\n                        *ngIf=\"form.controls.capacity\"\n                    >\n                        <label\n                            for=\"capacity\"\n                            [class.error]=\"\n                                form.controls.capacity.invalid &&\n                                form.controls.capacity.touched\n                            \"\n                            i18n=\"@@capacityLabel\"\n                        >\n                            Capacity:\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                matInput\n                                name=\"capacity\"\n                                type=\"number\"\n                                placeholder=\"Capacity\"\n                                i18n-placeholder=\"@@capacityPlaceholder\"\n                                formControlName=\"capacity\"\n                            />\n                            <mat-error\n                                *ngIf=\"form.controls.capacity.invalid\"\n                                i18n=\"@@capacityError\"\n                            >\n                                A valid positive number is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.bookable\">\n                        <mat-checkbox\n                            name=\"bookable\"\n                            formControlName=\"bookable\"\n                            i18n=\"@@bookableLabel\"\n                        >\n                            Bookable\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                    <label for=\"description\" i18n=\"@@descriptionLabel\"\n                        >Description:</label\n                    >\n                    <mat-form-field appearance=\"outline\">\n                        <textarea\n                            matInput\n                            name=\"description\"\n                            placeholder=\"Description\"\n                            i18n=\"@@descriptionPlaceholder\"\n                            formControlName=\"description\"\n                        ></textarea>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.features\">\n                    <label\n                        [class.error]=\"\n                            form.controls.features.invalid &&\n                            form.controls.features.touched\n                        \"\n                        i18n=\"@@featuresLabel\"\n                    >\n                        Features:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-chip-grid #chipList aria-label=\"Room features\">\n                            <mat-chip-row\n                                *ngFor=\"let feature of feature_list\"\n                                [selectable]=\"true\"\n                                [removable]=\"true\"\n                                (removed)=\"removeFeature(feature)\"\n                            >\n                                {{ feature }}\n                                <app-icon matChipRemove>close</app-icon>\n                            </mat-chip-row>\n                            <input\n                                placeholder=\"New feature...\"\n                                [matChipInputFor]=\"chipList\"\n                                [matChipInputSeparatorKeyCodes]=\"separators\"\n                                [matChipInputAddOnBlur]=\"true\"\n                                (matChipInputTokenEnd)=\"addFeature($event)\"\n                            />\n                        </mat-chip-grid>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.map_id\">\n                    <label for=\"map_id\" i18n=\"@@mapIdLabel\">Map ID:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"map_id\"\n                            i18n-placeholder=\"@@mapIdPlaceholder\"\n                            placeholder=\"Map SVG ID selector e.g. area-01.10-status\"\n                            formControlName=\"map_id\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label for=\"timezone\">Timezone</label>\n                    <mat-form-field appearance=\"outline\">\n                        <app-icon matPrefix class=\"text-2xl\">search</app-icon>\n                        <input\n                            matInput\n                            formControlName=\"timezone\"\n                            placeholder=\"Room timezone\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                    </mat-form-field>\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option\n                            *ngFor=\"let tz of filtered_timezones\"\n                            [value]=\"tz\"\n                            >{{ tz }}</mat-option\n                        >\n                        <mat-option *ngIf=\"!timezones.length\" [disabled]=\"true\">\n                            No matching timezones\n                        </mat-option>\n                    </mat-autocomplete>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                    <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                    <image-list-field\n                        name=\"images\"\n                        formControlName=\"images\"\n                    ></image-list-field>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving room...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            mat-checkbox {\n                margin-top: 2.5em;\n                margin-bottom: 1.5em;\n            }\n\n            @media screen and (max-width: 640px) {\n                mat-checkbox {\n                    margin-top: 0;\n                }\n            }\n        `,\n    ],\n})\nexport class RoomModalComponent extends AsyncHandler {\n    public loading = false;\n    public timezones: string[] = [];\n    public filtered_timezones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** Group of form fields used for creating the system */\n    public form = generateSystemsFormFields(this._data.room as any);\n    public settings_form = new FormGroup({\n        setup: new FormControl(0),\n        breakdown: new FormControl(0),\n    });\n    /** Levels of encyption available for the system's settings */\n    public encryption_levels: any[] = [\n        { id: EncryptionLevel.None, name: 'None' },\n        { id: EncryptionLevel.Support, name: 'Support' },\n        { id: EncryptionLevel.Admin, name: 'Admin' },\n        { id: EncryptionLevel.NeverDisplay, name: 'Never Display' },\n    ];\n    /** Function for querying zones */\n    public readonly query_fn = (_: string) =>\n        queryZones({ q: _ }).pipe(map((resp) => resp.data));\n    /** List of separator characters for features */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    public get feature_list(): string[] {\n        return this.form.controls.features.value;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { room: Space },\n        private _dialog_ref: MatDialogRef<RoomModalComponent>,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        const { details } = await showMetadata(\n            this._org.organisation.id,\n            'settings'\n        ).toPromise();\n        const overflow = getItemWithKeys(['events', 'overflow'], details) || {};\n        if (this._data.room.id && overflow[this._data.room.id]) {\n            this.settings_form.patchValue(overflow[this._data.room.id]);\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.form) {\n            this.updateTimezoneList();\n            this.subscription(\n                'tz-change',\n                this.form.valueChanges.subscribe(\n                    ({ timezone }) =>\n                        (this.filtered_timezones = this.timezones.filter((_) =>\n                            _.toLowerCase().includes(timezone.toLowerCase())\n                        ))\n                )\n            );\n        }\n    }\n\n    /**\n     * Add a feature to the list of features for the item\n     * @param event Input event\n     */\n    public addFeature(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.features) return;\n        const input = event.input;\n        const value = event.value;\n        const feature_list = this.feature_list;\n        if ((value || '').trim()) {\n            feature_list.push(value);\n            this.form.controls.features.setValue(feature_list);\n        }\n\n        // Reset the input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    /**\n     * Remove feature from the list\n     * @param existing_feature Feature to remove\n     */\n    public removeFeature(existing_feature: string): void {\n        if (!this.form || !this.form.controls.features) return;\n        const feature_list = this.feature_list;\n        const index = feature_list.indexOf(existing_feature);\n\n        if (index >= 0) {\n            feature_list.splice(index, 1);\n            this.form.controls.features.setValue(feature_list);\n        }\n    }\n\n    public updateTimezoneList() {\n        const timezone = this.form?.value?.timezone || '';\n        this.timezones = TIMEZONES_IANA;\n        this.filtered_timezones = this.timezones.filter((_) =>\n            _.toLowerCase().includes(timezone.toLowerCase())\n        );\n    }\n\n    public async save() {\n        if (!this.form.valid)\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        if (!this.form.value.id) {\n            this.form.patchValue({\n                display_name:\n                    this.form.value.display_name || this.form.value.name,\n                zones: unique([\n                    this._org.organisation.id,\n                    this._org.building.parent_id,\n                    this._org.building.id,\n                    `${this.form.value.zone?.id || this.form.value.zone || ''}`,\n                ]).filter((_) => _),\n            });\n        }\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        const data = this.form.getRawValue();\n        const { details } = (await showMetadata(\n            this._org.organisation.id,\n            'settings'\n        ).toPromise()) as any;\n        const overflow = getItemWithKeys(['events', 'overflow'], details) || {};\n        overflow[data.id] = this.settings_form.value;\n        await updateMetadata(this._org.organisation.id, {\n            name: 'settings',\n            details: {\n                ...details,\n                events: { ...(details.events || {}), overflow },\n            },\n            description: '',\n        })\n            .toPromise()\n            .catch((e) =>\n                notifyWarn('Unable to save room setup and breakdown times')\n            );\n        await (data.id\n            ? updateSystem(data.id, data)\n            : addSystem(data)\n        ).toPromise();\n        this._dialog_ref.disableClose = false;\n        this._dialog_ref.close(true);\n        this.loading = false;\n    }\n}\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["NewRoomManagerComponent","_","_2","selectors","attrs","_c0","decls","vars","consts","template","NewRoomManagerComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","RoomManagementService","Clipboard","notifySuccess","ɵɵlistener","RoomListComponent_ng_template_2_Template_span_click_0_listener","row_r2","ɵɵrestoreView","_r1","row","ctx_r2","ɵɵnextContext","ɵɵresetView","copyToClipboard","id","ɵɵtext","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","data_r4","ɵɵtextInterpolate1","tmp_6_0","ɵɵpipeBind1","data_r5","display_name","name","ɵɵclassProp","data_r6","RoomListComponent_ng_template_8_Template_button_click_1_listener","row_r8","_r7","editRoom","RoomListComponent","constructor","_manager","_clipboard","rooms","filtered_rooms","room","success","copy","ɵɵdirectiveInject","i1","i2","RoomListComponent_Template","ɵɵtemplate","RoomListComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","RoomListComponent_ng_template_4_Template","RoomListComponent_ng_template_6_Template","RoomListComponent_ng_template_8_Template","ɵɵpureFunction0","_c1","_c2","ɵɵpureFunction4","_c3","name_template_r9","bool_template_r11","level_template_r10","action_template_r12","MatDialog","OrganisationService","PlaceSystem","querySystems","BehaviorSubject","combineLatest","of","catchError","filter","map","shareReplay","switchMap","RoomModalComponent","SettingsService","_org","_dialog","_settings","_options","_change","options","asObservable","room_list","active_building","active_region","pipe","b","r","bld","region","zone_id","get","data","list","levelWithID","zones","sort","a","localeCompare","length","find","z","includes","search","toLowerCase","setFilters","next","getValue","setSearchString","ref","open","afterClosed","subscribe","setTimeout","Date","now","ɵɵinject","i3","factory","ɵfac","providedIn","ActivatedRoute","Router","AsyncHandler","first","BookingRulesModalComponent","tmp_3_0","level_r1","parent_id","RoomManagerTopbarComponent_mat_option_11_div_2_Template","ctx_r1","use_region","RoomManagerTopbarComponent","building","root_zone","_route","_router","levels","levelsForRegion","levelsForBuilding","filters","setSearch","str","updateZones","navigate","relativeTo","queryParams","zone_ids","join","newRoom","manageRestrictions","type","ngOnInit","_this","_asyncToGenerator","initialised","toPromise","subscription","queryParamMap","_ref","params","has","zone_list","split","_x","apply","arguments","i4","i5","features","ɵɵInheritDefinitionFeature","RoomManagerTopbarComponent_Template","RoomManagerTopbarComponent_Template_searchbar_modelChange_4_listener","$event","RoomManagerTopbarComponent_Template_button_click_5_listener","RoomManagerTopbarComponent_Template_mat_select_ngModelChange_9_listener","RoomManagerTopbarComponent_mat_option_11_Template","RoomManagerTopbarComponent_Template_button_click_14_listener","tmp_0_0","RoomManagerComponent","RoomManagerComponent_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","ROUTES","path","component","RoomManagerModule","_3","forChild","declarations","imports","SimpleChanges","SPACE","ENTER","COMMA","EncryptionLevel","addSystem","queryZones","showMetadata","updateMetadata","updateSystem","TIMEZONES_IANA","getInvalidFields","getItemWithKeys","notifyError","notifyWarn","unique","generateSystemsFormFields","MAT_DIALOG_DATA","MatDialogRef","FormControl","FormGroup","ɵɵi18nStart","ɵɵi18nEnd","RoomModalComponent_main_4_form_1_div_1_mat_option_6_Template","form","controls","zone","invalid","touched","ɵɵi18n","RoomModalComponent_main_4_form_1_div_3_mat_error_6_Template","RoomModalComponent_main_4_form_1_div_4_mat_error_5_Template","email","RoomModalComponent_main_4_form_1_div_22_mat_error_5_Template","capacity","RoomModalComponent_main_4_form_1_div_25_mat_chip_row_6_Template_mat_chip_row_removed_0_listener","feature_r5","_r4","$implicit","removeFeature","RoomModalComponent_main_4_form_1_div_25_mat_chip_row_6_Template","RoomModalComponent_main_4_form_1_div_25_Template_input_matChipInputTokenEnd_7_listener","_r3","addFeature","feature_list","chipList_r6","separators","tz_r7","RoomModalComponent_main_4_form_1_div_1_Template","RoomModalComponent_main_4_form_1_div_3_Template","RoomModalComponent_main_4_form_1_div_4_Template","RoomModalComponent_main_4_form_1_div_6_Template","RoomModalComponent_main_4_form_1_div_7_Template","RoomModalComponent_main_4_form_1_div_22_Template","RoomModalComponent_main_4_form_1_div_23_Template","RoomModalComponent_main_4_form_1_div_24_Template","RoomModalComponent_main_4_form_1_div_25_Template","RoomModalComponent_main_4_form_1_div_26_Template","RoomModalComponent_main_4_form_1_mat_option_36_Template","RoomModalComponent_main_4_form_1_mat_option_37_Template","RoomModalComponent_main_4_form_1_div_38_Template","settings_form","bookable","description","map_id","auto_r8","filtered_timezones","timezones","images","RoomModalComponent_main_4_form_1_Template","RoomModalComponent_footer_5_Template_button_click_1_listener","_r9","save","value","_data","_dialog_ref","loading","active_levels","setup","breakdown","encryption_levels","None","Support","Admin","NeverDisplay","query_fn","q","resp","details","organisation","overflow","patchValue","ngOnChanges","changes","updateTimezoneList","valueChanges","timezone","event","input","trim","push","setValue","existing_feature","index","indexOf","splice","_this2","valid","disableClose","getRawValue","events","catch","e","close","ɵɵNgOnChangesFeature","i18n_0","ngI18nClosureMode","$localize","RoomModalComponent_button_3_Template","RoomModalComponent_main_4_Template","RoomModalComponent_footer_5_Template","RoomModalComponent_ng_template_6_Template","load_state_r10","getUnixTime","MapLocation","location","position","asset_id","x","map_width","y","map_height","variance","last_seen","level","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}