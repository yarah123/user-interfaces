{"version":3,"file":"apps_concierge_src_app_desks_desks_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/desks/desk-book-modal.component.ts","./apps/concierge/src/app/desks/desk-bookings.component.ts","./apps/concierge/src/app/desks/desk-map-view.component.ts","./apps/concierge/src/app/desks/desks-manage.component.ts","./apps/concierge/src/app/desks/desks-topbar.component.ts","./apps/concierge/src/app/desks/desks.component.ts","./apps/concierge/src/app/desks/desks.module.ts","./apps/concierge/src/app/desks/new-desks.component.ts","./apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component.ts"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { BookingFormService } from '@placeos/bookings';\nimport { DialogEvent, notifyError, notifySuccess } from '@placeos/common';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'desk-book-modal',\n    template: `\n        <header>\n            <h2>New Desk Booking</h2>\n            <div class=\"flex-1 w-0\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!(loading | async); else load_state\"\n            class=\"overflow-auto p-4 max-h-[65vh]\"\n        >\n            <new-desk-form-details [form]=\"form\"></new-desk-form-details>\n        </main>\n        <footer\n            *ngIf=\"!(loading | async)\"\n            class=\"flex justify-center items-center p-2 border-t border-base-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                loading\n                class=\"h-64 flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Making booking request...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DeskBookModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public readonly loading = new BehaviorSubject(false);\n\n    public get form() {\n        return this._booking_form.form;\n    }\n\n    constructor(\n        private _booking_form: BookingFormService,\n        private _dialog_ref: MatDialogRef<DeskBookModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading.next(true);\n        this.form.patchValue({ booking_type: 'desk' });\n        const event = await this._booking_form.postForm().catch((_) => {\n            notifyError(_);\n            this.loading.next(false);\n            throw _;\n        });\n        this.event.emit({ reason: 'done', metadata: event });\n        notifySuccess('Successfully created booking');\n        this._dialog_ref.close();\n        this.loading.next(false);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { DesksStateService } from './desks-state.service';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'desk-bookings',\n    template: `\n        <div class=\"overflow-auto h-full w-full pb-4\">\n            <simple-table\n                class=\"min-w-[72rem] block text-sm\"\n                [data]=\"bookings\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"[\n                    {\n                        key: 'date',\n                        name: 'Date',\n                        content: date_template,\n                        size: '4rem',\n                        sortable: false\n                    },\n                    {\n                        key: 'period',\n                        name: 'Period',\n                        content: period_template,\n                        size: '9rem'\n                    },\n                    {\n                        key: 'user_name',\n                        name: 'Person',\n                        content: user_template\n                    },\n                    { key: 'group', name: 'Group' },\n                    { key: 'asset_name', name: 'Desk' },\n                    { key: 'approver', name: 'Approver' },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '8.5rem',\n                        sortable: false\n                    },\n                    {\n                        key: 'checked_in',\n                        name: 'Checked In',\n                        content: option_template,\n                        size: '5.5rem',\n                        sortable: false\n                    }\n                ]\"\n                [empty_message]=\"\n                    (filters | async)?.search\n                        ? 'No matching desk bookings'\n                        : 'There are no desk booking for the currently selected date.'\n                \"\n                [sortable]=\"true\"\n            ></simple-table>\n            <ng-template #date_template let-date=\"data\">\n                <div\n                    class=\"flex flex-col items-center justify-center w-full py-2\"\n                >\n                    <div class=\"opacity-60\">{{ date | date: 'MMM' }}</div>\n                    <div class=\"text-xl\">{{ date | date: 'dd' }}</div>\n                </div>\n            </ng-template>\n            <ng-template #period_template let-row=\"row\">\n                <div class=\"p-2\">\n                    <ng-container\n                        *ngIf=\"\n                            row.status !== 'declined' &&\n                            !row.deleted &&\n                            row.status !== 'ended'\n                        \"\n                    >\n                        <div class=\"p-2\">\n                            <ng-container *ngIf=\"!row.all_day\">\n                                {{ row.date | date: time_format }} &ndash;\n                                {{ row.end | date: time_format }}\n                            </ng-container>\n                            <ng-container *ngIf=\"row.all_day\"\n                                >All Day</ng-container\n                            >\n                        </div>\n                    </ng-container>\n                    <ng-container\n                        *ngIf=\"\n                            row.status === 'declined' ||\n                            row.deleted ||\n                            row.status === 'ended'\n                        \"\n                    >\n                        <div\n                            class=\"text-xs py-2 px-4 bg-error rounded-3xl text-white\"\n                        >\n                            {{\n                                row.status === 'ended'\n                                    ? 'Manually Ended'\n                                    : 'Expired'\n                            }}\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-template>\n            <ng-template #user_template let-row=\"row\">\n                <div class=\"flex flex-col justify-center px-4 py-2\">\n                    <div class=\"select-all\">\n                        {{\n                            row.user_name ||\n                                row.user_email ||\n                                row.booked_by_name ||\n                                row.booked_by_email\n                        }}\n                    </div>\n                    <div\n                        *ngIf=\"row.user_name\"\n                        class=\"text-xs opacity-30 select-all\"\n                    >\n                        {{ row.user_email }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\">\n                <div class=\"px-2\">\n                    <button\n                        matRipple\n                        class=\"rounded-3xl bg-warning text-warning-content border-none w-[7.5rem] h-10\"\n                        [class.!text-success-content]=\"\n                            row?.status === 'approved'\n                        \"\n                        [class.!bg-success]=\"row?.status === 'approved'\"\n                        [class.!text-error-content]=\"row?.status === 'declined'\"\n                        [class.!bg-error]=\"row?.status === 'declined'\"\n                        [class.!text-neutral-content]=\"row?.status === 'ended'\"\n                        [class.!bg-neutral]=\"row?.status === 'ended'\"\n                        [class.opacity-30]=\"row?.status === 'ended'\"\n                        [matMenuTriggerFor]=\"menu\"\n                        [disabled]=\"row?.status === 'ended'\"\n                    >\n                        <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                            <div class=\"flex-1 text-left\">\n                                {{\n                                    row?.status === 'ended'\n                                        ? 'Ended'\n                                        : row?.status === 'approved'\n                                        ? 'Approved'\n                                        : row?.status === 'declined'\n                                        ? 'Declined'\n                                        : 'Pending'\n                                }}\n                            </div>\n                            <app-icon class=\"text-2xl\"\n                                >arrow_drop_down</app-icon\n                            >\n                        </div>\n                    </button>\n                </div>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"approve(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\"\n                                >event_available</app-icon\n                            >\n                            <div class=\"pr-2\">Approve Desk</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"reject(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">event_busy</app-icon>\n                            <div class=\"pr-2\">Decline Desk</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #option_template let-data=\"data\" let-row=\"row\">\n                <div class=\"px-2\">\n                    <button\n                        matRipple\n                        class=\"rounded-3xl bg-warning text-warning-content border-none w-[4.5rem] h-10\"\n                        [matMenuTriggerFor]=\"checkinMenu\"\n                        [class.!bg-neutral]=\"!data\"\n                        [class.!text-neutral-content]=\"!data\"\n                        [class.!bg-success]=\"data\"\n                        [class.!text-success-content]=\"data\"\n                        [class.opacity-30]=\"row.status === 'ended'\"\n                        [disabled]=\"row.status === 'ended'\"\n                        [matTooltip]=\"\n                            row.status === 'ended'\n                                ? 'Desk booking has ended'\n                                : 'Check-in or check-out desk'\n                        \"\n                    >\n                        <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                            <div class=\"flex-1 text-left\">\n                                {{ data ? 'Yes' : 'No' }}\n                            </div>\n                            <app-icon class=\"text-2xl\">\n                                arrow_drop_down\n                            </app-icon>\n                        </div>\n                    </button>\n                </div>\n                <mat-menu #checkinMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"checkin(row, true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">check</app-icon>\n                            <div>Check-in</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"checkin(row, false)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Check-out</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n        </div>\n\n        <button\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 w-32 mx-auto my-4\"\n            *ngIf=\"!loading && (has_more_pages | async)\"\n            (click)=\"loadMore()\"\n        >\n            Load More\n        </button>\n        <button\n            icon\n            matRipple\n            class=\"absolute bottom-2 right-2 bg-base-100 shadow\"\n            [matMenuTriggerFor]=\"menu\"\n        >\n            <app-icon>more_vert</app-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"rejectAll()\">Reject All</button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingsComponent {\n    public loading: string;\n    public readonly filters = this._state.filters;\n    public readonly has_more_pages = this._state.has_more_pages;\n    public readonly bookings = this._state.bookings.pipe(\n        map((i) =>\n            i.map((booking) => ({\n                ...booking,\n                end: booking.date + booking.duration * 60 * 1000,\n            }))\n        )\n    );\n\n    public readonly rejectAll = () => this._state.rejectAllDesks();\n    public readonly loadMore = () => this._state.nextPage();\n\n    public get columns() {\n        return [\n            'date',\n            'period',\n            'user_name',\n            'group',\n            'asset_name',\n            'approver_name',\n            'status',\n            'checked_in',\n        ];\n    }\n\n    public readonly checkin = (d, s?) =>\n        this.runMethod('checkin', async () => {\n            await this._state.checkinDesk(d, s);\n            d.checked_in = s ?? true;\n        });\n    public readonly approve = (d) =>\n        this.runMethod('approve', async () => this._state.approveDesk(d));\n    public readonly reject = (d) =>\n        this.runMethod('reject', async () => this._state.rejectDesk(d));\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _settings: SettingsService\n    ) {}\n\n    private async runMethod(name: string, fn: () => Promise<any>) {\n        this.loading = name;\n        await fn().catch((i) => null);\n        this.loading = '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ExploreDesksService, ExploreStateService } from '@placeos/explore';\n\nimport { DesksStateService } from './desks-state.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map-view',\n    template: `\n        <div map class=\"h-full w-full relative\">\n            <interactive-map\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async).zoom\"\n                [center]=\"(positions | async).center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <explore-zoom-controls\n                class=\"absolute bottom-2 right-2\"\n            ></explore-zoom-controls>\n            <div class=\"absolute top-0 left-0 p-2 text-black\">\n                <a-user-search-field\n                    [ngModel]=\"null\"\n                    (ngModelChange)=\"setHost($event)\"\n                    class=\"white\"\n                    placeholder=\"User for bookings...\"\n                ></a-user-search-field>\n            </div>\n            <div\n                info\n                class=\"absolute bottom-0 rounded p-2 m-2 bg-base-100 shadow text-center\"\n            >\n                Click/Tap an available desk to book it.\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [info] {\n                left: 50%;\n                transform: translateX(-50%);\n            }\n        `,\n    ],\n    providers: [ExploreDesksService],\n})\nexport class DeskMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n\n    public readonly setHost = (u) => this._desks_state.setOptions({ host: u });\n\n    constructor(\n        private _state: ExploreStateService,\n        private _desk: DesksStateService,\n        private _desks_state: ExploreDesksService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._desks_state.setOptions({ use_api: true });\n        this.subscription(\n            'date',\n            this._desk.filters.subscribe((opts) => {\n                const level = this._org.levelWithID(opts.zones);\n                if (level) this._state.setLevel(level.id);\n                this._desks_state.setOptions({\n                    date: opts.date || Date.now(),\n                    all_day: true,\n                    zones: opts.zones,\n                });\n            })\n        );\n    }\n}\n","import { Component, ElementRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    csvToJson,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    randomInt,\n    unique,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DesksStateService } from './desks-state.service';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\nconst QR_CODES = {};\n\n@Component({\n    selector: 'desks-manage',\n    template: `\n        <div\n            class=\"overflow-auto h-full w-full pb-4\"\n            (dragenter)=\"handleDrag('enter', $event)\"\n            (window:dragend)=\"handleDrag('end', $event)\"\n        >\n            <simple-table\n                class=\"min-w-[64rem] block text-sm\"\n                [filter]=\"(filters | async)?.search\"\n                [data]=\"desks\"\n                [columns]=\"[\n                    {\n                        key: 'map_id',\n                        name: 'Desk',\n                        content: name_template,\n                        size: '12rem'\n                    },\n                    {\n                        key: 'groups',\n                        name: 'Groups',\n                        content: item_list_template\n                    },\n                    {\n                        key: 'features',\n                        name: 'Features',\n                        content: item_list_template\n                    },\n                    {\n                        key: 'bookable',\n                        name: 'Bookable',\n                        content: bool_template,\n                        size: '5.5rem'\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        content: action_template,\n                        size: '8.5rem',\n                        sortable: false\n                    }\n                ]\"\n                [empty_message]=\"\n                    (filters | async)?.search\n                        ? 'No matching desks'\n                        : 'No desks for selected level'\n                \"\n            ></simple-table>\n            <ng-template #name_template let-row=\"row\">\n                <button\n                    class=\"flex flex-col px-4 py-2 text-left leading-tight\"\n                    (click)=\"copyToClipboard(row.map_id || row.id)\"\n                >\n                    <div>{{ row.name || row.map_id || row.id }}</div>\n                    <div\n                        *ngIf=\"row.name\"\n                        class=\"text-[0.625rem] opacity-30 font-mono\"\n                    >\n                        {{ row.map_id || row.id }}\n                    </div>\n                </button>\n            </ng-template>\n            <ng-template #item_list_template let-data=\"data\">\n                <div class=\"flex flex-wrap p-2\">\n                    <span\n                        class=\"m-1 py-1 px-2 rounded-2xl text-xs font-mono bg-info text-info-content\"\n                        *ngFor=\"let item of data\"\n                    >\n                        {{ item }}\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #bool_template let-data=\"data\">\n                <div\n                    [class.bg-error]=\"!data\"\n                    [class.bg-success]=\"data\"\n                    class=\"rounded h-8 w-8 flex items-center justify-center text-2xl text-white mx-auto\"\n                >\n                    <app-icon>{{ data ? 'done' : 'close' }}</app-icon>\n                </div>\n            </ng-template>\n            <ng-template #action_template let-row=\"row\">\n                <div class=\"flex items-center justify-end space-x-2 p-2\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [content]=\"qr_menu\"\n                        matTooltip=\"Print QR Code\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Desk\"\n                        (click)=\"editDesk(row)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Desk\"\n                        (click)=\"removeDesk(row)\"\n                    >\n                        <app-icon class=\"text-error\">delete</app-icon>\n                    </button>\n                    <ng-template #qr_menu>\n                        <div class=\"bg-base-100 py-2 shadow rounded\">\n                            <div class=\"\" printable>\n                                <a\n                                    [href]=\"row.qr_link | safe: 'url'\"\n                                    target=\"_blank\"\n                                    ref=\"noopener noreferrer\"\n                                    class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                                >\n                                    <img class=\"w-48\" [src]=\"row.qr_code\" />\n                                </a>\n                                <div\n                                    class=\"w-[calc(100%-2rem)] text-center mt-2 font-mono text-sm bg-base-200 rounded p-2 mx-4\"\n                                >\n                                    {{ row.name || row.id }}\n                                </div>\n                            </div>\n                            <button\n                                btn\n                                matRipple\n                                class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                                (click)=\"print()\"\n                            >\n                                Print QR Code\n                            </button>\n                        </div>\n                    </ng-template>\n                </div>\n            </ng-template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 bg-base-100 bg-opacity-60\"\n                *ngIf=\"loading\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n            <div\n                *ngIf=\"dragging\"\n                class=\"absolute inset-0 bg-neutral flex items-center justify-center\"\n            >\n                <div class=\"bg-base-100 p-4 rounded shadow\">\n                    <div\n                        class=\"border-4 border-base-200 border-dashed rounded flex flex-col items-center justify-center w-64 h-64\"\n                    >\n                        Drop CSV file to add desks\n                    </div>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DesksManageComponent extends AsyncHandler {\n    public loading: string;\n    public dragging = false;\n    public readonly filters = this._state.filters;\n    public readonly desks = this._state.desks;\n\n    public readonly editDesk = (desk?: Desk) => this._state.editDesk(desk);\n\n    constructor(\n        private _state: DesksStateService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService,\n        private _element: ElementRef,\n        private _clipboard: Clipboard\n    ) {\n        super();\n    }\n\n    public readonly copyToClipboard = (id: string) => {\n        const success = this._clipboard.copy(id);\n        if (success) notifySuccess('Desk ID copied to clipboard.');\n    };\n\n    public async removeDesk(desk: Desk) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Remove desk',\n                content: `Remove desk ${desk.name}?`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.close();\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = desks.filter((_) => _.id !== desk.id);\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        this.loading = 'Removing desk...';\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving desk data. Error: ${e.message || e}`);\n                throw e;\n            });\n        notifySuccess('Successfully updated desks');\n        this._state.setFilters({});\n        this.loading = '';\n    }\n\n    public get kiosk_url() {\n        const path =\n            this._settings.get('app.workplace_url_path') || '/workplace';\n        return `${window.location.origin}${path}`;\n    }\n\n    public loadQrCode(item: any) {\n        const link = `${\n            this.kiosk_url\n        }/#/book/code?asset_id=${encodeURIComponent(item.id)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public print() {\n        window.print();\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        this.loading = 'Loading CSV file...';\n        this.dragging = false;\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n        this.loading = '';\n    }\n\n    public handleDrag(type: 'enter' | 'leave' | 'end', event: DragEvent) {\n        this.dragging = type === 'enter';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifyInfo,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { DesksStateService } from './desks-state.service';\nimport { showBooking } from '@placeos/bookings';\nimport { randomInt } from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: 'desks-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"\n                        (filters | async).zones\n                            ? (filters | async).zones[0]\n                            : 'All'\n                    \"\n                    (ngModelChange)=\"updateZones([$event])\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option value=\"All\" *ngIf=\"!is_map\">\n                        All Levels\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button\n                btn\n                matRipple\n                *ngIf=\"!manage\"\n                class=\"mx-2 w-40\"\n                matTooltip=\"New Desk Booking\"\n                (click)=\"newDeskBooking()\"\n            >\n                New Booking\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"newDesk()\"\n                matTooltip=\"New Desk\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary relative text-white rounded\"\n                matTooltip=\"Upload Desks CSV\"\n            >\n                <app-icon>cloud_upload</app-icon>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"downloadTemplate()\"\n                matTooltip=\"Download Template Desk CSV\"\n            >\n                <app-icon>download</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Desk Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(filters | async)?.search\"\n                (modelChange)=\"setFilters({ search: $event })\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class DesksTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly filters = this._desks.filters;\n\n    public manage = false;\n    public is_map = false;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._desks.setFilters({ date });\n    public readonly setFilters = (o) => this._desks.setFilters(o);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._desks.setFilters({ zones });\n    };\n\n    constructor(\n        private _desks: DesksStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.updateZones(zones);\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n                if (params.has('date')) {\n                    this.setDate(new Date(+params.get('date')));\n                }\n                if (params.has('approve')) {\n                    this.approve(params.get('approve'));\n                } else if (params.has('reject')) {\n                    this.reject(params.get('reject'));\n                }\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe(() => {\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All'\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n        this.manage = this._router.url?.includes('manage');\n        this.is_map = this._router.url?.includes('map');\n    }\n\n    public newDesk() {\n        const desk = new Desk({ id: `desk-${randomInt(999_999)}` });\n        desk.staff_name = `[NEW_DESK]`;\n        this._desks.addDesks([desk]);\n        notifyInfo('New desk added to local data.', undefined, () =>\n            notifyInfo('Make sure to save the new desk before using it.')\n        );\n    }\n\n    public newDeskBooking() {\n        this._dialog.open(DeskBookModalComponent, {});\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._desks.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        delete desk.images;\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    /**\n     * Aprrove a desk booking\n     * @param id Booking ID to approve\n     */\n    private async approve(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.approveDesk(booking);\n        }\n    }\n\n    /**\n     * Reject a desk booking\n     * @param id Booking ID to reject\n     */\n    private async reject(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.rejectDesk(booking);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: '[app-desks]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"flex-1 relative w-1/2 flex flex-col bg-base-100 overflow-hidden\"\n        >\n            <desks-topbar class=\"w-full\"></desks-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Map View\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'manage']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'manage'\"\n                    >\n                        Manage Desks\n                    </a>\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DesksComponent extends AsyncHandler implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public path: string;\n\n    constructor(private _state: DesksStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { SharedExploreModule } from '@placeos/explore';\nimport { UIModule } from '../ui/ui.module';\n\nimport { DesksComponent } from './desks.component';\nimport { DeskBookingsComponent } from './desk-bookings.component';\nimport { DesksTopbarComponent } from './desks-topbar.component';\nimport { DeskMapViewComponent } from './desk-map-view.component';\nimport { DesksManageComponent } from './desks-manage.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NewDeskFormDetailsComponent } from 'apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { NewDesksComponent } from './new-desks.component';\nimport { DeskModalComponent } from './desk-modal.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewDesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: DesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        NewDesksComponent,\n        DesksComponent,\n        DeskBookingsComponent,\n        DesksTopbarComponent,\n        DeskMapViewComponent,\n        DesksManageComponent,\n        NewDeskFormDetailsComponent,\n        DeskBookModalComponent,\n        DeskModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatTabsModule,\n        ReactiveFormsModule,\n        UIModule,\n        SharedExploreModule,\n        SharedBookingsModule,\n        FormFieldsModule,\n        MatRadioModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatInputModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DesksModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport {\n    AsyncHandler,\n    SettingsService,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifyInfo,\n    randomInt,\n} from '@placeos/common';\n\nimport { DesksStateService } from './desks-state.service';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-new-desks]',\n    template: `\n        <app-topbar class=\" print:hidden\"></app-topbar>\n        <div class=\"flex flex-1 h-px print:hidden\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">\n                        {{ manage ? 'Desk Management' : 'Desk Bookings' }}\n                    </h2>\n                    <div class=\"flex-1 w-px\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        [model]=\"(filters | async)?.search\"\n                        (modelChange)=\"setFilters({ search: $event })\"\n                    ></searchbar>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"path !== 'manage'\"\n                        class=\"space-x-2 w-44\"\n                        (click)=\"newDeskBooking()\"\n                    >\n                        <div class=\"pl-2\">New Booking</div>\n                        <app-icon class=\"text-2xl\">add</app-icon>\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"path === 'manage'\"\n                        class=\"space-x-2 w-44\"\n                        (click)=\"editDesk()\"\n                    >\n                        <div class=\"pl-2\">New Desk</div>\n                        <app-icon class=\"text-2xl\">add</app-icon>\n                    </button>\n                </div>\n                <div class=\"w-full flex items-center px-8 space-x-2 mb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                        *ngIf=\"!manage\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                        *ngIf=\"manage\"\n                    >\n                        <mat-select\n                            [ngModel]=\"\n                                (filters | async)?.zones?.length\n                                    ? (filters | async)?.zones[0]\n                                    : ''\n                            \"\n                            (ngModelChange)=\"updateZones([$event])\"\n                            placeholder=\"All Levels\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-px\"></div>\n                    <ng-container *ngIf=\"path === 'events'\">\n                        <date-options\n                            (dateChange)=\"setDate($event)\"\n                        ></date-options>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            matTooltip=\"Refresh List\"\n                            class=\"ml-2 rounded border border-base-200\"\n                            (click)=\"refresh()\"\n                            [disabled]=\"loading | async\"\n                        >\n                            <app-icon>refresh</app-icon>\n                        </button>\n                    </ng-container>\n                    <ng-container *ngIf=\"path === 'manage'\">\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            matTooltip=\"Upload Desks CSV\"\n                        >\n                            <app-icon>cloud_upload</app-icon>\n                            <input\n                                type=\"file\"\n                                class=\"absolute inset-0 opacity-0\"\n                                (change)=\"loadCSVData($event)\"\n                            />\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            (click)=\"downloadTemplate()\"\n                            matTooltip=\"Download Template Desk CSV\"\n                        >\n                            <app-icon>download</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            (click)=\"manageRestrictions()\"\n                            matTooltip=\"Desk Restrictions\"\n                        >\n                            <app-icon>lock_open</app-icon>\n                        </button>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 h-1/2 px-8 w-full relative overflow-auto\">\n                    <router-outlet></router-outlet>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"(loading | async) && path === 'events'\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewDesksComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public readonly loading = this._state.loading;\n    public path: string;\n    public manage = false;\n    /** List of levels for the active building */\n    public readonly filters = this._state.filters;\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this._settings.get('app.use_region')\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld)\n        )\n    );\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    public readonly setFilters = (o) => this._state.setFilters(o);\n    public readonly refresh = () => this._state.refresh();\n    public readonly editDesk = () => this._state.editDesk();\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                    this._checkManage();\n                }\n            })\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (!zones.length) return;\n                    const level = this._org.levelWithID(zones);\n                    this._state.setFilters({ zones });\n                    if (!level) return;\n                    this._org.building = this._org.buildings.find(\n                        (bld) => bld.id === level.parent_id\n                    );\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n        this._checkManage();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n\n    public newDeskBooking() {\n        const ref = this._dialog.open(DeskBookModalComponent, {});\n        ref.afterClosed().subscribe((_) => {\n            this._state.refresh();\n        });\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        delete desk.images;\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    private _checkManage() {\n        this.manage = this.path.includes('manage');\n        if (this.manage) {\n            this.subscription(\n                'zone-changes',\n                this._org.active_levels.subscribe(async (lvls) => {\n                    if (!lvls.length) return;\n                    const { zones } = await this._state.filters\n                        .pipe(take(1))\n                        .toPromise();\n                    const levels_in_zones =\n                        zones?.length &&\n                        zones.some((z) => lvls.find((lvl) => lvl.id === z));\n                    if (!levels_in_zones) this.updateZones([lvls[0].id]);\n                })\n            );\n        } else this.unsub('zone-changes');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { addDays, endOfDay, set } from 'date-fns';\n\n@Component({\n    selector: 'new-desk-form-details',\n    styles: [],\n    template: `\n        <!-- <div class=\"m-2 bg-warning p-2 text-center rounded shadow text-sm\">\n            The selected desk hasn't been booked. Please book the desk to be\n            able to check-in.\n        </div> -->\n        <div\n            class=\"p-0 sm:py-4 sm:px-16 divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"flex items-center\" *ngIf=\"allow_groups\">\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"!(options | async)?.group\"\n                    (click)=\"setOptions({ group: false, members: [] })\"\n                >\n                    <app-icon class=\"text-2xl\">person</app-icon>\n                    <div class=\"\" i18n>Single</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"(options | async)?.group\"\n                        [class.bg-secondary]=\"!(options | async)?.group\"\n                    ></div>\n                </button>\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"(options | async)?.group\"\n                    (click)=\"setOptions({ group: true })\"\n                >\n                    <app-icon class=\"text-2xl\">group_add</app-icon>\n                    <div class=\"\" i18n>Group</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"!(options | async)?.group\"\n                        [class.bg-secondary]=\"(options | async)?.group\"\n                    ></div>\n                </button>\n            </section>\n            <section class=\"p-2\" [class.!border-none]=\"allow_groups\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\" i18n>Details</div>\n                </h3>\n                <div\n                    class=\"w-full\"\n                    *ngIf=\"can_book_for_others && !(options | async)?.group\"\n                >\n                    <label for=\"title\">Host<span>*</span></label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error i18n\n                                >Booking title is required.</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px] relative\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                            [to]=\"end_date\"\n                            i18n\n                        >\n                            Date and time must be in the future\n                        </a-date-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute -top-2 right-0\"\n                            i18n\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n>\n                            End Time<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"(options | async)?.group\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\" i18n>Group Members</div>\n                    <div class=\"flex-1 w-px\"></div>\n                </h3>\n                <div class=\"overflow-hidden\">\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        [ngModel]=\"(options | async)?.members || []\"\n                        (ngModelChange)=\"setOptions({ members: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"form.contains('resources')\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 3 : 2 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n                <p\n                    *ngIf=\"(options | async)?.group\"\n                    class=\"text-center rounded px-2 py-1 bg-warning shadow text-xs\"\n                >\n                    Desks nearby to the selected desk will booked for group\n                    members\n                </p>\n            </section>\n            <section class=\"p-2\" *ngIf=\"has_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 4 : 3 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [options]=\"{\n                        date: form.getRawValue().date,\n                        duration: form.value.duration,\n                        all_day: form.value.all_day,\n                    }\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n})\nexport class NewDeskFormDetailsComponent extends AsyncHandler {\n    @Input() public form: FormGroup;\n    @Output() public find = new EventEmitter<void>();\n    /** List of available buildings to select */\n    public readonly buildings = this._org.building_list;\n    /** List of available levels for the selected building */\n    public readonly levels = this._org.active_levels;\n    /** List of set options for desk booking */\n    public readonly options = this._state.options;\n    /** List of set options for desk booking */\n    public readonly features = this._state.features;\n\n    public readonly force_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    /** Selected desk for booking */\n    public selected_desk: Desk;\n    public from_id = false;\n\n    public readonly recurrence_options = ['daily', 'weekly', 'monthly'];\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get can_book_for_others() {\n        return this._settings.get('app.desks.can_book_for_others');\n    }\n\n    public get can_book_lockers() {\n        return this._settings.get('app.desks.can_book_lockers');\n    }\n    public get can_recurr() {\n        return this._settings.get('app.desks.recurrence_allowed');\n    }\n\n    public get allow_groups() {\n        return this._settings.get('app.desks.allow_groups');\n    }\n\n    public get has_assets() {\n        return !!this._settings.get('app.desks.has_assets');\n    }\n\n    public get needs_reason() {\n        return this._settings.get('app.desks.needs_reason') === true;\n    }\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        ).valueOf();\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.form && this.form) {\n            if (this.selected_desk?.id) {\n                this.form.patchValue({ resources: [this.selected_desk] });\n            }\n        }\n    }\n}\n"],"names":["EventEmitter","MatDialogRef","BookingFormService","notifyError","notifySuccess","BehaviorSubject","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","form","ɵɵlistener","DeskBookModalComponent_footer_9_Template_button_click_1_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","save","ɵɵtext","DeskBookModalComponent","_booking_form","constructor","_dialog_ref","event","loading","_this","_asyncToGenerator","next","patchValue","booking_type","postForm","catch","_","emit","reason","metadata","close","ɵɵdirectiveInject","i1","i2","_2","selectors","outputs","decls","vars","consts","template","DeskBookModalComponent_Template","rf","ctx","ɵɵtemplate","DeskBookModalComponent_main_7_Template","DeskBookModalComponent_footer_9_Template","DeskBookModalComponent_ng_template_11_Template","ɵɵtemplateRefExtractor","ɵɵpipeBind1","load_state_r3","DesksStateService","map","SettingsService","ɵɵtextInterpolate","ɵɵpipeBind2","date_r2","ɵɵelementContainerStart","ɵɵtextInterpolate2","row_r3","date","ctx_r3","time_format","end","DeskBookingsComponent_ng_template_6_ng_container_1_ng_container_2_Template","DeskBookingsComponent_ng_template_6_ng_container_1_ng_container_3_Template","all_day","ɵɵtextInterpolate1","status","DeskBookingsComponent_ng_template_6_ng_container_1_Template","DeskBookingsComponent_ng_template_6_ng_container_2_Template","deleted","row_r5","user_email","DeskBookingsComponent_ng_template_8_div_3_Template","user_name","booked_by_name","booked_by_email","DeskBookingsComponent_ng_template_10_Template_button_click_9_listener","row_r7","_r6","row","approve","DeskBookingsComponent_ng_template_10_Template_button_click_15_listener","reject","ɵɵclassProp","menu_r8","DeskBookingsComponent_ng_template_12_Template_button_click_9_listener","row_r10","_r9","checkin","DeskBookingsComponent_ng_template_12_Template_button_click_15_listener","data_r11","checkinMenu_r12","DeskBookingsComponent_button_14_Template_button_click_0_listener","_r13","loadMore","DeskBookingsComponent","columns","_settings","_state","filters","has_more_pages","bookings","pipe","i","booking","duration","rejectAll","rejectAllDesks","nextPage","d","s","runMethod","checkinDesk","checked_in","approveDesk","rejectDesk","name","fn","_this2","DeskBookingsComponent_Template","DeskBookingsComponent_ng_template_4_Template","DeskBookingsComponent_ng_template_6_Template","DeskBookingsComponent_ng_template_8_Template","DeskBookingsComponent_ng_template_10_Template","DeskBookingsComponent_ng_template_12_Template","DeskBookingsComponent_button_14_Template","DeskBookingsComponent_Template_button_click_21_listener","_r1","tmp_7_0","search","ɵɵpureFunction8","_c8","ɵɵpureFunction1","_c0","date_template_r14","_c1","period_template_r15","_c2","user_template_r16","ɵɵpureFunction0","_c3","_c4","_c5","_c6","status_template_r17","_c7","option_template_r18","tmp_9_0","menu_r19","ExploreDesksService","ExploreStateService","AsyncHandler","OrganisationService","DeskMapViewComponent","_desk","_desks_state","_org","url","map_url","styles","map_styles","positions","map_positions","actions","map_actions","features","map_features","setHost","u","setOptions","host","ngOnInit","use_api","subscription","subscribe","opts","level","levelWithID","zones","setLevel","id","Date","now","i3","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","DeskMapViewComponent_Template","DeskMapViewComponent_Template_a_user_search_field_ngModelChange_10_listener","$event","zoom","center","ElementRef","MatDialog","csvToJson","loadTextFileFromInputEvent","openConfirmModal","randomInt","Desk","updateMetadata","generateQRCode","take","Clipboard","map_id","DesksManageComponent_ng_template_4_Template_button_click_0_listener","copyToClipboard","DesksManageComponent_ng_template_4_div_3_Template","item_r5","DesksManageComponent_ng_template_6_span_1_Template","data_r6","data_r7","DesksManageComponent_ng_template_10_ng_template_10_Template_button_click_7_listener","_r10","print","row_r9","qr_link","ɵɵsanitizeUrl","qr_code","DesksManageComponent_ng_template_10_Template_button_click_1_listener","_r8","loadQrCode","DesksManageComponent_ng_template_10_Template_button_click_4_listener","editDesk","DesksManageComponent_ng_template_10_Template_button_click_7_listener","removeDesk","DesksManageComponent_ng_template_10_ng_template_10_Template","qr_menu_r11","DesksManageComponent_div_13_Template_input_change_4_listener","_r12","loadCSVData","QR_CODES","DesksManageComponent","_dialog","_element","_clipboard","dragging","desks","desk","success","copy","resp","title","content","icon","toPromise","updated_desks","filter","description","details","e","message","setFilters","kiosk_url","path","get","window","location","origin","item","link","encodeURIComponent","data","m","list","addDesks","console","error","handleDrag","type","i4","i5","DesksManageComponent_Template","DesksManageComponent_Template_div_dragenter_0_listener","DesksManageComponent_Template_div_dragend_0_listener","ɵɵresolveWindow","DesksManageComponent_ng_template_4_Template","DesksManageComponent_ng_template_6_Template","DesksManageComponent_ng_template_8_Template","DesksManageComponent_ng_template_10_Template","DesksManageComponent_div_12_Template","DesksManageComponent_div_13_Template","tmp_4_0","ɵɵpureFunction5","name_template_r13","item_list_template_r14","bool_template_r15","action_template_r16","ActivatedRoute","Router","first","downloadFile","jsonToCsv","notifyInfo","showBooking","BookingRulesModalComponent","level_r1","display_name","DesksTopbarComponent_button_8_Template_button_click_0_listener","ctx_r2","newDeskBooking","DesksTopbarComponent_button_9_Template_button_click_0_listener","_r4","newDesk","DesksTopbarComponent_button_10_Template_input_change_3_listener","_r5","DesksTopbarComponent_button_11_Template_button_click_0_listener","downloadTemplate","DesksTopbarComponent_button_12_Template_button_click_0_listener","_r7","manageRestrictions","DesksTopbarComponent","_desks","_route","_router","levels","active_levels","manage","is_map","setDate","o","updateZones","navigate","relativeTo","queryParams","zone_ids","join","queryParamsHandling","initialised","queryParamMap","params","has","split","length","building","buildings","find","bld","parent_id","includes","events","_ref","zone","lvl","push","_x","apply","arguments","staff_name","undefined","open","bookable","groups","toJSON","images","_this3","_this4","DesksTopbarComponent_Template","DesksTopbarComponent_Template_mat_select_ngModelChange_2_listener","DesksTopbarComponent_mat_option_5_Template","DesksTopbarComponent_mat_option_6_Template","DesksTopbarComponent_button_8_Template","DesksTopbarComponent_button_9_Template","DesksTopbarComponent_button_10_Template","DesksTopbarComponent_button_11_Template","DesksTopbarComponent_button_12_Template","DesksTopbarComponent_Template_searchbar_modelChange_14_listener","DesksTopbarComponent_Template_date_options_dateChange_16_listener","tmp_8_0","NavigationEnd","DesksComponent","refresh","url_parts","parts","ngOnDestroy","attrs","DesksComponent_Template","DesksComponent_mat_progress_bar_13_Template","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MatRadioModule","MatTabsModule","SharedExploreModule","UIModule","MatFormFieldModule","MatCheckboxModule","MatInputModule","NewDeskFormDetailsComponent","SharedBookingsModule","FormFieldsModule","NewDesksComponent","DeskModalComponent","ROUTES","component","children","redirectTo","DesksModule","_3","forChild","declarations","imports","combineLatest","NewDesksComponent_button_10_Template_button_click_0_listener","ctx_r1","NewDesksComponent_button_11_Template_button_click_0_listener","_r3","level_r5","NewDesksComponent_mat_form_field_13_mat_option_3_div_2_Template","use_region","NewDesksComponent_mat_form_field_13_Template_mat_select_ngModelChange_1_listener","NewDesksComponent_mat_form_field_13_mat_option_3_Template","tmp_1_0","level_r7","NewDesksComponent_mat_form_field_14_mat_option_4_div_2_Template","NewDesksComponent_mat_form_field_14_Template_mat_select_ngModelChange_1_listener","NewDesksComponent_mat_form_field_14_mat_option_4_Template","NewDesksComponent_ng_container_16_Template_date_options_dateChange_1_listener","NewDesksComponent_ng_container_16_Template_button_click_2_listener","NewDesksComponent_ng_container_17_Template_input_change_4_listener","NewDesksComponent_ng_container_17_Template_button_click_5_listener","NewDesksComponent_ng_container_17_Template_button_click_8_listener","active_building","active_region","region","levelsForRegion","levelsForBuilding","_checkManage","ref","afterClosed","lvls","levels_in_zones","some","z","unsub","NewDesksComponent_Template","NewDesksComponent_Template_searchbar_modelChange_8_listener","NewDesksComponent_button_10_Template","NewDesksComponent_button_11_Template","NewDesksComponent_mat_form_field_13_Template","NewDesksComponent_mat_form_field_14_Template","NewDesksComponent_ng_container_16_Template","NewDesksComponent_ng_container_17_Template","NewDesksComponent_mat_progress_bar_20_Template","SimpleChanges","FormGroup","addDays","endOfDay","set","NewDeskFormDetailsComponent_div_0_section_1_Template_button_click_1_listener","group","members","ɵɵi18n","NewDeskFormDetailsComponent_div_0_section_1_Template_button_click_10_listener","tmp_2_0","options","tmp_3_0","tmp_5_0","tmp_6_0","ɵɵi18nStart","ɵɵi18nEnd","NewDeskFormDetailsComponent_div_0_div_27_Template_a_time_field_ngModelChange_5_listener","value","use_24hr","NewDeskFormDetailsComponent_div_0_div_28_Template_mat_checkbox_ngModelChange_2_listener","secondary_resource","NewDeskFormDetailsComponent_div_0_section_29_Template_a_user_list_field_ngModelChange_8_listener","NewDeskFormDetailsComponent_div_0_section_31_p_8_Template","ɵɵpureFunction3","getRawValue","NewDeskFormDetailsComponent_div_0_section_1_Template","NewDeskFormDetailsComponent_div_0_div_8_Template","NewDeskFormDetailsComponent_div_0_mat_checkbox_26_Template","NewDeskFormDetailsComponent_div_0_div_27_Template","NewDeskFormDetailsComponent_div_0_div_28_Template","NewDeskFormDetailsComponent_div_0_section_29_Template","NewDeskFormDetailsComponent_div_0_section_31_Template","NewDeskFormDetailsComponent_div_0_section_32_Template","allow_groups","can_book_for_others","end_date","allow_all_day","can_book_lockers","contains","has_assets","can_recurr","needs_reason","allow_time_changes","valueOf","building_list","force_time","hours","minutes","from_id","recurrence_options","setFeature","f","ngOnChanges","changes","selected_desk","resources","inputs","ɵɵNgOnChangesFeature","i18n_0","ngI18nClosureMode","$localize","NewDeskFormDetailsComponent_div_0_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}