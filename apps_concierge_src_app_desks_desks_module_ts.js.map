{"version":3,"file":"apps_concierge_src_app_desks_desks_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/desks/desk-book-modal.component.ts","./apps/concierge/src/app/desks/desk-bookings.component.ts","./apps/concierge/src/app/desks/desk-map-view.component.ts","./apps/concierge/src/app/desks/desks-manage.component.ts","./apps/concierge/src/app/desks/desks-topbar.component.ts","./apps/concierge/src/app/desks/desks.component.ts","./apps/concierge/src/app/desks/desks.module.ts","./apps/concierge/src/app/desks/new-desks.component.ts","./apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component.ts"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { BookingFormService } from '@placeos/bookings';\nimport { DialogEvent, notifyError, notifySuccess } from '@placeos/common';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'desk-book-modal',\n    template: `\n        <header>\n            <h2>New Desk Booking</h2>\n            <div class=\"flex-1 w-0\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!(loading | async); else load_state\"\n            class=\"overflow-auto p-4 max-h-[65vh]\"\n        >\n            <new-desk-form-details [form]=\"form\"></new-desk-form-details>\n        </main>\n        <footer\n            *ngIf=\"!(loading | async)\"\n            class=\"flex justify-center items-center p-2 border-t border-base-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                loading\n                class=\"h-64 flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Making booking request...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DeskBookModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public readonly loading = new BehaviorSubject(false);\n\n    public get form() {\n        return this._booking_form.form;\n    }\n\n    constructor(\n        private _booking_form: BookingFormService,\n        private _dialog_ref: MatDialogRef<DeskBookModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading.next(true);\n        this.form.patchValue({ booking_type: 'desk' });\n        const event = await this._booking_form.postForm().catch((_) => {\n            notifyError(_);\n            this.loading.next(false);\n            throw _;\n        });\n        this.event.emit({ reason: 'done', metadata: event });\n        notifySuccess('Successfully created booking');\n        this._dialog_ref.close();\n        this.loading.next(false);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { DesksStateService } from './desks-state.service';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'desk-bookings',\n    template: `\n        <div class=\"w-full h-4\"></div>\n        <div class=\"overflow-auto h-full w-full px-4 pb-4\">\n            <custom-table\n                class=\"min-w-[76rem] block\"\n                [dataSource]=\"bookings\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"columns\"\n                [display_column]=\"[\n                    'Date',\n                    'Period',\n                    'Person',\n                    'Group',\n                    'Desk',\n                    'Approver',\n                    'Status',\n                    'Checked In'\n                ]\"\n                [column_size]=\"[\n                    '4r',\n                    '10r',\n                    'flex',\n                    '10r',\n                    '10r',\n                    '10r',\n                    '8r',\n                    '7r'\n                ]\"\n                [template]=\"{\n                    user_name: user_template,\n                    date: date_template,\n                    period: period_template,\n                    status: status_template,\n                    checked_in: option_template,\n                    access: option_template,\n                }\"\n                [empty]=\"\n                    (filters | async)?.search\n                        ? 'No matching desk bookings'\n                        : 'There are no desk booking for the currently selected date.'\n                \"\n            ></custom-table>\n            <ng-template #date_template let-date=\"data\">\n                <div class=\"flex flex-col items-center justify-center w-full\">\n                    <div class=\"opacity-60\">{{ date | date: 'MMM' }}</div>\n                    <div class=\"text-xl\">{{ date | date: 'dd' }}</div>\n                </div>\n            </ng-template>\n            <ng-template #period_template let-row=\"row\">\n                <ng-container\n                    *ngIf=\"\n                        row.status !== 'declined' &&\n                        !row.deleted &&\n                        row.status !== 'ended'\n                    \"\n                >\n                    <ng-container *ngIf=\"!row.all_day\">\n                        {{ row.date | date: time_format }} &ndash;\n                        {{ row.end | date: time_format }}\n                    </ng-container>\n                    <ng-container *ngIf=\"row.all_day\">All Day</ng-container>\n                </ng-container>\n                <ng-container\n                    *ngIf=\"\n                        row.status === 'declined' ||\n                        row.deleted ||\n                        row.status === 'ended'\n                    \"\n                >\n                    <div\n                        class=\"text-xs py-1 px-2 bg-error rounded-2xl text-white\"\n                    >\n                        {{\n                            row.status === 'ended'\n                                ? 'Manually Ended'\n                                : 'Expired'\n                        }}\n                    </div>\n                </ng-container>\n            </ng-template>\n            <ng-template #user_template let-row=\"row\">\n                <div class=\"flex flex-col justify-center\">\n                    <div class=\"select-all\">\n                        {{\n                            row.user_name ||\n                                row.user_email ||\n                                row.booked_by_name ||\n                                row.booked_by_email\n                        }}\n                    </div>\n                    <div\n                        *ngIf=\"row.user_name\"\n                        class=\"text-xs opacity-30 select-all\"\n                    >\n                        {{ row.user_email }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\">\n                <button\n                    matRipple\n                    [matMenuTriggerFor]=\"statusMenu\"\n                    class=\"rounded-3xl px-2 py-1 flex items-center space-x-2 capitalize\"\n                    [class.bg-success]=\"row.approved\"\n                    [class.text-white]=\"row.approved || row.rejected\"\n                    [class.bg-warning]=\"!row.approved && !row.rejected\"\n                    [class.text-black]=\"!row.approved && !row.rejected\"\n                    [class.bg-error]=\"row.rejected\"\n                >\n                    <div class=\"ml-2\">\n                        {{\n                            row.approved\n                                ? 'Approved'\n                                : row.rejected\n                                ? 'Declined'\n                                : 'Tentative'\n                        }}\n                    </div>\n                    <app-icon class=\"text-xl\">arrow_drop_down</app-icon>\n                </button>\n                <mat-menu #statusMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"approve(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\"\n                                >event_available</app-icon\n                            >\n                            <div>Approve Desk</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"reject(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">event_busy</app-icon>\n                            <div>Decline Desk</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #option_template let-data=\"data\" let-row=\"row\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl px-2 py-1 text-white flex items-center space-x-2\"\n                    [matMenuTriggerFor]=\"checkinMenu\"\n                    [class.bg-neutral]=\"!data\"\n                    [class.bg-success]=\"data\"\n                    [class.opacity-30]=\"row.status === 'ended'\"\n                    [disabled]=\"row.status === 'ended'\"\n                    [matTooltip]=\"\n                        row.status === 'ended'\n                            ? 'Desk booking has ended'\n                            : 'Check-in or check-out desk'\n                    \"\n                >\n                    <div class=\"ml-2\">{{ data ? 'Yes' : 'No' }}</div>\n                    <app-icon class=\"text-xl\">arrow_drop_down</app-icon>\n                </button>\n                <mat-menu #checkinMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"checkin(row, true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">check</app-icon>\n                            <div>Check-in</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"checkin(row, false)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Check-out</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n        </div>\n\n        <button\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 w-32 mx-auto my-4\"\n            *ngIf=\"!loading && (has_more_pages | async)\"\n            (click)=\"loadMore()\"\n        >\n            Load More\n        </button>\n        <button\n            icon\n            matRipple\n            class=\"absolute bottom-2 right-2 bg-base-100 shadow\"\n            [matMenuTriggerFor]=\"menu\"\n        >\n            <app-icon>more_vert</app-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"rejectAll()\">Reject All</button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingsComponent {\n    public loading: string;\n    public readonly filters = this._state.filters;\n    public readonly has_more_pages = this._state.has_more_pages;\n    public readonly bookings = this._state.bookings.pipe(\n        map((i) =>\n            i.map((booking) => ({\n                ...booking,\n                end: booking.date + booking.duration * 60 * 1000,\n            }))\n        )\n    );\n\n    public readonly rejectAll = () => this._state.rejectAllDesks();\n    public readonly loadMore = () => this._state.nextPage();\n\n    public get columns() {\n        return [\n            'date',\n            'period',\n            'user_name',\n            'group',\n            'asset_name',\n            'approver_name',\n            'status',\n            'checked_in',\n        ];\n    }\n\n    public readonly checkin = (d, s?) =>\n        this.runMethod('checkin', async () => {\n            await this._state.checkinDesk(d, s);\n            d.checked_in = s ?? true;\n        });\n    public readonly approve = (d) =>\n        this.runMethod('approve', async () => this._state.approveDesk(d));\n    public readonly reject = (d) =>\n        this.runMethod('reject', async () => this._state.rejectDesk(d));\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _settings: SettingsService\n    ) {}\n\n    private async runMethod(name: string, fn: () => Promise<any>) {\n        this.loading = name;\n        await fn().catch((i) => null);\n        this.loading = '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ExploreDesksService, ExploreStateService } from '@placeos/explore';\n\nimport { DesksStateService } from './desks-state.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map-view',\n    template: `\n        <div map class=\"h-full w-full relative\">\n            <interactive-map\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async).zoom\"\n                [center]=\"(positions | async).center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <explore-zoom-controls\n                class=\"absolute bottom-2 right-2\"\n            ></explore-zoom-controls>\n            <div class=\"absolute top-0 left-0 p-2 text-black\">\n                <a-user-search-field\n                    [ngModel]=\"null\"\n                    (ngModelChange)=\"setHost($event)\"\n                    class=\"white\"\n                    placeholder=\"User for bookings...\"\n                ></a-user-search-field>\n            </div>\n            <div\n                info\n                class=\"absolute bottom-0 rounded p-2 m-2 bg-base-100 shadow text-center\"\n            >\n                Click/Tap an available desk to book it.\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [info] {\n                left: 50%;\n                transform: translateX(-50%);\n            }\n        `,\n    ],\n    providers: [ExploreDesksService],\n})\nexport class DeskMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n\n    public readonly setHost = (u) => this._desks_state.setOptions({ host: u });\n\n    constructor(\n        private _state: ExploreStateService,\n        private _desk: DesksStateService,\n        private _desks_state: ExploreDesksService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._desks_state.setOptions({ use_api: true });\n        this.subscription(\n            'date',\n            this._desk.filters.subscribe((opts) => {\n                const level = this._org.levelWithID(opts.zones);\n                if (level) this._state.setLevel(level.id);\n                this._desks_state.setOptions({\n                    date: opts.date || Date.now(),\n                    all_day: true,\n                    zones: opts.zones,\n                });\n            })\n        );\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    csvToJson,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    randomInt,\n    unique,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DesksStateService } from './desks-state.service';\n\nconst QR_CODES = {};\n\n@Component({\n    selector: 'desks-manage',\n    template: `\n        <div class=\"w-full h-4\"></div>\n        <div\n            class=\"w-full relative pl-8 pb-4\"\n            [style.margin-bottom]=\"changed > 0 ? '4rem' : ''\"\n            (dragenter)=\"handleDrag('enter', $event)\"\n            (window:dragend)=\"handleDrag('end', $event)\"\n        >\n            <custom-table\n                class=\"min-w-[76rem] block\"\n                [dataSource]=\"desks\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"[\n                    'map_id',\n                    'bookable',\n                    'name',\n                    'groups',\n                    'features',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'ID',\n                    'Bookable',\n                    'Name',\n                    'Groups',\n                    'Features',\n                    ' '\n                ]\"\n                [column_size]=\"['12r', '6r', '12r', 'flex', '16r', '10r']\"\n                [template]=\"{\n                    map_id: text_edit_template,\n                    name: text_edit_template,\n                    bookable: bookable_edit_template,\n                    groups: list_edit_template,\n                    features: list_edit_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (filters | async)?.search\n                        ? 'No matching desks'\n                        : 'No desks for selected level'\n                \"\n                [reset_page]=\"page_reset\"\n                [pagination]=\"true\"\n                [page_size]=\"20\"\n            ></custom-table>\n            <ng-template\n                #list_edit_template\n                let-data=\"data\"\n                let-row=\"row\"\n                let-key=\"key\"\n            >\n                <item-list-field\n                    class=\"w-full\"\n                    hide-outline\n                    [placeholder]=\"\n                        key === 'groups' ? 'User Groups' : 'Features'\n                    \"\n                    [name]=\"key\"\n                    [ngModel]=\"\n                        (changes[row.id] ? changes[row.id][key] : null) || data\n                    \"\n                    (ngModelChange)=\"setRowValue(row.id, key, $event)\"\n                >\n                </item-list-field>\n            </ng-template>\n            <ng-template\n                #text_edit_template\n                let-data=\"data\"\n                let-row=\"row\"\n                let-key=\"key\"\n            >\n                <div class=\"w-full h-12\" hide-outline>\n                    <mat-form-field class=\"h-12 w-full\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [placeholder]=\"key\"\n                            [name]=\"key\"\n                            [ngModel]=\"\n                                (changes[row.id]\n                                    ? changes[row.id][key]\n                                    : null) || data\n                            \"\n                            (ngModelChange)=\"setRowValue(row.id, key, $event)\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-template>\n            <ng-template #bookable_edit_template let-data=\"data\" let-row=\"row\">\n                <div class=\"flex items-center justify-center pl-4\">\n                    <mat-checkbox\n                        [ngModel]=\"changes[row.id]?.bookable ?? data\"\n                        (ngModelChange)=\"\n                            setRowValue(row.id, 'bookable', $event)\n                        \"\n                    ></mat-checkbox>\n                </div>\n            </ng-template>\n            <ng-template #action_template let-row=\"row\">\n                <div class=\"flex items-center justify-end space-x-2\">\n                    <div\n                        class=\"p-2 text-2xl text-warning\"\n                        [class.opacity-0]=\"!changes[row.id]\"\n                        matTooltip=\"Desk has unsaved changes\"\n                    >\n                        <app-icon>warning</app-icon>\n                    </div>\n                    <button icon (click)=\"removeDesk(row)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [content]=\"qr_menu\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                    <ng-template #qr_menu>\n                        <div class=\"bg-base-100 py-2 shadow rounded\">\n                            <div class=\"\" printable>\n                                <a\n                                    [href]=\"row.qr_link | safe: 'url'\"\n                                    target=\"_blank\"\n                                    ref=\"noopener noreferrer\"\n                                    class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                                >\n                                    <img class=\"w-48\" [src]=\"row.qr_code\" />\n                                </a>\n                                <div\n                                    class=\"w-[calc(100%-2rem)] text-center mt-2 font-mono text-sm bg-base-200 rounded p-2 mx-4\"\n                                >\n                                    {{ row.name || row.id }}\n                                </div>\n                            </div>\n                            <button\n                                btn\n                                matRipple\n                                class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                                (click)=\"print()\"\n                            >\n                                Print QR Code\n                            </button>\n                        </div>\n                    </ng-template>\n                </div>\n            </ng-template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 bg-base-100 bg-opacity-60\"\n                *ngIf=\"loading\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n            <div\n                *ngIf=\"dragging\"\n                class=\"absolute inset-0 bg-neutral flex items-center justify-center\"\n            >\n                <div class=\"bg-base-100 p-4 rounded shadow\">\n                    <div\n                        class=\"border-4 border-base-200 border-dashed rounded flex flex-col items-center justify-center w-64 h-64\"\n                    >\n                        Drop CSV file to add desks\n                    </div>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </div>\n        </div>\n        <div\n            class=\"fixed bottom-0 left-64 right-0 p-2 bg-base-100 shadow border-t border-base-200 flex items-center justify-center space-x-4\"\n            *ngIf=\"changed > 0\"\n        >\n            <p class=\"flex-1 text-center pl-8\">\n                {{ changed }} Desk(s) with unsaved changes\n            </p>\n            <div class=\"flex items-center justify-center space-x-2\">\n                <button clear btn matRipple class=\"inverse\" (click)=\"clear()\">\n                    Clear Changes\n                </button>\n                <button save btn matRipple (click)=\"save()\">\n                    Save Changes\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DesksManageComponent extends AsyncHandler {\n    public changes: Record<string, Partial<Desk>> = {};\n    public loading: string;\n    public dragging = false;\n    public page_reset = 0;\n    public readonly filters = this._state.filters;\n    public readonly desks = combineLatest([\n        this._state.new_desks,\n        this._state.desks,\n    ]).pipe(map(([d, n]) => d.concat(n)));\n\n    public get changed() {\n        return Object.keys(this.changes).length || 0;\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService,\n        private _element: ElementRef\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'new_desks',\n            this._state.new_desks.subscribe((desks) => {\n                this.page_reset = Date.now();\n                const el = this._element?.nativeElement?.parentElement;\n                if (el) el.scrollTop = 0;\n                for (const desk of desks) {\n                    this.changes[desk.id] = {};\n                }\n            })\n        );\n    }\n\n    public setRowValue<K extends keyof Desk>(\n        id: string,\n        key: K,\n        value: Desk[K]\n    ): void {\n        if (!this.changes[id]) this.changes[id] = {};\n        this.changes[id][key] = value;\n    }\n\n    public async removeDesk(desk: Desk) {\n        const new_desks = await this._state.new_desks.pipe(take(1)).toPromise();\n        if (new_desks.find((_) => _.id === desk.id)) {\n            delete this.changes[desk.id];\n            return this._state.removeNewDesk(desk);\n        }\n        const resp = await openConfirmModal(\n            {\n                title: 'Remove desk',\n                content: `Remove desk ${desk.name}?`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.close();\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = desks.filter((_) => _.id !== desk.id);\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        this.loading = 'Removing desk...';\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving desk data. Error: ${e.message || e}`);\n                throw e;\n            });\n        delete this.changes[desk.id];\n        notifySuccess('Successfully updated desks');\n        this._state.setFilters({});\n        this.loading = '';\n    }\n\n    public async save() {\n        this.loading = 'Saving changes to desks...';\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = unique(\n            desks.map((_) =>\n                new Desk({ ..._, ...(this.changes[_.id] || {}) }).toJSON()\n            ),\n            'id'\n        );\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                const msg =\n                    e?.status === 403\n                        ? 'You do not have the required permissions to save desk changes.'\n                        : e.message || e;\n                notifyError(`Error saving desk data. Error: ${msg}`);\n                throw e;\n            });\n        notifySuccess('Successfully updated desks');\n        this._state.clearNewDesks();\n        this.loading = '';\n        this.changes = {};\n    }\n\n    public clear() {\n        this._state.clearNewDesks();\n        this.changes = {};\n    }\n\n    public get kiosk_url() {\n        const path =\n            this._settings.get('app.workplace_url_path') || '/workplace';\n        return `${window.location.origin}${path}`;\n    }\n\n    public loadQrCode(item: any) {\n        const link = `${\n            this.kiosk_url\n        }/#/book/code?asset_id=${encodeURIComponent(item.id)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public print() {\n        window.print();\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        this.loading = 'Loading CSV file...';\n        this.dragging = false;\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n        this.loading = '';\n    }\n\n    public handleDrag(type: 'enter' | 'leave' | 'end', event: DragEvent) {\n        this.dragging = type === 'enter';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifyInfo,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { DesksStateService } from './desks-state.service';\nimport { showBooking } from '@placeos/bookings';\nimport { randomInt } from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: 'desks-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"\n                        (filters | async).zones\n                            ? (filters | async).zones[0]\n                            : 'All'\n                    \"\n                    (ngModelChange)=\"updateZones([$event])\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option value=\"All\" *ngIf=\"!is_map\">\n                        All Levels\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button\n                btn\n                matRipple\n                *ngIf=\"!manage\"\n                class=\"mx-2 w-36\"\n                matTooltip=\"New Desk Booking\"\n                (click)=\"newDeskBooking()\"\n            >\n                New Booking\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"newDesk()\"\n                matTooltip=\"New Desk\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary relative text-white rounded\"\n                matTooltip=\"Upload Desks CSV\"\n            >\n                <app-icon>cloud_upload</app-icon>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"downloadTemplate()\"\n                matTooltip=\"Download Template Desk CSV\"\n            >\n                <app-icon>download</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Desk Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(filters | async)?.search\"\n                (modelChange)=\"setFilters({ search: $event })\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class DesksTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly filters = this._desks.filters;\n\n    public manage = false;\n    public is_map = false;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._desks.setFilters({ date });\n    public readonly setFilters = (o) => this._desks.setFilters(o);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._desks.setFilters({ zones });\n    };\n\n    constructor(\n        private _desks: DesksStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.updateZones(zones);\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n                if (params.has('date')) {\n                    this.setDate(new Date(+params.get('date')));\n                }\n                if (params.has('approve')) {\n                    this.approve(params.get('approve'));\n                } else if (params.has('reject')) {\n                    this.reject(params.get('reject'));\n                }\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe(() => {\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All'\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n        this.manage = this._router.url?.includes('manage');\n        this.is_map = this._router.url?.includes('map');\n    }\n\n    public newDesk() {\n        const desk = new Desk({ id: `desk-${randomInt(999_999)}` });\n        desk.staff_name = `[NEW_DESK]`;\n        this._desks.addDesks([desk]);\n        notifyInfo('New desk added to local data.', undefined, () =>\n            notifyInfo('Make sure to save the new desk before using it.')\n        );\n    }\n\n    public newDeskBooking() {\n        this._dialog.open(DeskBookModalComponent, {});\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._desks.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        delete desk.images;\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    /**\n     * Aprrove a desk booking\n     * @param id Booking ID to approve\n     */\n    private async approve(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.approveDesk(booking);\n        }\n    }\n\n    /**\n     * Reject a desk booking\n     * @param id Booking ID to reject\n     */\n    private async reject(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.rejectDesk(booking);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: '[app-desks]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"flex-1 relative w-1/2 flex flex-col bg-base-100 overflow-hidden\"\n        >\n            <desks-topbar class=\"w-full\"></desks-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Map View\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'manage']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'manage'\"\n                    >\n                        Manage Desks\n                    </a>\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DesksComponent extends AsyncHandler implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public path: string;\n\n    constructor(private _state: DesksStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { SharedExploreModule } from '@placeos/explore';\nimport { UIModule } from '../ui/ui.module';\n\nimport { DesksComponent } from './desks.component';\nimport { DeskBookingsComponent } from './desk-bookings.component';\nimport { DesksTopbarComponent } from './desks-topbar.component';\nimport { DeskMapViewComponent } from './desk-map-view.component';\nimport { DesksManageComponent } from './desks-manage.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NewDeskFormDetailsComponent } from 'apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { NewDesksComponent } from './new-desks.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewDesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: DesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        NewDesksComponent,\n        DesksComponent,\n        DeskBookingsComponent,\n        DesksTopbarComponent,\n        DeskMapViewComponent,\n        DesksManageComponent,\n        NewDeskFormDetailsComponent,\n        DeskBookModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatTabsModule,\n        ReactiveFormsModule,\n        UIModule,\n        SharedExploreModule,\n        SharedBookingsModule,\n        FormFieldsModule,\n        MatRadioModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatInputModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DesksModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifyInfo,\n    notifySuccess,\n    randomInt,\n} from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { take, filter } from 'rxjs/operators';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: '[app-new-desks]',\n    template: `\n        <app-topbar class=\" print:hidden\"></app-topbar>\n        <div class=\"flex flex-1 h-px print:hidden\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">\n                        {{ page_title }}\n                    </h2>\n                    <div class=\"flex-1 w-px\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        [model]=\"(filters | async)?.search\"\n                        (modelChange)=\"setFilters({ search: $event })\"\n                    ></searchbar>\n                    <button\n                        btn\n                        matRipple\n                        class=\"space-x-2\"\n                        (click)=\"newDeskBooking()\"\n                    >\n                        <div>New Booking</div>\n                        <app-icon>add</app-icon>\n                    </button>\n                </div>\n                <div class=\"w-full flex items-center px-8 space-x-2\">\n                    <mat-form-field appearance=\"outline\" class=\"h-[3.5rem]\">\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones[0]\"\n                            (ngModelChange)=\"updateZones([$event])\"\n                            placeholder=\"All Levels\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"border-l h-full !ml-8 !mr-4\"></div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <ng-container *ngIf=\"path === 'events'\">\n                        <date-options\n                            (dateChange)=\"setDate($event)\"\n                        ></date-options>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            matTooltip=\"Refresh List\"\n                            class=\"ml-2 rounded border border-base-200\"\n                            (click)=\"refresh()\"\n                            [disabled]=\"loading | async\"\n                        >\n                            <app-icon>refresh</app-icon>\n                        </button>\n                    </ng-container>\n                    <ng-container *ngIf=\"path === 'manage'\">\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-white rounded\"\n                            (click)=\"newDesk()\"\n                            matTooltip=\"New Desk\"\n                        >\n                            <app-icon>add</app-icon>\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary relative text-white rounded\"\n                            matTooltip=\"Upload Desks CSV\"\n                        >\n                            <app-icon>cloud_upload</app-icon>\n                            <input\n                                type=\"file\"\n                                class=\"absolute inset-0 opacity-0\"\n                                (change)=\"loadCSVData($event)\"\n                            />\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-white rounded\"\n                            (click)=\"downloadTemplate()\"\n                            matTooltip=\"Download Template Desk CSV\"\n                        >\n                            <app-icon>download</app-icon>\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-white rounded\"\n                            (click)=\"manageRestrictions()\"\n                            matTooltip=\"Desk Restrictions\"\n                        >\n                            <app-icon>lock_open</app-icon>\n                        </button>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 h-1/2 w-full relative overflow-auto\">\n                    <router-outlet></router-outlet>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"(loading | async) && path === 'events'\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewDesksComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public readonly loading = this._state.loading;\n    public path: string;\n    /** List of levels for the active building */\n    public readonly filters = this._state.filters;\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    public readonly setFilters = (o) => this._state.setFilters(o);\n    public readonly refresh = () => this._state.refresh();\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._state.setFilters({ zones });\n    };\n    public page_title: string = 'Desk Bookings';\n\n    constructor(\n        private _state: DesksStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                    if (this.path.includes('manage')) {\n                        this.page_title = 'Desk Management';\n                    } else {\n                        this.page_title = 'Desk Bookings';\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All'\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n\n    public newDeskBooking() {\n        const ref = this._dialog.open(DeskBookModalComponent, {});\n        ref.afterClosed().subscribe((_) => {\n            this._state.refresh();\n        });\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public newDesk() {\n        this._state.addDesks([new Desk({ id: `desk-${randomInt(999_999)}` })]);\n        notifyInfo('New desk added to local data.', undefined, () =>\n            notifyInfo('Make sure to save the new desk before using it.')\n        );\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        delete desk.images;\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { addDays, endOfDay, set } from 'date-fns';\n\n@Component({\n    selector: 'new-desk-form-details',\n    styles: [],\n    template: `\n        <!-- <div class=\"m-2 bg-warning p-2 text-center rounded shadow text-sm\">\n            The selected desk hasn't been booked. Please book the desk to be\n            able to check-in.\n        </div> -->\n        <div\n            class=\"p-0 sm:py-4 sm:px-16 divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"flex items-center\" *ngIf=\"allow_groups\">\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"!(options | async)?.group\"\n                    (click)=\"setOptions({ group: false, members: [] })\"\n                >\n                    <app-icon class=\"text-2xl\">person</app-icon>\n                    <div class=\"\" i18n>Single</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"(options | async)?.group\"\n                        [class.bg-secondary]=\"!(options | async)?.group\"\n                    ></div>\n                </button>\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"(options | async)?.group\"\n                    (click)=\"setOptions({ group: true })\"\n                >\n                    <app-icon class=\"text-2xl\">group_add</app-icon>\n                    <div class=\"\" i18n>Group</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"!(options | async)?.group\"\n                        [class.bg-secondary]=\"(options | async)?.group\"\n                    ></div>\n                </button>\n            </section>\n            <section class=\"p-2\" [class.!border-none]=\"allow_groups\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\" i18n>Details</div>\n                </h3>\n                <div\n                    class=\"w-full\"\n                    *ngIf=\"can_book_for_others && !(options | async)?.group\"\n                >\n                    <label for=\"title\">Host<span>*</span></label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error i18n\n                                >Booking title is required.</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px] relative\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                            [to]=\"end_date\"\n                            i18n\n                        >\n                            Date and time must be in the future\n                        </a-date-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute -top-2 right-0\"\n                            i18n\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n>\n                            End Time<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"(options | async)?.group\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\" i18n>Group Members</div>\n                    <div class=\"flex-1 w-px\"></div>\n                </h3>\n                <div class=\"overflow-hidden\">\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        [ngModel]=\"(options | async)?.members || []\"\n                        (ngModelChange)=\"setOptions({ members: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"form.contains('resources')\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 3 : 2 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n                <p\n                    *ngIf=\"(options | async)?.group\"\n                    class=\"text-center rounded px-2 py-1 bg-warning shadow text-xs\"\n                >\n                    Desks nearby to the selected desk will booked for group\n                    members\n                </p>\n            </section>\n            <section class=\"p-2\" *ngIf=\"has_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 4 : 3 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [options]=\"{\n                        date: form.getRawValue().date,\n                        duration: form.value.duration,\n                        all_day: form.value.all_day,\n                    }\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n})\nexport class NewDeskFormDetailsComponent extends AsyncHandler {\n    @Input() public form: FormGroup;\n    @Output() public find = new EventEmitter<void>();\n    /** List of available buildings to select */\n    public readonly buildings = this._org.building_list;\n    /** List of available levels for the selected building */\n    public readonly levels = this._org.active_levels;\n    /** List of set options for desk booking */\n    public readonly options = this._state.options;\n    /** List of set options for desk booking */\n    public readonly features = this._state.features;\n\n    public readonly force_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    /** Selected desk for booking */\n    public selected_desk: Desk;\n    public from_id = false;\n\n    public readonly recurrence_options = ['daily', 'weekly', 'monthly'];\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get can_book_for_others() {\n        return this._settings.get('app.desks.can_book_for_others');\n    }\n\n    public get can_book_lockers() {\n        return this._settings.get('app.desks.can_book_lockers');\n    }\n    public get can_recurr() {\n        return this._settings.get('app.desks.recurrence_allowed');\n    }\n\n    public get allow_groups() {\n        return this._settings.get('app.desks.allow_groups');\n    }\n\n    public get has_assets() {\n        return !!this._settings.get('app.desks.has_assets');\n    }\n\n    public get needs_reason() {\n        return this._settings.get('app.desks.needs_reason') === true;\n    }\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        ).valueOf();\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.form && this.form) {\n            if (this.selected_desk?.id) {\n                this.form.patchValue({ resources: [this.selected_desk] });\n            }\n        }\n    }\n}\n"],"names":["EventEmitter","MatDialogRef","BookingFormService","notifyError","notifySuccess","BehaviorSubject","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","form","ɵɵlistener","DeskBookModalComponent_footer_9_Template_button_click_1_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","save","ɵɵtext","DeskBookModalComponent","_booking_form","constructor","_dialog_ref","event","loading","_this","_asyncToGenerator","next","patchValue","booking_type","postForm","catch","_","emit","reason","metadata","close","ɵɵdirectiveInject","i1","i2","_2","selectors","outputs","decls","vars","consts","template","DeskBookModalComponent_Template","rf","ctx","ɵɵtemplate","DeskBookModalComponent_main_7_Template","DeskBookModalComponent_footer_9_Template","DeskBookModalComponent_ng_template_11_Template","ɵɵtemplateRefExtractor","ɵɵpipeBind1","load_state_r3","DesksStateService","map","SettingsService","ɵɵtextInterpolate","ɵɵpipeBind2","date_r2","ɵɵelementContainerStart","ɵɵtextInterpolate2","row_r3","date","ctx_r3","time_format","end","DeskBookingsComponent_ng_template_7_ng_container_0_ng_container_1_Template","DeskBookingsComponent_ng_template_7_ng_container_0_ng_container_2_Template","all_day","ɵɵtextInterpolate1","status","DeskBookingsComponent_ng_template_7_ng_container_0_Template","DeskBookingsComponent_ng_template_7_ng_container_1_Template","deleted","row_r5","user_email","DeskBookingsComponent_ng_template_9_div_3_Template","user_name","booked_by_name","booked_by_email","DeskBookingsComponent_ng_template_11_Template_button_click_7_listener","row_r7","_r6","row","approve","DeskBookingsComponent_ng_template_11_Template_button_click_13_listener","reject","ɵɵclassProp","approved","rejected","statusMenu_r8","DeskBookingsComponent_ng_template_13_Template_button_click_7_listener","row_r10","_r9","checkin","DeskBookingsComponent_ng_template_13_Template_button_click_13_listener","data_r11","checkinMenu_r12","DeskBookingsComponent_button_15_Template_button_click_0_listener","_r13","loadMore","DeskBookingsComponent","columns","_settings","_state","filters","has_more_pages","bookings","pipe","i","booking","duration","rejectAll","rejectAllDesks","nextPage","d","s","runMethod","checkinDesk","checked_in","approveDesk","rejectDesk","name","fn","_this2","DeskBookingsComponent_Template","DeskBookingsComponent_ng_template_5_Template","DeskBookingsComponent_ng_template_7_Template","DeskBookingsComponent_ng_template_9_Template","DeskBookingsComponent_ng_template_11_Template","DeskBookingsComponent_ng_template_13_Template","DeskBookingsComponent_button_15_Template","DeskBookingsComponent_Template_button_click_22_listener","_r1","tmp_7_0","search","ɵɵpureFunction0","_c0","_c1","ɵɵpureFunction6","_c2","user_template_r16","date_template_r14","period_template_r15","status_template_r17","option_template_r18","tmp_12_0","menu_r19","ExploreDesksService","ExploreStateService","AsyncHandler","OrganisationService","DeskMapViewComponent","_desk","_desks_state","_org","url","map_url","styles","map_styles","positions","map_positions","actions","map_actions","features","map_features","setHost","u","setOptions","host","ngOnInit","use_api","subscription","subscribe","opts","level","levelWithID","zones","setLevel","id","Date","now","i3","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","DeskMapViewComponent_Template","DeskMapViewComponent_Template_a_user_search_field_ngModelChange_10_listener","$event","zoom","center","ElementRef","MatDialog","csvToJson","loadTextFileFromInputEvent","openConfirmModal","randomInt","unique","Desk","updateMetadata","generateQRCode","combineLatest","take","DesksManageComponent_ng_template_5_Template_item_list_field_ngModelChange_0_listener","ctx_r2","row_r4","key_r5","key","ctx_r5","setRowValue","changes","data_r7","DesksManageComponent_ng_template_7_Template_input_ngModelChange_2_listener","ctx_r8","_r8","key_r11","data_r12","DesksManageComponent_ng_template_9_Template_mat_checkbox_ngModelChange_1_listener","row_r14","bookable","undefined","data_r15","DesksManageComponent_ng_template_11_ng_template_10_Template_button_click_7_listener","_r18","print","row_r17","qr_link","ɵɵsanitizeUrl","qr_code","DesksManageComponent_ng_template_11_Template_button_click_4_listener","_r16","removeDesk","DesksManageComponent_ng_template_11_Template_button_click_7_listener","loadQrCode","DesksManageComponent_ng_template_11_ng_template_10_Template","qr_menu_r19","DesksManageComponent_div_14_Template_input_change_4_listener","_r20","loadCSVData","DesksManageComponent_div_15_Template_button_click_4_listener","_r21","clear","DesksManageComponent_div_15_Template_button_click_6_listener","changed","QR_CODES","DesksManageComponent","Object","keys","length","_dialog","_element","dragging","page_reset","desks","new_desks","n","concat","el","nativeElement","parentElement","scrollTop","desk","value","toPromise","find","removeNewDesk","resp","title","content","icon","updated_desks","filter","description","details","e","message","setFilters","toJSON","msg","clearNewDesks","kiosk_url","path","get","window","location","origin","item","link","encodeURIComponent","_this3","data","m","list","addDesks","console","error","handleDrag","type","i4","DesksManageComponent_Template","DesksManageComponent_Template_div_dragenter_1_listener","DesksManageComponent_Template_div_dragend_1_listener","ɵɵresolveWindow","DesksManageComponent_ng_template_5_Template","DesksManageComponent_ng_template_7_Template","DesksManageComponent_ng_template_9_Template","DesksManageComponent_ng_template_11_Template","DesksManageComponent_div_13_Template","DesksManageComponent_div_14_Template","DesksManageComponent_div_15_Template","ɵɵstyleProp","tmp_6_0","_c3","text_edit_template_r23","bookable_edit_template_r24","list_edit_template_r22","action_template_r25","tmp_11_0","ActivatedRoute","Router","first","downloadFile","jsonToCsv","notifyInfo","showBooking","BookingRulesModalComponent","level_r1","display_name","DesksTopbarComponent_button_8_Template_button_click_0_listener","newDeskBooking","DesksTopbarComponent_button_9_Template_button_click_0_listener","_r4","newDesk","DesksTopbarComponent_button_10_Template_input_change_3_listener","_r5","DesksTopbarComponent_button_11_Template_button_click_0_listener","downloadTemplate","DesksTopbarComponent_button_12_Template_button_click_0_listener","_r7","manageRestrictions","DesksTopbarComponent","_desks","_route","_router","levels","active_levels","manage","is_map","setDate","o","updateZones","navigate","relativeTo","queryParams","zone_ids","join","queryParamsHandling","initialised","queryParamMap","params","has","split","building","buildings","bld","parent_id","includes","events","_ref","zone","lvl","push","_x","apply","arguments","staff_name","open","groups","images","_this4","DesksTopbarComponent_Template","DesksTopbarComponent_Template_mat_select_ngModelChange_2_listener","DesksTopbarComponent_mat_option_5_Template","DesksTopbarComponent_mat_option_6_Template","DesksTopbarComponent_button_8_Template","DesksTopbarComponent_button_9_Template","DesksTopbarComponent_button_10_Template","DesksTopbarComponent_button_11_Template","DesksTopbarComponent_button_12_Template","DesksTopbarComponent_Template_searchbar_modelChange_14_listener","DesksTopbarComponent_Template_date_options_dateChange_16_listener","tmp_8_0","NavigationEnd","DesksComponent","refresh","url_parts","parts","ngOnDestroy","attrs","DesksComponent_Template","DesksComponent_mat_progress_bar_13_Template","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MatRadioModule","MatTabsModule","SharedExploreModule","UIModule","MatFormFieldModule","MatCheckboxModule","MatInputModule","NewDeskFormDetailsComponent","SharedBookingsModule","FormFieldsModule","NewDesksComponent","ROUTES","component","children","redirectTo","DesksModule","_3","forChild","declarations","imports","NewDesksComponent_ng_container_23_Template_date_options_dateChange_1_listener","NewDesksComponent_ng_container_23_Template_button_click_2_listener","NewDesksComponent_ng_container_24_Template_button_click_1_listener","NewDesksComponent_ng_container_24_Template_input_change_7_listener","NewDesksComponent_ng_container_24_Template_button_click_8_listener","NewDesksComponent_ng_container_24_Template_button_click_11_listener","page_title","ref","afterClosed","NewDesksComponent_Template","NewDesksComponent_Template_searchbar_modelChange_8_listener","NewDesksComponent_Template_button_click_10_listener","NewDesksComponent_Template_mat_select_ngModelChange_17_listener","NewDesksComponent_mat_option_19_Template","NewDesksComponent_ng_container_23_Template","NewDesksComponent_ng_container_24_Template","NewDesksComponent_mat_progress_bar_27_Template","tmp_1_0","tmp_2_0","SimpleChanges","FormGroup","addDays","endOfDay","set","NewDeskFormDetailsComponent_div_0_section_1_Template_button_click_1_listener","ctx_r1","group","members","ɵɵi18n","NewDeskFormDetailsComponent_div_0_section_1_Template_button_click_10_listener","options","tmp_3_0","tmp_4_0","tmp_5_0","ɵɵi18nStart","ɵɵi18nEnd","NewDeskFormDetailsComponent_div_0_div_27_Template_a_time_field_ngModelChange_5_listener","_r3","use_24hr","NewDeskFormDetailsComponent_div_0_div_28_Template_mat_checkbox_ngModelChange_2_listener","secondary_resource","NewDeskFormDetailsComponent_div_0_section_29_Template_a_user_list_field_ngModelChange_8_listener","NewDeskFormDetailsComponent_div_0_section_31_p_8_Template","ɵɵpureFunction3","getRawValue","NewDeskFormDetailsComponent_div_0_section_1_Template","NewDeskFormDetailsComponent_div_0_div_8_Template","NewDeskFormDetailsComponent_div_0_mat_checkbox_26_Template","NewDeskFormDetailsComponent_div_0_div_27_Template","NewDeskFormDetailsComponent_div_0_div_28_Template","NewDeskFormDetailsComponent_div_0_section_29_Template","NewDeskFormDetailsComponent_div_0_section_31_Template","NewDeskFormDetailsComponent_div_0_section_32_Template","allow_groups","can_book_for_others","end_date","allow_all_day","can_book_lockers","tmp_9_0","contains","has_assets","can_recurr","needs_reason","allow_time_changes","valueOf","building_list","force_time","hours","minutes","from_id","recurrence_options","setFeature","f","ngOnChanges","selected_desk","resources","inputs","ɵɵNgOnChangesFeature","i18n_0","ngI18nClosureMode","$localize","NewDeskFormDetailsComponent_div_0_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}