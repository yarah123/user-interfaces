{"version":3,"file":"apps_concierge_src_app_desks_desks_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/desks/desk-book-modal.component.ts","./apps/concierge/src/app/desks/desk-bookings.component.ts","./apps/concierge/src/app/desks/desk-map-view.component.ts","./apps/concierge/src/app/desks/desks-manage.component.ts","./apps/concierge/src/app/desks/desks-topbar.component.ts","./apps/concierge/src/app/desks/desks.component.ts","./apps/concierge/src/app/desks/desks.module.ts","./apps/concierge/src/app/desks/new-desks.component.ts","./apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component.ts"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { BookingFormService } from '@placeos/bookings';\nimport { DialogEvent, notifyError, notifySuccess } from '@placeos/common';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'desk-book-modal',\n    template: `\n        <header>\n            <h2>New Desk Booking</h2>\n            <div class=\"flex-1 w-0\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!(loading | async); else load_state\"\n            class=\"overflow-auto p-4 max-h-[65vh]\"\n        >\n            <new-desk-form-details [form]=\"form\"></new-desk-form-details>\n        </main>\n        <footer\n            *ngIf=\"!(loading | async)\"\n            class=\"flex justify-center items-center p-2 border-t border-base-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                loading\n                class=\"h-64 flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Making booking request...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DeskBookModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public readonly loading = new BehaviorSubject(false);\n\n    public get form() {\n        return this._booking_form.form;\n    }\n\n    constructor(\n        private _booking_form: BookingFormService,\n        private _dialog_ref: MatDialogRef<DeskBookModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading.next(true);\n        this.form.patchValue({ booking_type: 'desk' });\n        const event = await this._booking_form.postForm().catch((_) => {\n            notifyError(_);\n            this.loading.next(false);\n            throw _;\n        });\n        this.event.emit({ reason: 'done', metadata: event });\n        notifySuccess('Successfully created booking');\n        this._dialog_ref.close();\n        this.loading.next(false);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { DesksStateService } from './desks-state.service';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'desk-bookings',\n    template: `\n        <div class=\"w-full h-4\"></div>\n        <div class=\"overflow-auto h-full w-full px-4 pb-4\">\n            <custom-table\n                class=\"min-w-[76rem] block\"\n                [dataSource]=\"bookings\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"[\n                    'date',\n                    'period',\n                    'user_name',\n                    'group',\n                    'asset_name',\n                    'approver_name',\n                    'status',\n                    'checked_in'\n                ]\"\n                [display_column]=\"[\n                    'Date',\n                    'Period',\n                    'Person',\n                    'Group',\n                    'Desk',\n                    'Approver',\n                    'Status',\n                    'Checked In'\n                ]\"\n                [column_size]=\"[\n                    '4r',\n                    '10r',\n                    'flex',\n                    '10r',\n                    '10r',\n                    '10r',\n                    '8r',\n                    '7r'\n                ]\"\n                [template]=\"{\n                    user_name: user_template,\n                    date: date_template,\n                    period: period_template,\n                    status: status_template,\n                    checked_in: option_template,\n                    access: option_template\n                }\"\n                [empty]=\"\n                    (filters | async)?.search\n                        ? 'No matching desk bookings'\n                        : 'There are no desk booking for the currently selected date.'\n                \"\n            ></custom-table>\n            <ng-template #date_template let-date=\"data\">\n                <div class=\"flex flex-col items-center justify-center w-full\">\n                    <div class=\"opacity-60\">{{ date | date: 'MMM' }}</div>\n                    <div class=\"text-xl\">{{ date | date: 'dd' }}</div>\n                </div>\n            </ng-template>\n            <ng-template #period_template let-row=\"row\">\n                <ng-container\n                    *ngIf=\"\n                        row.status !== 'declined' &&\n                        !row.deleted &&\n                        row.status !== 'ended'\n                    \"\n                >\n                    <ng-container *ngIf=\"!row.all_day\">\n                        {{ row.date | date: time_format }} &ndash;\n                        {{ row.end | date: time_format }}\n                    </ng-container>\n                    <ng-container *ngIf=\"row.all_day\">All Day</ng-container>\n                </ng-container>\n                <ng-container\n                    *ngIf=\"\n                        row.status === 'declined' ||\n                        row.deleted ||\n                        row.status === 'ended'\n                    \"\n                >\n                    <div\n                        class=\"text-xs py-1 px-2 bg-error rounded-2xl text-white\"\n                    >\n                        {{\n                            row.status === 'ended'\n                                ? 'Manually Ended'\n                                : 'Expired'\n                        }}\n                    </div>\n                </ng-container>\n            </ng-template>\n            <ng-template #user_template let-row=\"row\">\n                <div class=\"flex flex-col justify-center\">\n                    <div class=\"select-all\">\n                        {{\n                            row.user_name ||\n                                row.user_email ||\n                                row.booked_by_name ||\n                                row.booked_by_email\n                        }}\n                    </div>\n                    <div\n                        *ngIf=\"row.user_name\"\n                        class=\"text-xs opacity-30 select-all\"\n                    >\n                        {{ row.user_email }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\">\n                <button\n                    matRipple\n                    [matMenuTriggerFor]=\"statusMenu\"\n                    class=\"rounded-3xl px-2 py-1 flex items-center space-x-2 capitalize\"\n                    [class.bg-success]=\"row.approved\"\n                    [class.text-white]=\"row.approved || row.rejected\"\n                    [class.bg-warning]=\"!row.approved && !row.rejected\"\n                    [class.text-black]=\"!row.approved && !row.rejected\"\n                    [class.bg-error]=\"row.rejected\"\n                >\n                    <div class=\"ml-2\">\n                        {{\n                            row.approved\n                                ? 'Approved'\n                                : row.rejected\n                                ? 'Declined'\n                                : 'Tentative'\n                        }}\n                    </div>\n                    <app-icon class=\"text-xl\">arrow_drop_down</app-icon>\n                </button>\n                <mat-menu #statusMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"approve(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\"\n                                >event_available</app-icon\n                            >\n                            <div>Approve Desk</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"reject(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">event_busy</app-icon>\n                            <div>Decline Desk</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #option_template let-data=\"data\" let-row=\"row\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl px-2 py-1 text-white flex items-center space-x-2\"\n                    [matMenuTriggerFor]=\"checkinMenu\"\n                    [class.bg-neutral]=\"!data\"\n                    [class.bg-success]=\"data\"\n                    [class.opacity-30]=\"row.status === 'ended'\"\n                    [disabled]=\"row.status === 'ended'\"\n                    [matTooltip]=\"\n                        row.status === 'ended'\n                            ? 'Desk booking has ended'\n                            : 'Check-in or check-out desk'\n                    \"\n                >\n                    <div class=\"ml-2\">{{ data ? 'Yes' : 'No' }}</div>\n                    <app-icon class=\"text-xl\">arrow_drop_down</app-icon>\n                </button>\n                <mat-menu #checkinMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"checkin(row, true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">check</app-icon>\n                            <div>Check-in</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"checkin(row, false)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Check-out</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n        </div>\n\n        <button\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 w-32 mx-auto my-4\"\n            *ngIf=\"!loading && (has_more_pages | async)\"\n            (click)=\"loadMore()\"\n        >\n            Load More\n        </button>\n        <button\n            icon\n            matRipple\n            class=\"absolute bottom-2 right-2 bg-base-100 shadow\"\n            [matMenuTriggerFor]=\"menu\"\n        >\n            <app-icon>more_vert</app-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"rejectAll()\">Reject All</button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingsComponent {\n    public loading: string;\n    public readonly filters = this._state.filters;\n    public readonly has_more_pages = this._state.has_more_pages;\n    public readonly bookings = this._state.bookings.pipe(\n        map((i) =>\n            i.map((booking) => ({\n                ...booking,\n                end: booking.date + booking.duration * 60 * 1000,\n            }))\n        )\n    );\n\n    public readonly rejectAll = () => this._state.rejectAllDesks();\n    public readonly loadMore = () => this._state.nextPage();\n\n    public readonly checkin = (d, s?) =>\n        this.runMethod('checkin', async () => {\n            await this._state.checkinDesk(d, s);\n            d.checked_in = s ?? true;\n        });\n    public readonly approve = (d) =>\n        this.runMethod('approve', async () => this._state.approveDesk(d));\n    public readonly reject = (d) =>\n        this.runMethod('reject', async () => this._state.rejectDesk(d));\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _settings: SettingsService\n    ) {}\n\n    private async runMethod(name: string, fn: () => Promise<any>) {\n        this.loading = name;\n        await fn().catch((i) => null);\n        this.loading = '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ExploreDesksService, ExploreStateService } from '@placeos/explore';\n\nimport { DesksStateService } from './desks-state.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map-view',\n    template: `\n        <div map class=\"h-full w-full relative\">\n            <interactive-map\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async).zoom\"\n                [center]=\"(positions | async).center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <explore-zoom-controls\n                class=\"absolute bottom-2 right-2\"\n            ></explore-zoom-controls>\n            <div class=\"absolute top-0 left-0 p-2 text-black\">\n                <a-user-search-field\n                    [ngModel]=\"null\"\n                    (ngModelChange)=\"setHost($event)\"\n                    class=\"white\"\n                    placeholder=\"User for bookings...\"\n                ></a-user-search-field>\n            </div>\n            <div\n                info\n                class=\"absolute bottom-0 rounded p-2 m-2 bg-base-100 shadow text-center\"\n            >\n                Click/Tap an available desk to book it.\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [info] {\n                left: 50%;\n                transform: translateX(-50%);\n            }\n        `,\n    ],\n    providers: [ExploreDesksService],\n})\nexport class DeskMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n\n    public readonly setHost = (u) => this._desks_state.setOptions({ host: u });\n\n    constructor(\n        private _state: ExploreStateService,\n        private _desk: DesksStateService,\n        private _desks_state: ExploreDesksService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._desks_state.setOptions({ use_api: true });\n        this.subscription(\n            'date',\n            this._desk.filters.subscribe((opts) => {\n                const level = this._org.levelWithID(opts.zones);\n                if (level) this._state.setLevel(level.id);\n                this._desks_state.setOptions({\n                    date: opts.date || Date.now(),\n                    all_day: true,\n                    zones: opts.zones,\n                });\n            })\n        );\n    }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    csvToJson,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    randomInt,\n    unique,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DesksStateService } from './desks-state.service';\n\nconst QR_CODES = {};\n\n@Component({\n    selector: 'desks-manage',\n    template: `\n        <div class=\"w-full h-4\"></div>\n        <div\n            class=\"w-full relative pl-8 pb-4\"\n            [style.margin-bottom]=\"changed > 0 ? '4rem' : ''\"\n            (dragenter)=\"handleDrag('enter', $event)\"\n            (window:dragend)=\"handleDrag('end', $event)\"\n        >\n            <custom-table\n                class=\"min-w-[76rem] block\"\n                [dataSource]=\"desks\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"[\n                    'map_id',\n                    'bookable',\n                    'name',\n                    'groups',\n                    'features',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'ID',\n                    'Bookable',\n                    'Name',\n                    'Groups',\n                    'Features',\n                    ' '\n                ]\"\n                [column_size]=\"['12r', '6r', '12r', 'flex', '16r', '10r']\"\n                [template]=\"{\n                    map_id: text_edit_template,\n                    name: text_edit_template,\n                    bookable: bookable_edit_template,\n                    groups: list_edit_template,\n                    features: list_edit_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (filters | async)?.search\n                        ? 'No matching desks'\n                        : 'No desks for selected level'\n                \"\n                [reset_page]=\"page_reset\"\n                [pagination]=\"true\"\n                [page_size]=\"20\"\n            ></custom-table>\n            <ng-template\n                #list_edit_template\n                let-data=\"data\"\n                let-row=\"row\"\n                let-key=\"key\"\n            >\n                <item-list-field\n                    class=\"w-full\"\n                    hide-outline\n                    [placeholder]=\"\n                        key === 'groups' ? 'User Groups' : 'Features'\n                    \"\n                    [name]=\"key\"\n                    [ngModel]=\"\n                        (changes[row.id] ? changes[row.id][key] : null) || data\n                    \"\n                    (ngModelChange)=\"setRowValue(row.id, key, $event)\"\n                >\n                </item-list-field>\n            </ng-template>\n            <ng-template\n                #text_edit_template\n                let-data=\"data\"\n                let-row=\"row\"\n                let-key=\"key\"\n            >\n                <div class=\"w-full h-12\" hide-outline>\n                    <mat-form-field class=\"h-12 w-full\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [placeholder]=\"key\"\n                            [name]=\"key\"\n                            [ngModel]=\"\n                                (changes[row.id]\n                                    ? changes[row.id][key]\n                                    : null) || data\n                            \"\n                            (ngModelChange)=\"setRowValue(row.id, key, $event)\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-template>\n            <ng-template #bookable_edit_template let-data=\"data\" let-row=\"row\">\n                <div class=\"flex items-center justify-center pl-4\">\n                    <mat-checkbox\n                        [ngModel]=\"changes[row.id]?.bookable ?? data\"\n                        (ngModelChange)=\"\n                            setRowValue(row.id, 'bookable', $event)\n                        \"\n                    ></mat-checkbox>\n                </div>\n            </ng-template>\n            <ng-template #action_template let-row=\"row\">\n                <div class=\"flex items-center justify-end space-x-2\">\n                    <div\n                        class=\"p-2 text-2xl text-warning\"\n                        [class.opacity-0]=\"!changes[row.id]\"\n                        matTooltip=\"Desk has unsaved changes\"\n                    >\n                        <app-icon>warning</app-icon>\n                    </div>\n                    <button icon (click)=\"removeDesk(row)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [content]=\"qr_menu\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                    <ng-template #qr_menu>\n                        <div class=\"bg-base-100 py-2 shadow rounded\">\n                            <div class=\"\" printable>\n                                <a\n                                    [href]=\"row.qr_link | safe: 'url'\"\n                                    target=\"_blank\"\n                                    ref=\"noopener noreferrer\"\n                                    class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                                >\n                                    <img class=\"w-48\" [src]=\"row.qr_code\" />\n                                </a>\n                                <div\n                                    class=\"w-[calc(100%-2rem)] text-center mt-2 font-mono text-sm bg-base-200 rounded p-2 mx-4\"\n                                >\n                                    {{ row.name || row.id }}\n                                </div>\n                            </div>\n                            <button\n                                btn\n                                matRipple\n                                class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                                (click)=\"print()\"\n                            >\n                                Print QR Code\n                            </button>\n                        </div>\n                    </ng-template>\n                </div>\n            </ng-template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 bg-base-100 bg-opacity-60\"\n                *ngIf=\"loading\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n            <div\n                *ngIf=\"dragging\"\n                class=\"absolute inset-0 bg-neutral flex items-center justify-center\"\n            >\n                <div class=\"bg-base-100 p-4 rounded shadow\">\n                    <div\n                        class=\"border-4 border-base-200 border-dashed rounded flex flex-col items-center justify-center w-64 h-64\"\n                    >\n                        Drop CSV file to add desks\n                    </div>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </div>\n        </div>\n        <div\n            class=\"fixed bottom-0 left-64 right-0 p-2 bg-base-100 shadow border-t border-base-200 flex items-center justify-center space-x-4\"\n            *ngIf=\"changed > 0\"\n        >\n            <p class=\"flex-1 text-center pl-8\">\n                {{ changed }} Desk(s) with unsaved changes\n            </p>\n            <div class=\"flex items-center justify-center space-x-2\">\n                <button clear btn matRipple class=\"inverse\" (click)=\"clear()\">\n                    Clear Changes\n                </button>\n                <button save btn matRipple (click)=\"save()\">\n                    Save Changes\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DesksManageComponent extends AsyncHandler {\n    public changes: Record<string, Partial<Desk>> = {};\n    public loading: string;\n    public dragging = false;\n    public page_reset = 0;\n    public readonly filters = this._state.filters;\n    public readonly desks = combineLatest([\n        this._state.new_desks,\n        this._state.desks,\n    ]).pipe(map(([d, n]) => d.concat(n)));\n\n    public get changed() {\n        return Object.keys(this.changes).length || 0;\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService,\n        private _element: ElementRef\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'new_desks',\n            this._state.new_desks.subscribe((desks) => {\n                this.page_reset = Date.now();\n                const el = this._element?.nativeElement?.parentElement;\n                if (el) el.scrollTop = 0;\n                for (const desk of desks) {\n                    this.changes[desk.id] = {};\n                }\n            })\n        );\n    }\n\n    public setRowValue<K extends keyof Desk>(\n        id: string,\n        key: K,\n        value: Desk[K]\n    ): void {\n        if (!this.changes[id]) this.changes[id] = {};\n        this.changes[id][key] = value;\n    }\n\n    public async removeDesk(desk: Desk) {\n        const new_desks = await this._state.new_desks.pipe(take(1)).toPromise();\n        if (new_desks.find((_) => _.id === desk.id)) {\n            delete this.changes[desk.id];\n            return this._state.removeNewDesk(desk);\n        }\n        const resp = await openConfirmModal(\n            {\n                title: 'Remove desk',\n                content: `Remove desk ${desk.name}?`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.close();\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = desks.filter((_) => _.id !== desk.id);\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        this.loading = 'Removing desk...';\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving desk data. Error: ${e.message || e}`);\n                throw e;\n            });\n        delete this.changes[desk.id];\n        notifySuccess('Successfully updated desks');\n        this._state.setFilters({});\n        this.loading = '';\n    }\n\n    public async save() {\n        this.loading = 'Saving changes to desks...';\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = unique(\n            desks.map((_) =>\n                new Desk({ ..._, ...(this.changes[_.id] || {}) }).toJSON()\n            ),\n            'id'\n        );\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                const msg =\n                    e?.status === 403\n                        ? 'You do not have the required permissions to save desk changes.'\n                        : e.message || e;\n                notifyError(`Error saving desk data. Error: ${msg}`);\n                throw e;\n            });\n        notifySuccess('Successfully updated desks');\n        this._state.clearNewDesks();\n        this.loading = '';\n        this.changes = {};\n    }\n\n    public clear() {\n        this._state.clearNewDesks();\n        this.changes = {};\n    }\n\n    public get kiosk_url() {\n        const path =\n            this._settings.get('app.workplace_url_path') || '/workplace';\n        return `${window.location.origin}${path}`;\n    }\n\n    public loadQrCode(item: any) {\n        const link = `${\n            this.kiosk_url\n        }/#/book/code?asset_id=${encodeURIComponent(item.id)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public print() {\n        window.print();\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        this.loading = 'Loading CSV file...';\n        this.dragging = false;\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n        this.loading = '';\n    }\n\n    public handleDrag(type: 'enter' | 'leave' | 'end', event: DragEvent) {\n        this.dragging = type === 'enter';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifyInfo,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { DesksStateService } from './desks-state.service';\nimport { showBooking } from '@placeos/bookings';\nimport { randomInt } from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: 'desks-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"\n                        (filters | async).zones\n                            ? (filters | async).zones[0]\n                            : 'All'\n                    \"\n                    (ngModelChange)=\"updateZones([$event])\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option value=\"All\" *ngIf=\"!is_map\">\n                        All Levels\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button\n                btn\n                matRipple\n                *ngIf=\"!manage\"\n                class=\"mx-2 w-36\"\n                matTooltip=\"New Desk Booking\"\n                (click)=\"newDeskBooking()\"\n            >\n                New Booking\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"newDesk()\"\n                matTooltip=\"New Desk\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary relative text-white rounded\"\n                matTooltip=\"Upload Desks CSV\"\n            >\n                <app-icon>cloud_upload</app-icon>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"downloadTemplate()\"\n                matTooltip=\"Download Template Desk CSV\"\n            >\n                <app-icon>download</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Desk Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(filters | async)?.search\"\n                (modelChange)=\"setFilters({ search: $event })\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class DesksTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly filters = this._desks.filters;\n\n    public manage = false;\n    public is_map = false;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._desks.setFilters({ date });\n    public readonly setFilters = (o) => this._desks.setFilters(o);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._desks.setFilters({ zones });\n    };\n\n    constructor(\n        private _desks: DesksStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.updateZones(zones);\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n                if (params.has('date')) {\n                    this.setDate(new Date(+params.get('date')));\n                }\n                if (params.has('approve')) {\n                    this.approve(params.get('approve'));\n                } else if (params.has('reject')) {\n                    this.reject(params.get('reject'));\n                }\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe(() => {\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All'\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n        this.manage = this._router.url?.includes('manage');\n        this.is_map = this._router.url?.includes('map');\n    }\n\n    public newDesk() {\n        const desk = new Desk({ id: `desk-${randomInt(999_999)}` });\n        desk.staff_name = `[NEW_DESK]`;\n        this._desks.addDesks([desk]);\n        notifyInfo('New desk added to local data.', undefined, () =>\n            notifyInfo('Make sure to save the new desk before using it.')\n        );\n    }\n\n    public newDeskBooking() {\n        this._dialog.open(DeskBookModalComponent, {});\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._desks.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        delete desk.images;\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    /**\n     * Aprrove a desk booking\n     * @param id Booking ID to approve\n     */\n    private async approve(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.approveDesk(booking);\n        }\n    }\n\n    /**\n     * Reject a desk booking\n     * @param id Booking ID to reject\n     */\n    private async reject(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.rejectDesk(booking);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: '[app-desks]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"flex-1 relative w-1/2 flex flex-col bg-base-100 overflow-hidden\"\n        >\n            <desks-topbar class=\"w-full\"></desks-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Map View\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'manage']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'manage'\"\n                    >\n                        Manage Desks\n                    </a>\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DesksComponent extends AsyncHandler implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public path: string;\n\n    constructor(private _state: DesksStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { SharedExploreModule } from '@placeos/explore';\nimport { UIModule } from '../ui/ui.module';\n\nimport { DesksComponent } from './desks.component';\nimport { DeskBookingsComponent } from './desk-bookings.component';\nimport { DesksTopbarComponent } from './desks-topbar.component';\nimport { DeskMapViewComponent } from './desk-map-view.component';\nimport { DesksManageComponent } from './desks-manage.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NewDeskFormDetailsComponent } from 'apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { NewDesksComponent } from './new-desks.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewDesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: DesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        NewDesksComponent,\n        DesksComponent,\n        DeskBookingsComponent,\n        DesksTopbarComponent,\n        DeskMapViewComponent,\n        DesksManageComponent,\n        NewDeskFormDetailsComponent,\n        DeskBookModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatTabsModule,\n        ReactiveFormsModule,\n        UIModule,\n        SharedExploreModule,\n        SharedBookingsModule,\n        FormFieldsModule,\n        MatRadioModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatInputModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DesksModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifyInfo,\n    notifySuccess,\n    randomInt,\n} from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { take, filter } from 'rxjs/operators';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: '[app-new-desks]',\n    template: `\n        <app-topbar class=\" print:hidden\"></app-topbar>\n        <div class=\"flex flex-1 h-px print:hidden\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">\n                        {{ page_title }}\n                    </h2>\n                    <div class=\"flex-1 w-px\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        [model]=\"(filters | async)?.search\"\n                        (modelChange)=\"setFilters({ search: $event })\"\n                    ></searchbar>\n                    <button\n                        btn\n                        matRipple\n                        class=\"space-x-2\"\n                        (click)=\"newDeskBooking()\"\n                    >\n                        <div>New Booking</div>\n                        <app-icon>add</app-icon>\n                    </button>\n                </div>\n                <div class=\"w-full flex items-center px-8 space-x-2\">\n                    <mat-form-field appearance=\"outline\" class=\"h-[3.5rem]\">\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones[0]\"\n                            (ngModelChange)=\"updateZones([$event])\"\n                            placeholder=\"All Levels\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"border-l h-full !ml-8 !mr-4\"></div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <ng-container *ngIf=\"path === 'events'\">\n                        <date-options\n                            (dateChange)=\"setDate($event)\"\n                        ></date-options>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            matTooltip=\"Refresh List\"\n                            class=\"ml-2 rounded border border-base-200\"\n                            (click)=\"refresh()\"\n                            [disabled]=\"loading | async\"\n                        >\n                            <app-icon>refresh</app-icon>\n                        </button>\n                    </ng-container>\n                    <ng-container *ngIf=\"path === 'manage'\">\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-white rounded\"\n                            (click)=\"newDesk()\"\n                            matTooltip=\"New Desk\"\n                        >\n                            <app-icon>add</app-icon>\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary relative text-white rounded\"\n                            matTooltip=\"Upload Desks CSV\"\n                        >\n                            <app-icon>cloud_upload</app-icon>\n                            <input\n                                type=\"file\"\n                                class=\"absolute inset-0 opacity-0\"\n                                (change)=\"loadCSVData($event)\"\n                            />\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-white rounded\"\n                            (click)=\"downloadTemplate()\"\n                            matTooltip=\"Download Template Desk CSV\"\n                        >\n                            <app-icon>download</app-icon>\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-white rounded\"\n                            (click)=\"manageRestrictions()\"\n                            matTooltip=\"Desk Restrictions\"\n                        >\n                            <app-icon>lock_open</app-icon>\n                        </button>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 h-1/2 w-full relative overflow-auto\">\n                    <router-outlet></router-outlet>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"(loading | async) && path === 'events'\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewDesksComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public readonly loading = this._state.loading;\n    public path: string;\n    /** List of levels for the active building */\n    public readonly filters = this._state.filters;\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    public readonly setFilters = (o) => this._state.setFilters(o);\n    public readonly refresh = () => this._state.refresh();\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._state.setFilters({ zones });\n    };\n    public page_title: string = 'Desk Bookings';\n\n    constructor(\n        private _state: DesksStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                    if (this.path.includes('manage')) {\n                        this.page_title = 'Desk Management';\n                    } else {\n                        this.page_title = 'Desk Bookings';\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All'\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n\n    public newDeskBooking() {\n        const ref = this._dialog.open(DeskBookModalComponent, {});\n        ref.afterClosed().subscribe((_) => {\n            this._state.refresh();\n        });\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public newDesk() {\n        this._state.addDesks([new Desk({ id: `desk-${randomInt(999_999)}` })]);\n        notifyInfo('New desk added to local data.', undefined, () =>\n            notifyInfo('Make sure to save the new desk before using it.')\n        );\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        delete desk.images;\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { addDays, endOfDay, set } from 'date-fns';\n\n@Component({\n    selector: 'new-desk-form-details',\n    styles: [],\n    template: `\n        <!-- <div class=\"m-2 bg-warning p-2 text-center rounded shadow text-sm\">\n            The selected desk hasn't been booked. Please book the desk to be\n            able to check-in.\n        </div> -->\n        <div\n            class=\"p-0 sm:py-4 sm:px-16 divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"flex items-center\" *ngIf=\"allow_groups\">\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"!(options | async)?.group\"\n                    (click)=\"setOptions({ group: false, members: [] })\"\n                >\n                    <app-icon class=\"text-2xl\">person</app-icon>\n                    <div class=\"\" i18n>Single</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"(options | async)?.group\"\n                        [class.bg-secondary]=\"!(options | async)?.group\"\n                    ></div>\n                </button>\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"(options | async)?.group\"\n                    (click)=\"setOptions({ group: true })\"\n                >\n                    <app-icon class=\"text-2xl\">group_add</app-icon>\n                    <div class=\"\" i18n>Group</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"!(options | async)?.group\"\n                        [class.bg-secondary]=\"(options | async)?.group\"\n                    ></div>\n                </button>\n            </section>\n            <section class=\"p-2\" [class.!border-none]=\"allow_groups\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\" i18n>Details</div>\n                </h3>\n                <div\n                    class=\"w-full\"\n                    *ngIf=\"can_book_for_others && !(options | async)?.group\"\n                >\n                    <label for=\"title\">Host<span>*</span></label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error i18n\n                                >Booking title is required.</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px] relative\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                            [to]=\"end_date\"\n                            i18n\n                        >\n                            Date and time must be in the future\n                        </a-date-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute -top-2 right-0\"\n                            i18n\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n>\n                            End Time<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"(options | async)?.group\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\" i18n>Group Members</div>\n                    <div class=\"flex-1 w-px\"></div>\n                </h3>\n                <div class=\"overflow-hidden\">\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        [ngModel]=\"(options | async)?.members || []\"\n                        (ngModelChange)=\"setOptions({ members: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"form.contains('resources')\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 3 : 2 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n                <p\n                    *ngIf=\"(options | async)?.group\"\n                    class=\"text-center rounded px-2 py-1 bg-warning shadow text-xs\"\n                >\n                    Desks nearby to the selected desk will booked for group\n                    members\n                </p>\n            </section>\n            <section class=\"p-2\" *ngIf=\"has_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 4 : 3 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [options]=\"{\n                        date: form.getRawValue().date,\n                        duration: form.value.duration,\n                        all_day: form.value.all_day,\n                    }\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n})\nexport class NewDeskFormDetailsComponent extends AsyncHandler {\n    @Input() public form: FormGroup;\n    @Output() public find = new EventEmitter<void>();\n    /** List of available buildings to select */\n    public readonly buildings = this._org.building_list;\n    /** List of available levels for the selected building */\n    public readonly levels = this._org.active_levels;\n    /** List of set options for desk booking */\n    public readonly options = this._state.options;\n    /** List of set options for desk booking */\n    public readonly features = this._state.features;\n\n    public readonly force_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    /** Selected desk for booking */\n    public selected_desk: Desk;\n    public from_id = false;\n\n    public readonly recurrence_options = ['daily', 'weekly', 'monthly'];\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get can_book_for_others() {\n        return this._settings.get('app.desks.can_book_for_others');\n    }\n\n    public get can_book_lockers() {\n        return this._settings.get('app.desks.can_book_lockers');\n    }\n    public get can_recurr() {\n        return this._settings.get('app.desks.recurrence_allowed');\n    }\n\n    public get allow_groups() {\n        return this._settings.get('app.desks.allow_groups');\n    }\n\n    public get has_assets() {\n        return !!this._settings.get('app.desks.has_assets');\n    }\n\n    public get needs_reason() {\n        return this._settings.get('app.desks.needs_reason') === true;\n    }\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        ).valueOf();\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.form && this.form) {\n            if (this.selected_desk?.id) {\n                this.form.patchValue({ resources: [this.selected_desk] });\n            }\n        }\n    }\n}\n"],"names":["EventEmitter","MatDialogRef","BookingFormService","notifyError","notifySuccess","BehaviorSubject","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","form","ɵɵlistener","DeskBookModalComponent_footer_9_Template_button_click_1_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","save","ɵɵtext","DeskBookModalComponent","_booking_form","constructor","_dialog_ref","event","loading","_this","_asyncToGenerator","next","patchValue","booking_type","postForm","catch","_","emit","reason","metadata","close","ɵɵdirectiveInject","i1","i2","_2","selectors","outputs","decls","vars","consts","template","DeskBookModalComponent_Template","rf","ctx","ɵɵtemplate","DeskBookModalComponent_main_7_Template","DeskBookModalComponent_footer_9_Template","DeskBookModalComponent_ng_template_11_Template","ɵɵtemplateRefExtractor","ɵɵpipeBind1","_r3","DesksStateService","map","SettingsService","ɵɵtextInterpolate","ɵɵpipeBind2","date_r12","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵtextInterpolate2","row_r13","date","ctx_r16","time_format","end","DeskBookingsComponent_ng_template_7_ng_container_0_ng_container_1_Template","DeskBookingsComponent_ng_template_7_ng_container_0_ng_container_2_Template","all_day","ɵɵtextInterpolate1","status","DeskBookingsComponent_ng_template_7_ng_container_0_Template","DeskBookingsComponent_ng_template_7_ng_container_1_Template","deleted","row_r21","user_email","DeskBookingsComponent_ng_template_9_div_3_Template","user_name","booked_by_name","booked_by_email","DeskBookingsComponent_ng_template_11_Template_button_click_7_listener","restoredCtx","_r27","row_r24","row","ctx_r26","approve","DeskBookingsComponent_ng_template_11_Template_button_click_13_listener","ctx_r28","reject","ɵɵclassProp","approved","rejected","_r25","DeskBookingsComponent_ng_template_13_Template_button_click_7_listener","_r33","row_r30","ctx_r32","checkin","DeskBookingsComponent_ng_template_13_Template_button_click_13_listener","ctx_r34","data_r29","_r31","DeskBookingsComponent_button_15_Template_button_click_0_listener","_r36","ctx_r35","loadMore","DeskBookingsComponent","_settings","_state","filters","has_more_pages","bookings","pipe","i","booking","duration","rejectAll","rejectAllDesks","nextPage","d","s","runMethod","checkinDesk","checked_in","approveDesk","rejectDesk","name","fn","_this2","DeskBookingsComponent_Template","DeskBookingsComponent_ng_template_5_Template","DeskBookingsComponent_ng_template_7_Template","DeskBookingsComponent_ng_template_9_Template","DeskBookingsComponent_ng_template_11_Template","DeskBookingsComponent_ng_template_13_Template","DeskBookingsComponent_button_15_Template","DeskBookingsComponent_Template_button_click_22_listener","tmp_1_0","search","ɵɵpureFunction0","_c0","_c1","_c2","ɵɵpureFunction6","_c3","_r1","_r7","_r9","tmp_6_0","_r11","ExploreDesksService","ExploreStateService","AsyncHandler","OrganisationService","DeskMapViewComponent","_desk","_desks_state","_org","url","map_url","styles","map_styles","positions","map_positions","actions","map_actions","features","map_features","setHost","u","setOptions","host","ngOnInit","use_api","subscription","subscribe","opts","level","levelWithID","zones","setLevel","id","Date","now","i3","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","DeskMapViewComponent_Template","DeskMapViewComponent_Template_a_user_search_field_ngModelChange_10_listener","$event","zoom","center","ElementRef","MatDialog","csvToJson","loadTextFileFromInputEvent","openConfirmModal","randomInt","unique","Desk","updateMetadata","generateQRCode","combineLatest","take","DesksManageComponent_ng_template_5_Template_item_list_field_ngModelChange_0_listener","_r15","row_r12","key_r13","key","ctx_r14","setRowValue","changes","data_r11","DesksManageComponent_ng_template_7_Template_input_ngModelChange_2_listener","_r20","row_r17","key_r18","ctx_r19","ctx_r2","data_r16","DesksManageComponent_ng_template_9_Template_mat_checkbox_ngModelChange_1_listener","_r24","row_r22","ctx_r23","tmp_0_0","bookable","undefined","data_r21","DesksManageComponent_ng_template_11_ng_template_10_Template_button_click_7_listener","_r29","print","row_r25","qr_link","ɵɵsanitizeUrl","qr_code","DesksManageComponent_ng_template_11_Template_button_click_4_listener","_r32","ctx_r31","removeDesk","DesksManageComponent_ng_template_11_Template_button_click_7_listener","ctx_r33","loadQrCode","DesksManageComponent_ng_template_11_ng_template_10_Template","ctx_r6","ctx_r8","DesksManageComponent_div_14_Template_input_change_4_listener","_r35","loadCSVData","DesksManageComponent_div_15_Template_button_click_4_listener","_r37","ctx_r36","clear","DesksManageComponent_div_15_Template_button_click_6_listener","ctx_r38","ctx_r10","changed","QR_CODES","DesksManageComponent","Object","keys","length","_dialog","_element","dragging","page_reset","desks","new_desks","n","concat","el","nativeElement","parentElement","scrollTop","desk","value","toPromise","find","removeNewDesk","resp","title","content","icon","updated_desks","filter","description","details","e","message","setFilters","toJSON","msg","clearNewDesks","kiosk_url","path","get","window","location","origin","item","link","encodeURIComponent","_this3","data","m","list","addDesks","console","error","handleDrag","type","i4","DesksManageComponent_Template","DesksManageComponent_Template_div_dragenter_1_listener","DesksManageComponent_Template_div_dragend_1_listener","ɵɵresolveWindow","DesksManageComponent_ng_template_5_Template","DesksManageComponent_ng_template_7_Template","DesksManageComponent_ng_template_9_Template","DesksManageComponent_ng_template_11_Template","DesksManageComponent_div_13_Template","DesksManageComponent_div_14_Template","DesksManageComponent_div_15_Template","ɵɵstyleProp","tmp_2_0","tmp_7_0","ActivatedRoute","Router","first","downloadFile","jsonToCsv","notifyInfo","showBooking","BookingRulesModalComponent","level_r7","display_name","DesksTopbarComponent_button_8_Template_button_click_0_listener","newDeskBooking","DesksTopbarComponent_button_9_Template_button_click_0_listener","newDesk","DesksTopbarComponent_button_10_Template_input_change_3_listener","_r13","ctx_r12","DesksTopbarComponent_button_11_Template_button_click_0_listener","downloadTemplate","DesksTopbarComponent_button_12_Template_button_click_0_listener","_r17","manageRestrictions","DesksTopbarComponent","_desks","_route","_router","levels","active_levels","manage","is_map","setDate","o","updateZones","navigate","relativeTo","queryParams","zone_ids","join","queryParamsHandling","initialised","queryParamMap","params","has","split","building","buildings","bld","parent_id","includes","events","_ref","zone","lvl","push","_x","apply","arguments","staff_name","open","groups","images","_this4","DesksTopbarComponent_Template","DesksTopbarComponent_Template_mat_select_ngModelChange_2_listener","DesksTopbarComponent_mat_option_5_Template","DesksTopbarComponent_mat_option_6_Template","DesksTopbarComponent_button_8_Template","DesksTopbarComponent_button_9_Template","DesksTopbarComponent_button_10_Template","DesksTopbarComponent_button_11_Template","DesksTopbarComponent_button_12_Template","DesksTopbarComponent_Template_searchbar_modelChange_14_listener","DesksTopbarComponent_Template_date_options_dateChange_16_listener","tmp_8_0","NavigationEnd","DesksComponent","refresh","url_parts","parts","ngOnDestroy","attrs","DesksComponent_Template","DesksComponent_mat_progress_bar_13_Template","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MatRadioModule","MatTabsModule","SharedExploreModule","UIModule","MatFormFieldModule","MatCheckboxModule","MatInputModule","NewDeskFormDetailsComponent","SharedBookingsModule","FormFieldsModule","NewDesksComponent","ROUTES","component","children","redirectTo","DesksModule","_3","forChild","declarations","imports","level_r4","NewDesksComponent_ng_container_23_Template_date_options_dateChange_1_listener","_r6","ctx_r5","NewDesksComponent_ng_container_23_Template_button_click_2_listener","ctx_r7","ctx_r1","NewDesksComponent_ng_container_24_Template_button_click_1_listener","NewDesksComponent_ng_container_24_Template_input_change_7_listener","NewDesksComponent_ng_container_24_Template_button_click_8_listener","ctx_r11","NewDesksComponent_ng_container_24_Template_button_click_11_listener","page_title","ref","afterClosed","NewDesksComponent_Template","NewDesksComponent_Template_searchbar_modelChange_8_listener","NewDesksComponent_Template_button_click_10_listener","NewDesksComponent_Template_mat_select_ngModelChange_17_listener","NewDesksComponent_mat_option_19_Template","NewDesksComponent_ng_container_23_Template","NewDesksComponent_ng_container_24_Template","NewDesksComponent_mat_progress_bar_27_Template","SimpleChanges","FormGroup","addDays","endOfDay","set","NewDeskFormDetailsComponent_div_0_section_1_Template_button_click_1_listener","_r10","ctx_r9","group","members","ɵɵi18n","NewDeskFormDetailsComponent_div_0_section_1_Template_button_click_10_listener","options","tmp_3_0","tmp_4_0","tmp_5_0","ɵɵi18nStart","ɵɵi18nEnd","NewDeskFormDetailsComponent_div_0_div_27_Template_a_time_field_ngModelChange_5_listener","use_24hr","NewDeskFormDetailsComponent_div_0_div_28_Template_mat_checkbox_ngModelChange_2_listener","secondary_resource","NewDeskFormDetailsComponent_div_0_section_29_Template_a_user_list_field_ngModelChange_8_listener","NewDeskFormDetailsComponent_div_0_section_31_p_8_Template","ɵɵpureFunction3","getRawValue","NewDeskFormDetailsComponent_div_0_section_1_Template","NewDeskFormDetailsComponent_div_0_div_8_Template","NewDeskFormDetailsComponent_div_0_mat_checkbox_26_Template","NewDeskFormDetailsComponent_div_0_div_27_Template","NewDeskFormDetailsComponent_div_0_div_28_Template","NewDeskFormDetailsComponent_div_0_section_29_Template","NewDeskFormDetailsComponent_div_0_section_31_Template","NewDeskFormDetailsComponent_div_0_section_32_Template","allow_groups","can_book_for_others","end_date","allow_all_day","can_book_lockers","contains","has_assets","can_recurr","needs_reason","allow_time_changes","valueOf","building_list","force_time","hours","minutes","from_id","recurrence_options","setFeature","f","ngOnChanges","selected_desk","resources","inputs","ɵɵNgOnChangesFeature","i18n_0","ngI18nClosureMode","$localize","NewDeskFormDetailsComponent_div_0_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}