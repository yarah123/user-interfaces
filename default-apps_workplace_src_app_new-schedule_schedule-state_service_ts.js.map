{"version":3,"file":"default-apps_workplace_src_app_new-schedule_schedule-state_service_ts.js","mappings":"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","sources":["./apps/workplace/src/app/new-schedule/schedule-state.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    ParkingService,\n    checkinBooking,\n    queryBookings,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    differenceInMilliseconds,\n    differenceInMinutes,\n    endOfDay,\n    format,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: [\n            'event',\n            'desk',\n            'parking',\n            'visitor',\n            'locker',\n            'group-event',\n        ],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        )) &&\n                    !_.linked_bookings?.find(\n                        (b) => b.booking_type === 'group-event'\n                    )\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n                include_deleted: 'recurring',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of group event bookings for the selected date */\n    public readonly group_events: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'group-event',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n        this.group_events,\n    ]).pipe(\n        map(\n            ([\n                events,\n                visitors,\n                desks,\n                parking,\n                lockers,\n                group_events,\n            ]: any) => {\n                const filtered_events = events.filter(\n                    (ev) =>\n                        !desks.find(\n                            (bkn) => `${ev.meeting_id}` === `${bkn.id}`\n                        ) &&\n                        ev.linked_bookings[0]?.booking_type !== 'group-event'\n                );\n                return [\n                    ...filtered_events,\n                    ...visitors,\n                    ...desks,\n                    ...parking,\n                    ...lockers,\n                    ...group_events,\n                ].sort((a, b) => a.date - b.date);\n            }\n        )\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000).pipe(startWith(0)),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                (auto_release.time_after || auto_release.time_before) &&\n                auto_release.resources?.length\n            ) {\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(startOfMinute(Date.now())),\n                        period_end: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                (auto_release.time_after || 5) +\n                                    (auto_release.time_before || 0)\n                            )\n                        ),\n                        type,\n                    }).toPromise();\n                    const check_block =\n                        (auto_release.time_after || 0) +\n                        (auto_release.time_before || 0);\n                    for (const booking of bookings) {\n                        if (\n                            this._ignore_cancel.includes(booking.id) ||\n                            booking.checked_in ||\n                            booking.rejected\n                        ) {\n                            continue;\n                        }\n                        this._dialog.closeAll();\n                        const diff = differenceInMinutes(\n                            addMinutes(\n                                booking.date,\n                                auto_release.time_after || 0\n                            ),\n                            Date.now()\n                        );\n                        if (diff > check_block || diff < 0) continue;\n                        const time = addMinutes(\n                            booking.date,\n                            auto_release.time_after || 0\n                        );\n                        const close_after = differenceInMilliseconds(\n                            time.getTime() + 60 * 1000,\n                            Date.now()\n                        );\n                        const wording =\n                            type === 'parking' ? 'reservation' : 'booking';\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} ${wording}`,\n                                content: `You have indicated you are not in the office. \n                                Your  ${wording} for \"<i>${\n                                    booking.asset_name || booking.title\n                                }</i>\" at ${format(\n                                    booking.date,\n                                    this._settings.time_format\n                                )} will be cancelled at ${format(\n                                    time,\n                                    this._settings.time_format\n                                )}.<br/><br/>\n                                Do you wish to keep this ${wording}?`,\n                                icon: { content: 'event_busy' },\n                                confirm_text: 'Keep',\n                                cancel_text: 'Dismiss',\n                                close_delay: close_after,\n                            },\n                            this._dialog\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        result.loading('Checking in booking...');\n                        await checkinBooking(booking.id, true).toPromise();\n                        result.close();\n                    }\n                }\n            }\n        })\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog,\n        private _parking: ParkingService\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n"],"names":["MatDialog","Booking","LockersService","ParkingService","checkinBooking","queryBookings","AsyncHandler","current_user","currentUser","flatten","openConfirmModal","SettingsService","CalendarEvent","newCalendarEventFromBooking","queryEvents","OrganisationService","requestSpacesForZone","getModule","addMinutes","differenceInMilliseconds","differenceInMinutes","endOfDay","format","getUnixTime","isSameDay","startOfDay","startOfMinute","BehaviorSubject","combineLatest","interval","of","catchError","debounceTime","distinctUntilChanged","distinctUntilKeyChanged","filter","map","shareReplay","startWith","switchMap","tap","ScheduleStateService","constructor","_settings","_org","_lockers","_dialog","_parking","_this","this","_poll","_poll_type","_loading","_filters","shown_types","_date","Date","now","_update","pipe","_","next","_deleted","_space_bookings","active_building","unsubWith","id","s1","s2","list","space","binding","obs","listen","event_list","i","resources","attendees","email","resource","system","hasSubscription","subscription","bind","ws_events","date","user","host","toLowerCase","find","a","linked_bookings","b","booking_type","api_events","query","period_start","period_end","get","type","events","t","timeout","visitors","parent_id","linked_event","desks","include_checked_out","parking","include_deleted","group_events","lockers","lockers$","_ref","_asyncToGenerator","system_id","mod","my_lockers","execute","catch","_x","apply","arguments","locker","locker_id","level","building","level_id","levelWithID","valueOf","duration","title","description","locker_name","all_day","asset_id","map_id","asset_name","zones","extension_data","item","e","console","error","bookings","filtered_events","ev","bkn","meeting_id","sort","filtered_bookings","bkns","filters","includes","asObservable","loading","_ignore_cancel","_checkCancel","u","_ref2","is_home","location","auto_release","time_after","time_before","length","toPromise","check_block","booking","checked_in","rejected","closeAll","diff","time","close_after","getTime","wording","result","content","time_format","icon","confirm_text","cancel_text","close_delay","reason","push","close","_x2","subscribe","triggerPoll","JSON","parse","sessionStorage","getItem","startPolling","delay","stopPolling","clearInterval","setDate","removeItem","setAsDeleted","setItem","stringify","toggleType","name","clear","_this2","getValue","i0","ɵɵinject","i1","i2","i3","i4","_2","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}