{"version":3,"file":"default-apps_workplace_src_app_new-schedule_schedule-state_service_ts.js","mappings":"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","sources":["./apps/workplace/src/app/new-schedule/schedule-state.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    Locker,\n    LockersService,\n    checkinBooking,\n    queryBookings,\n    removeBooking,\n} from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    current_user,\n    currentUser,\n    flatten,\n    openConfirmModal,\n    SettingsService,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { requestSpacesForZone } from '@placeos/spaces';\nimport { getModule } from '@placeos/ts-client';\nimport {\n    addMinutes,\n    differenceInMinutes,\n    endOfDay,\n    getUnixTime,\n    isSameDay,\n    startOfDay,\n    startOfMinute,\n} from 'date-fns';\nimport { BehaviorSubject, combineLatest, interval, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    distinctUntilKeyChanged,\n    filter,\n    map,\n    shareReplay,\n    startWith,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ScheduleStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject(0);\n    private _poll_type = new BehaviorSubject<'api' | 'ws'>('api');\n    private _loading = new BehaviorSubject(false);\n    private _filters = new BehaviorSubject({\n        shown_types: ['event', 'desk', 'parking', 'visitor', 'locker'],\n    });\n    private _date = new BehaviorSubject(Date.now());\n    private _update = combineLatest([this._date, this._poll]).pipe(\n        debounceTime(500),\n        tap((_) => this._loading.next(true))\n    );\n\n    private _deleted: string[] = [];\n\n    private _space_bookings: Observable<CalendarEvent[]> =\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id'),\n            debounceTime(300),\n            tap((_) => this.unsubWith('bind:')),\n            switchMap(({ id }) => {\n                this._loading.next(true);\n                return requestSpacesForZone(id);\n            }), // Get list of spaces for building\n            distinctUntilChanged(([s1], [s2]) => s1 !== s2),\n            switchMap((list) => {\n                this._loading.next(false);\n                return combineLatest(\n                    (list || []).map((space) => {\n                        const binding = getModule(space.id, 'Bookings').binding(\n                            'bookings'\n                        );\n                        const obs = binding.listen().pipe(\n                            map((event_list) =>\n                                (event_list || []).map(\n                                    (i) =>\n                                        new CalendarEvent({\n                                            ...i,\n                                            resources: i.attendees.filter(\n                                                (_) =>\n                                                    _.email === space.email ||\n                                                    _.resource\n                                            ),\n                                            system: space,\n                                        })\n                                )\n                            ),\n                            catchError((_) => of([]))\n                        );\n                        if (!this.hasSubscription(`bind:${space.id}`)) {\n                            this.subscription(\n                                `bind:${space.id}`,\n                                binding.bind()\n                            );\n                        }\n                        return obs;\n                    })\n                );\n            }),\n            map((_) => flatten<CalendarEvent>(_)),\n            shareReplay(1)\n        );\n\n    public readonly ws_events = combineLatest([\n        this._space_bookings,\n        this._update,\n    ]).pipe(\n        map(([_, [date]]) => {\n            const user = currentUser();\n            return _.filter(\n                (_) =>\n                    isSameDay(_.date, date) &&\n                    (_.host.toLowerCase() === user.email.toLowerCase() ||\n                        _.attendees.find(\n                            (a) =>\n                                a.email.toLowerCase() ===\n                                user.email.toLowerCase()\n                        ))\n            );\n        })\n    );\n    /** List of calendar events for the selected date */\n    public readonly api_events: Observable<CalendarEvent[]> = this._update.pipe(\n        switchMap(([date]) => {\n            const query = {\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n            };\n            return this._settings.get('app.events.use_bookings')\n                ? queryBookings({ ...query, type: 'room' }).pipe(\n                      map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                      catchError((_) => of([]))\n                  )\n                : queryEvents({ ...query }).pipe(catchError((_) => of([])));\n        }),\n        shareReplay(1)\n    );\n    /** List of calendar events for the selected date */\n    public readonly events = combineLatest([this._poll_type]).pipe(\n        switchMap(([t]) => (t === 'api' ? this.api_events : this.ws_events)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly visitors: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'visitor',\n            }).pipe(catchError((_) => of([] as Booking[])))\n        ),\n        map((_) => _.filter((_) => !_.parent_id && !_.linked_event)),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of desk bookings for the selected date */\n    public readonly desks: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                include_checked_out: true,\n                type: 'desk',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly parking: Observable<Booking[]> = this._update.pipe(\n        switchMap(([date]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(date)),\n                period_end: getUnixTime(endOfDay(date)),\n                type: 'parking',\n            }).pipe(catchError((_) => of([])))\n        ),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n    /** List of parking bookings for the selected date */\n    public readonly lockers: Observable<Booking[]> = combineLatest([\n        this._org.active_building.pipe(\n            filter((_) => !!_),\n            distinctUntilKeyChanged('id')\n        ),\n        this._lockers.lockers$,\n    ]).pipe(\n        debounceTime(300),\n        switchMap(async ([_, lockers]) => {\n            const system_id = this._org.binding('lockers');\n            if (!system_id) return [[], lockers];\n            const mod = getModule(system_id, 'LockerLocations');\n            const my_lockers = await mod\n                .execute('lockers_allocated_to_me')\n                .catch((_) => []);\n            return [my_lockers, lockers];\n        }),\n        map(([my_lockers, lockers]) => {\n            return my_lockers\n                .map((i) => {\n                    const locker = (lockers as Locker[]).find(\n                        (_) => _.id === i.locker_id\n                    );\n                    if (!locker && (!i.level || !i.building)) return null;\n                    i.level = i.level || locker?.level_id;\n                    i.building =\n                        i.building ||\n                        this._org.levelWithID([locker?.level_id])?.parent_id;\n                    return new Booking({\n                        date: startOfDay(Date.now()).valueOf(),\n                        duration: 24 * 60 - 1,\n                        title: 'Locker Booking',\n                        description: i.locker_name,\n                        booking_type: 'locker',\n                        all_day: true,\n                        asset_id: locker.map_id,\n                        asset_name: i.locker_name,\n                        zones: [i.building, i.level],\n                        extension_data: {\n                            // map_id: i.locker_id || locker.map_id,\n                        },\n                    });\n                })\n                .filter((item) => item);\n        }),\n        catchError((e) => {\n            console.error(e);\n            return of([]);\n        }),\n        tap(() => this.timeout('end_loading', () => this._loading.next(false))),\n        shareReplay(1)\n    );\n\n    /** List of events and bookings for the selected date */\n    public readonly bookings = combineLatest([\n        this.events,\n        this.visitors,\n        this.desks,\n        this.parking,\n        this.lockers,\n    ]).pipe(\n        map(([e, v, d, p, l]) => {\n            const filtered_events = e.filter(\n                (ev) => !d.find((bkn) => `${ev.meeting_id}` === `${bkn.id}`)\n            );\n            return [...filtered_events, ...v, ...d, ...p, ...l].sort(\n                (a, b) => a.date - b.date\n            );\n        })\n    );\n    /** Filtered list of events and bookings for the selected date */\n    public readonly filtered_bookings = combineLatest([\n        this.bookings,\n        this._filters,\n    ]).pipe(\n        map(([bkns, filters]) =>\n            bkns.filter(\n                (_) =>\n                    (!this._deleted.includes(_.id) &&\n                        _ instanceof CalendarEvent &&\n                        filters?.shown_types?.includes('event')) ||\n                    filters?.shown_types?.includes((_ as any).booking_type)\n            )\n        )\n    );\n    /** Currently selected date */\n    public readonly filters = this._filters.asObservable();\n    /** Currently selected date */\n    public readonly date = this._date.asObservable();\n    /** Whether events and bookings are loading */\n    public readonly loading = this._loading.asObservable();\n\n    private _ignore_cancel: string[] = [];\n    private _checkCancel = combineLatest([\n        current_user,\n        interval(60 * 1000).pipe(startWith(0)),\n    ]).pipe(\n        filter(([u]) => !!u),\n        map(async ([user]) => {\n            const is_home = user.location !== 'wfo';\n            const auto_release = this._settings.get('app.auto_release');\n            if (\n                auto_release &&\n                is_home &&\n                (auto_release.time_after || auto_release.time_before) &&\n                auto_release.resources?.length\n            ) {\n                for (const type of auto_release.resources) {\n                    const bookings = await queryBookings({\n                        period_start: getUnixTime(startOfMinute(Date.now())),\n                        period_end: getUnixTime(\n                            addMinutes(\n                                Date.now(),\n                                (auto_release.time_after || 5) +\n                                    (auto_release.time_before || 0)\n                            )\n                        ),\n                        type,\n                    }).toPromise();\n                    console.log(\n                        'Check Bookings:',\n                        type,\n                        bookings,\n                        this._ignore_cancel\n                    );\n                    const check_block =\n                        (auto_release.time_after || 0) +\n                        (auto_release.time_before || 0);\n                    for (const booking of bookings) {\n                        if (\n                            this._ignore_cancel.includes(booking.id) ||\n                            booking.checked_in ||\n                            booking.rejected\n                        ) {\n                            continue;\n                        }\n                        this._dialog.closeAll();\n                        const diff = differenceInMinutes(\n                            addMinutes(\n                                booking.date,\n                                auto_release.time_after || 0\n                            ),\n                            Date.now()\n                        );\n                        if (diff > check_block || diff < 0) continue;\n                        const result = await openConfirmModal(\n                            {\n                                title: `Keep ${type} booking`,\n                                content: `You have indicated you are not in the office. \n                                Your booking will be cancelled in about ${diff} minutes. \n                                Do you wish to keep this booking?`,\n                                icon: { content: 'cancel' },\n                                confirm_text: 'Keep',\n                                cancel_text: 'Dismiss',\n                            },\n                            this._dialog\n                        );\n                        if (result.reason !== 'done') {\n                            this._ignore_cancel.push(booking.id);\n                            continue;\n                        }\n                        result.loading('Checking in booking...');\n                        await checkinBooking(booking.id, true).toPromise();\n                        result.close();\n                    }\n                }\n            }\n        })\n    );\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _lockers: LockersService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'poll_type',\n            this._org.active_building.subscribe(() =>\n                this._poll_type.next(\n                    this._settings.get('app.schedule.use_websocket')\n                        ? 'ws'\n                        : 'api'\n                )\n            )\n        );\n        this.subscription(\n            'chat_event',\n            this._settings\n                .listen('CHAT:task_complete')\n                .subscribe(() => this.triggerPoll())\n        );\n        this.subscription('wfh_checks', this._checkCancel.subscribe());\n        this._deleted = JSON.parse(\n            sessionStorage.getItem('PLACEOS.events.deleted') || '[]'\n        );\n    }\n\n    public triggerPoll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay = 60 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n        return () => this.stopPolling();\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setDate(date: number) {\n        this._date.next(date);\n    }\n\n    public removeItem(item) {\n        this.setAsDeleted(item.id);\n        this._poll.next(Date.now());\n    }\n\n    public setAsDeleted(id: string) {\n        this._deleted.push(id);\n        sessionStorage.setItem(\n            'PLACEOS.events.deleted',\n            JSON.stringify(this._deleted)\n        );\n    }\n\n    public async toggleType(name: string, clear: boolean = false) {\n        const filters = this._filters.getValue() || { shown_types: [] };\n        const { shown_types } = filters;\n        if (shown_types && (shown_types.includes(name) || clear)) {\n            this._filters.next({\n                ...filters,\n                shown_types: shown_types.filter((_) => _ !== name),\n            });\n        } else {\n            this._filters.next({\n                ...filters,\n                shown_types: [...shown_types, name],\n            });\n        }\n    }\n}\n"],"names":["MatDialog","Booking","Locker","LockersService","checkinBooking","queryBookings","AsyncHandler","current_user","currentUser","flatten","openConfirmModal","SettingsService","CalendarEvent","newCalendarEventFromBooking","queryEvents","OrganisationService","requestSpacesForZone","getModule","addMinutes","differenceInMinutes","endOfDay","getUnixTime","isSameDay","startOfDay","startOfMinute","BehaviorSubject","combineLatest","interval","of","catchError","debounceTime","distinctUntilChanged","distinctUntilKeyChanged","filter","map","shareReplay","startWith","switchMap","tap","ScheduleStateService","constructor","_settings","_org","_lockers","_dialog","_this","this","_poll","_poll_type","_loading","_filters","shown_types","_date","Date","now","_update","pipe","_","next","_deleted","_space_bookings","active_building","unsubWith","id","s1","s2","list","space","binding","obs","listen","event_list","i","resources","attendees","email","resource","system","hasSubscription","subscription","bind","ws_events","date","user","host","toLowerCase","find","a","api_events","query","period_start","period_end","get","type","events","t","timeout","visitors","parent_id","linked_event","desks","include_checked_out","parking","lockers","lockers$","_ref","_asyncToGenerator","system_id","mod","my_lockers","execute","catch","_x","apply","arguments","locker","locker_id","level","building","level_id","levelWithID","valueOf","duration","title","description","locker_name","booking_type","all_day","asset_id","map_id","asset_name","zones","extension_data","item","e","console","error","bookings","v","d","p","l","filtered_events","ev","bkn","meeting_id","sort","b","filtered_bookings","bkns","filters","includes","asObservable","loading","_ignore_cancel","_checkCancel","u","_ref2","is_home","location","auto_release","time_after","time_before","length","toPromise","log","check_block","booking","checked_in","rejected","closeAll","diff","result","content","icon","confirm_text","cancel_text","reason","push","close","_x2","subscribe","triggerPoll","JSON","parse","sessionStorage","getItem","startPolling","delay","stopPolling","clearInterval","setDate","removeItem","setAsDeleted","setItem","stringify","toggleType","name","clear","_this2","getValue","i0","ɵɵinject","i1","i2","i3","i4","_2","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}